{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,KAAoB,MAAM,YAAY,CAAC;AAM9C;;;;;;;;;;;GAWG;AACH,MAAM,UAAU,0BAA0B,CACxC,YAAuB,EAAE,EACzB,WAAyB;IAEzB,OAAO,KAAK,EAAE,GAAW,EAAoB,EAAE;QAC7C,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;QAC/C,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;QACrC,MAAM,GAAG,GAAG,EAAC,OAAO,EAAE,EAAE,EAAC,CAAC;QAE1B,gDAAgD;QAChD,QAAQ,CACN,QAAQ,EACR,SAAS,EACT,SAAS,EACT,GAAG,MAAM;sBACO,GAAG,EAAE,CACtB,CAAC,GAAG,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC,GAAW,EAAE,EAAE;QAClC,iFAAiF;QACjF,SAAS,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CACtE,CAAC;QAEF,OAAO,GAAG,CAAC,OAAO,CAAC;IACrB,CAAC,CAAC;AACJ,CAAC;AAED;;;;;GAKG;AACH,MAAM,CAAC,MAAM,kBAAkB,GAC7B,0BAA0B,EAAE,CAAC","sourcesContent":["import fetch, {RequestInit} from 'node-fetch';\n\nexport interface Externals {\n  readonly [externalName: string]: unknown;\n}\n\n/**\n * @param externals An object with shared npm dependencies that the integrator\n * wants to provide to Feature Apps. The keys are the names of the dependencies\n * that are used in import/require statements. The values are the modules.\n *\n * @param requestInit An object containing any custom settings that should be\n * applied to the request when fetching a module with node-fetch.\n *\n * @returns A function that accepts a URL pointing to a bundle that was built as\n * a CommonJS module, and that returns a promise that resolves with the loaded\n * module, or is rejected if the module can not be loaded.\n */\nexport function createCommonJsModuleLoader(\n  externals: Externals = {},\n  requestInit?: RequestInit,\n): (url: string) => Promise<unknown> {\n  return async (url: string): Promise<unknown> => {\n    const response = await fetch(url, requestInit);\n    const source = await response.text();\n    const mod = {exports: {}};\n\n    // tslint:disable-next-line:function-constructor\n    Function(\n      'module',\n      'exports',\n      'require',\n      `${source}\n      //# sourceURL=${url}`,\n    )(mod, mod.exports, (dep: string) =>\n      // tslint:disable-next-line:no-eval https://stackoverflow.com/a/41063795/10385541\n      externals.hasOwnProperty(dep) ? externals[dep] : eval('require')(dep),\n    );\n\n    return mod.exports;\n  };\n}\n\n/**\n * @param url A URL pointing to a bundle that was built as a CommonJS module.\n *\n * @returns A promise that resolves with the loaded module, or is rejected if\n * the module can not be loaded.\n */\nexport const loadCommonJsModule: (url: string) => Promise<unknown> =\n  createCommonJsModuleLoader();\n"]}