{"version":3,"file":"index.test.js","sourceRoot":"","sources":["../../../src/__tests__/index.test.ts"],"names":[],"mappings":"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","sourcesContent":["// tslint:disable:no-implicit-dependencies\n// tslint:disable:no-non-null-assertion\n\nimport {\n  FeatureServiceBinder,\n  FeatureServiceEnvironment,\n  FeatureServiceProviderDefinition,\n} from '@feature-hub/core';\nimport {\n  AsyncSsrManagerV1,\n  SharedAsyncSsrManager,\n  defineAsyncSsrManager,\n} from '..';\nimport {stubbedLogger} from './stubbed-logger';\nimport {useFakeTimers} from './use-fake-timers';\n\nconst queueMacroTask = setImmediate;\n\nasync function simulateAsyncOperation(result: number): Promise<number> {\n  await new Promise(queueMacroTask);\n\n  return result;\n}\n\ndescribe('defineAsyncSsrManager', () => {\n  let mockEnv: FeatureServiceEnvironment<{}>;\n\n  let asyncSsrManagerDefinition: FeatureServiceProviderDefinition<SharedAsyncSsrManager>;\n\n  beforeEach(() => {\n    asyncSsrManagerDefinition = defineAsyncSsrManager({timeout: 5});\n  });\n\n  beforeEach(() => {\n    mockEnv = {featureServices: {'s2:logger': stubbedLogger}};\n  });\n\n  it('creates an Async SSR Manager definition', () => {\n    expect(asyncSsrManagerDefinition.id).toBe('s2:async-ssr-manager');\n    expect(asyncSsrManagerDefinition.dependencies).toBeUndefined();\n\n    expect(asyncSsrManagerDefinition.optionalDependencies).toEqual({\n      featureServices: {'s2:logger': '^1.0.0'},\n    });\n  });\n\n  describe('#create', () => {\n    it('creates a shared Feature Service containing version 1.0.0', () => {\n      const sharedAsyncSsrManager = asyncSsrManagerDefinition.create(mockEnv);\n\n      expect(sharedAsyncSsrManager!['1.0.0']).toBeDefined();\n    });\n  });\n\n  describe('AsyncSsrManagerV1', () => {\n    let asyncSsrManagerBinder: FeatureServiceBinder<AsyncSsrManagerV1>;\n\n    beforeEach(() => {\n      asyncSsrManagerBinder =\n        asyncSsrManagerDefinition.create(mockEnv)!['1.0.0'];\n    });\n\n    describe('rendering', () => {\n      describe('with an integrator as the only consumer', () => {\n        it('resolves with the result of the given render function after the first render pass', async () => {\n          const asyncSsrManager = asyncSsrManagerBinder('test').featureService;\n          const mockRender = jest.fn(() => 'testHtml');\n\n          const html = await useFakeTimers(async () =>\n            asyncSsrManager.renderUntilCompleted(mockRender),\n          );\n\n          expect(html).toEqual('testHtml');\n          expect(mockRender).toHaveBeenCalledTimes(1);\n        });\n\n        describe('when the given render function returns a promise', () => {\n          it('resolves with the html string that is resolved from the render function', async () => {\n            const asyncSsrManager =\n              asyncSsrManagerBinder('test').featureService;\n\n            const mockRender = jest.fn(async () => 'testHtml');\n\n            const html = await useFakeTimers(async () =>\n              asyncSsrManager.renderUntilCompleted(mockRender),\n            );\n\n            expect(html).toEqual('testHtml');\n            expect(mockRender).toHaveBeenCalledTimes(1);\n          });\n        });\n      });\n\n      describe('with an integrator, and a consumer that schedules a rerender with a custom promise', () => {\n        it('resolves with an html string after the second render pass', async () => {\n          const asyncSsrManagerIntegrator =\n            asyncSsrManagerBinder('test:integrator').featureService;\n\n          const asyncSsrManagerConsumer =\n            asyncSsrManagerBinder('test:consumer').featureService;\n\n          let renderPass = 0;\n\n          const mockRender = jest.fn(() => {\n            renderPass += 1;\n\n            if (renderPass === 1) {\n              asyncSsrManagerConsumer.scheduleRerender(Promise.resolve());\n            }\n\n            return `render pass ${renderPass}`;\n          });\n\n          const html = await useFakeTimers(async () =>\n            asyncSsrManagerIntegrator.renderUntilCompleted(mockRender),\n          );\n\n          expect(html).toEqual('render pass 2');\n          expect(mockRender).toHaveBeenCalledTimes(2);\n        });\n      });\n\n      describe('with an integrator, and a consumer that schedules a rerender without a custom promise', () => {\n        it('resolves with an html string after the second render pass', async () => {\n          const asyncSsrManagerIntegrator =\n            asyncSsrManagerBinder('test:integrator').featureService;\n\n          const asyncSsrManagerConsumer =\n            asyncSsrManagerBinder('test:consumer').featureService;\n\n          let renderPass = 0;\n\n          const mockRender = jest.fn(() => {\n            renderPass += 1;\n\n            if (renderPass === 1) {\n              asyncSsrManagerConsumer.scheduleRerender();\n            }\n\n            return `render pass ${renderPass}`;\n          });\n\n          const html = await useFakeTimers(async () =>\n            asyncSsrManagerIntegrator.renderUntilCompleted(mockRender),\n          );\n\n          expect(html).toEqual('render pass 2');\n          expect(mockRender).toHaveBeenCalledTimes(2);\n        });\n      });\n\n      describe('with an integrator, and a consumer that schedules a rerender in two consecutive render passes', () => {\n        it('resolves with an html string after the third render pass', async () => {\n          const asyncSsrManagerIntegrator =\n            asyncSsrManagerBinder('test:integrator').featureService;\n\n          const asyncSsrManagerConsumer =\n            asyncSsrManagerBinder('test:consumer').featureService;\n\n          let renderPass = 0;\n\n          const mockRender = jest.fn(() => {\n            renderPass += 1;\n\n            if (renderPass < 3) {\n              asyncSsrManagerConsumer.scheduleRerender();\n            }\n\n            return `render pass ${renderPass}`;\n          });\n\n          const html = await useFakeTimers(async () =>\n            asyncSsrManagerIntegrator.renderUntilCompleted(mockRender),\n          );\n\n          expect(html).toEqual('render pass 3');\n          expect(mockRender).toHaveBeenCalledTimes(3);\n        });\n      });\n\n      describe('with an integrator, and a consumer that first schedules a rerender with a custom promise, awaits the promise, and then schedules a rerender with another promise', () => {\n        it('resolves with an html string after the second render pass', async () => {\n          expect.assertions(2);\n\n          const asyncSsrManagerIntegrator =\n            asyncSsrManagerBinder('test:integrator').featureService;\n\n          const asyncSsrManagerConsumer =\n            asyncSsrManagerBinder('test:consumer').featureService;\n\n          let renderPass = 0;\n          let consumerResult = 0;\n\n          const mockRender = jest.fn(async () => {\n            renderPass += 1;\n\n            if (renderPass === 1) {\n              const promise1 = simulateAsyncOperation(1);\n              asyncSsrManagerConsumer.scheduleRerender(promise1);\n              consumerResult = await promise1;\n\n              const promise2 = simulateAsyncOperation(2);\n              asyncSsrManagerConsumer.scheduleRerender(promise2);\n              consumerResult = await promise2;\n            }\n\n            return `render pass ${renderPass}, consumer result ${consumerResult}`;\n          });\n\n          const html = await useFakeTimers(async () =>\n            asyncSsrManagerIntegrator.renderUntilCompleted(mockRender),\n          );\n\n          expect(html).toEqual('render pass 2, consumer result 2');\n          expect(mockRender).toHaveBeenCalledTimes(2);\n        });\n      });\n\n      describe('with an integrator, and two consumers that both schedule a rerender in the first render pass', () => {\n        it('resolves with an html string after the second render pass', async () => {\n          const asyncSsrManagerIntegrator =\n            asyncSsrManagerBinder('test:integrator').featureService;\n\n          const asyncSsrManagerConsumer1 =\n            asyncSsrManagerBinder('test:consumer:1').featureService;\n\n          const asyncSsrManagerConsumer2 =\n            asyncSsrManagerBinder('test:consumer:2').featureService;\n\n          let renderPass = 0;\n\n          const mockRender = jest.fn(() => {\n            renderPass += 1;\n\n            if (renderPass === 1) {\n              asyncSsrManagerConsumer1.scheduleRerender();\n              asyncSsrManagerConsumer2.scheduleRerender();\n            }\n\n            return `render pass ${renderPass}`;\n          });\n\n          const html = await useFakeTimers(async () =>\n            asyncSsrManagerIntegrator.renderUntilCompleted(mockRender),\n          );\n\n          expect(html).toEqual('render pass 2');\n          expect(mockRender).toHaveBeenCalledTimes(2);\n        });\n      });\n\n      describe('with an integrator that renders two consumers independently, both scheduling a rerender in the first render pass', () => {\n        it('resolves with an html string after the second render pass', async () => {\n          const asyncSsrManagerIntegrator =\n            asyncSsrManagerBinder('test:integrator').featureService;\n\n          const asyncSsrManagerConsumers = [\n            asyncSsrManagerBinder('test:consumer:0').featureService,\n            asyncSsrManagerBinder('test:consumer:1').featureService,\n          ] as const;\n\n          const createMockRender = (consumer: 0 | 1) => {\n            let renderPass = 0;\n\n            return jest.fn(() => {\n              renderPass += 1;\n\n              if (renderPass === 1) {\n                asyncSsrManagerConsumers[consumer].scheduleRerender();\n              }\n\n              return `render call ${consumer}, pass ${renderPass}`;\n            });\n          };\n\n          const mockRender0 = createMockRender(0);\n          const mockRender1 = createMockRender(1);\n\n          const html = await useFakeTimers(async () =>\n            Promise.all([\n              asyncSsrManagerIntegrator.renderUntilCompleted(mockRender0),\n              asyncSsrManagerIntegrator.renderUntilCompleted(mockRender1),\n            ]),\n          );\n\n          expect(mockRender0).toHaveBeenCalledTimes(2);\n          expect(mockRender1).toHaveBeenCalledTimes(2);\n\n          expect(html).toEqual([\n            'render call 0, pass 2',\n            'render call 1, pass 2',\n          ]);\n        });\n      });\n\n      describe('with a consumer that schedules a rerender outside of `renderUntilCompleted`', () => {\n        it('rejects with an error', async () => {\n          const asyncSsrManager =\n            asyncSsrManagerBinder('test:consumer').featureService;\n\n          const mockRender = jest.fn(() => {\n            asyncSsrManager.scheduleRerender();\n          });\n\n          return expect(\n            useFakeTimers(async () => mockRender()),\n          ).rejects.toEqual(\n            new Error(\n              'Async SSR Manager: Can not call `scheduleRerender` outside of `renderUntilCompleted`.',\n            ),\n          );\n        });\n      });\n\n      describe('when the given render function throws an error', () => {\n        it('rejects with the error', async () => {\n          const asyncSsrManager = asyncSsrManagerBinder('test').featureService;\n          const mockError = new Error('Failed to render.');\n\n          const mockRender = jest.fn(() => {\n            throw mockError;\n          });\n\n          return expect(\n            asyncSsrManager.renderUntilCompleted(mockRender),\n          ).rejects.toEqual(mockError);\n        });\n      });\n\n      describe('when rendering takes longer than the configured timeout', () => {\n        it('rejects with an error after the configured timeout', async () => {\n          const asyncSsrManager = asyncSsrManagerBinder('test').featureService;\n\n          const mockRender = jest.fn(() => {\n            asyncSsrManager.scheduleRerender(\n              new Promise<never>(() => undefined),\n            );\n\n            return 'testHtml';\n          });\n\n          return expect(\n            useFakeTimers(\n              async () => asyncSsrManager.renderUntilCompleted(mockRender),\n              5,\n            ),\n          ).rejects.toEqual(new Error('Got rendering timeout after 5 ms.'));\n        });\n      });\n\n      describe('when no timeout is configured', () => {\n        beforeEach(() => {\n          asyncSsrManagerDefinition = defineAsyncSsrManager();\n\n          asyncSsrManagerBinder =\n            asyncSsrManagerDefinition.create(mockEnv)!['1.0.0'];\n        });\n\n        it('logs a warning', async () => {\n          const asyncSsrManager = asyncSsrManagerBinder('test').featureService;\n          const mockRender = jest.fn(() => 'testHtml');\n\n          await useFakeTimers(async () =>\n            asyncSsrManager.renderUntilCompleted(mockRender),\n          );\n\n          expect(stubbedLogger.warn.mock.calls).toEqual([\n            [\n              'No timeout is configured for the Async SSR Manager. This could lead to unexpectedly long render times or, in the worst case, never resolving render calls!',\n            ],\n          ]);\n        });\n      });\n    });\n\n    describe('when no Logger Feature Service is provided', () => {\n      let consoleWarnSpy: jest.SpyInstance;\n\n      beforeEach(() => {\n        consoleWarnSpy = jest.spyOn(console, 'warn');\n\n        asyncSsrManagerDefinition = defineAsyncSsrManager();\n\n        asyncSsrManagerBinder = asyncSsrManagerDefinition.create({\n          featureServices: {},\n        })!['1.0.0'];\n      });\n\n      afterEach(() => {\n        consoleWarnSpy.mockRestore();\n      });\n\n      it('logs messages using the console', async () => {\n        const asyncSsrManager = asyncSsrManagerBinder('test').featureService;\n        const mockRender = jest.fn(() => 'testHtml');\n\n        await useFakeTimers(async () =>\n          asyncSsrManager.renderUntilCompleted(mockRender),\n        );\n\n        expect(consoleWarnSpy.mock.calls).toEqual([\n          [\n            'No timeout is configured for the Async SSR Manager. This could lead to unexpectedly long render times or, in the worst case, never resolving render calls!',\n          ],\n        ]);\n      });\n    });\n  });\n});\n"]}