{"version":3,"file":"use-fake-timers.js","sourceRoot":"","sources":["../../../src/__tests__/use-fake-timers.ts"],"names":[],"mappings":";;;AAAA,MAAM,cAAc,GAAG,YAAY,CAAC;AAE7B,KAAK,UAAU,aAAa,CACjC,aAAqC,EACrC,eAAwB;IAExB,IAAI,CAAC,aAAa,EAAE,CAAC;IAErB,IAAI;QACF,MAAM,OAAO,GAAG,aAAa,EAAE,CAAC;QAEhC,IAAI,OAAO,GAAG,IAAI,CAAC;QAEnB,OAAO,CAAC,IAAI,CACV,GAAG,EAAE,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC,EACvB,GAAG,EAAE,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC,CACxB,CAAC;QAEF,MAAM,IAAI,OAAO,CAAC,cAAc,CAAC,CAAC;QAElC,IAAI,aAAa,GAAG,CAAC,CAAC;QAEtB,OAAO,OAAO,EAAE;YACd,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;YAE5B,aAAa,IAAI,CAAC,CAAC;YAEnB,MAAM,IAAI,OAAO,CAAC,cAAc,CAAC,CAAC;SACnC;QAED,IAAI,OAAO,eAAe,KAAK,QAAQ,EAAE;YACvC,MAAM,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SAC7C;QAED,OAAO,OAAO,CAAC;KAChB;YAAS;QACR,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;AACH,CAAC;AApCD,sCAoCC","sourcesContent":["const queueMacroTask = setImmediate;\n\nexport async function useFakeTimers<TResult>(\n  createPromise: () => Promise<TResult>,\n  expectedTimeout?: number,\n): Promise<TResult> {\n  jest.useFakeTimers();\n\n  try {\n    const promise = createPromise();\n\n    let pending = true;\n\n    promise.then(\n      () => (pending = false),\n      () => (pending = false),\n    );\n\n    await new Promise(queueMacroTask);\n\n    let actualTimeout = 0;\n\n    while (pending) {\n      jest.advanceTimersByTime(1);\n\n      actualTimeout += 1;\n\n      await new Promise(queueMacroTask);\n    }\n\n    if (typeof expectedTimeout === 'number') {\n      expect(actualTimeout).toBe(expectedTimeout);\n    }\n\n    return promise;\n  } finally {\n    jest.useRealTimers();\n  }\n}\n"]}