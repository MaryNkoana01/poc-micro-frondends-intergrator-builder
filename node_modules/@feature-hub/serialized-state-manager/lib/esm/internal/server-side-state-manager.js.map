{"version":3,"file":"server-side-state-manager.js","sourceRoot":"","sources":["../../../src/internal/server-side-state-manager.ts"],"names":[],"mappings":"AAAA,MAAM,OAAO,sBAAsB;IAAnC;QACmB,4BAAuB,GAAG,IAAI,GAAG,EAAwB,CAAC;IAiB7E,CAAC;IAfQ,QAAQ,CAAC,UAAkB,EAAE,cAA4B;QAC9D,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;IAC/D,CAAC;IAEM,eAAe;QACpB,MAAM,4BAA4B,GAA2B,EAAE,CAAC;QAEhE,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAClC,CAAC,cAAc,EAAE,iBAAiB,EAAE,EAAE;YACpC,4BAA4B,CAAC,iBAAiB,CAAC,GAAG,cAAc,EAAE,CAAC;QACrE,CAAC,CACF,CAAC;QAEF,OAAO,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,4BAA4B,CAAC,CAAC,CAAC;IACjE,CAAC;CACF","sourcesContent":["export class ServerSideStateManager {\n  private readonly serializeStateCallbacks = new Map<string, () => string>();\n\n  public register(consumerId: string, serializeState: () => string): void {\n    this.serializeStateCallbacks.set(consumerId, serializeState);\n  }\n\n  public serializeStates(): string {\n    const serializedStatesByConsumerId: Record<string, string> = {};\n\n    this.serializeStateCallbacks.forEach(\n      (serializeState, currentConsumerId) => {\n        serializedStatesByConsumerId[currentConsumerId] = serializeState();\n      },\n    );\n\n    return encodeURI(JSON.stringify(serializedStatesByConsumerId));\n  }\n}\n"]}