var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { LitElement, html, property } from 'lit-element';
const elementName = 'feature-app-container';
/**
 * Define a custom element implementing the [[FeatureAppContainerElement]]
 * interface under the name `feature-app-container` at the
 * `CustomElementRegistry`.
 */
export function defineFeatureAppContainer(featureAppManager, options = {}) {
    if (customElements.get(elementName)) {
        return;
    }
    const { logger = console } = options;
    class FeatureAppContainer extends LitElement {
        constructor() {
            super(...arguments);
            this.appElement = document.createElement('div');
        }
        firstUpdated() {
            if (!this.featureAppDefinition) {
                return;
            }
            try {
                this.featureAppScope = featureAppManager.createFeatureAppScope(this.featureAppId, this.featureAppDefinition, {
                    featureAppName: this.featureAppName,
                    baseUrl: this.baseUrl,
                    config: this.config,
                });
                this.featureAppScope.featureApp.attachTo(this.appElement);
            }
            catch (error) {
                logger.error(error);
                this.error = error;
            }
        }
        render() {
            if (this.error) {
                return html ` <slot name="error"></slot> `;
            }
            return html ` ${this.appElement} `;
        }
        disconnectedCallback() {
            if (this.featureAppScope) {
                this.featureAppScope.release();
            }
            super.disconnectedCallback();
        }
    }
    __decorate([
        property({ type: String })
    ], FeatureAppContainer.prototype, "featureAppId", void 0);
    __decorate([
        property({ type: String })
    ], FeatureAppContainer.prototype, "featureAppName", void 0);
    __decorate([
        property({ type: String })
    ], FeatureAppContainer.prototype, "baseUrl", void 0);
    __decorate([
        property({ type: Object })
    ], FeatureAppContainer.prototype, "featureAppDefinition", void 0);
    __decorate([
        property({ type: Object })
    ], FeatureAppContainer.prototype, "config", void 0);
    __decorate([
        property({ type: Object, reflect: false })
    ], FeatureAppContainer.prototype, "error", void 0);
    customElements.define(elementName, FeatureAppContainer);
}
//# sourceMappingURL=feature-app-container.js.map