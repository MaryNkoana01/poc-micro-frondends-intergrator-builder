{"version":3,"file":"feature-app-loader.js","sourceRoot":"","sources":["../../src/feature-app-loader.ts"],"names":[],"mappings":";;;;;;AACA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,QAAQ,EAAC,MAAM,aAAa,CAAC;AAEvD,OAAO,EAAC,SAAS,EAAC,MAAM,gCAAgC,CAAC;AACzD,OAAO,EAAC,KAAK,EAAC,MAAM,2BAA2B,CAAC;AAChD,OAAO,EAAC,yBAAyB,EAAC,MAAM,yBAAyB,CAAC;AAClE,OAAO,EAAC,cAAc,EAAC,MAAM,6BAA6B,CAAC;AAE3D,MAAM,WAAW,GAAG,oBAAoB,CAAC;AAqDzC;;;;GAIG;AACH,MAAM,UAAU,sBAAsB,CACpC,iBAAoC,EACpC,UAAyC,EAAE;IAE3C,IAAI,cAAc,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE;QACnC,OAAO;KACR;IAED,MAAM,EAAC,MAAM,GAAG,OAAO,EAAC,GAAG,OAAO,CAAC;IAEnC,yBAAyB,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;IAEtD,MAAM,gBAAiB,SAAQ,UAAU;QAgBhC,MAAM;YACX,OAAO,IAAI,CAAA;UACP,KAAK,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,IAAI,CAAA,gCAAgC,CAAC;OACrE,CAAC;QACJ,CAAC;QAEO,KAAK,CAAC,cAAc;YAC1B,IAAI;gBACF,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;oBACb,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;iBACrC;gBAED,MAAM,UAAU,GAAG,MAAM,iBAAiB,CAAC,4BAA4B,CACrE,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,CACvC,CAAC,OAAO,CAAC;gBAEV,OAAO,IAAI,CAAA;;2BAEQ,IAAI,CAAC,YAAY;6BACf,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC;sBACrC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC;oCACT,UAAU;sBACxB,IAAI,CAAC,MAAM;;;;SAIxB,CAAC;aACH;YAAC,OAAO,KAAK,EAAE;gBACd,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAEpB,OAAO,IAAI,CAAA,8BAA8B,CAAC;aAC3C;QACH,CAAC;KACF;IA/CQ;QADN,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;0DACI;IAGtB;QADN,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;4DACM;IAGxB;QADN,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;qDACD;IAGjB;QADN,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;iDACL;IAGb;QADN,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;oDACD;IAqC1B,cAAc,CAAC,MAAM,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;AACvD,CAAC","sourcesContent":["import {FeatureAppManager, Logger} from '@feature-hub/core';\nimport {LitElement, html, property} from 'lit-element';\nimport {TemplateResult} from 'lit-html';\nimport {ifDefined} from 'lit-html/directives/if-defined';\nimport {until} from 'lit-html/directives/until';\nimport {defineFeatureAppContainer} from './feature-app-container';\nimport {prependBaseUrl} from './internal/prepend-base-url';\n\nconst elementName = 'feature-app-loader';\n\n/**\n * A custom element defined by [[defineFeatureAppLoader]] as\n * `feature-app-loader`.\n *\n * It is possible to pass two slots to the `feature-app-loader` element. One\n * slot named `loading` is rendered while the Feature App module is loading.\n * The other one named `error` is rendered if the Feature App module could not\n * be loaded and is also passed to the underlying `feature-app-container`\n * element (@see [[FeatureAppContainerElement]]).\n */\nexport interface FeatureAppLoaderElement extends HTMLElement {\n  /**\n   * The Feature App ID is used to identify the Feature App instance. Multiple\n   * Feature App Loaders with the same `featureAppId` will render the same\n   * Feature app instance. The ID is also used as a consumer ID for dependent\n   * Feature Services. To render multiple instances of the same kind of Feature\n   * App, different IDs must be used.\n   */\n  featureAppId: string;\n\n  /**\n   * The Feature App's name. In contrast to the `featureAppId`, the name must\n   * not be unique. It can be used by required Feature Services for display\n   * purposes, logging, looking up Feature App configuration meta data, etc.\n   */\n  featureAppName?: string;\n\n  /**\n   * The absolute or relative base URL of the Feature App's assets and/or BFF.\n   */\n  baseUrl?: string;\n\n  /**\n   * The URL of the Feature App's module bundle. If [[baseUrl]] is specified, it\n   * will be prepended, unless `src` is an absolute URL.\n   */\n  src: string;\n\n  /**\n   * A config object that is passed to the Feature App's `create` method.\n   */\n  config?: unknown;\n}\n\nexport interface DefineFeatureAppLoaderOptions {\n  /**\n   * A custom logger that shall be used instead of `console`.\n   */\n  readonly logger?: Logger;\n}\n\n/**\n * Define a custom element implementing the [[FeatureAppLoaderElement]]\n * interface under the name `feature-app-loader` at the\n * `CustomElementRegistry`.\n */\nexport function defineFeatureAppLoader(\n  featureAppManager: FeatureAppManager,\n  options: DefineFeatureAppLoaderOptions = {},\n): void {\n  if (customElements.get(elementName)) {\n    return;\n  }\n\n  const {logger = console} = options;\n\n  defineFeatureAppContainer(featureAppManager, options);\n\n  class FeatureAppLoader extends LitElement implements FeatureAppLoaderElement {\n    @property({type: String})\n    public featureAppId!: string;\n\n    @property({type: String})\n    public featureAppName?: string;\n\n    @property({type: String})\n    public baseUrl?: string;\n\n    @property({type: String})\n    public src!: string;\n\n    @property({type: Object})\n    public config?: unknown;\n\n    public render(): TemplateResult {\n      return html`\n        ${until(this.loadFeatureApp(), html` <slot name=\"loading\"></slot> `)}\n      `;\n    }\n\n    private async loadFeatureApp(): Promise<TemplateResult> {\n      try {\n        if (!this.src) {\n          throw new Error('No src provided.');\n        }\n\n        const definition = await featureAppManager.getAsyncFeatureAppDefinition(\n          prependBaseUrl(this.baseUrl, this.src),\n        ).promise;\n\n        return html`\n          <feature-app-container\n            featureAppId=${this.featureAppId}\n            featureAppName=${ifDefined(this.featureAppName)}\n            baseUrl=${ifDefined(this.baseUrl)}\n            .featureAppDefinition=${definition}\n            .config=${this.config}\n          >\n            <slot name=\"error\" slot=\"error\"></slot>\n          </feature-app-container>\n        `;\n      } catch (error) {\n        logger.error(error);\n\n        return html` <slot name=\"error\"></slot> `;\n      }\n    }\n  }\n\n  customElements.define(elementName, FeatureAppLoader);\n}\n"]}