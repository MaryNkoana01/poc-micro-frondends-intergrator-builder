{"version":3,"file":"feature-app-container.js","sourceRoot":"","sources":["../../src/feature-app-container.ts"],"names":[],"mappings":";;;;;;;;;AAMA,6CAAuD;AAwDvD,MAAM,WAAW,GAAG,uBAAuB,CAAC;AAS5C;;;;GAIG;AACH,SAAgB,yBAAyB,CACvC,iBAAoC,EACpC,UAA4C,EAAE;IAE9C,IAAI,cAAc,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE;QACnC,OAAO;KACR;IAED,MAAM,EAAC,MAAM,GAAG,OAAO,EAAC,GAAG,OAAO,CAAC;IAEnC,MAAM,mBACJ,SAAQ,wBAAU;QADpB;;YAwBmB,eAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAyC9D,CAAC;QAvCQ,YAAY;YACjB,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE;gBAC9B,OAAO;aACR;YAED,IAAI;gBACF,IAAI,CAAC,eAAe,GAAG,iBAAiB,CAAC,qBAAqB,CAC5D,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,oBAAoB,EACzB;oBACE,cAAc,EAAE,IAAI,CAAC,cAAc;oBACnC,OAAO,EAAE,IAAI,CAAC,OAAO;oBACrB,MAAM,EAAE,IAAI,CAAC,MAAM;iBACpB,CACF,CAAC;gBAEF,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAC3D;YAAC,OAAO,KAAK,EAAE;gBACd,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAEpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;aACpB;QACH,CAAC;QAEM,MAAM;YACX,IAAI,IAAI,CAAC,KAAK,EAAE;gBACd,OAAO,IAAA,kBAAI,EAAA,8BAA8B,CAAC;aAC3C;YAED,OAAO,IAAA,kBAAI,EAAA,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC;QACpC,CAAC;QAEM,oBAAoB;YACzB,IAAI,IAAI,CAAC,eAAe,EAAE;gBACxB,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;aAChC;YAED,KAAK,CAAC,oBAAoB,EAAE,CAAC;QAC/B,CAAC;KACF;IA5DQ;QADN,IAAA,sBAAQ,EAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;6DACI;IAGtB;QADN,IAAA,sBAAQ,EAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;+DACM;IAGxB;QADN,IAAA,sBAAQ,EAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;wDACD;IAGjB;QADN,IAAA,sBAAQ,EAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;qEACyC;IAG3D;QADN,IAAA,sBAAQ,EAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;uDACD;IAGhB;QADP,IAAA,sBAAQ,EAAC,EAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAC,CAAC;sDACjB;IA+C1B,cAAc,CAAC,MAAM,CAAC,WAAW,EAAE,mBAAmB,CAAC,CAAC;AAC1D,CAAC;AA9ED,8DA8EC","sourcesContent":["import {\n  FeatureAppDefinition,\n  FeatureAppManager,\n  FeatureAppScope,\n  Logger,\n} from '@feature-hub/core';\nimport {LitElement, html, property} from 'lit-element';\nimport {TemplateResult} from 'lit-html';\n\n/**\n * A DOM Feature App allows the use of any frontend technology such as Vue.js,\n * React, or Angular.\n */\nexport interface DomFeatureApp {\n  /**\n   * @param container The container element to which the Feature App can attach\n   * itself.\n   */\n  attachTo(container: Element): void;\n}\n\n/**\n * A custom element defined by [[defineFeatureAppContainer]] as\n * `feature-app-container`.\n *\n * It is possible to pass a slot named `error` to the `feature-app-container`\n * element which is rendered if the Feature App could not be created or if the\n * Feature App throws in its [[DomFeatureApp.attachTo]] method.\n */\nexport interface FeatureAppContainerElement extends HTMLElement {\n  /**\n   * The Feature App ID is used to identify the Feature App instance. Multiple\n   * Feature App Loaders with the same `featureAppId` will render the same\n   * Feature app instance. The ID is also used as a consumer ID for dependent\n   * Feature Services. To render multiple instances of the same kind of Feature\n   * App, different IDs must be used.\n   */\n  featureAppId: string;\n\n  /**\n   * The Feature App's name. In contrast to the `featureAppId`, the name must\n   * not be unique. It can be used by required Feature Services for display\n   * purposes, logging, looking up Feature App configuration meta data, etc.\n   */\n  featureAppName?: string;\n\n  /**\n   * The absolute or relative base URL of the Feature App's assets and/or BFF.\n   */\n  baseUrl?: string;\n\n  /**\n   * The definition of the Feature App that should be rendered.\n   */\n  featureAppDefinition?: FeatureAppDefinition<DomFeatureApp>;\n\n  /**\n   * A config object that is passed to the Feature App's `create` method.\n   */\n  config?: unknown;\n}\n\nconst elementName = 'feature-app-container';\n\nexport interface DefineFeatureAppContainerOptions {\n  /**\n   * A custom logger that shall be used instead of `console`.\n   */\n  readonly logger?: Logger;\n}\n\n/**\n * Define a custom element implementing the [[FeatureAppContainerElement]]\n * interface under the name `feature-app-container` at the\n * `CustomElementRegistry`.\n */\nexport function defineFeatureAppContainer(\n  featureAppManager: FeatureAppManager,\n  options: DefineFeatureAppContainerOptions = {},\n): void {\n  if (customElements.get(elementName)) {\n    return;\n  }\n\n  const {logger = console} = options;\n\n  class FeatureAppContainer\n    extends LitElement\n    implements FeatureAppContainerElement\n  {\n    @property({type: String})\n    public featureAppId!: string;\n\n    @property({type: String})\n    public featureAppName?: string;\n\n    @property({type: String})\n    public baseUrl?: string;\n\n    @property({type: Object})\n    public featureAppDefinition?: FeatureAppDefinition<DomFeatureApp>;\n\n    @property({type: Object})\n    public config?: unknown;\n\n    @property({type: Object, reflect: false})\n    private error?: unknown;\n\n    private featureAppScope: FeatureAppScope<DomFeatureApp> | undefined;\n\n    private readonly appElement = document.createElement('div');\n\n    public firstUpdated(): void {\n      if (!this.featureAppDefinition) {\n        return;\n      }\n\n      try {\n        this.featureAppScope = featureAppManager.createFeatureAppScope(\n          this.featureAppId,\n          this.featureAppDefinition,\n          {\n            featureAppName: this.featureAppName,\n            baseUrl: this.baseUrl,\n            config: this.config,\n          },\n        );\n\n        this.featureAppScope.featureApp.attachTo(this.appElement);\n      } catch (error) {\n        logger.error(error);\n\n        this.error = error;\n      }\n    }\n\n    public render(): TemplateResult {\n      if (this.error) {\n        return html` <slot name=\"error\"></slot> `;\n      }\n\n      return html` ${this.appElement} `;\n    }\n\n    public disconnectedCallback(): void {\n      if (this.featureAppScope) {\n        this.featureAppScope.release();\n      }\n\n      super.disconnectedCallback();\n    }\n  }\n\n  customElements.define(elementName, FeatureAppContainer);\n}\n"]}