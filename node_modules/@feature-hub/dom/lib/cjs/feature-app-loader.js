"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.defineFeatureAppLoader = void 0;
const lit_element_1 = require("lit-element");
const if_defined_1 = require("lit-html/directives/if-defined");
const until_1 = require("lit-html/directives/until");
const feature_app_container_1 = require("./feature-app-container");
const prepend_base_url_1 = require("./internal/prepend-base-url");
const elementName = 'feature-app-loader';
/**
 * Define a custom element implementing the [[FeatureAppLoaderElement]]
 * interface under the name `feature-app-loader` at the
 * `CustomElementRegistry`.
 */
function defineFeatureAppLoader(featureAppManager, options = {}) {
    if (customElements.get(elementName)) {
        return;
    }
    const { logger = console } = options;
    (0, feature_app_container_1.defineFeatureAppContainer)(featureAppManager, options);
    class FeatureAppLoader extends lit_element_1.LitElement {
        render() {
            return (0, lit_element_1.html) `
        ${(0, until_1.until)(this.loadFeatureApp(), (0, lit_element_1.html) ` <slot name="loading"></slot> `)}
      `;
        }
        async loadFeatureApp() {
            try {
                if (!this.src) {
                    throw new Error('No src provided.');
                }
                const definition = await featureAppManager.getAsyncFeatureAppDefinition((0, prepend_base_url_1.prependBaseUrl)(this.baseUrl, this.src)).promise;
                return (0, lit_element_1.html) `
          <feature-app-container
            featureAppId=${this.featureAppId}
            featureAppName=${(0, if_defined_1.ifDefined)(this.featureAppName)}
            baseUrl=${(0, if_defined_1.ifDefined)(this.baseUrl)}
            .featureAppDefinition=${definition}
            .config=${this.config}
          >
            <slot name="error" slot="error"></slot>
          </feature-app-container>
        `;
            }
            catch (error) {
                logger.error(error);
                return (0, lit_element_1.html) ` <slot name="error"></slot> `;
            }
        }
    }
    __decorate([
        (0, lit_element_1.property)({ type: String })
    ], FeatureAppLoader.prototype, "featureAppId", void 0);
    __decorate([
        (0, lit_element_1.property)({ type: String })
    ], FeatureAppLoader.prototype, "featureAppName", void 0);
    __decorate([
        (0, lit_element_1.property)({ type: String })
    ], FeatureAppLoader.prototype, "baseUrl", void 0);
    __decorate([
        (0, lit_element_1.property)({ type: String })
    ], FeatureAppLoader.prototype, "src", void 0);
    __decorate([
        (0, lit_element_1.property)({ type: Object })
    ], FeatureAppLoader.prototype, "config", void 0);
    customElements.define(elementName, FeatureAppLoader);
}
exports.defineFeatureAppLoader = defineFeatureAppLoader;
//# sourceMappingURL=feature-app-loader.js.map