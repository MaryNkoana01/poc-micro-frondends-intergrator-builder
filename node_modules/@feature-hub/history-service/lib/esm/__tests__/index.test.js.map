{"version":3,"file":"index.test.js","sourceRoot":"","sources":["../../../src/__tests__/index.test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @jest-environment jsdom\n * @jest-environment-options {\"url\": \"http://example.com\"}\n */\n\n// tslint:disable:no-implicit-dependencies\n// tslint:disable:no-non-null-assertion\n\nimport {\n  FeatureServiceBinder,\n  FeatureServiceBinding,\n  FeatureServiceEnvironment,\n  FeatureServiceProviderDefinition,\n} from '@feature-hub/core';\nimport {History} from 'history';\nimport {\n  ConsumerLocationV3,\n  HistoryServiceDependencies,\n  HistoryServiceV1,\n  HistoryServiceV2,\n  HistoryServiceV3,\n  RootLocation,\n  SharedHistoryService,\n  createRootLocationTransformer,\n  defineHistoryService,\n} from '..';\nimport * as historyV4 from '../history-v4';\nimport {GetHistoryKeyOptions} from '../internal/create-history-service-v3-binder';\nimport {ConsumerState} from '../internal/history-multiplexer';\nimport {Writable} from '../internal/writable';\nimport {\n  consumerPathsQueryParamName,\n  createSearch,\n  createUrl,\n} from './root-location-helpers';\nimport {stubbedLogger} from './stubbed-logger';\n\nconst simulateOnPopState = (state: unknown, url: string) => {\n  // We need to use pushState to change to the URL that should be set by the popstate event.\n  history.pushState(state, '', url);\n  const popStateEvent = new PopStateEvent('popstate', {state});\n  window.dispatchEvent(popStateEvent);\n};\n\ndescribe('defineHistoryService', () => {\n  let pushStateSpy: jest.SpyInstance;\n  let replaceStateSpy: jest.SpyInstance;\n\n  let historyServiceDefinition: FeatureServiceProviderDefinition<SharedHistoryService>;\n\n  beforeEach(() => {\n    // ensure the window.location.href is the same before each test\n    window.history.replaceState(null, '', 'http://example.com');\n\n    pushStateSpy = jest.spyOn(window.history, 'pushState');\n    replaceStateSpy = jest.spyOn(window.history, 'replaceState');\n\n    historyServiceDefinition = defineHistoryService({\n      createRootLocation: jest.fn(),\n      getConsumerPathFromRootLocation: jest.fn(),\n    });\n  });\n\n  afterEach(() => {\n    pushStateSpy.mockRestore();\n    replaceStateSpy.mockRestore();\n  });\n\n  it('creates a history service definition', () => {\n    expect(historyServiceDefinition.id).toBe('s2:history');\n    expect(historyServiceDefinition.dependencies).toBeUndefined();\n\n    expect(historyServiceDefinition.optionalDependencies).toEqual({\n      featureServices: {\n        's2:logger': '^1.0.0',\n        's2:server-request': '^1.0.0',\n      },\n    });\n  });\n\n  describe('#create', () => {\n    it('creates a shared Feature Service containing versions 1.0.0 and 2.0.0', () => {\n      const sharedHistoryService = historyServiceDefinition.create({\n        featureServices: {},\n      });\n\n      expect(sharedHistoryService!['1.0.0']).toBeDefined();\n      expect(sharedHistoryService!['2.0.0']).toBeDefined();\n    });\n  });\n\n  describe('HistoryServiceV1', () => {\n    let mockEnv: FeatureServiceEnvironment<\n      Writable<HistoryServiceDependencies>\n    >;\n\n    let createHistoryServiceBinder: () => FeatureServiceBinder<HistoryServiceV1>;\n\n    beforeEach(() => {\n      mockEnv = {featureServices: {'s2:logger': stubbedLogger}};\n\n      createHistoryServiceBinder = () => {\n        const sharedHistoryService = defineHistoryService(\n          createRootLocationTransformer({consumerPathsQueryParamName}),\n        ).create(mockEnv);\n\n        return sharedHistoryService!['1.0.0'];\n      };\n    });\n\n    describe('when the history service consumer is destroyed without having created a browser history', () => {\n      it('does not try to unbind the non-existent browser history', () => {\n        const historyServiceBinder = createHistoryServiceBinder();\n\n        historyServiceBinder('test').unbind!();\n      });\n    });\n\n    describe('#createBrowserHistory()', () => {\n      let historyBinding1: FeatureServiceBinding<HistoryServiceV1>;\n      let historyBinding2: FeatureServiceBinding<HistoryServiceV1>;\n      let history1: historyV4.History;\n      let history2: historyV4.History;\n\n      const createHistories = () => {\n        const historyServiceBinder = createHistoryServiceBinder();\n\n        historyBinding1 = historyServiceBinder('test1');\n        const historyService1 = historyBinding1.featureService;\n        history1 = historyService1.createBrowserHistory();\n\n        historyBinding2 = historyServiceBinder('test2');\n        const historyService2 = historyBinding2.featureService;\n        history2 = historyService2.createBrowserHistory();\n\n        pushStateSpy.mockClear();\n        replaceStateSpy.mockClear();\n      };\n\n      const destroyHistories = () => {\n        historyBinding1.unbind!();\n        historyBinding2.unbind!();\n      };\n\n      beforeEach(createHistories);\n      afterEach(destroyHistories);\n\n      describe('when called multiple times for the same consumer', () => {\n        it('returns the same instance and logs a warning', () => {\n          expect(historyBinding1.featureService.createBrowserHistory()).toEqual(\n            history1,\n          );\n\n          expect(stubbedLogger.warn).toHaveBeenCalledWith(\n            'createBrowserHistory was called multiple times by consumer \"test1\". Returning the same history instance as before.',\n          );\n        });\n      });\n\n      describe('#length', () => {\n        it('returns the same root history length for all consumers', () => {\n          const initialLength = window.history.length;\n\n          expect(history1.length).toBe(initialLength);\n          expect(history2.length).toBe(initialLength);\n\n          history1.push('/foo');\n          history1.push('/bar');\n          history1.replace('/qux');\n          history2.push('/baz');\n          history2.replace('/quux');\n\n          expect(history1.length).toBe(initialLength + 3);\n          expect(history2.length).toBe(initialLength + 3);\n        });\n      });\n\n      describe('#action', () => {\n        it('returns a consumer-specific action', () => {\n          expect(history1.action).toBe('POP');\n          expect(history2.action).toBe('POP');\n\n          history1.push('/foo');\n          history2.replace('/bar');\n\n          expect(history1.action).toBe('PUSH');\n          expect(history2.action).toBe('REPLACE');\n        });\n      });\n\n      describe('#location', () => {\n        it('returns a consumer-specific location', () => {\n          history1.push('/foo', {test: 'foo'});\n          history2.replace('/bar', {test: 'bar'});\n\n          expect(history1.location).toMatchObject({\n            pathname: '/foo',\n            state: {test: 'foo'},\n          });\n\n          expect(history2.location).toMatchObject({\n            pathname: '/bar',\n            state: {test: 'bar'},\n          });\n        });\n\n        it('retrieves consumer specific locations from the initial location', () => {\n          destroyHistories();\n\n          const consumerStates: Record<string, ConsumerState> = {\n            test1: {state: 'foo state', key: 'default'},\n            test2: {state: 'bar state', key: 'default'},\n          };\n\n          const url = createUrl({test1: '/foo#some-anchor', test2: 'bar'});\n\n          window.history.pushState({usr: consumerStates}, '', url);\n\n          createHistories();\n\n          expect(history1.location).toMatchObject({\n            pathname: '/foo',\n            state: 'foo state',\n            hash: '#some-anchor',\n            key: 'default',\n          });\n\n          expect(history2.location).toMatchObject({\n            pathname: '/bar',\n            state: 'bar state',\n            key: 'default',\n          });\n        });\n\n        describe('for a POP action', () => {\n          it('updates the location of matching consumers', () => {\n            const state = window.history.state;\n            const href = window.location.href;\n\n            history1.push('/foo');\n\n            simulateOnPopState(state, href);\n\n            expect(history1.location).toMatchObject({pathname: '/'});\n          });\n        });\n      });\n\n      describe('#push()', () => {\n        it('pushes a new root location onto the root history for every consumer push', () => {\n          history1.push('/foo');\n          history2.push('/bar?baz=1');\n\n          expect(window.location.href).toBe(\n            createUrl({test1: '/foo', test2: '/bar?baz=1'}),\n          );\n\n          expect(pushStateSpy).toHaveBeenCalledTimes(2);\n        });\n\n        it('accepts state as part of the location descriptor object', () => {\n          history1.push({pathname: '/foo', state: 1});\n\n          expect(history1.location.state).toBe(1);\n        });\n\n        it('accepts state as the second argument', () => {\n          history1.push('/foo', 1);\n\n          expect(history1.location.state).toBe(1);\n        });\n\n        it('normalizes the pathname', () => {\n          history1.push('foo');\n\n          expect(window.location.href).toBe(createUrl({test1: '/foo'}));\n        });\n\n        it('handles relative pathnames', () => {\n          history1.push('/foo/bar');\n          history1.push('baz');\n\n          expect(window.location.href).toBe(createUrl({test1: '/foo/baz'}));\n        });\n      });\n\n      describe('#replace()', () => {\n        it('replaces the root location in the root history for every consumer replace', () => {\n          history1.replace('/foo');\n          history2.replace('/bar?baz=1');\n\n          expect(window.location.href).toBe(\n            createUrl({test1: '/foo', test2: '/bar?baz=1'}),\n          );\n\n          expect(replaceStateSpy).toHaveBeenCalledTimes(2);\n        });\n\n        it('accepts state as part of the location descriptor object', () => {\n          history1.replace({pathname: '/foo', state: 1});\n\n          expect(history1.location.state).toBe(1);\n        });\n\n        it('accepts state as the second argument', () => {\n          history1.replace('/foo', 1);\n\n          expect(history1.location.state).toBe(1);\n        });\n\n        it('normalizes the pathname', () => {\n          history1.replace('foo');\n\n          expect(window.location.href).toBe(createUrl({test1: '/foo'}));\n        });\n\n        it('handles relative pathnames', () => {\n          history1.replace('/foo/bar');\n          history1.replace('baz');\n\n          expect(window.location.href).toBe(createUrl({test1: '/foo/baz'}));\n        });\n      });\n\n      describe('#go()', () => {\n        it('does nothing and logs a warning that go() is not supported', () => {\n          history1.push('/foo');\n\n          const href = window.location.href;\n\n          history1.go(-1);\n\n          expect(window.location.href).toBe(href);\n\n          expect(stubbedLogger.warn).toHaveBeenCalledWith(\n            'history.go() is not supported.',\n          );\n        });\n      });\n\n      describe('#goBack()', () => {\n        it('does nothing and logs a warning that goBack() is not supported', () => {\n          history1.push('/foo');\n\n          const href = window.location.href;\n\n          history1.goBack();\n\n          expect(window.location.href).toBe(href);\n\n          expect(stubbedLogger.warn).toHaveBeenCalledWith(\n            'history.goBack() is not supported.',\n          );\n        });\n      });\n\n      describe('#goForward()', () => {\n        it('does nothing and logs a warning that goForward() is not supported', () => {\n          history1.push('/foo');\n\n          const href = window.location.href;\n\n          history1.goForward();\n\n          expect(window.location.href).toBe(href);\n\n          expect(stubbedLogger.warn).toHaveBeenCalledWith(\n            'history.goForward() is not supported.',\n          );\n        });\n      });\n\n      describe('#block()', () => {\n        it('does nothing and logs a warning', () => {\n          const promptHookSpy = jest.fn();\n\n          history1.block(promptHookSpy);\n          history1.push('/foo?bar=1');\n\n          expect(window.location.href).toBe(createUrl({test1: '/foo?bar=1'}));\n\n          expect(promptHookSpy).not.toHaveBeenCalled();\n\n          expect(stubbedLogger.warn).toHaveBeenCalledWith(\n            'history.block() is not supported.',\n          );\n        });\n\n        it('still returns a no-op unblock function', () => {\n          const promptHookSpy = jest.fn();\n          const unblock = history1.block(promptHookSpy);\n\n          unblock();\n        });\n      });\n\n      describe('#listen()', () => {\n        it('calls listeners only for consumer-specific history changes', () => {\n          const listenerSpy1 = jest.fn();\n          const listenerSpy2 = jest.fn();\n\n          history1.listen(listenerSpy1);\n          history2.listen(listenerSpy2);\n\n          history1.push('/foo?bar=1');\n          history2.replace('/baz?qux=2');\n\n          expect(listenerSpy1).toHaveBeenCalledTimes(1);\n\n          expect(listenerSpy1).toHaveBeenCalledWith(\n            expect.objectContaining({pathname: '/foo', search: '?bar=1'}),\n            'PUSH',\n          );\n\n          expect(listenerSpy2).toHaveBeenCalledTimes(1);\n\n          expect(listenerSpy2).toHaveBeenCalledWith(\n            expect.objectContaining({pathname: '/baz', search: '?qux=2'}),\n            'REPLACE',\n          );\n        });\n\n        it('returns an unregister function', () => {\n          const listenerSpy = jest.fn();\n          const unregister = history1.listen(listenerSpy);\n\n          history1.push('/foo');\n          unregister();\n          history1.push('/bar');\n\n          expect(listenerSpy).toHaveBeenCalledTimes(1);\n        });\n\n        describe('for a POP action', () => {\n          let history1ListenerSpy: jest.Mock;\n          let history2ListenerSpy: jest.Mock;\n\n          let unregisterListeners: () => void;\n\n          const registerListeners = () => {\n            history1ListenerSpy = jest.fn();\n            const unregister1 = history1.listen(history1ListenerSpy);\n\n            history2ListenerSpy = jest.fn();\n            const unregister2 = history2.listen(history2ListenerSpy);\n\n            unregisterListeners = () => {\n              unregister1();\n              unregister2();\n            };\n          };\n\n          beforeEach(registerListeners);\n\n          it('calls listeners only for matching consumer locations', () => {\n            const state = window.history.state;\n            const href = window.location.href;\n\n            history1.push('/foo');\n            history1ListenerSpy.mockClear();\n\n            simulateOnPopState(state, href);\n\n            expect(history1ListenerSpy).toHaveBeenCalledWith(\n              expect.objectContaining({pathname: '/'}),\n              'POP',\n            );\n\n            expect(history2ListenerSpy).not.toHaveBeenCalled();\n          });\n\n          it('updates the location of matching consumers even when not listening', () => {\n            const state = window.history.state;\n            const href = window.location.href;\n\n            history1.push('/foo');\n            unregisterListeners();\n\n            simulateOnPopState(state, href);\n\n            expect(history1.location).toMatchObject({pathname: '/'});\n          });\n\n          describe('with back and forward navigation', () => {\n            it('calls the listener with the correct locations', () => {\n              history1.push('/baz?qux=3');\n\n              const state1 = window.history.state;\n              const href1 = window.location.href;\n\n              history1.push('/bar?qux=4');\n\n              const state2 = window.history.state;\n              const href2 = window.location.href;\n\n              history1ListenerSpy.mockClear();\n\n              simulateOnPopState(state1, href1); // POP backward\n\n              expect(history1ListenerSpy).toHaveBeenCalledWith(\n                expect.objectContaining({pathname: '/baz', search: '?qux=3'}),\n                'POP',\n              );\n\n              history1ListenerSpy.mockClear();\n\n              simulateOnPopState(state2, href2); // POP foward\n\n              expect(history1ListenerSpy).toHaveBeenCalledWith(\n                expect.objectContaining({pathname: '/bar', search: '?qux=4'}),\n                'POP',\n              );\n            });\n          });\n\n          describe('when a location is replaced', () => {\n            it('calls the listener with the correct locations', () => {\n              history1.push('/a1');\n              history2.push('/b1');\n              history1.push('/a2');\n              history2.push('/b2');\n              history1.replace('/a3');\n\n              const replacedState = window.history.state;\n              const replacedHref = window.location.href;\n\n              history2.push('/b3');\n\n              history2ListenerSpy.mockClear();\n\n              simulateOnPopState(replacedState, replacedHref); // POP to replaced location\n\n              expect(history2ListenerSpy).toHaveBeenCalledWith(\n                expect.objectContaining({pathname: '/b2'}),\n                'POP',\n              );\n            });\n          });\n\n          describe('after re-initializing the history service, e.g. because of a page reload', () => {\n            it('calls listeners for matching consumer locations (also restores consumer state)', () => {\n              const consumerState = {foo: 1};\n              history1.push('/foo?a=1', consumerState);\n\n              const state = window.history.state;\n              const href = window.location.href;\n\n              history1.push('/bar');\n\n              unregisterListeners();\n              createHistories();\n              registerListeners();\n\n              simulateOnPopState(state, href);\n\n              expect(history1ListenerSpy).toHaveBeenCalledWith(\n                expect.objectContaining({\n                  pathname: '/foo',\n                  search: '?a=1',\n                  state: consumerState,\n                }),\n                'POP',\n              );\n\n              expect(history2ListenerSpy).not.toHaveBeenCalled();\n            });\n          });\n        });\n      });\n\n      describe('#createHref()', () => {\n        it('returns the href for the given location based on the root browser history', () => {\n          history1.push('/foo');\n\n          const location = {pathname: '/bar', search: '?a=b'};\n          const href = history2.createHref(location);\n\n          expect(href).toBe(\n            createUrl({test1: '/foo', test2: '/bar?a=b'}, {relative: true}),\n          );\n        });\n\n        it('normalizes the pathname', () => {\n          history1.push('/foo');\n\n          const location = {pathname: 'bar'};\n          const href = history2.createHref(location);\n\n          expect(href).toBe(\n            createUrl({test1: '/foo', test2: '/bar'}, {relative: true}),\n          );\n        });\n      });\n\n      describe('when the history consumer is destroyed', () => {\n        it('does not call the listener of a destroyed consumer', () => {\n          const history1ListenerSpy = jest.fn();\n          const history2ListenerSpy = jest.fn();\n\n          const history1Unregister = history1.listen(history1ListenerSpy);\n          history2.listen(history2ListenerSpy);\n\n          const state1 = window.history.state;\n          const href1 = window.location.href;\n\n          history1.push('/foo');\n\n          const state2 = window.history.state;\n          const href2 = window.location.href;\n\n          history2.push('/bar');\n\n          historyBinding2.unbind!();\n\n          history1ListenerSpy.mockClear();\n          history2ListenerSpy.mockClear();\n\n          simulateOnPopState(state2, href2);\n\n          expect(history2ListenerSpy).not.toHaveBeenCalled();\n\n          simulateOnPopState(state1, href1);\n\n          expect(history1ListenerSpy).toHaveBeenCalled();\n\n          history1Unregister();\n        });\n\n        describe('for a POP action', () => {\n          it('does not update the location of a destroyed consumer', () => {\n            const state = window.history.state;\n            const href = window.location.href;\n\n            history1.push('/foo');\n            historyBinding1.unbind!();\n\n            simulateOnPopState(state, href);\n\n            expect(history1.location).toMatchObject({pathname: '/foo'});\n          });\n        });\n      });\n    });\n\n    describe('when no Logger Feature Service is provided', () => {\n      let consoleWarnSpy: jest.SpyInstance;\n\n      beforeEach(() => {\n        consoleWarnSpy = jest.spyOn(console, 'warn');\n        mockEnv.featureServices['s2:logger'] = undefined;\n      });\n\n      afterEach(() => {\n        consoleWarnSpy.mockRestore();\n      });\n\n      it('logs messages using the console', () => {\n        const historyServiceBinder = createHistoryServiceBinder();\n        const historyService = historyServiceBinder('test1').featureService;\n        const browserHistory = historyService.createBrowserHistory();\n\n        browserHistory.go(-1);\n\n        expect(consoleWarnSpy).toHaveBeenCalledWith(\n          'history.go() is not supported.',\n        );\n      });\n    });\n  });\n\n  describe('HistoryServiceV2', () => {\n    let mockEnv: FeatureServiceEnvironment<\n      Writable<HistoryServiceDependencies>\n    >;\n\n    let createHistoryServiceBinder: (\n      mode?: 'browser' | 'static',\n    ) => FeatureServiceBinder<HistoryServiceV2>;\n\n    beforeEach(() => {\n      mockEnv = {\n        featureServices: {'s2:logger': stubbedLogger},\n      };\n\n      createHistoryServiceBinder = () => {\n        const sharedHistoryService = defineHistoryService(\n          createRootLocationTransformer({consumerPathsQueryParamName}),\n        ).create(mockEnv);\n\n        return sharedHistoryService!['2.0.0'];\n      };\n    });\n\n    describe('#historyKey', () => {\n      it('uses the consumer ID as history key', () => {\n        const consumerId = 'test1';\n        const historyServiceBinder = createHistoryServiceBinder();\n        const historyBinding1 = historyServiceBinder(consumerId);\n        const {historyKey} = historyBinding1.featureService;\n\n        expect(historyKey).toBe(consumerId);\n      });\n    });\n\n    describe('#history', () => {\n      let historyBinding1: FeatureServiceBinding<HistoryServiceV2>;\n      let historyBinding2: FeatureServiceBinding<HistoryServiceV2>;\n      let history1: historyV4.History;\n      let history2: historyV4.History;\n\n      const createHistories = () => {\n        const historyServiceBinder = createHistoryServiceBinder();\n\n        historyBinding1 = historyServiceBinder('test1');\n        const historyService1 = historyBinding1.featureService;\n        history1 = historyService1.history;\n\n        historyBinding2 = historyServiceBinder('test2');\n        const historyService2 = historyBinding2.featureService;\n        history2 = historyService2.history;\n\n        pushStateSpy.mockClear();\n        replaceStateSpy.mockClear();\n      };\n\n      const destroyHistories = () => {\n        historyBinding1.unbind!();\n        historyBinding2.unbind!();\n      };\n\n      beforeEach(createHistories);\n      afterEach(destroyHistories);\n\n      describe('#length', () => {\n        it('returns the same root history length for all consumers', () => {\n          const initialLength = window.history.length;\n\n          expect(history1.length).toBe(initialLength);\n          expect(history2.length).toBe(initialLength);\n\n          history1.push('/foo');\n          history1.push('/bar');\n          history1.replace('/qux');\n          history2.push('/baz');\n          history2.replace('/quux');\n\n          expect(history1.length).toBe(initialLength + 3);\n          expect(history2.length).toBe(initialLength + 3);\n        });\n      });\n\n      describe('#action', () => {\n        it('returns a consumer-specific action', () => {\n          expect(history1.action).toBe('POP');\n          expect(history2.action).toBe('POP');\n\n          history1.push('/foo');\n          history2.replace('/bar');\n\n          expect(history1.action).toBe('PUSH');\n          expect(history2.action).toBe('REPLACE');\n        });\n      });\n\n      describe('#location', () => {\n        it('returns a consumer-specific location', () => {\n          history1.push('/foo', {test: 'foo'});\n          history2.replace('/bar', {test: 'bar'});\n\n          expect(history1.location).toMatchObject({\n            pathname: '/foo',\n            state: {test: 'foo'},\n          });\n\n          expect(history2.location).toMatchObject({\n            pathname: '/bar',\n            state: {test: 'bar'},\n          });\n        });\n\n        it('retrieves consumer specific locations from the initial location', () => {\n          destroyHistories();\n\n          const consumerStates: Record<string, ConsumerState> = {\n            test1: {state: 'foo state', key: 'default'},\n            test2: {state: 'bar state', key: 'default'},\n          };\n\n          const url = createUrl({test1: '/foo', test2: 'bar'});\n\n          window.history.pushState({usr: consumerStates}, '', url);\n\n          createHistories();\n\n          expect(history1.location).toMatchObject({\n            pathname: '/foo',\n            state: 'foo state',\n            key: 'default',\n          });\n\n          expect(history2.location).toMatchObject({\n            pathname: '/bar',\n            state: 'bar state',\n            key: 'default',\n          });\n        });\n\n        describe('when getConsumerPathFromRootLocation returns undefined', () => {\n          it('returns the default location', () => {\n            expect(history1.location).toMatchObject({\n              pathname: '/',\n              search: '',\n            });\n          });\n        });\n\n        describe('for a POP action', () => {\n          it('updates the location of matching consumers', () => {\n            const state = window.history.state;\n            const href = window.location.href;\n\n            history1.push('/foo');\n\n            simulateOnPopState(state, href);\n\n            expect(history1.location).toMatchObject({pathname: '/'});\n          });\n        });\n      });\n\n      describe('#push()', () => {\n        it('pushes a new root location onto the root history for every consumer push', () => {\n          history1.push('/foo');\n          history2.push('/bar?baz=1');\n\n          expect(window.location.href).toBe(\n            createUrl({test1: '/foo', test2: '/bar?baz=1'}),\n          );\n\n          expect(pushStateSpy).toHaveBeenCalledTimes(2);\n        });\n\n        it('normalizes the pathname', () => {\n          history1.push('foo');\n\n          expect(window.location.href).toBe(createUrl({test1: '/foo'}));\n        });\n\n        it('handles relative pathnames', () => {\n          history1.push('/foo/bar');\n          history1.push('baz');\n\n          expect(window.location.href).toBe(createUrl({test1: '/foo/baz'}));\n        });\n      });\n\n      describe('#replace()', () => {\n        it('replaces the root location in the root history for every consumer replace', () => {\n          history1.replace('/foo');\n          history2.replace('/bar?baz=1');\n\n          expect(window.location.href).toBe(\n            createUrl({test1: '/foo', test2: '/bar?baz=1'}),\n          );\n\n          expect(replaceStateSpy).toHaveBeenCalledTimes(2);\n        });\n\n        it('normalizes the pathname', () => {\n          history1.replace('foo');\n\n          expect(window.location.href).toBe(createUrl({test1: '/foo'}));\n        });\n\n        it('handles relative pathnames', () => {\n          history1.replace('/foo/bar');\n          history1.replace('baz');\n\n          expect(window.location.href).toBe(createUrl({test1: '/foo/baz'}));\n        });\n      });\n\n      describe('#go()', () => {\n        it('does nothing and logs a warning that go() is not supported', () => {\n          history1.push('/foo');\n\n          const href = window.location.href;\n\n          history1.go(-1);\n\n          expect(window.location.href).toBe(href);\n\n          expect(stubbedLogger.warn).toHaveBeenCalledWith(\n            'history.go() is not supported.',\n          );\n        });\n      });\n\n      describe('#goBack()', () => {\n        it('does nothing and logs a warning that goBack() is not supported', () => {\n          history1.push('/foo');\n\n          const href = window.location.href;\n\n          history1.goBack();\n\n          expect(window.location.href).toBe(href);\n\n          expect(stubbedLogger.warn).toHaveBeenCalledWith(\n            'history.goBack() is not supported.',\n          );\n        });\n      });\n\n      describe('#goForward()', () => {\n        it('does nothing and logs a warning that goForward() is not supported', () => {\n          history1.push('/foo');\n\n          const href = window.location.href;\n\n          history1.goForward();\n\n          expect(window.location.href).toBe(href);\n\n          expect(stubbedLogger.warn).toHaveBeenCalledWith(\n            'history.goForward() is not supported.',\n          );\n        });\n      });\n\n      describe('#block()', () => {\n        it('does nothing and logs a warning', () => {\n          const promptHookSpy = jest.fn();\n\n          history1.block(promptHookSpy);\n          history1.push('/foo?bar=1');\n\n          expect(window.location.href).toBe(createUrl({test1: '/foo?bar=1'}));\n\n          expect(promptHookSpy).not.toHaveBeenCalled();\n\n          expect(stubbedLogger.warn).toHaveBeenCalledWith(\n            'history.block() is not supported.',\n          );\n        });\n\n        it('still returns a no-op unblock function', () => {\n          const promptHookSpy = jest.fn();\n          const unblock = history1.block(promptHookSpy);\n\n          unblock();\n        });\n      });\n\n      describe('#listen()', () => {\n        it('calls listeners only for consumer-specific history changes', () => {\n          const listenerSpy1 = jest.fn();\n          const listenerSpy2 = jest.fn();\n\n          history1.listen(listenerSpy1);\n          history2.listen(listenerSpy2);\n\n          history1.push('/foo?bar=1');\n          history2.replace('/baz?qux=2');\n\n          expect(listenerSpy1).toHaveBeenCalledTimes(1);\n\n          expect(listenerSpy1).toHaveBeenCalledWith(\n            expect.objectContaining({pathname: '/foo', search: '?bar=1'}),\n            'PUSH',\n          );\n\n          expect(listenerSpy2).toHaveBeenCalledTimes(1);\n\n          expect(listenerSpy2).toHaveBeenCalledWith(\n            expect.objectContaining({pathname: '/baz', search: '?qux=2'}),\n            'REPLACE',\n          );\n        });\n\n        it('returns an unregister function', () => {\n          const listenerSpy = jest.fn();\n          const unregister = history1.listen(listenerSpy);\n\n          history1.push('/foo');\n          unregister();\n          history1.push('/bar');\n\n          expect(listenerSpy).toHaveBeenCalledTimes(1);\n        });\n\n        describe('for a POP action', () => {\n          let history1ListenerSpy: jest.Mock;\n          let history2ListenerSpy: jest.Mock;\n\n          let unregisterListeners: () => void;\n\n          const registerListeners = () => {\n            history1ListenerSpy = jest.fn();\n            const unregister1 = history1.listen(history1ListenerSpy);\n\n            history2ListenerSpy = jest.fn();\n            const unregister2 = history2.listen(history2ListenerSpy);\n\n            unregisterListeners = () => {\n              unregister1();\n              unregister2();\n            };\n          };\n\n          beforeEach(registerListeners);\n\n          it('calls listeners only for matching consumer locations', () => {\n            const state = window.history.state;\n            const href = window.location.href;\n\n            history1.push('/foo');\n            history1ListenerSpy.mockClear();\n\n            simulateOnPopState(state, href);\n\n            expect(history1ListenerSpy).toHaveBeenCalledWith(\n              expect.objectContaining({pathname: '/'}),\n              'POP',\n            );\n\n            expect(history2ListenerSpy).not.toHaveBeenCalled();\n          });\n\n          it('updates the location of matching consumers even when not listening', () => {\n            const state = window.history.state;\n            const href = window.location.href;\n\n            history1.push('/foo');\n            unregisterListeners();\n\n            simulateOnPopState(state, href);\n\n            expect(history1.location).toMatchObject({pathname: '/'});\n          });\n\n          describe('with back and forward navigation', () => {\n            it('calls the listener with the correct locations', () => {\n              history1.push('/baz?qux=3');\n\n              const state1 = window.history.state;\n              const href1 = window.location.href;\n\n              history1.push('/bar?qux=4');\n\n              const state2 = window.history.state;\n              const href2 = window.location.href;\n\n              history1ListenerSpy.mockClear();\n\n              simulateOnPopState(state1, href1); // POP backward\n\n              expect(history1ListenerSpy).toHaveBeenCalledWith(\n                expect.objectContaining({pathname: '/baz', search: '?qux=3'}),\n                'POP',\n              );\n\n              history1ListenerSpy.mockClear();\n\n              simulateOnPopState(state2, href2); // POP foward\n\n              expect(history1ListenerSpy).toHaveBeenCalledWith(\n                expect.objectContaining({pathname: '/bar', search: '?qux=4'}),\n                'POP',\n              );\n            });\n          });\n\n          describe('when a location is replaced', () => {\n            it('calls the listener with the correct locations', () => {\n              history1.push('/a1');\n              history2.push('/b1');\n              history1.push('/a2');\n              history2.push('/b2');\n              history1.replace('/a3');\n\n              const replacedState = window.history.state;\n              const replacedHref = window.location.href;\n\n              history2.push('/b3');\n\n              history2ListenerSpy.mockClear();\n\n              simulateOnPopState(replacedState, replacedHref); // POP to replaced location\n\n              expect(history2ListenerSpy).toHaveBeenCalledWith(\n                expect.objectContaining({pathname: '/b2'}),\n                'POP',\n              );\n            });\n          });\n\n          describe('after re-initializing the history service, e.g. because of a page reload', () => {\n            it('calls listeners for matching consumer locations (also restores consumer state)', () => {\n              const consumerState = {foo: 1};\n              history1.push('/foo?a=1', consumerState);\n\n              const state = window.history.state;\n              const href = window.location.href;\n\n              history1.push('/bar');\n\n              unregisterListeners();\n              createHistories();\n              registerListeners();\n\n              simulateOnPopState(state, href);\n\n              expect(history1ListenerSpy).toHaveBeenCalledWith(\n                expect.objectContaining({\n                  pathname: '/foo',\n                  search: '?a=1',\n                  state: consumerState,\n                }),\n                'POP',\n              );\n\n              expect(history2ListenerSpy).not.toHaveBeenCalled();\n            });\n          });\n        });\n      });\n\n      describe('#createHref()', () => {\n        it('returns the href for the given location based on the root browser history', () => {\n          history1.push('/foo');\n\n          const location = {pathname: '/bar', search: '?a=b'};\n          const href = history2.createHref(location);\n\n          expect(href).toBe(\n            createUrl({test1: '/foo', test2: '/bar?a=b'}, {relative: true}),\n          );\n        });\n\n        it('normalizes the pathname', () => {\n          history1.push('/foo');\n\n          const location = {pathname: 'bar'};\n          const href = history2.createHref(location);\n\n          expect(href).toBe(\n            createUrl({test1: '/foo', test2: '/bar'}, {relative: true}),\n          );\n        });\n      });\n\n      describe('when the history consumer is destroyed', () => {\n        it('does not call the listener of a destroyed consumer', () => {\n          const history1ListenerSpy = jest.fn();\n          const history2ListenerSpy = jest.fn();\n\n          const history1Unregister = history1.listen(history1ListenerSpy);\n          history2.listen(history2ListenerSpy);\n\n          const state1 = window.history.state;\n          const href1 = window.location.href;\n\n          history1.push('/foo');\n\n          const state2 = window.history.state;\n          const href2 = window.location.href;\n\n          history2.push('/bar');\n\n          historyBinding2.unbind!();\n\n          history1ListenerSpy.mockClear();\n          history2ListenerSpy.mockClear();\n\n          simulateOnPopState(state2, href2);\n\n          expect(history2ListenerSpy).not.toHaveBeenCalled();\n\n          simulateOnPopState(state1, href1);\n\n          expect(history1ListenerSpy).toHaveBeenCalled();\n\n          history1Unregister();\n        });\n\n        describe('for a POP action', () => {\n          it('does not update the location of a destroyed consumer', () => {\n            const state = window.history.state;\n            const href = window.location.href;\n\n            history1.push('/foo');\n            historyBinding1.unbind!();\n\n            simulateOnPopState(state, href);\n\n            expect(history1.location).toMatchObject({pathname: '/foo'});\n          });\n        });\n      });\n    });\n\n    describe('#rootHistory', () => {\n      let historyBinding1: FeatureServiceBinding<HistoryServiceV2>;\n      let historyBinding2: FeatureServiceBinding<HistoryServiceV2>;\n      let historyService1: HistoryServiceV2;\n      let historyService2: HistoryServiceV2;\n\n      const createHistories = () => {\n        const historyServiceBinder = createHistoryServiceBinder();\n\n        historyBinding1 = historyServiceBinder('test1');\n        historyService1 = historyBinding1.featureService;\n\n        historyBinding2 = historyServiceBinder('test2');\n        historyService2 = historyBinding2.featureService;\n\n        pushStateSpy.mockClear();\n        replaceStateSpy.mockClear();\n      };\n\n      beforeEach(createHistories);\n\n      it('is the same instance for every consumer', () => {\n        expect(historyService1.rootHistory).toBe(historyService2.rootHistory);\n      });\n\n      describe('#length', () => {\n        it('returns the window history length', () => {\n          const initialLength = window.history.length;\n\n          expect(historyService1.rootHistory.length).toBe(initialLength);\n\n          historyService1.history.push('/foo');\n          historyService1.history.push('/bar');\n          historyService1.history.replace('/qux');\n          historyService2.history.push('/baz');\n          historyService2.history.replace('/quux');\n\n          expect(historyService1.rootHistory.length).toBe(initialLength + 3);\n        });\n      });\n\n      describe('#location', () => {\n        it('returns the root location containing all consumer locations', () => {\n          historyService1.history.push('/foo', {test: 'foo'});\n          historyService2.history.replace('/bar', {test: 'bar'});\n\n          expect(historyService1.rootHistory.location).toMatchObject({\n            pathname: '/',\n            search: createSearch({test1: '/foo', test2: '/bar'}),\n            state: {\n              test1: {state: {test: 'foo'}, key: expect.any(String)},\n              test2: {state: {test: 'bar'}, key: expect.any(String)},\n            },\n          });\n        });\n\n        it('returns a root location containing all consumer locations from the initial window location', () => {\n          const consumerStates = {test1: 'foo state', test2: 'bar state'};\n          const url = createUrl({test1: '/foo', test2: 'bar'});\n\n          window.history.pushState({usr: consumerStates}, '', url);\n\n          createHistories();\n\n          expect(historyService1.rootHistory.location).toMatchObject({\n            pathname: '/',\n            search: createSearch({test1: '/foo', test2: 'bar'}),\n            state: consumerStates,\n          });\n        });\n\n        describe('for a POP action', () => {\n          it('returns the previous root location', () => {\n            historyService1.history.push('/foo');\n\n            const state = window.history.state;\n            const href = window.location.href;\n\n            historyService2.history.push('/bar');\n\n            simulateOnPopState(state, href);\n\n            expect(historyService1.rootHistory.location).toMatchObject({\n              pathname: '/',\n              search: createSearch({test1: '/foo'}),\n              state: state.usr,\n            });\n          });\n        });\n      });\n\n      describe('#push()', () => {\n        it('pushes a new root location onto the root history', () => {\n          historyService1.rootHistory.push({pathname: '/foo'});\n\n          expect(window.location.href).toBe('http://example.com/foo');\n          expect(pushStateSpy).toHaveBeenCalledTimes(1);\n        });\n\n        it('puts state into the root location', () => {\n          historyService1.rootHistory.push({pathname: '/foo', state: {foo: 1}});\n\n          expect(historyService1.rootHistory.location).toMatchObject({\n            pathname: '/foo',\n            state: {foo: 1},\n          });\n        });\n\n        it('normalizes the pathname', () => {\n          historyService1.rootHistory.push({pathname: 'foo'});\n\n          expect(window.location.href).toBe('http://example.com/foo');\n        });\n\n        it('handles relative pathnames', () => {\n          historyService1.rootHistory.push({pathname: '/foo/bar'});\n          historyService1.rootHistory.push({pathname: 'baz'});\n\n          expect(window.location.href).toBe('http://example.com/foo/baz');\n        });\n\n        it('changes the location and action of affected consumer histories', () => {\n          const rootLocation =\n            historyService1.createNewRootLocationForMultipleConsumers({\n              historyKey: 'test2',\n              location: {pathname: '/test2'},\n            });\n\n          historyService1.rootHistory.push(rootLocation);\n\n          expect(historyService1.history.location).toMatchObject({\n            pathname: '/',\n          });\n\n          expect(historyService1.history.action).toBe('POP');\n\n          expect(historyService2.history.location).toMatchObject({\n            pathname: '/test2',\n          });\n\n          expect(historyService2.history.action).toBe('PUSH');\n        });\n\n        it('notifies affected consumer history listeners', () => {\n          const listener1 = jest.fn();\n          const listener2 = jest.fn();\n\n          historyService1.history.push('/foo');\n\n          historyService1.history.listen(listener1);\n          historyService2.history.listen(listener2);\n\n          const rootLocation =\n            historyService1.createNewRootLocationForMultipleConsumers({\n              historyKey: 'test2',\n              location: {pathname: '/test2'},\n            });\n\n          historyService1.rootHistory.push(rootLocation);\n\n          expect(listener1.mock.calls).toEqual([\n            [\n              {\n                pathname: '/',\n                search: '',\n                hash: '',\n                state: undefined,\n                key: expect.any(String),\n              },\n              'PUSH',\n            ],\n          ]);\n\n          expect(listener2.mock.calls).toMatchObject([\n            [\n              {\n                pathname: '/test2',\n                search: '',\n                hash: '',\n                state: undefined,\n                key: expect.any(String),\n              },\n              'PUSH',\n            ],\n          ]);\n        });\n      });\n\n      describe('#replace()', () => {\n        it('replaces a new root location onto the root history', () => {\n          historyService1.rootHistory.replace({pathname: '/foo'});\n\n          expect(window.location.href).toBe('http://example.com/foo');\n          expect(replaceStateSpy).toHaveBeenCalledTimes(1);\n        });\n\n        it('puts state into the root location', () => {\n          historyService1.rootHistory.replace({\n            pathname: '/foo',\n            state: {foo: 1},\n          });\n\n          expect(historyService1.rootHistory.location).toMatchObject({\n            pathname: '/foo',\n            state: {foo: 1},\n          });\n        });\n\n        it('normalizes the pathname', () => {\n          historyService1.rootHistory.replace({pathname: 'foo'});\n\n          expect(window.location.href).toBe('http://example.com/foo');\n        });\n\n        it('handles relative pathnames', () => {\n          historyService1.rootHistory.replace({\n            pathname: '/foo/bar',\n          });\n\n          historyService1.rootHistory.replace({pathname: 'baz'});\n\n          expect(window.location.href).toBe('http://example.com/foo/baz');\n        });\n\n        it('changes the location and action of affected consumer histories', () => {\n          const rootLocation =\n            historyService1.createNewRootLocationForMultipleConsumers({\n              historyKey: 'test2',\n              location: {pathname: '/test2'},\n            });\n\n          historyService1.rootHistory.replace(rootLocation);\n\n          expect(historyService1.history.location).toMatchObject({\n            pathname: '/',\n          });\n\n          expect(historyService1.history.action).toBe('POP');\n\n          expect(historyService2.history.location).toMatchObject({\n            pathname: '/test2',\n          });\n\n          expect(historyService2.history.action).toBe('REPLACE');\n        });\n\n        it('notifies affected consumer history listeners', () => {\n          const listener1 = jest.fn();\n          const listener2 = jest.fn();\n\n          historyService1.history.listen(listener1);\n          historyService2.history.listen(listener2);\n\n          const rootLocation =\n            historyService1.createNewRootLocationForMultipleConsumers({\n              historyKey: 'test2',\n              location: {pathname: '/test2'},\n            });\n\n          historyService1.rootHistory.replace(rootLocation);\n\n          expect(listener1).not.toHaveBeenCalled();\n          expect(listener2).toHaveBeenCalledTimes(1);\n        });\n      });\n\n      describe('#listen()', () => {\n        it('calls listeners for consumer history changes', () => {\n          const listenerSpy = jest.fn();\n\n          historyService1.rootHistory.listen(listenerSpy);\n          historyService1.history.push('/bar');\n\n          expect(listenerSpy.mock.calls).toMatchObject([\n            [\n              {\n                pathname: '/',\n                search: createSearch({test1: '/bar'}),\n                state: {test1: {state: undefined, key: expect.any(String)}},\n              },\n              'PUSH',\n            ],\n          ]);\n        });\n\n        it('calls listeners for root history changes', () => {\n          const listenerSpy = jest.fn();\n\n          historyService1.rootHistory.listen(listenerSpy);\n          historyService1.rootHistory.push({pathname: '/foo'});\n\n          expect(listenerSpy.mock.calls).toEqual([\n            [expect.objectContaining({pathname: '/foo'}), 'PUSH'],\n          ]);\n        });\n\n        it('returns an unregister function', () => {\n          const listenerSpy = jest.fn();\n          const unregister = historyService1.rootHistory.listen(listenerSpy);\n\n          historyService1.rootHistory.push({pathname: '/foo'});\n          unregister();\n          historyService1.rootHistory.push({pathname: '/bar'});\n\n          expect(listenerSpy).toHaveBeenCalledTimes(1);\n        });\n\n        describe('for a POP action', () => {\n          it('calls listeners with a POP event', () => {\n            const listenerSpy = jest.fn();\n            const state = window.history.state;\n            const href = window.location.href;\n\n            historyService1.history.push('/foo');\n            historyService1.rootHistory.listen(listenerSpy);\n\n            simulateOnPopState(state, href);\n\n            expect(listenerSpy).toHaveBeenCalledWith(\n              expect.objectContaining({pathname: '/'}),\n              'POP',\n            );\n          });\n        });\n      });\n\n      describe('#createHref()', () => {\n        it('returns the href for the given root location', () => {\n          historyService1.rootHistory.push({pathname: '/foo'});\n\n          const location = {pathname: '/bar', search: '?a=b'};\n          const href = historyService1.rootHistory.createHref(location);\n\n          expect(href).toBe('/bar?a=b');\n        });\n      });\n    });\n\n    describe('#createNewRootLocationForMultipleConsumers', () => {\n      it('creates a new root location for a single consumer', () => {\n        const historyServiceBinder = createHistoryServiceBinder();\n        const historyService = historyServiceBinder('test1').featureService;\n\n        const location =\n          historyService.createNewRootLocationForMultipleConsumers({\n            historyKey: 'test1',\n            location: {pathname: '/test1', state: 42},\n          });\n\n        expect(location).toMatchObject({\n          pathname: '/',\n          search: createSearch({test1: '/test1'}),\n          state: {test1: {state: 42, key: expect.any(String)}},\n        });\n      });\n\n      it('creates a new root location for two consumers', () => {\n        const historyServiceBinder = createHistoryServiceBinder();\n        const historyService = historyServiceBinder('test1').featureService;\n\n        const location =\n          historyService.createNewRootLocationForMultipleConsumers(\n            {\n              historyKey: 'test1',\n              location: {pathname: '/test', state: 42},\n            },\n            {\n              historyKey: 'test2',\n              location: {pathname: '/xxx', state: 'foo'},\n            },\n          );\n\n        expect(location).toMatchObject({\n          pathname: '/',\n          search: createSearch({test1: '/test', test2: '/xxx'}),\n          state: {\n            test1: {state: 42, key: expect.any(String)},\n            test2: {state: 'foo', key: expect.any(String)},\n          },\n        });\n      });\n\n      describe('with a createNewRootLocationForMultipleConsumers method defined in the root location transformer', () => {\n        let createNewRootLocationForMultipleConsumersMock: jest.Mock;\n        let historyServiceTest1: HistoryServiceV2;\n\n        beforeEach(() => {\n          createNewRootLocationForMultipleConsumersMock = jest.fn(() => ({\n            pathname: 'root-test',\n          }));\n\n          createHistoryServiceBinder = () => {\n            const sharedHistoryService = defineHistoryService({\n              createRootLocation: jest.fn(),\n              getConsumerPathFromRootLocation: jest.fn(),\n              createNewRootLocationForMultipleConsumers:\n                createNewRootLocationForMultipleConsumersMock,\n            }).create(mockEnv);\n\n            return sharedHistoryService!['2.0.0'];\n          };\n\n          const historyServiceBinder = createHistoryServiceBinder();\n          historyServiceTest1 = historyServiceBinder('test1').featureService;\n        });\n\n        it('uses the custom createNewRootLocationForMultipleConsumers method', () => {\n          const consumerLocation = {\n            historyKey: 'test1',\n            location: {pathname: '/test1'},\n          };\n\n          historyServiceTest1.createNewRootLocationForMultipleConsumers(\n            consumerLocation,\n          );\n\n          expect(\n            createNewRootLocationForMultipleConsumersMock.mock.calls,\n          ).toEqual([[consumerLocation]]);\n        });\n\n        it('sets the consumer states on the new root location', () => {\n          const consumerLocation = {\n            historyKey: 'test1',\n            location: {pathname: '/test1', state: 42},\n          };\n\n          const location =\n            historyServiceTest1.createNewRootLocationForMultipleConsumers(\n              consumerLocation,\n            );\n\n          expect(location).toMatchObject({\n            pathname: 'root-test',\n            search: '',\n            hash: '',\n            state: {\n              test1: {state: 42, key: expect.any(String)},\n            },\n          } satisfies RootLocation);\n        });\n      });\n    });\n\n    describe('when no Logger Feature Service is provided', () => {\n      let consoleWarnSpy: jest.SpyInstance;\n\n      beforeEach(() => {\n        consoleWarnSpy = jest.spyOn(console, 'warn');\n        mockEnv.featureServices['s2:logger'] = undefined;\n      });\n\n      afterEach(() => {\n        consoleWarnSpy.mockRestore();\n      });\n\n      it('logs messages using the console', () => {\n        const historyServiceBinder = createHistoryServiceBinder();\n        const historyService = historyServiceBinder('test1').featureService;\n        const browserHistory = historyService.history;\n\n        browserHistory.go(-1);\n\n        expect(consoleWarnSpy).toHaveBeenCalledWith(\n          'history.go() is not supported.',\n        );\n      });\n    });\n  });\n\n  describe('HistoryServiceV3', () => {\n    let mockEnv: FeatureServiceEnvironment<\n      Writable<HistoryServiceDependencies>\n    >;\n\n    let createHistoryServiceBinder: (\n      getHistoryKey?: (options: GetHistoryKeyOptions) => string,\n    ) => FeatureServiceBinder<HistoryServiceV3>;\n\n    beforeEach(() => {\n      mockEnv = {\n        featureServices: {'s2:logger': stubbedLogger},\n      };\n\n      createHistoryServiceBinder = (getHistoryKey) => {\n        const sharedHistoryService = defineHistoryService(\n          createRootLocationTransformer({consumerPathsQueryParamName}),\n          {getHistoryKey},\n        ).create(mockEnv);\n\n        return sharedHistoryService!['3.0.0'];\n      };\n    });\n\n    describe('#historyKey', () => {\n      it('uses the consumer ID as history key', () => {\n        const consumerId = 'test-consumer-id';\n        const historyServiceBinder = createHistoryServiceBinder();\n        const historyBinding = historyServiceBinder(consumerId);\n        const {historyKey} = historyBinding.featureService;\n\n        expect(historyKey).toBe(consumerId);\n      });\n\n      describe('with a custom `getHistoryKey` function', () => {\n        it('uses the result of `getHistoryKey`', () => {\n          const consumerId = 'test-consumer-id';\n          const consumerName = 'test-consumer-name';\n          const getHistoryKeyMock = jest.fn(() => 'test-history-key');\n\n          const historyServiceBinder =\n            createHistoryServiceBinder(getHistoryKeyMock);\n\n          const historyBinding = historyServiceBinder(consumerId, consumerName);\n          const {historyKey} = historyBinding.featureService;\n\n          expect(historyKey).toBe('test-history-key');\n\n          expect(getHistoryKeyMock).toHaveBeenCalledWith({\n            consumerId,\n            consumerName,\n          });\n        });\n      });\n    });\n\n    describe('#history', () => {\n      let historyBinding1: FeatureServiceBinding<HistoryServiceV3>;\n      let historyBinding2: FeatureServiceBinding<HistoryServiceV3>;\n      let history1: History;\n      let history2: History;\n\n      const createHistories = () => {\n        const historyServiceBinder = createHistoryServiceBinder();\n\n        historyBinding1 = historyServiceBinder('test1');\n        const historyService1 = historyBinding1.featureService;\n        history1 = historyService1.history;\n\n        historyBinding2 = historyServiceBinder('test2');\n        const historyService2 = historyBinding2.featureService;\n        history2 = historyService2.history;\n\n        pushStateSpy.mockClear();\n        replaceStateSpy.mockClear();\n      };\n\n      const destroyHistories = () => {\n        historyBinding1.unbind!();\n        historyBinding2.unbind!();\n      };\n\n      beforeEach(createHistories);\n      afterEach(destroyHistories);\n\n      describe('#action', () => {\n        it('returns a consumer-specific action', () => {\n          expect(history1.action).toBe('POP');\n          expect(history2.action).toBe('POP');\n\n          history1.push('/foo');\n          history2.replace('/bar');\n\n          expect(history1.action).toBe('PUSH');\n          expect(history2.action).toBe('REPLACE');\n        });\n      });\n\n      describe('#location', () => {\n        it('returns a consumer-specific location', () => {\n          history1.push('/foo', {test: 'foo'});\n          history2.replace('/bar', {test: 'bar'});\n\n          expect(history1.location).toMatchObject({\n            pathname: '/foo',\n            state: {test: 'foo'},\n          });\n\n          expect(history2.location).toMatchObject({\n            pathname: '/bar',\n            state: {test: 'bar'},\n          });\n        });\n\n        it('retrieves consumer specific locations from the initial location', () => {\n          destroyHistories();\n\n          const consumerStates: Record<string, ConsumerState> = {\n            test1: {state: 'foo state', key: 'default'},\n            test2: {state: 'bar state', key: 'default'},\n          };\n\n          const url = createUrl({test1: '/foo', test2: 'bar'});\n\n          window.history.pushState({usr: consumerStates}, '', url);\n\n          createHistories();\n\n          expect(history1.location).toMatchObject({\n            pathname: '/foo',\n            state: 'foo state',\n            key: 'default',\n          });\n\n          expect(history2.location).toMatchObject({\n            pathname: '/bar',\n            state: 'bar state',\n            key: 'default',\n          });\n        });\n\n        describe('when getConsumerPathFromRootLocation returns undefined', () => {\n          it('returns the default location', () => {\n            expect(history1.location).toMatchObject({\n              pathname: '/',\n              search: '',\n            });\n          });\n        });\n\n        describe('for a POP action', () => {\n          it('updates the location of matching consumers', () => {\n            const state = window.history.state;\n            const href = window.location.href;\n\n            history1.push('/foo');\n\n            simulateOnPopState(state, href);\n\n            expect(history1.location).toMatchObject({pathname: '/'});\n          });\n        });\n      });\n\n      describe('#push()', () => {\n        it('pushes a new root location onto the root history for every consumer push', () => {\n          history1.push('/foo');\n          history2.push('/bar?baz=1');\n\n          expect(window.location.href).toBe(\n            createUrl({test1: '/foo', test2: '/bar?baz=1'}),\n          );\n\n          expect(pushStateSpy).toHaveBeenCalledTimes(2);\n        });\n\n        it('normalizes the pathname', () => {\n          history1.push('foo');\n\n          expect(window.location.href).toBe(createUrl({test1: '/foo'}));\n        });\n\n        it('handles relative pathnames', () => {\n          history1.push('/foo/bar');\n          history1.push('baz');\n\n          expect(window.location.href).toBe(createUrl({test1: '/foo/baz'}));\n        });\n      });\n\n      describe('#replace()', () => {\n        it('replaces the root location in the root history for every consumer replace', () => {\n          history1.replace('/foo');\n          history2.replace('/bar?baz=1');\n\n          expect(window.location.href).toBe(\n            createUrl({test1: '/foo', test2: '/bar?baz=1'}),\n          );\n\n          expect(replaceStateSpy).toHaveBeenCalledTimes(2);\n        });\n\n        it('normalizes the pathname', () => {\n          history1.replace('foo');\n\n          expect(window.location.href).toBe(createUrl({test1: '/foo'}));\n        });\n\n        it('handles relative pathnames', () => {\n          history1.replace('/foo/bar');\n          history1.replace('baz');\n\n          expect(window.location.href).toBe(createUrl({test1: '/foo/baz'}));\n        });\n      });\n\n      describe('#go()', () => {\n        it('does nothing and logs a warning that go() is not supported', () => {\n          history1.push('/foo');\n\n          const href = window.location.href;\n\n          history1.go(-1);\n\n          expect(window.location.href).toBe(href);\n\n          expect(stubbedLogger.warn).toHaveBeenCalledWith(\n            'history.go() is not supported.',\n          );\n        });\n      });\n\n      describe('#back()', () => {\n        it('does nothing and logs a warning that back() is not supported', () => {\n          history1.push('/foo');\n\n          const href = window.location.href;\n\n          history1.back();\n\n          expect(window.location.href).toBe(href);\n\n          expect(stubbedLogger.warn).toHaveBeenCalledWith(\n            'history.back() is not supported.',\n          );\n        });\n      });\n\n      describe('#forward()', () => {\n        it('does nothing and logs a warning that forward() is not supported', () => {\n          history1.push('/foo');\n\n          const href = window.location.href;\n\n          history1.forward();\n\n          expect(window.location.href).toBe(href);\n\n          expect(stubbedLogger.warn).toHaveBeenCalledWith(\n            'history.forward() is not supported.',\n          );\n        });\n      });\n\n      describe('#block()', () => {\n        it('does nothing and logs a warning', () => {\n          const promptHookSpy = jest.fn();\n\n          history1.block(promptHookSpy);\n          history1.push('/foo?bar=1');\n\n          expect(window.location.href).toBe(createUrl({test1: '/foo?bar=1'}));\n\n          expect(promptHookSpy).not.toHaveBeenCalled();\n\n          expect(stubbedLogger.warn).toHaveBeenCalledWith(\n            'history.block() is not supported.',\n          );\n        });\n\n        it('still returns a no-op unblock function', () => {\n          const promptHookSpy = jest.fn();\n          const unblock = history1.block(promptHookSpy);\n\n          unblock();\n        });\n      });\n\n      describe('#listen()', () => {\n        it('calls listeners only for consumer-specific history changes', () => {\n          const listenerSpy1 = jest.fn();\n          const listenerSpy2 = jest.fn();\n\n          history1.listen(listenerSpy1);\n          history2.listen(listenerSpy2);\n\n          history1.push('/foo?bar=1');\n          history2.replace('/baz?qux=2');\n\n          expect(listenerSpy1).toHaveBeenCalledTimes(1);\n\n          expect(listenerSpy1).toHaveBeenCalledWith({\n            location: expect.objectContaining({\n              pathname: '/foo',\n              search: '?bar=1',\n            }),\n            action: 'PUSH',\n          });\n\n          expect(listenerSpy2).toHaveBeenCalledTimes(1);\n\n          expect(listenerSpy2).toHaveBeenCalledWith({\n            location: expect.objectContaining({\n              pathname: '/baz',\n              search: '?qux=2',\n            }),\n            action: 'REPLACE',\n          });\n        });\n\n        it('returns an unregister function', () => {\n          const listenerSpy = jest.fn();\n          const unregister = history1.listen(listenerSpy);\n\n          history1.push('/foo');\n          unregister();\n          history1.push('/bar');\n\n          expect(listenerSpy).toHaveBeenCalledTimes(1);\n        });\n\n        describe('for a POP action', () => {\n          let history1ListenerSpy: jest.Mock;\n          let history2ListenerSpy: jest.Mock;\n\n          let unregisterListeners: () => void;\n\n          const registerListeners = () => {\n            history1ListenerSpy = jest.fn();\n            const unregister1 = history1.listen(history1ListenerSpy);\n\n            history2ListenerSpy = jest.fn();\n            const unregister2 = history2.listen(history2ListenerSpy);\n\n            unregisterListeners = () => {\n              unregister1();\n              unregister2();\n            };\n          };\n\n          beforeEach(registerListeners);\n\n          it('calls listeners only for matching consumer locations', () => {\n            const state = window.history.state;\n            const href = window.location.href;\n\n            history1.push('/foo');\n            history1ListenerSpy.mockClear();\n\n            simulateOnPopState(state, href);\n\n            expect(history1ListenerSpy).toHaveBeenCalledWith({\n              location: expect.objectContaining({pathname: '/'}),\n              action: 'POP',\n            });\n\n            expect(history2ListenerSpy).not.toHaveBeenCalled();\n          });\n\n          it('updates the location of matching consumers even when not listening', () => {\n            const state = window.history.state;\n            const href = window.location.href;\n\n            history1.push('/foo');\n            unregisterListeners();\n\n            simulateOnPopState(state, href);\n\n            expect(history1.location).toMatchObject({pathname: '/'});\n          });\n\n          describe('with back and forward navigation', () => {\n            it('calls the listener with the correct locations', () => {\n              history1.push('/baz?qux=3');\n\n              const state1 = window.history.state;\n              const href1 = window.location.href;\n\n              history1.push('/bar?qux=4');\n\n              const state2 = window.history.state;\n              const href2 = window.location.href;\n\n              history1ListenerSpy.mockClear();\n\n              simulateOnPopState(state1, href1); // POP backward\n\n              expect(history1ListenerSpy).toHaveBeenCalledWith({\n                location: expect.objectContaining({\n                  pathname: '/baz',\n                  search: '?qux=3',\n                }),\n                action: 'POP',\n              });\n\n              history1ListenerSpy.mockClear();\n\n              simulateOnPopState(state2, href2); // POP foward\n\n              expect(history1ListenerSpy).toHaveBeenCalledWith({\n                location: expect.objectContaining({\n                  pathname: '/bar',\n                  search: '?qux=4',\n                }),\n                action: 'POP',\n              });\n            });\n          });\n\n          describe('when a location is replaced', () => {\n            it('calls the listener with the correct locations', () => {\n              history1.push('/a1');\n              history2.push('/b1');\n              history1.push('/a2');\n              history2.push('/b2');\n              history1.replace('/a3');\n\n              const replacedState = window.history.state;\n              const replacedHref = window.location.href;\n\n              history2.push('/b3');\n\n              history2ListenerSpy.mockClear();\n\n              simulateOnPopState(replacedState, replacedHref); // POP to replaced location\n\n              expect(history2ListenerSpy).toHaveBeenCalledWith({\n                location: expect.objectContaining({pathname: '/b2'}),\n                action: 'POP',\n              });\n            });\n          });\n\n          describe('after re-initializing the history service, e.g. because of a page reload', () => {\n            it('calls listeners for matching consumer locations (also restores consumer state)', () => {\n              const consumerState = {foo: 1};\n              history1.push('/foo?a=1', consumerState);\n\n              const state = window.history.state;\n              const href = window.location.href;\n\n              history1.push('/bar');\n\n              unregisterListeners();\n              createHistories();\n              registerListeners();\n\n              simulateOnPopState(state, href);\n\n              expect(history1ListenerSpy).toHaveBeenCalledWith({\n                location: expect.objectContaining({\n                  pathname: '/foo',\n                  search: '?a=1',\n                  state: consumerState,\n                }),\n                action: 'POP',\n              });\n\n              expect(history2ListenerSpy).not.toHaveBeenCalled();\n            });\n          });\n        });\n      });\n\n      describe('#createHref()', () => {\n        it('returns the href for the given location based on the root browser history', () => {\n          history1.push('/foo');\n\n          const location = {pathname: '/bar', search: '?a=b'};\n          const href = history2.createHref(location);\n\n          expect(href).toBe(\n            createUrl({test1: '/foo', test2: '/bar?a=b'}, {relative: true}),\n          );\n        });\n\n        it('normalizes the pathname', () => {\n          history1.push('/foo');\n\n          const location = {pathname: 'bar'};\n          const href = history2.createHref(location);\n\n          expect(href).toBe(\n            createUrl({test1: '/foo', test2: '/bar'}, {relative: true}),\n          );\n        });\n      });\n\n      describe('when the history consumer is destroyed', () => {\n        it('does not call the listener of a destroyed consumer', () => {\n          const history1ListenerSpy = jest.fn();\n          const history2ListenerSpy = jest.fn();\n\n          const history1Unregister = history1.listen(history1ListenerSpy);\n          history2.listen(history2ListenerSpy);\n\n          const state1 = window.history.state;\n          const href1 = window.location.href;\n\n          history1.push('/foo');\n\n          const state2 = window.history.state;\n          const href2 = window.location.href;\n\n          history2.push('/bar');\n\n          historyBinding2.unbind!();\n\n          history1ListenerSpy.mockClear();\n          history2ListenerSpy.mockClear();\n\n          simulateOnPopState(state2, href2);\n\n          expect(history2ListenerSpy).not.toHaveBeenCalled();\n\n          simulateOnPopState(state1, href1);\n\n          expect(history1ListenerSpy).toHaveBeenCalled();\n\n          history1Unregister();\n        });\n\n        describe('for a POP action', () => {\n          it('does not update the location of a destroyed consumer', () => {\n            const state = window.history.state;\n            const href = window.location.href;\n\n            history1.push('/foo');\n            historyBinding1.unbind!();\n\n            simulateOnPopState(state, href);\n\n            expect(history1.location).toMatchObject({pathname: '/foo'});\n          });\n        });\n      });\n    });\n\n    describe('#rootHistory', () => {\n      let historyBinding1: FeatureServiceBinding<HistoryServiceV3>;\n      let historyBinding2: FeatureServiceBinding<HistoryServiceV3>;\n      let historyService1: HistoryServiceV3;\n      let historyService2: HistoryServiceV3;\n\n      const createHistories = () => {\n        const historyServiceBinder = createHistoryServiceBinder();\n\n        historyBinding1 = historyServiceBinder('test1');\n        historyService1 = historyBinding1.featureService;\n\n        historyBinding2 = historyServiceBinder('test2');\n        historyService2 = historyBinding2.featureService;\n\n        pushStateSpy.mockClear();\n        replaceStateSpy.mockClear();\n      };\n\n      beforeEach(createHistories);\n\n      it('is the same instance for every consumer', () => {\n        expect(historyService1.rootHistory).toBe(historyService2.rootHistory);\n      });\n\n      describe('#location', () => {\n        it('returns the root location containing all consumer locations', () => {\n          historyService1.history.push('/foo', {test: 'foo'});\n          historyService2.history.replace('/bar', {test: 'bar'});\n\n          expect(historyService1.rootHistory.location).toMatchObject({\n            pathname: '/',\n            search: createSearch({test1: '/foo', test2: '/bar'}),\n            state: {\n              test1: {state: {test: 'foo'}, key: expect.any(String)},\n              test2: {state: {test: 'bar'}, key: expect.any(String)},\n            },\n          });\n        });\n\n        it('returns a root location containing all consumer locations from the initial window location', () => {\n          const consumerStates = {test1: 'foo state', test2: 'bar state'};\n          const url = createUrl({test1: '/foo', test2: 'bar'});\n\n          window.history.pushState({usr: consumerStates}, '', url);\n\n          createHistories();\n\n          expect(historyService1.rootHistory.location).toMatchObject({\n            pathname: '/',\n            search: createSearch({test1: '/foo', test2: 'bar'}),\n            state: consumerStates,\n          });\n        });\n\n        describe('for a POP action', () => {\n          it('returns the previous root location', () => {\n            historyService1.history.push('/foo');\n\n            const state = window.history.state;\n            const href = window.location.href;\n\n            historyService2.history.push('/bar');\n\n            simulateOnPopState(state, href);\n\n            expect(historyService1.rootHistory.location).toMatchObject({\n              pathname: '/',\n              search: createSearch({test1: '/foo'}),\n              state: state.usr,\n            });\n          });\n        });\n      });\n\n      describe('#push()', () => {\n        it('pushes a new root location onto the root history', () => {\n          historyService1.rootHistory.push({pathname: '/foo'});\n\n          expect(window.location.href).toBe('http://example.com/foo');\n          expect(pushStateSpy).toHaveBeenCalledTimes(1);\n        });\n\n        it('puts state into the root location', () => {\n          historyService1.rootHistory.push({pathname: '/foo'}, {foo: 1});\n\n          expect(historyService1.rootHistory.location).toMatchObject({\n            pathname: '/foo',\n            state: {foo: 1},\n          });\n        });\n\n        it('normalizes the pathname', () => {\n          historyService1.rootHistory.push({pathname: 'foo'});\n\n          expect(window.location.href).toBe('http://example.com/foo');\n        });\n\n        it('handles relative pathnames', () => {\n          historyService1.rootHistory.push({pathname: '/foo/bar'});\n          historyService1.rootHistory.push({pathname: 'baz'});\n\n          expect(window.location.href).toBe('http://example.com/foo/baz');\n        });\n\n        it('changes the location and action of affected consumer histories', () => {\n          const {state, ...to} =\n            historyService1.createNewRootLocationForMultipleConsumers({\n              historyKey: 'test2',\n              location: {pathname: '/test2'},\n            });\n\n          historyService1.rootHistory.push(to, state);\n\n          expect(historyService1.history.location).toMatchObject({\n            pathname: '/',\n          });\n\n          expect(historyService1.history.action).toBe('POP');\n\n          expect(historyService2.history.location).toMatchObject({\n            pathname: '/test2',\n          });\n\n          expect(historyService2.history.action).toBe('PUSH');\n        });\n\n        it('notifies affected consumer history listeners', () => {\n          const listener1 = jest.fn();\n          const listener2 = jest.fn();\n\n          historyService1.history.push('/foo');\n\n          historyService1.history.listen(listener1);\n          historyService2.history.listen(listener2);\n\n          const {state, ...to} =\n            historyService1.createNewRootLocationForMultipleConsumers({\n              historyKey: 'test2',\n              location: {pathname: '/test2'},\n            });\n\n          historyService1.rootHistory.push(to, state);\n\n          expect(listener1.mock.calls).toEqual([\n            [\n              {\n                location: {\n                  pathname: '/',\n                  search: '',\n                  hash: '',\n                  state: undefined,\n                  key: expect.any(String),\n                },\n                action: 'PUSH',\n              },\n            ],\n          ]);\n\n          expect(listener2.mock.calls).toMatchObject([\n            [\n              {\n                location: {\n                  pathname: '/test2',\n                  search: '',\n                  hash: '',\n                  state: undefined,\n                  key: expect.any(String),\n                },\n                action: 'PUSH',\n              },\n            ],\n          ]);\n        });\n      });\n\n      describe('#replace()', () => {\n        it('replaces a new root location onto the root history', () => {\n          historyService1.rootHistory.replace({pathname: '/foo'});\n\n          expect(window.location.href).toBe('http://example.com/foo');\n          expect(replaceStateSpy).toHaveBeenCalledTimes(1);\n        });\n\n        it('puts state into the root location', () => {\n          historyService1.rootHistory.replace({pathname: '/foo'}, {foo: 1});\n\n          expect(historyService1.rootHistory.location).toMatchObject({\n            pathname: '/foo',\n            state: {foo: 1},\n          });\n        });\n\n        it('normalizes the pathname', () => {\n          historyService1.rootHistory.replace({pathname: 'foo'});\n\n          expect(window.location.href).toBe('http://example.com/foo');\n        });\n\n        it('handles relative pathnames', () => {\n          historyService1.rootHistory.replace({\n            pathname: '/foo/bar',\n          });\n\n          historyService1.rootHistory.replace({pathname: 'baz'});\n\n          expect(window.location.href).toBe('http://example.com/foo/baz');\n        });\n\n        it('changes the location and action of affected consumer histories', () => {\n          const {state, ...to} =\n            historyService1.createNewRootLocationForMultipleConsumers({\n              historyKey: 'test2',\n              location: {pathname: '/test2'},\n            });\n\n          historyService1.rootHistory.replace(to, state);\n\n          expect(historyService1.history.location).toMatchObject({\n            pathname: '/',\n          });\n\n          expect(historyService1.history.action).toBe('POP');\n\n          expect(historyService2.history.location).toMatchObject({\n            pathname: '/test2',\n          });\n\n          expect(historyService2.history.action).toBe('REPLACE');\n        });\n\n        it('notifies affected consumer history listeners', () => {\n          const listener1 = jest.fn();\n          const listener2 = jest.fn();\n\n          historyService1.history.listen(listener1);\n          historyService2.history.listen(listener2);\n\n          const {state, ...to} =\n            historyService1.createNewRootLocationForMultipleConsumers({\n              historyKey: 'test2',\n              location: {pathname: '/test2'},\n            });\n\n          historyService1.rootHistory.replace(to, state);\n\n          expect(listener1).not.toHaveBeenCalled();\n          expect(listener2).toHaveBeenCalledTimes(1);\n        });\n      });\n\n      describe('#listen()', () => {\n        it('calls listeners for consumer history changes', () => {\n          const listenerSpy = jest.fn();\n\n          historyService1.rootHistory.listen(listenerSpy);\n          historyService1.history.push('/bar');\n\n          expect(listenerSpy.mock.calls).toMatchObject([\n            [\n              {\n                location: {\n                  pathname: '/',\n                  search: createSearch({test1: '/bar'}),\n                  state: {test1: {state: undefined, key: expect.any(String)}},\n                },\n                action: 'PUSH',\n              },\n            ],\n          ]);\n        });\n\n        it('calls listeners for root history changes', () => {\n          const listenerSpy = jest.fn();\n\n          historyService1.rootHistory.listen(listenerSpy);\n          historyService1.rootHistory.push({pathname: '/foo'});\n\n          expect(listenerSpy.mock.calls).toEqual([\n            [\n              {\n                location: expect.objectContaining({pathname: '/foo'}),\n                action: 'PUSH',\n              },\n            ],\n          ]);\n        });\n\n        it('returns an unregister function', () => {\n          const listenerSpy = jest.fn();\n          const unregister = historyService1.rootHistory.listen(listenerSpy);\n\n          historyService1.rootHistory.push({pathname: '/foo'});\n          unregister();\n          historyService1.rootHistory.push({pathname: '/bar'});\n\n          expect(listenerSpy).toHaveBeenCalledTimes(1);\n        });\n\n        describe('for a POP action', () => {\n          it('calls listeners with a POP event', () => {\n            const listenerSpy = jest.fn();\n            const state = window.history.state;\n            const href = window.location.href;\n\n            historyService1.history.push('/foo');\n            historyService1.rootHistory.listen(listenerSpy);\n\n            simulateOnPopState(state, href);\n\n            expect(listenerSpy).toHaveBeenCalledWith({\n              location: expect.objectContaining({pathname: '/'}),\n              action: 'POP',\n            });\n          });\n        });\n      });\n\n      describe('#createHref()', () => {\n        it('returns the href for the given root location', () => {\n          historyService1.rootHistory.push({pathname: '/foo'});\n\n          const location = {pathname: '/bar', search: '?a=b'};\n          const href = historyService1.rootHistory.createHref(location);\n\n          expect(href).toBe('/bar?a=b');\n        });\n      });\n    });\n\n    describe('#createNewRootLocationForMultipleConsumers', () => {\n      it('creates a new root location for a single consumer', () => {\n        const historyServiceBinder = createHistoryServiceBinder();\n        const historyService = historyServiceBinder('test1').featureService;\n\n        const location =\n          historyService.createNewRootLocationForMultipleConsumers({\n            historyKey: 'test1',\n            location: {pathname: '/test1'},\n            state: 42,\n          });\n\n        expect(location).toMatchObject({\n          pathname: '/',\n          search: createSearch({test1: '/test1'}),\n          state: {test1: {state: 42, key: expect.any(String)}},\n        });\n      });\n\n      it('creates a new root location for two consumers', () => {\n        const historyServiceBinder = createHistoryServiceBinder();\n        const historyService = historyServiceBinder('test1').featureService;\n\n        const location =\n          historyService.createNewRootLocationForMultipleConsumers(\n            {\n              historyKey: 'test1',\n              location: {pathname: '/test'},\n              state: 42,\n            },\n            {\n              historyKey: 'test2',\n              location: {pathname: '/xxx'},\n              state: 'foo',\n            },\n          );\n\n        expect(location).toMatchObject({\n          pathname: '/',\n          search: createSearch({test1: '/test', test2: '/xxx'}),\n          state: {\n            test1: {state: 42, key: expect.any(String)},\n            test2: {state: 'foo', key: expect.any(String)},\n          },\n        });\n      });\n\n      describe('with a createNewRootLocationForMultipleConsumers method defined in the root location transformer', () => {\n        let createNewRootLocationForMultipleConsumersMock: jest.Mock;\n        let historyServiceTest1: HistoryServiceV3;\n\n        beforeEach(() => {\n          createNewRootLocationForMultipleConsumersMock = jest.fn(() => ({\n            pathname: 'root-test',\n          }));\n\n          createHistoryServiceBinder = () => {\n            const sharedHistoryService = defineHistoryService({\n              createRootLocation: jest.fn(),\n              getConsumerPathFromRootLocation: jest.fn(),\n              createNewRootLocationForMultipleConsumers:\n                createNewRootLocationForMultipleConsumersMock,\n            }).create(mockEnv);\n\n            return sharedHistoryService!['3.0.0'];\n          };\n\n          const historyServiceBinder = createHistoryServiceBinder();\n          historyServiceTest1 = historyServiceBinder('test1').featureService;\n        });\n\n        it('uses the custom createNewRootLocationForMultipleConsumers method', () => {\n          const consumerLocation = {\n            historyKey: 'test1',\n            location: {pathname: '/test1'},\n          };\n\n          historyServiceTest1.createNewRootLocationForMultipleConsumers(\n            consumerLocation,\n          );\n\n          expect(\n            createNewRootLocationForMultipleConsumersMock.mock.calls,\n          ).toEqual([[consumerLocation]]);\n        });\n\n        it('sets the consumer states on the new root location', () => {\n          const consumerLocation: ConsumerLocationV3 = {\n            historyKey: 'test1',\n            location: {pathname: '/test1'},\n            state: 42,\n          };\n\n          const location =\n            historyServiceTest1.createNewRootLocationForMultipleConsumers(\n              consumerLocation,\n            );\n\n          expect(location).toMatchObject({\n            pathname: 'root-test',\n            search: '',\n            hash: '',\n            state: {\n              test1: {state: 42, key: expect.any(String)},\n            },\n          } satisfies RootLocation);\n        });\n      });\n    });\n\n    describe('when no Logger Feature Service is provided', () => {\n      let consoleWarnSpy: jest.SpyInstance;\n\n      beforeEach(() => {\n        consoleWarnSpy = jest.spyOn(console, 'warn');\n        mockEnv.featureServices['s2:logger'] = undefined;\n      });\n\n      afterEach(() => {\n        consoleWarnSpy.mockRestore();\n      });\n\n      it('logs messages using the console', () => {\n        const historyServiceBinder = createHistoryServiceBinder();\n        const historyService = historyServiceBinder('test1').featureService;\n        const browserHistory = historyService.history;\n\n        browserHistory.go(-1);\n\n        expect(consoleWarnSpy).toHaveBeenCalledWith(\n          'history.go() is not supported.',\n        );\n      });\n    });\n  });\n});\n"]}