import { createHistoryMultiplexers } from './internal/create-history-multiplexers';
import { createHistoryServiceV1Binder } from './internal/create-history-service-v1-binder';
import { createHistoryServiceV2Binder } from './internal/create-history-service-v2-binder';
import { createHistoryServiceV3Binder, } from './internal/create-history-service-v3-binder';
import { createHistoryServiceContext } from './internal/history-service-context';
export * from './create-root-location-transformer';
export function defineHistoryService(rootLocationTransformer, options = {}) {
    const { mode = 'browser', getHistoryKey = ({ consumerId }) => consumerId } = options;
    return {
        id: 's2:history',
        optionalDependencies: {
            featureServices: {
                's2:logger': '^1.0.0',
                's2:server-request': '^1.0.0',
            },
        },
        create: (env) => {
            const context = createHistoryServiceContext(env.featureServices);
            const historyMultiplexers = createHistoryMultiplexers(context, rootLocationTransformer);
            return {
                '1.0.0': createHistoryServiceV1Binder(context, historyMultiplexers, {
                    getHistoryKey,
                }),
                '2.0.0': createHistoryServiceV2Binder(context, historyMultiplexers, {
                    mode,
                    getHistoryKey,
                }),
                '3.0.0': createHistoryServiceV3Binder(context, historyMultiplexers, {
                    mode,
                    getHistoryKey,
                }),
            };
        },
    };
}
//# sourceMappingURL=index.js.map