{"version":3,"file":"create-history-service-v1-binder.js","sourceRoot":"","sources":["../../../src/internal/create-history-service-v1-binder.ts"],"names":[],"mappings":"AAGA,OAAO,EAAC,sBAAsB,EAAC,MAAM,4BAA4B,CAAC;AAGlE,OAAO,EAAC,sBAAsB,EAAC,MAAM,6BAA6B,CAAC;AAEnE,OAAO,EAAC,qBAAqB,EAAC,MAAM,2BAA2B,CAAC;AAMhE,MAAM,UAAU,4BAA4B,CAC1C,OAA8B,EAC9B,mBAAwC,EACxC,OAA4C;IAE5C,MAAM,EAAC,aAAa,EAAC,GAAG,OAAO,CAAC;IAEhC,OAAO,CACL,UAAU,EACV,YAAY,EAC6B,EAAE;QAC3C,MAAM,UAAU,GAAG,aAAa,CAAC,EAAC,UAAU,EAAE,YAAY,EAAC,CAAC,CAAC;QAE7D,IAAI,6BAA6B,GAAe,GAAG,EAAE,CAAC,SAAS,CAAC;QAChE,IAAI,sBAAqD,CAAC;QAC1D,IAAI,qBAAoD,CAAC;QAEzD,MAAM,cAAc,GAAqB;YACvC,oBAAoB,EAAE,GAAG,EAAE;gBACzB,IAAI,sBAAsB,EAAE;oBAC1B,OAAO,CAAC,MAAM,CAAC,IAAI,CACjB,8DAA8D,IAAI,CAAC,SAAS,CAC1E,UAAU,CACX,kDAAkD,CACpD,CAAC;iBACH;qBAAM;oBACL,MAAM,wBAAwB,GAAG,IAAI,sBAAsB,CACzD,OAAO,EACP,UAAU,EACV,mBAAmB,CAAC,yBAAyB,CAC9C,CAAC;oBAEF,6BAA6B,GAAG,GAAG,EAAE,CACnC,wBAAwB,CAAC,OAAO,EAAE,CAAC;oBAErC,sBAAsB,GAAG,sBAAsB,CAC7C,OAAO,EACP,wBAAwB,CACzB,CAAC;iBACH;gBAED,OAAO,sBAAsB,CAAC;YAChC,CAAC;YAED,mBAAmB,EAAE,GAAG,EAAE;gBACxB,IAAI,qBAAqB,EAAE;oBACzB,OAAO,CAAC,MAAM,CAAC,IAAI,CACjB,6DAA6D,IAAI,CAAC,SAAS,CACzE,UAAU,CACX,kDAAkD,CACpD,CAAC;iBACH;qBAAM;oBACL,qBAAqB,GAAG,sBAAsB,CAC5C,OAAO,EACP,IAAI,qBAAqB,CACvB,OAAO,EACP,UAAU,EACV,mBAAmB,CAAC,wBAAwB,CAC7C,CACF,CAAC;iBACH;gBAED,OAAO,qBAAqB,CAAC;YAC/B,CAAC;YAED,IAAI,kBAAkB;gBACpB,OAAO,mBAAmB,CAAC,wBAAwB,CAAC,YAAY,CAAC;YACnE,CAAC;SACF,CAAC;QAEF,MAAM,MAAM,GAAG,GAAG,EAAE;YAClB,6BAA6B,EAAE,CAAC;QAClC,CAAC,CAAC;QAEF,OAAO,EAAC,cAAc,EAAE,MAAM,EAAC,CAAC;IAClC,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import {FeatureServiceBinder, FeatureServiceBinding} from '@feature-hub/core';\nimport {HistoryServiceV1} from '..';\nimport * as historyV4 from '../history-v4';\nimport {BrowserConsumerHistory} from './browser-consumer-history';\nimport {HistoryMultiplexers} from './create-history-multiplexers';\nimport {GetHistoryKeyOptions} from './create-history-service-v3-binder';\nimport {createHistoryV4Adapter} from './create-history-v4-adapter';\nimport {HistoryServiceContext} from './history-service-context';\nimport {StaticConsumerHistory} from './static-consumer-history';\n\nexport interface CreateHistoryServiceV1BinderOptions {\n  readonly getHistoryKey: (options: GetHistoryKeyOptions) => string;\n}\n\nexport function createHistoryServiceV1Binder(\n  context: HistoryServiceContext,\n  historyMultiplexers: HistoryMultiplexers,\n  options: CreateHistoryServiceV1BinderOptions,\n): FeatureServiceBinder<HistoryServiceV1> {\n  const {getHistoryKey} = options;\n\n  return (\n    consumerId,\n    consumerName,\n  ): FeatureServiceBinding<HistoryServiceV1> => {\n    const historyKey = getHistoryKey({consumerId, consumerName});\n\n    let browserConsumerHistoryDestroy: () => void = () => undefined;\n    let browserConsumerHistory: historyV4.History | undefined;\n    let staticConsumerHistory: historyV4.History | undefined;\n\n    const featureService: HistoryServiceV1 = {\n      createBrowserHistory: () => {\n        if (browserConsumerHistory) {\n          context.logger.warn(\n            `createBrowserHistory was called multiple times by consumer ${JSON.stringify(\n              consumerId,\n            )}. Returning the same history instance as before.`,\n          );\n        } else {\n          const browserConsumerHistoryV5 = new BrowserConsumerHistory(\n            context,\n            historyKey,\n            historyMultiplexers.browserHistoryMultiplexer,\n          );\n\n          browserConsumerHistoryDestroy = () =>\n            browserConsumerHistoryV5.destroy();\n\n          browserConsumerHistory = createHistoryV4Adapter(\n            context,\n            browserConsumerHistoryV5,\n          );\n        }\n\n        return browserConsumerHistory;\n      },\n\n      createStaticHistory: () => {\n        if (staticConsumerHistory) {\n          context.logger.warn(\n            `createStaticHistory was called multiple times by consumer ${JSON.stringify(\n              consumerId,\n            )}. Returning the same history instance as before.`,\n          );\n        } else {\n          staticConsumerHistory = createHistoryV4Adapter(\n            context,\n            new StaticConsumerHistory(\n              context,\n              historyKey,\n              historyMultiplexers.staticHistoryMultiplexer,\n            ),\n          );\n        }\n\n        return staticConsumerHistory;\n      },\n\n      get staticRootLocation(): historyV4.Location {\n        return historyMultiplexers.staticHistoryMultiplexer.rootLocation;\n      },\n    };\n\n    const unbind = () => {\n      browserConsumerHistoryDestroy();\n    };\n\n    return {featureService, unbind};\n  };\n}\n"]}