{"version":3,"file":"create-history-multiplexers.js","sourceRoot":"","sources":["../../../src/internal/create-history-multiplexers.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,OAAO,MAAM,SAAS,CAAC;AAEnC,OAAO,EAAC,kBAAkB,EAAC,MAAM,uBAAuB,CAAC;AAQzD,MAAM,UAAU,yBAAyB,CACvC,OAA8B,EAC9B,uBAAgD;IAEhD,IAAI,yBAAyD,CAAC;IAC9D,IAAI,wBAAwD,CAAC;IAE7D,OAAO;QACL,IAAI,yBAAyB;YAC3B,IAAI,CAAC,yBAAyB,EAAE;gBAC9B,yBAAyB,GAAG,IAAI,kBAAkB,CAChD,OAAO,CAAC,oBAAoB,EAAE,EAC9B,uBAAuB,CACxB,CAAC;aACH;YAED,OAAO,yBAAyB,CAAC;QACnC,CAAC;QAED,IAAI,wBAAwB;YAC1B,IAAI,CAAC,wBAAwB,EAAE;gBAC7B,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE;oBAC1B,MAAM,IAAI,KAAK,CACb,6DAA6D,CAC9D,CAAC;iBACH;gBAED,wBAAwB,GAAG,IAAI,kBAAkB,CAC/C,OAAO,CAAC,mBAAmB,CAAC;oBAC1B,cAAc,EAAE,CAAC,iBAAiB,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;oBAC9D,YAAY,EAAE,CAAC;iBAChB,CAAC,EACF,uBAAuB,CACxB,CAAC;aACH;YAED,OAAO,wBAAwB,CAAC;QAClC,CAAC;KACF,CAAC;AACJ,CAAC;AAED,SAAS,iBAAiB,CAAC,GAAW;IACpC,IAAI,UAAU,CAAC,GAAG,CAAC,EAAE;QACnB,MAAM,EAAC,QAAQ,EAAE,MAAM,EAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;QAExC,OAAO,EAAC,QAAQ,EAAE,MAAM,EAAC,CAAC;KAC3B;IAED,OAAO,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AAChC,CAAC;AAED,SAAS,UAAU,CAAC,GAAW;IAC7B,OAAO,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAClC,CAAC","sourcesContent":["import * as history from 'history';\nimport {RootLocationTransformer} from '../create-root-location-transformer';\nimport {HistoryMultiplexer} from './history-multiplexer';\nimport {HistoryServiceContext} from './history-service-context';\n\nexport interface HistoryMultiplexers {\n  readonly browserHistoryMultiplexer: HistoryMultiplexer;\n  readonly staticHistoryMultiplexer: HistoryMultiplexer;\n}\n\nexport function createHistoryMultiplexers(\n  context: HistoryServiceContext,\n  rootLocationTransformer: RootLocationTransformer,\n): HistoryMultiplexers {\n  let browserHistoryMultiplexer: HistoryMultiplexer | undefined;\n  let staticHistoryMultiplexer: HistoryMultiplexer | undefined;\n\n  return {\n    get browserHistoryMultiplexer(): HistoryMultiplexer {\n      if (!browserHistoryMultiplexer) {\n        browserHistoryMultiplexer = new HistoryMultiplexer(\n          history.createBrowserHistory(),\n          rootLocationTransformer,\n        );\n      }\n\n      return browserHistoryMultiplexer;\n    },\n\n    get staticHistoryMultiplexer(): HistoryMultiplexer {\n      if (!staticHistoryMultiplexer) {\n        if (!context.serverRequest) {\n          throw new Error(\n            'Static history can not be created without a server request.',\n          );\n        }\n\n        staticHistoryMultiplexer = new HistoryMultiplexer(\n          history.createMemoryHistory({\n            initialEntries: [createPathFromUrl(context.serverRequest.url)],\n            initialIndex: 0,\n          }),\n          rootLocationTransformer,\n        );\n      }\n\n      return staticHistoryMultiplexer;\n    },\n  };\n}\n\nfunction createPathFromUrl(url: string): Partial<history.Path> {\n  if (isAbsolute(url)) {\n    const {pathname, search} = new URL(url);\n\n    return {pathname, search};\n  }\n\n  return history.parsePath(url);\n}\n\nfunction isAbsolute(url: string): boolean {\n  return /^https?:\\/\\//.test(url);\n}\n"]}