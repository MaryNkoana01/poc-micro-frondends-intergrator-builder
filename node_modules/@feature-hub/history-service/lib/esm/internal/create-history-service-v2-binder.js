import { BrowserConsumerHistory } from './browser-consumer-history';
import { createHistoryV4Adapter } from './create-history-v4-adapter';
import { StaticConsumerHistory } from './static-consumer-history';
function createHistoryServiceV2(context, historyKey, consumerHistory, historyMultiplexer) {
    return {
        historyKey,
        history: createHistoryV4Adapter(context, consumerHistory),
        rootHistory: historyMultiplexer.rootHistoryV2,
        createNewRootLocationForMultipleConsumers: (...consumerLocations) => historyMultiplexer.createNewRootLocationForMultipleConsumers(...consumerLocations.map(({ historyKey: otherHistoryKey, location: { pathname, search, hash, state }, }) => ({
            historyKey: otherHistoryKey,
            location: { pathname, search, hash },
            state,
        }))),
    };
}
function createBrowserHistoryServiceV2Binding(context, historyMultiplexers, historyKey) {
    const consumerHistory = new BrowserConsumerHistory(context, historyKey, historyMultiplexers.browserHistoryMultiplexer);
    return {
        featureService: createHistoryServiceV2(context, historyKey, consumerHistory, historyMultiplexers.browserHistoryMultiplexer),
        unbind: () => {
            consumerHistory.destroy();
        },
    };
}
function createStaticHistoryServiceV2Binding(context, historyMultiplexers, historyKey) {
    const consumerHistory = new StaticConsumerHistory(context, historyKey, historyMultiplexers.staticHistoryMultiplexer);
    return {
        featureService: createHistoryServiceV2(context, historyKey, consumerHistory, historyMultiplexers.staticHistoryMultiplexer),
    };
}
export function createHistoryServiceV2Binder(context, historyMultiplexers, options) {
    const { mode, getHistoryKey } = options;
    return (consumerId, consumerName) => {
        const historyKey = getHistoryKey({ consumerId, consumerName });
        return mode === 'browser'
            ? createBrowserHistoryServiceV2Binding(context, historyMultiplexers, historyKey)
            : createStaticHistoryServiceV2Binding(context, historyMultiplexers, historyKey);
    };
}
//# sourceMappingURL=create-history-service-v2-binder.js.map