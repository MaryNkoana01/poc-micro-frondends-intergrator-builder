{"version":3,"file":"create-root-location-transformer.js","sourceRoot":"","sources":["../../src/create-root-location-transformer.ts"],"names":[],"mappings":"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","sourcesContent":["import * as history from 'history';\nimport {ConsumerLocationV3} from '.';\nimport {URLSearchParams} from './internal/url-search-params';\n\nexport interface RootLocationOptions {\n  readonly consumerPathsQueryParamName: string;\n  readonly primaryConsumerHistoryKey?: string;\n}\n\nexport interface RootLocationTransformer {\n  getConsumerPathFromRootLocation(\n    rootLocation: Partial<history.Location>,\n    historyKey: string,\n  ): string | undefined;\n\n  createRootLocation(\n    currentRootLocation: Partial<history.Location>,\n    consumerLocation: Partial<history.Location>,\n    historyKey: string,\n  ): Partial<history.Path>;\n\n  createNewRootLocationForMultipleConsumers?(\n    ...consumerLocations: ConsumerLocationV3[]\n  ): Partial<history.Path>;\n}\n\nexport interface ConsumerPaths {\n  readonly [historyKey: string]: string;\n}\n\nfunction encodeConsumerPaths(consumerPaths: ConsumerPaths): string {\n  return JSON.stringify(consumerPaths);\n}\n\nfunction decodeConsumerPaths(encodedConsumerPaths: string): ConsumerPaths {\n  return JSON.parse(encodedConsumerPaths);\n}\n\nexport function addConsumerPath(\n  encodedConsumerPaths: string | null,\n  historyKey: string,\n  path: string,\n): string {\n  return encodeConsumerPaths({\n    ...decodeConsumerPaths(encodedConsumerPaths || '{}'),\n    [historyKey]: path,\n  });\n}\n\nexport function getConsumerPath(\n  encodedConsumerPaths: string,\n  historyKey: string,\n): string {\n  return decodeConsumerPaths(encodedConsumerPaths)[historyKey];\n}\n\nexport function createSearchParams(\n  location: Partial<history.Path>,\n): URLSearchParams {\n  return new URLSearchParams(location.search);\n}\n\nexport function serializeSearchParams(searchParams: URLSearchParams): string {\n  return `?${searchParams.toString()}`;\n}\n\nexport function createRootLocationForPrimaryConsumer(\n  currentRootLocation: Partial<history.Location>,\n  primaryConsumerLocation: Partial<history.Path>,\n  consumerPathsQueryParamName: string,\n): Partial<history.Path> {\n  const allSearchParams = createSearchParams(currentRootLocation);\n  const newSearchParams = createSearchParams(primaryConsumerLocation);\n\n  if (newSearchParams.has(consumerPathsQueryParamName)) {\n    throw new Error(\n      `Primary consumer tried to set query parameter ${JSON.stringify(\n        consumerPathsQueryParamName,\n      )} which is reserverd for consumer paths.`,\n    );\n  }\n\n  const consumerPaths = allSearchParams.get(consumerPathsQueryParamName);\n\n  let search: string | undefined;\n\n  if (consumerPaths) {\n    newSearchParams.set(consumerPathsQueryParamName, consumerPaths);\n    search = serializeSearchParams(newSearchParams);\n  } else {\n    search = primaryConsumerLocation.search;\n  }\n\n  const {pathname, hash} = primaryConsumerLocation;\n\n  return {pathname, search, hash};\n}\n\nexport function createRootLocationForOtherConsumer(\n  currentRootLocation: Partial<history.Location>,\n  consumerLocation: Partial<history.Path>,\n  historyKey: string,\n  consumerPathsQueryParamName: string,\n): Partial<history.Path> {\n  const allSearchParams = createSearchParams(currentRootLocation);\n  const consumerPaths = allSearchParams.get(consumerPathsQueryParamName);\n\n  const newConsumerPaths = addConsumerPath(\n    consumerPaths,\n    historyKey,\n    history.createPath(consumerLocation),\n  );\n\n  allSearchParams.set(consumerPathsQueryParamName, newConsumerPaths);\n\n  return {\n    pathname: currentRootLocation.pathname,\n    search: serializeSearchParams(allSearchParams),\n    hash: currentRootLocation.hash,\n  };\n}\n\nexport function createRootLocationTransformer(\n  options: RootLocationOptions,\n): RootLocationTransformer {\n  return {\n    getConsumerPathFromRootLocation: (\n      rootLocation: history.Location,\n      historyKey: string,\n    ): string | undefined => {\n      const {consumerPathsQueryParamName, primaryConsumerHistoryKey} = options;\n      const isPrimaryConsumer = historyKey === primaryConsumerHistoryKey;\n      const searchParams = createSearchParams(rootLocation);\n\n      if (isPrimaryConsumer) {\n        searchParams.delete(consumerPathsQueryParamName);\n\n        const {pathname, hash} = rootLocation;\n        const search = serializeSearchParams(searchParams);\n\n        return history.createPath({pathname, search, hash});\n      }\n\n      const consumerPaths = searchParams.get(consumerPathsQueryParamName);\n\n      if (!consumerPaths) {\n        return undefined;\n      }\n\n      return getConsumerPath(consumerPaths, historyKey);\n    },\n\n    createRootLocation: (\n      currentRootLocation: history.Location,\n      consumerLocation: Partial<history.Path>,\n      historyKey: string,\n    ): Partial<history.Path> => {\n      const {consumerPathsQueryParamName, primaryConsumerHistoryKey} = options;\n      const isPrimaryConsumer = historyKey === primaryConsumerHistoryKey;\n\n      if (isPrimaryConsumer) {\n        return createRootLocationForPrimaryConsumer(\n          currentRootLocation,\n          consumerLocation,\n          consumerPathsQueryParamName,\n        );\n      }\n\n      return createRootLocationForOtherConsumer(\n        currentRootLocation,\n        consumerLocation,\n        historyKey,\n        consumerPathsQueryParamName,\n      );\n    },\n  };\n}\n"]}