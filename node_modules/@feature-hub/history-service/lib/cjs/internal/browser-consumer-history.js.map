{"version":3,"file":"browser-consumer-history.js","sourceRoot":"","sources":["../../../src/internal/browser-consumer-history.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,sEAAoC;AACpC,iDAAmC;AACnC,yDAAmD;AAInD,MAAa,sBAAuB,SAAQ,kCAAe;IAKzD,YACE,OAA8B,EAC9B,UAAkB,EAClB,kBAAsC;QAEtC,KAAK,CAAC,OAAO,EAAE,UAAU,EAAE,kBAAkB,CAAC,CAAC;QAThC,cAAS,GAAG,IAAI,GAAG,EAAoB,CAAC;QACxC,wBAAmB,GAAmB,EAAE,CAAC;QAUxD,IAAI,CAAC,iBAAiB,GAAG,kBAAkB,CAAC,2BAA2B,CACrE,CAAC,MAAM,EAAE,EAAE;YACT,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC;QACxC,CAAC,CACF,CAAC;QAEF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;IAEM,OAAO;QACZ,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,UAAU,EAAE,CAAC,CAAC;IACjE,CAAC;IAEM,MAAM,CAAC,QAA0B;QACtC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAE7B,MAAM,UAAU,GAAG,GAAG,EAAE;YACtB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAClC,CAAC,CAAC;QAEF,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAE1C,OAAO,UAAU,CAAC;IACpB,CAAC;IAEM,IAAI,CAAC,EAAc,EAAE,KAAe;QACzC,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;QACtB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAEM,OAAO,CAAC,EAAc,EAAE,KAAe;QAC5C,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;QACzB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAEO,eAAe;QACrB,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,SAAS,EAAE;YACrC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC;SAC1D;IACH,CAAC;IAEO,wBAAwB,CAAC,MAAsB;QACrD,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAC1D,IAAI,CAAC,UAAU,CAChB,CAAC;QAEF,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YAC1B,OAAO;SACR;QAED,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAEO,OAAO,CAAC,QAA0B;QACxC,IAAI,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YACtE,OAAO,KAAK,CAAC;SACd;QAED,OAAO,IAAA,yBAAK,EAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACpD,CAAC;CACF;AA9ED,wDA8EC","sourcesContent":["import equal from 'fast-deep-equal';\nimport * as history from 'history';\nimport {ConsumerHistory} from './consumer-history';\nimport {HistoryMultiplexer} from './history-multiplexer';\nimport {HistoryServiceContext} from './history-service-context';\n\nexport class BrowserConsumerHistory extends ConsumerHistory {\n  private readonly listeners = new Set<history.Listener>();\n  private readonly unregisterCallbacks: (() => void)[] = [];\n  private readonly browserUnregister: () => void;\n\n  public constructor(\n    context: HistoryServiceContext,\n    historyKey: string,\n    historyMultiplexer: HistoryMultiplexer,\n  ) {\n    super(context, historyKey, historyMultiplexer);\n\n    this.browserUnregister = historyMultiplexer.listenForRootLocationChange(\n      (action) => {\n        this.handleRootLocationChange(action);\n      },\n    );\n\n    this.listen = this.listen.bind(this);\n    this.push = this.push.bind(this);\n    this.replace = this.replace.bind(this);\n  }\n\n  public destroy(): void {\n    this.browserUnregister();\n    this.unregisterCallbacks.forEach((unregister) => unregister());\n  }\n\n  public listen(listener: history.Listener): () => void {\n    this.listeners.add(listener);\n\n    const unregister = () => {\n      this.listeners.delete(listener);\n    };\n\n    this.unregisterCallbacks.push(unregister);\n\n    return unregister;\n  }\n\n  public push(to: history.To, state?: unknown): void {\n    super.push(to, state);\n    this.notifyListeners();\n  }\n\n  public replace(to: history.To, state?: unknown): void {\n    super.replace(to, state);\n    this.notifyListeners();\n  }\n\n  private notifyListeners(): void {\n    for (const listener of this.listeners) {\n      listener({location: this.location, action: this.action});\n    }\n  }\n\n  private handleRootLocationChange(action: history.Action): void {\n    const location = this.historyMultiplexer.getConsumerLocation(\n      this.historyKey,\n    );\n\n    if (this.matches(location)) {\n      return;\n    }\n\n    this.location = location;\n    this.action = action;\n\n    this.notifyListeners();\n  }\n\n  private matches(location: history.Location): boolean {\n    if (history.createPath(location) !== history.createPath(this.location)) {\n      return false;\n    }\n\n    return equal(location.state, this.location.state);\n  }\n}\n"]}