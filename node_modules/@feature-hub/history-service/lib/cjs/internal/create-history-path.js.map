{"version":3,"file":"create-history-path.js","sourceRoot":"","sources":["../../../src/internal/create-history-path.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iDAAmC;AACnC,wEAA+C;AAE/C,SAAgB,iBAAiB,CAC/B,EAAc,EACd,kBAA0B,EAAE;IAE5B,MAAM,IAAI,GAAG,OAAO,EAAE,KAAK,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;IAElE,0BAA0B;IAC1B,MAAM,EACJ,QAAQ,GAAG,EAAE,EACb,MAAM,GAAG,EAAE,EACX,IAAI,GAAG,EAAE,GACV,GAAG,OAAO,CAAC,SAAS,CACnB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAA,0BAAe,EAAC,IAAI,EAAE,eAAe,CAAC,CACrE,CAAC;IAEF,OAAO,EAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAC,CAAC;AAClC,CAAC;AAhBD,8CAgBC","sourcesContent":["import * as history from 'history';\nimport resolvePathname from 'resolve-pathname';\n\nexport function createHistoryPath(\n  to: history.To,\n  currentPathname: string = ``,\n): history.Path {\n  const path = typeof to === 'string' ? to : history.createPath(to);\n\n  /* istanbul ignore next */\n  const {\n    pathname = '',\n    search = '',\n    hash = '',\n  } = history.parsePath(\n    path.startsWith('/') ? path : resolvePathname(path, currentPathname),\n  );\n\n  return {pathname, search, hash};\n}\n"]}