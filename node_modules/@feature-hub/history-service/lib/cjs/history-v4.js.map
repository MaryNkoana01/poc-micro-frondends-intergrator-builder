{"version":3,"file":"history-v4.js","sourceRoot":"","sources":["../../src/history-v4.ts"],"names":[],"mappings":";AAAA,qCAAqC;AACrC,+CAA+C;AAC/C,kNAAkN;AAClN,kEAAkE;AAClE,0BAA0B;AAC1B,iBAAiB","sourcesContent":["// Type definitions for history 4.7.2\n// Project: https://github.com/mjackson/history\n// Definitions by: Sergey Buturlakin <https://github.com/sergey-buturlakin>, Nathan Brown <https://github.com/ngbrown>, Young Rok Kim <https://github.com/rokoroku>, Daniel Nixon <https://github.com/danielnixon>\n// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\n// TypeScript Version: 2.3\n// tslint:disable\n\nexport type Action = 'PUSH' | 'POP' | 'REPLACE';\nexport type UnregisterCallback = () => void;\n\nexport interface History<HistoryLocationState = LocationState> {\n  length: number;\n  action: Action;\n  location: Location<HistoryLocationState>;\n  push(\n    location: Path | LocationDescriptor<HistoryLocationState>,\n    state?: HistoryLocationState,\n  ): void;\n  replace(\n    location: Path | LocationDescriptor<HistoryLocationState>,\n    state?: HistoryLocationState,\n  ): void;\n  go(n: number): void;\n  goBack(): void;\n  goForward(): void;\n  block(\n    prompt?: boolean | string | TransitionPromptHook<HistoryLocationState>,\n  ): UnregisterCallback;\n  listen(listener: LocationListener<HistoryLocationState>): UnregisterCallback;\n  createHref(location: LocationDescriptorObject<HistoryLocationState>): Href;\n}\n\nexport interface Location<S = LocationState> {\n  pathname: Pathname;\n  search: Search;\n  state: S;\n  hash: Hash;\n  key?: LocationKey | undefined;\n}\n\nexport interface LocationDescriptorObject<S = LocationState> {\n  pathname?: Pathname | undefined;\n  search?: Search | undefined;\n  state?: S | undefined;\n  hash?: Hash | undefined;\n  key?: LocationKey | undefined;\n}\n\nexport type LocationDescriptor<S = LocationState> =\n  | Path\n  | LocationDescriptorObject<S>;\nexport type LocationKey = string;\nexport type LocationListener<S = LocationState> = (\n  location: Location<S>,\n  action: Action,\n) => void;\n\nexport type LocationState = unknown;\nexport type Path = string;\nexport type Pathname = string;\nexport type Search = string;\nexport type TransitionHook<S = LocationState> = (\n  location: Location<S>,\n  callback: (result: any) => void,\n) => any;\nexport type TransitionPromptHook<S = LocationState> = (\n  location: Location<S>,\n  action: Action,\n) => string | false | void;\nexport type Hash = string;\nexport type Href = string;\n"]}