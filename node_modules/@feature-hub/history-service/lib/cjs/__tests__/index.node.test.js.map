{"version":3,"file":"index.node.test.js","sourceRoot":"","sources":["../../../src/__tests__/index.node.test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @jest-environment node\n */\n\n// tslint:disable:no-implicit-dependencies\n// tslint:disable:no-non-null-assertion\n\nimport {\n  FeatureServiceBinder,\n  FeatureServiceBinding,\n  FeatureServiceEnvironment,\n} from '@feature-hub/core';\nimport {ServerRequestV1} from '@feature-hub/server-request';\nimport {History} from 'history';\nimport {\n  HistoryServiceDependencies,\n  HistoryServiceV1,\n  HistoryServiceV2,\n  HistoryServiceV3,\n  createRootLocationTransformer,\n  defineHistoryService,\n} from '..';\nimport * as historyV4 from '../history-v4';\nimport {Writable} from '../internal/writable';\nimport {\n  consumerPathsQueryParamName,\n  createSearch,\n  createUrl,\n} from './root-location-helpers';\nimport {stubbedLogger} from './stubbed-logger';\n\ndescribe('defineHistoryService', () => {\n  describe('HistoryServiceV1 (on Node.js)', () => {\n    let mockEnv: FeatureServiceEnvironment<\n      Writable<HistoryServiceDependencies>\n    >;\n\n    let createHistoryServiceBinder: () => FeatureServiceBinder<HistoryServiceV1>;\n\n    beforeEach(() => {\n      mockEnv = {featureServices: {'s2:logger': stubbedLogger}};\n\n      createHistoryServiceBinder = () => {\n        const sharedHistoryService = defineHistoryService(\n          createRootLocationTransformer({consumerPathsQueryParamName}),\n          {mode: 'static'},\n        ).create(mockEnv);\n\n        return sharedHistoryService!['1.0.0'];\n      };\n    });\n\n    describe('#createStaticHistory()', () => {\n      let historyBinding1: FeatureServiceBinding<HistoryServiceV1>;\n      let historyBinding2: FeatureServiceBinding<HistoryServiceV1>;\n      let historyService1: HistoryServiceV1;\n      let historyService2: HistoryServiceV1;\n      let history1: historyV4.History;\n      let history2: historyV4.History;\n\n      const createHistories = (serverRequest: ServerRequestV1 | undefined) => {\n        mockEnv.featureServices['s2:server-request'] = serverRequest;\n\n        const historyServiceBinder = createHistoryServiceBinder();\n\n        historyBinding1 = historyServiceBinder('test1');\n        historyService1 = historyBinding1.featureService;\n        history1 = historyService1.createStaticHistory();\n\n        historyBinding2 = historyServiceBinder('test2');\n        historyBinding2 = historyServiceBinder('test2');\n        historyService2 = historyBinding2.featureService;\n        history2 = historyService2.createStaticHistory();\n      };\n\n      const destroyHistories = () => {\n        historyBinding1.unbind!();\n        historyBinding2.unbind!();\n      };\n\n      beforeEach(() =>\n        createHistories({\n          url: '/example',\n          cookies: {},\n          headers: {},\n        }),\n      );\n\n      afterEach(destroyHistories);\n\n      describe('when no server request is provided', () => {\n        it('throws an error', () => {\n          expect(() => createHistories(undefined)).toThrowError(\n            new Error(\n              'Static history can not be created without a server request.',\n            ),\n          );\n        });\n      });\n\n      describe('when called multiple times for the same consumer', () => {\n        it('returns the same instance and logs a warning', () => {\n          expect(historyBinding1.featureService.createStaticHistory()).toEqual(\n            history1,\n          );\n\n          expect(stubbedLogger.warn).toHaveBeenCalledWith(\n            'createStaticHistory was called multiple times by consumer \"test1\". Returning the same history instance as before.',\n          );\n        });\n      });\n\n      describe('#length', () => {\n        it('always returns 1', () => {\n          expect(history1.length).toBe(1);\n          expect(history2.length).toBe(1);\n\n          history1.push('/foo');\n          history1.push('/bar');\n          history1.replace('/qux');\n          history2.push('/baz');\n          history2.replace('/quux');\n\n          expect(history1.length).toBe(1);\n          expect(history2.length).toBe(1);\n        });\n      });\n\n      describe('#action', () => {\n        it('returns a consumer-specific action', () => {\n          expect(history1.action).toBe('POP');\n          expect(history2.action).toBe('POP');\n\n          history1.push('/foo');\n          history2.replace('/bar');\n\n          expect(history1.action).toBe('PUSH');\n          expect(history2.action).toBe('REPLACE');\n        });\n      });\n\n      describe('#location', () => {\n        it('returns a consumer-specific location', () => {\n          history1.push('/foo', {test: 'foo'});\n          history2.replace('/bar', {test: 'bar'});\n\n          expect(history1.location).toMatchObject({\n            pathname: '/foo',\n            state: {test: 'foo'},\n          });\n\n          expect(history2.location).toMatchObject({\n            pathname: '/bar',\n            state: {test: 'bar'},\n          });\n        });\n\n        it('retrieves consumer specific locations from the server request url', () => {\n          destroyHistories();\n\n          const serverRequest: ServerRequestV1 = {\n            url: createUrl({test1: '/foo', test2: 'bar'}, {relative: true}),\n            cookies: {},\n            headers: {},\n          };\n\n          createHistories(serverRequest);\n\n          expect(history1.location).toMatchObject({pathname: '/foo'});\n          expect(history2.location).toMatchObject({pathname: '/bar'});\n        });\n\n        describe('when getConsumerPathFromRootLocation returns undefined', () => {\n          it('returns the default location', () => {\n            expect(history1.location).toMatchObject({\n              pathname: '/',\n              search: '',\n            });\n          });\n        });\n      });\n\n      describe('#push()', () => {\n        it('changes the static root location for every consumer push', () => {\n          history1.push('/foo');\n\n          expect(historyService1.staticRootLocation).toMatchObject({\n            search: createSearch({test1: '/foo'}),\n          });\n\n          history2.push('/bar?baz=1');\n\n          expect(historyService1.staticRootLocation).toMatchObject({\n            search: createSearch({test1: '/foo', test2: '/bar?baz=1'}),\n          });\n        });\n\n        it('normalizes the pathname', () => {\n          history1.push('foo');\n\n          expect(historyService1.staticRootLocation).toMatchObject({\n            search: createSearch({test1: '/foo'}),\n          });\n        });\n\n        it('handles relative pathnames', () => {\n          history1.push('/foo/bar');\n          history1.push('baz');\n\n          expect(historyService1.staticRootLocation).toMatchObject({\n            search: createSearch({test1: '/foo/baz'}),\n          });\n        });\n      });\n\n      describe('#replace()', () => {\n        it('changes the static root location for every consumer replace', () => {\n          history1.replace('/foo');\n\n          expect(historyService1.staticRootLocation).toMatchObject({\n            search: createSearch({test1: '/foo'}),\n          });\n\n          history2.replace('/bar?baz=1');\n\n          expect(historyService1.staticRootLocation).toMatchObject({\n            search: createSearch({test1: '/foo', test2: '/bar?baz=1'}),\n          });\n        });\n\n        it('normalizes the pathname', () => {\n          history1.replace('foo');\n\n          expect(historyService1.staticRootLocation).toMatchObject({\n            search: createSearch({test1: '/foo'}),\n          });\n        });\n\n        it('handles relative pathnames', () => {\n          history1.replace('/foo/bar');\n          history1.replace('baz');\n\n          expect(historyService1.staticRootLocation).toMatchObject({\n            search: createSearch({test1: '/foo/baz'}),\n          });\n        });\n      });\n\n      describe('#go()', () => {\n        it('does nothing and logs a warning that go() is not supported', () => {\n          history1.push('/foo');\n\n          const rootLocation = historyService1.staticRootLocation;\n\n          history1.go(-1);\n\n          expect(historyService1.staticRootLocation).toBe(rootLocation);\n\n          expect(stubbedLogger.warn).toHaveBeenCalledWith(\n            'history.go() is not supported.',\n          );\n        });\n      });\n\n      describe('#goBack()', () => {\n        it('does nothing and logs a warning that goBack() is not supported', () => {\n          history1.push('/foo');\n\n          const rootLocation = historyService1.staticRootLocation;\n\n          history1.goBack();\n\n          expect(historyService1.staticRootLocation).toBe(rootLocation);\n\n          expect(stubbedLogger.warn).toHaveBeenCalledWith(\n            'history.goBack() is not supported.',\n          );\n        });\n      });\n\n      describe('#goForward()', () => {\n        it('does nothing and logs a warning that goForward() is not supported', () => {\n          history1.push('foo');\n\n          const rootLocation = historyService1.staticRootLocation;\n\n          history1.goForward();\n\n          expect(historyService1.staticRootLocation).toBe(rootLocation);\n\n          expect(stubbedLogger.warn).toHaveBeenCalledWith(\n            'history.goForward() is not supported.',\n          );\n        });\n      });\n\n      describe('#block()', () => {\n        it('does nothing and logs a warning', () => {\n          const promptHookSpy = jest.fn();\n\n          history1.block(promptHookSpy);\n          history1.push('/foo?bar=1');\n\n          expect(historyService1.staticRootLocation).toMatchObject({\n            search: createSearch({test1: '/foo?bar=1'}),\n          });\n\n          expect(promptHookSpy).not.toHaveBeenCalled();\n\n          expect(stubbedLogger.warn).toHaveBeenCalledWith(\n            'history.block() is not supported.',\n          );\n        });\n\n        it('still returns a no-op unblock function', () => {\n          const promptHookSpy = jest.fn();\n          const unblock = history1.block(promptHookSpy);\n\n          unblock();\n        });\n      });\n\n      describe('#listen()', () => {\n        it('does nothing and logs a warning', () => {\n          const listenSpy = jest.fn();\n\n          history1.listen(listenSpy);\n          history1.push('/foo?bar=1');\n\n          expect(listenSpy).not.toHaveBeenCalled();\n\n          expect(stubbedLogger.warn).toHaveBeenCalledWith(\n            'history.listen() is not supported.',\n          );\n        });\n\n        it('still returns a no-op unregister function', () => {\n          const listenSpy = jest.fn();\n          const unregister = history1.listen(listenSpy);\n\n          unregister();\n        });\n      });\n\n      describe('#createHref()', () => {\n        it('returns the href for the given location based on the static root history', () => {\n          history1.push('/foo');\n\n          const location = {pathname: '/bar', search: '?a=b'};\n          const href = history2.createHref(location);\n\n          expect(href).toBe(\n            createUrl(\n              {test1: '/foo', test2: '/bar?a=b'},\n              {pathname: '/example', relative: true},\n            ),\n          );\n        });\n\n        it('normalizes the pathname', () => {\n          history1.push('/foo');\n\n          const location = {pathname: 'bar'};\n          const href = history2.createHref(location);\n\n          expect(href).toBe(\n            createUrl(\n              {test1: '/foo', test2: '/bar'},\n              {pathname: '/example', relative: true},\n            ),\n          );\n        });\n      });\n    });\n\n    describe('when no Logger Feature Service is provided', () => {\n      let consoleWarnSpy: jest.SpyInstance;\n\n      beforeEach(() => {\n        consoleWarnSpy = jest.spyOn(console, 'warn');\n\n        mockEnv.featureServices['s2:logger'] = undefined;\n\n        mockEnv.featureServices['s2:server-request'] = {\n          url: '/',\n          cookies: {},\n          headers: {},\n        };\n      });\n\n      afterEach(() => {\n        consoleWarnSpy.mockRestore();\n      });\n\n      it('logs messages using the console', () => {\n        const historyServiceBinder = createHistoryServiceBinder();\n        const historyService = historyServiceBinder('test1').featureService;\n        const staticHistory = historyService.createStaticHistory();\n\n        staticHistory.go(-1);\n\n        expect(consoleWarnSpy).toHaveBeenCalledWith(\n          'history.go() is not supported.',\n        );\n      });\n    });\n  });\n\n  describe('HistoryServiceV2 (on Node.js)', () => {\n    let mockEnv: FeatureServiceEnvironment<\n      Writable<HistoryServiceDependencies>\n    >;\n\n    let createHistoryServiceBinder: () => FeatureServiceBinder<HistoryServiceV2>;\n    let historyBinding1: FeatureServiceBinding<HistoryServiceV2>;\n    let historyBinding2: FeatureServiceBinding<HistoryServiceV2>;\n    let historyService1: HistoryServiceV2;\n    let historyService2: HistoryServiceV2;\n    let history1: historyV4.History;\n    let history2: historyV4.History;\n\n    const createHistories = (serverRequest: ServerRequestV1 | undefined) => {\n      mockEnv.featureServices['s2:server-request'] = serverRequest;\n\n      const historyServiceBinder = createHistoryServiceBinder();\n\n      historyBinding1 = historyServiceBinder('test1');\n      historyService1 = historyBinding1.featureService;\n      history1 = historyService1.history;\n\n      historyBinding2 = historyServiceBinder('test2');\n      historyService2 = historyBinding2.featureService;\n      history2 = historyService2.history;\n    };\n\n    beforeEach(() => {\n      mockEnv = {featureServices: {'s2:logger': stubbedLogger}};\n\n      createHistoryServiceBinder = () => {\n        const sharedHistoryService = defineHistoryService(\n          createRootLocationTransformer({consumerPathsQueryParamName}),\n          {mode: 'static'},\n        ).create(mockEnv);\n\n        return sharedHistoryService!['2.0.0'];\n      };\n\n      createHistories({url: '/example', cookies: {}, headers: {}});\n    });\n\n    describe('#history', () => {\n      describe('when no server request is provided', () => {\n        it('throws an error', () => {\n          expect(() => createHistories(undefined)).toThrowError(\n            new Error(\n              'Static history can not be created without a server request.',\n            ),\n          );\n        });\n      });\n\n      describe('#length', () => {\n        it('always returns 1', () => {\n          expect(history1.length).toBe(1);\n          expect(history2.length).toBe(1);\n\n          history1.push('/foo');\n          history1.push('/bar');\n          history1.replace('/qux');\n          history2.push('/baz');\n          history2.replace('/quux');\n\n          expect(history1.length).toBe(1);\n          expect(history2.length).toBe(1);\n        });\n      });\n\n      describe('#action', () => {\n        it('returns a consumer-specific action', () => {\n          expect(history1.action).toBe('POP');\n          expect(history2.action).toBe('POP');\n\n          history1.push('/foo');\n          history2.replace('/bar');\n\n          expect(history1.action).toBe('PUSH');\n          expect(history2.action).toBe('REPLACE');\n        });\n      });\n\n      describe('#location', () => {\n        it('returns a consumer-specific location', () => {\n          history1.push('/foo', {test: 'foo'});\n          history2.replace('/bar', {test: 'bar'});\n\n          expect(history1.location).toMatchObject({\n            pathname: '/foo',\n            state: {test: 'foo'},\n          });\n\n          expect(history2.location).toMatchObject({\n            pathname: '/bar',\n            state: {test: 'bar'},\n          });\n        });\n\n        it('retrieves consumer specific locations from a relative server request url', () => {\n          const serverRequest: ServerRequestV1 = {\n            url: createUrl({test1: '/foo', test2: 'bar'}, {relative: true}),\n            cookies: {},\n            headers: {},\n          };\n\n          createHistories(serverRequest);\n\n          expect(history1.location).toMatchObject({pathname: '/foo'});\n          expect(history2.location).toMatchObject({pathname: '/bar'});\n        });\n\n        it('retrieves consumer specific locations from an absolute server request url', () => {\n          const serverRequest: ServerRequestV1 = {\n            url: createUrl({test1: '/foo', test2: 'bar'}, {relative: false}),\n            cookies: {},\n            headers: {},\n          };\n\n          createHistories(serverRequest);\n\n          expect(history1.location).toMatchObject({pathname: '/foo'});\n          expect(history2.location).toMatchObject({pathname: '/bar'});\n        });\n\n        describe('when getConsumerPathFromRootLocation returns undefined', () => {\n          it('returns the default location', () => {\n            expect(history1.location).toMatchObject({\n              pathname: '/',\n              search: '',\n            });\n          });\n        });\n      });\n\n      describe('#push()', () => {\n        it('changes the static root location for every consumer push', () => {\n          history1.push('/foo');\n\n          expect(historyService1.rootHistory.location).toMatchObject({\n            search: createSearch({test1: '/foo'}),\n          });\n\n          history2.push('/bar?baz=1');\n\n          expect(historyService1.rootHistory.location).toMatchObject({\n            search: createSearch({test1: '/foo', test2: '/bar?baz=1'}),\n          });\n        });\n\n        it('normalizes the pathname', () => {\n          history1.push('foo');\n\n          expect(historyService1.rootHistory.location).toMatchObject({\n            search: createSearch({test1: '/foo'}),\n          });\n        });\n\n        it('handles relative pathnames', () => {\n          history1.push('/foo/bar');\n          history1.push('baz');\n\n          expect(historyService1.rootHistory.location).toMatchObject({\n            search: createSearch({test1: '/foo/baz'}),\n          });\n        });\n      });\n\n      describe('#replace()', () => {\n        it('changes the static root location for every consumer replace', () => {\n          history1.replace('/foo');\n\n          expect(historyService1.rootHistory.location).toMatchObject({\n            search: createSearch({test1: '/foo'}),\n          });\n\n          history2.replace('/bar?baz=1');\n\n          expect(historyService1.rootHistory.location).toMatchObject({\n            search: createSearch({test1: '/foo', test2: '/bar?baz=1'}),\n          });\n        });\n\n        it('normalizes the pathname', () => {\n          history1.replace('foo');\n\n          expect(historyService1.rootHistory.location).toMatchObject({\n            search: createSearch({test1: '/foo'}),\n          });\n        });\n\n        it('handles relative pathnames', () => {\n          history1.replace('/foo/bar');\n          history1.replace('baz');\n\n          expect(historyService1.rootHistory.location).toMatchObject({\n            search: createSearch({test1: '/foo/baz'}),\n          });\n        });\n      });\n\n      describe('#go()', () => {\n        it('does nothing and logs a warning that go() is not supported', () => {\n          history1.push('/foo');\n\n          const rootLocation = historyService1.rootHistory.location;\n\n          history1.go(-1);\n\n          expect(historyService1.rootHistory.location).toBe(rootLocation);\n\n          expect(stubbedLogger.warn).toHaveBeenCalledWith(\n            'history.go() is not supported.',\n          );\n        });\n      });\n\n      describe('#goBack()', () => {\n        it('does nothing and logs a warning that goBack() is not supported', () => {\n          history1.push('/foo');\n\n          const rootLocation = historyService1.rootHistory.location;\n\n          history1.goBack();\n\n          expect(historyService1.rootHistory.location).toBe(rootLocation);\n\n          expect(stubbedLogger.warn).toHaveBeenCalledWith(\n            'history.goBack() is not supported.',\n          );\n        });\n      });\n\n      describe('#goForward()', () => {\n        it('does nothing and logs a warning that goForward() is not supported', () => {\n          history1.push('foo');\n\n          const rootLocation = historyService1.rootHistory.location;\n\n          history1.goForward();\n\n          expect(historyService1.rootHistory.location).toBe(rootLocation);\n\n          expect(stubbedLogger.warn).toHaveBeenCalledWith(\n            'history.goForward() is not supported.',\n          );\n        });\n      });\n\n      describe('#block()', () => {\n        it('does nothing and logs a warning', () => {\n          const promptHookSpy = jest.fn();\n\n          history1.block(promptHookSpy);\n          history1.push('/foo?bar=1');\n\n          expect(historyService1.rootHistory.location).toMatchObject({\n            search: createSearch({test1: '/foo?bar=1'}),\n          });\n\n          expect(promptHookSpy).not.toHaveBeenCalled();\n\n          expect(stubbedLogger.warn).toHaveBeenCalledWith(\n            'history.block() is not supported.',\n          );\n        });\n\n        it('still returns a no-op unblock function', () => {\n          const promptHookSpy = jest.fn();\n          const unblock = history1.block(promptHookSpy);\n\n          unblock();\n        });\n      });\n\n      describe('#listen()', () => {\n        it('does nothing and logs a warning', () => {\n          const listenSpy = jest.fn();\n\n          history1.listen(listenSpy);\n          history1.push('/foo?bar=1');\n\n          expect(listenSpy).not.toHaveBeenCalled();\n\n          expect(stubbedLogger.warn).toHaveBeenCalledWith(\n            'history.listen() is not supported.',\n          );\n        });\n\n        it('still returns a no-op unregister function', () => {\n          const listenSpy = jest.fn();\n          const unregister = history1.listen(listenSpy);\n\n          unregister();\n        });\n      });\n\n      describe('#createHref()', () => {\n        it('returns the href for the given location based on the static root history', () => {\n          history1.push('/foo');\n\n          const location = {pathname: '/bar', search: '?a=b'};\n          const href = history2.createHref(location);\n\n          expect(href).toBe(\n            createUrl(\n              {test1: '/foo', test2: '/bar?a=b'},\n              {pathname: '/example', relative: true},\n            ),\n          );\n        });\n\n        it('normalizes the pathname', () => {\n          history1.push('/foo');\n\n          const location = {pathname: 'bar'};\n          const href = history2.createHref(location);\n\n          expect(href).toBe(\n            createUrl(\n              {test1: '/foo', test2: '/bar'},\n              {pathname: '/example', relative: true},\n            ),\n          );\n        });\n      });\n    });\n\n    describe('#rootHistory', () => {\n      describe('#length', () => {\n        it('always returns 1', () => {\n          expect(historyService1.rootHistory.length).toBe(1);\n          expect(historyService2.rootHistory.length).toBe(1);\n\n          history1.push('/foo');\n          history1.push('/bar');\n          history1.replace('/qux');\n          history2.push('/baz');\n          history2.replace('/quux');\n\n          expect(historyService1.rootHistory.length).toBe(1);\n          expect(historyService2.rootHistory.length).toBe(1);\n        });\n      });\n\n      describe('#location', () => {\n        it('returns the root location containing all consumer locations for a server request with a relative url', () => {\n          const serverRequest: ServerRequestV1 = {\n            url: createUrl({test1: '/foo', test2: 'bar'}, {relative: true}),\n            cookies: {},\n            headers: {},\n          };\n\n          createHistories(serverRequest);\n\n          expect(historyService1.rootHistory.location).toMatchObject({\n            pathname: '/',\n            search: createSearch({test1: '/foo', test2: 'bar'}),\n          });\n        });\n\n        it('returns the root location containing all consumer locations for a server request with an absolute url', () => {\n          const serverRequest: ServerRequestV1 = {\n            url: createUrl({test1: '/foo', test2: 'bar'}, {relative: false}),\n            cookies: {},\n            headers: {},\n          };\n\n          createHistories(serverRequest);\n\n          expect(historyService1.rootHistory.location).toMatchObject({\n            pathname: '/',\n            search: createSearch({test1: '/foo', test2: 'bar'}),\n          });\n        });\n      });\n    });\n\n    describe('when no Logger Feature Service is provided', () => {\n      let consoleWarnSpy: jest.SpyInstance;\n\n      beforeEach(() => {\n        consoleWarnSpy = jest.spyOn(console, 'warn');\n\n        mockEnv.featureServices['s2:logger'] = undefined;\n\n        mockEnv.featureServices['s2:server-request'] = {\n          url: '/',\n          cookies: {},\n          headers: {},\n        };\n      });\n\n      afterEach(() => {\n        consoleWarnSpy.mockRestore();\n      });\n\n      it('logs messages using the console', () => {\n        const historyServiceBinder = createHistoryServiceBinder();\n        const historyService = historyServiceBinder('test1').featureService;\n        const staticHistory = historyService.history;\n\n        staticHistory.go(-1);\n\n        expect(consoleWarnSpy).toHaveBeenCalledWith(\n          'history.go() is not supported.',\n        );\n      });\n    });\n  });\n\n  describe('HistoryServiceV3 (on Node.js)', () => {\n    let mockEnv: FeatureServiceEnvironment<\n      Writable<HistoryServiceDependencies>\n    >;\n\n    let createHistoryServiceBinder: () => FeatureServiceBinder<HistoryServiceV3>;\n    let historyBinding1: FeatureServiceBinding<HistoryServiceV3>;\n    let historyBinding2: FeatureServiceBinding<HistoryServiceV3>;\n    let historyService1: HistoryServiceV3;\n    let historyService2: HistoryServiceV3;\n    let history1: History;\n    let history2: History;\n\n    const createHistories = (serverRequest: ServerRequestV1 | undefined) => {\n      mockEnv.featureServices['s2:server-request'] = serverRequest;\n\n      const historyServiceBinder = createHistoryServiceBinder();\n\n      historyBinding1 = historyServiceBinder('test1');\n      historyService1 = historyBinding1.featureService;\n      history1 = historyService1.history;\n\n      historyBinding2 = historyServiceBinder('test2');\n      historyService2 = historyBinding2.featureService;\n      history2 = historyService2.history;\n    };\n\n    beforeEach(() => {\n      mockEnv = {featureServices: {'s2:logger': stubbedLogger}};\n\n      createHistoryServiceBinder = () => {\n        const sharedHistoryService = defineHistoryService(\n          createRootLocationTransformer({consumerPathsQueryParamName}),\n          {mode: 'static'},\n        ).create(mockEnv);\n\n        return sharedHistoryService!['3.0.0'];\n      };\n\n      createHistories({url: '/example', cookies: {}, headers: {}});\n    });\n\n    describe('#history', () => {\n      describe('when no server request is provided', () => {\n        it('throws an error', () => {\n          expect(() => createHistories(undefined)).toThrowError(\n            new Error(\n              'Static history can not be created without a server request.',\n            ),\n          );\n        });\n      });\n\n      describe('#action', () => {\n        it('returns a consumer-specific action', () => {\n          expect(history1.action).toBe('POP');\n          expect(history2.action).toBe('POP');\n\n          history1.push('/foo');\n          history2.replace('/bar');\n\n          expect(history1.action).toBe('PUSH');\n          expect(history2.action).toBe('REPLACE');\n        });\n      });\n\n      describe('#location', () => {\n        it('returns a consumer-specific location', () => {\n          history1.push('/foo', {test: 'foo'});\n          history2.replace('/bar', {test: 'bar'});\n\n          expect(history1.location).toMatchObject({\n            pathname: '/foo',\n            state: {test: 'foo'},\n          });\n\n          expect(history2.location).toMatchObject({\n            pathname: '/bar',\n            state: {test: 'bar'},\n          });\n        });\n\n        it('retrieves consumer specific locations from a relative server request url', () => {\n          const serverRequest: ServerRequestV1 = {\n            url: createUrl({test1: '/foo', test2: 'bar'}, {relative: true}),\n            cookies: {},\n            headers: {},\n          };\n\n          createHistories(serverRequest);\n\n          expect(history1.location).toMatchObject({pathname: '/foo'});\n          expect(history2.location).toMatchObject({pathname: '/bar'});\n        });\n\n        it('retrieves consumer specific locations from an absolute server request url', () => {\n          const serverRequest: ServerRequestV1 = {\n            url: createUrl({test1: '/foo', test2: 'bar'}, {relative: false}),\n            cookies: {},\n            headers: {},\n          };\n\n          createHistories(serverRequest);\n\n          expect(history1.location).toMatchObject({pathname: '/foo'});\n          expect(history2.location).toMatchObject({pathname: '/bar'});\n        });\n\n        describe('when getConsumerPathFromRootLocation returns undefined', () => {\n          it('returns the default location', () => {\n            expect(history1.location).toMatchObject({\n              pathname: '/',\n              search: '',\n            });\n          });\n        });\n      });\n\n      describe('#push()', () => {\n        it('changes the static root location for every consumer push', () => {\n          history1.push('/foo');\n\n          expect(historyService1.rootHistory.location).toMatchObject({\n            search: createSearch({test1: '/foo'}),\n          });\n\n          history2.push('/bar?baz=1');\n\n          expect(historyService1.rootHistory.location).toMatchObject({\n            search: createSearch({test1: '/foo', test2: '/bar?baz=1'}),\n          });\n        });\n\n        it('normalizes the pathname', () => {\n          history1.push('foo');\n\n          expect(historyService1.rootHistory.location).toMatchObject({\n            search: createSearch({test1: '/foo'}),\n          });\n        });\n\n        it('handles relative pathnames', () => {\n          history1.push('/foo/bar');\n          history1.push('baz');\n\n          expect(historyService1.rootHistory.location).toMatchObject({\n            search: createSearch({test1: '/foo/baz'}),\n          });\n        });\n      });\n\n      describe('#replace()', () => {\n        it('changes the static root location for every consumer replace', () => {\n          history1.replace('/foo');\n\n          expect(historyService1.rootHistory.location).toMatchObject({\n            search: createSearch({test1: '/foo'}),\n          });\n\n          history2.replace('/bar?baz=1');\n\n          expect(historyService1.rootHistory.location).toMatchObject({\n            search: createSearch({test1: '/foo', test2: '/bar?baz=1'}),\n          });\n        });\n\n        it('normalizes the pathname', () => {\n          history1.replace('foo');\n\n          expect(historyService1.rootHistory.location).toMatchObject({\n            search: createSearch({test1: '/foo'}),\n          });\n        });\n\n        it('handles relative pathnames', () => {\n          history1.replace('/foo/bar');\n          history1.replace('baz');\n\n          expect(historyService1.rootHistory.location).toMatchObject({\n            search: createSearch({test1: '/foo/baz'}),\n          });\n        });\n      });\n\n      describe('#go()', () => {\n        it('does nothing and logs a warning that go() is not supported', () => {\n          history1.push('/foo');\n\n          const rootLocation = historyService1.rootHistory.location;\n\n          history1.go(-1);\n\n          expect(historyService1.rootHistory.location).toBe(rootLocation);\n\n          expect(stubbedLogger.warn).toHaveBeenCalledWith(\n            'history.go() is not supported.',\n          );\n        });\n      });\n\n      describe('#back()', () => {\n        it('does nothing and logs a warning that back() is not supported', () => {\n          history1.push('/foo');\n\n          const rootLocation = historyService1.rootHistory.location;\n\n          history1.back();\n\n          expect(historyService1.rootHistory.location).toBe(rootLocation);\n\n          expect(stubbedLogger.warn).toHaveBeenCalledWith(\n            'history.back() is not supported.',\n          );\n        });\n      });\n\n      describe('#forward()', () => {\n        it('does nothing and logs a warning that forward() is not supported', () => {\n          history1.push('foo');\n\n          const rootLocation = historyService1.rootHistory.location;\n\n          history1.forward();\n\n          expect(historyService1.rootHistory.location).toBe(rootLocation);\n\n          expect(stubbedLogger.warn).toHaveBeenCalledWith(\n            'history.forward() is not supported.',\n          );\n        });\n      });\n\n      describe('#block()', () => {\n        it('does nothing and logs a warning', () => {\n          const promptHookSpy = jest.fn();\n\n          history1.block(promptHookSpy);\n          history1.push('/foo?bar=1');\n\n          expect(historyService1.rootHistory.location).toMatchObject({\n            search: createSearch({test1: '/foo?bar=1'}),\n          });\n\n          expect(promptHookSpy).not.toHaveBeenCalled();\n\n          expect(stubbedLogger.warn).toHaveBeenCalledWith(\n            'history.block() is not supported.',\n          );\n        });\n\n        it('still returns a no-op unblock function', () => {\n          const promptHookSpy = jest.fn();\n          const unblock = history1.block(promptHookSpy);\n\n          unblock();\n        });\n      });\n\n      describe('#listen()', () => {\n        it('does nothing and logs a warning', () => {\n          const listenSpy = jest.fn();\n\n          history1.listen(listenSpy);\n          history1.push('/foo?bar=1');\n\n          expect(listenSpy).not.toHaveBeenCalled();\n\n          expect(stubbedLogger.warn).toHaveBeenCalledWith(\n            'history.listen() is not supported.',\n          );\n        });\n\n        it('still returns a no-op unregister function', () => {\n          const listenSpy = jest.fn();\n          const unregister = history1.listen(listenSpy);\n\n          unregister();\n        });\n      });\n\n      describe('#createHref()', () => {\n        it('returns the href for the given location based on the static root history', () => {\n          history1.push('/foo');\n\n          const location = {pathname: '/bar', search: '?a=b'};\n          const href = history2.createHref(location);\n\n          expect(href).toBe(\n            createUrl(\n              {test1: '/foo', test2: '/bar?a=b'},\n              {pathname: '/example', relative: true},\n            ),\n          );\n        });\n\n        it('normalizes the pathname', () => {\n          history1.push('/foo');\n\n          const location = {pathname: 'bar'};\n          const href = history2.createHref(location);\n\n          expect(href).toBe(\n            createUrl(\n              {test1: '/foo', test2: '/bar'},\n              {pathname: '/example', relative: true},\n            ),\n          );\n        });\n      });\n    });\n\n    describe('#rootHistory', () => {\n      describe('#location', () => {\n        it('returns the root location containing all consumer locations for a server request with a relative url', () => {\n          const serverRequest: ServerRequestV1 = {\n            url: createUrl({test1: '/foo', test2: 'bar'}, {relative: true}),\n            cookies: {},\n            headers: {},\n          };\n\n          createHistories(serverRequest);\n\n          expect(historyService1.rootHistory.location).toMatchObject({\n            pathname: '/',\n            search: createSearch({test1: '/foo', test2: 'bar'}),\n          });\n        });\n\n        it('returns the root location containing all consumer locations for a server request with an absolute url', () => {\n          const serverRequest: ServerRequestV1 = {\n            url: createUrl({test1: '/foo', test2: 'bar'}, {relative: false}),\n            cookies: {},\n            headers: {},\n          };\n\n          createHistories(serverRequest);\n\n          expect(historyService1.rootHistory.location).toMatchObject({\n            pathname: '/',\n            search: createSearch({test1: '/foo', test2: 'bar'}),\n          });\n        });\n      });\n    });\n\n    describe('when no Logger Feature Service is provided', () => {\n      let consoleWarnSpy: jest.SpyInstance;\n\n      beforeEach(() => {\n        consoleWarnSpy = jest.spyOn(console, 'warn');\n\n        mockEnv.featureServices['s2:logger'] = undefined;\n\n        mockEnv.featureServices['s2:server-request'] = {\n          url: '/',\n          cookies: {},\n          headers: {},\n        };\n      });\n\n      afterEach(() => {\n        consoleWarnSpy.mockRestore();\n      });\n\n      it('logs messages using the console', () => {\n        const historyServiceBinder = createHistoryServiceBinder();\n        const historyService = historyServiceBinder('test1').featureService;\n        const staticHistory = historyService.history;\n\n        staticHistory.go(-1);\n\n        expect(consoleWarnSpy).toHaveBeenCalledWith(\n          'history.go() is not supported.',\n        );\n      });\n    });\n  });\n});\n"]}