{"version":3,"file":"create-feature-hub.test.js","sourceRoot":"","sources":["../../../src/__tests__/create-feature-hub.test.ts"],"names":[],"mappings":"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","sourcesContent":["// tslint:disable:no-implicit-dependencies\n\nimport {FeatureHubOptions, createFeatureHub} from '../create-feature-hub';\nimport {\n  FeatureAppDefinition,\n  FeatureAppDescriptor,\n  FeatureAppManager,\n} from '../feature-app-manager';\nimport {\n  FeatureServiceProviderDefinition,\n  FeatureServiceRegistry,\n  SharedFeatureService,\n} from '../feature-service-registry';\nimport {logger} from './logger';\n\ndescribe('createFeatureHub()', () => {\n  let featureHubOptions: FeatureHubOptions;\n\n  beforeEach(() => {\n    featureHubOptions = {logger};\n  });\n\n  describe('without any options', () => {\n    it('creates a Feature Hub that contains a Feature App manager', () => {\n      const {featureAppManager} = createFeatureHub('test:integrator');\n\n      expect(featureAppManager).toBeInstanceOf(FeatureAppManager);\n    });\n\n    it('creates a Feature Hub that contains a Feature Service registry', () => {\n      const {featureServiceRegistry} = createFeatureHub('test:integrator');\n\n      expect(featureServiceRegistry).toBeInstanceOf(FeatureServiceRegistry);\n    });\n\n    it('creates a Feature Hub that contains an empty set of Feature Services', () => {\n      const {featureServices} = createFeatureHub('test:integrator');\n\n      expect(featureServices).toEqual({});\n    });\n  });\n\n  describe('featureAppManager#getAsyncFeatureAppDefinition', () => {\n    describe('without a module loader', () => {\n      it('throws an error', () => {\n        const {featureAppManager} = createFeatureHub('test:integrator');\n\n        expect(() =>\n          featureAppManager.getAsyncFeatureAppDefinition(\n            'http://example.com/test.js',\n          ),\n        ).toThrowError(new Error('No module loader provided.'));\n      });\n    });\n\n    describe('with a module loader', () => {\n      let mockModuleLoader: jest.Mock;\n\n      beforeEach(() => {\n        mockModuleLoader = jest.fn(async () => Promise.resolve());\n\n        featureHubOptions = {\n          ...featureHubOptions,\n          moduleLoader: mockModuleLoader,\n        };\n      });\n\n      it('uses the module loader to load the Feature App definition', () => {\n        const {featureAppManager} = createFeatureHub(\n          'test:integrator',\n          featureHubOptions,\n        );\n\n        const url = 'http://example.com/test.js';\n\n        featureAppManager.getAsyncFeatureAppDefinition(url, 'a');\n\n        expect(mockModuleLoader).toHaveBeenCalledWith(url, 'a');\n      });\n    });\n  });\n\n  describe('featureAppManager#createFeatureAppScope', () => {\n    let mockFeatureApp: {};\n    let mockFeatureAppCreate: jest.Mock;\n    let mockFeatureAppDefinition: FeatureAppDefinition<unknown>;\n\n    beforeEach(() => {\n      mockFeatureApp = {};\n      mockFeatureAppCreate = jest.fn(() => mockFeatureApp);\n\n      mockFeatureAppDefinition = {\n        dependencies: {externals: {foo: '^1.0.0'}},\n        create: mockFeatureAppCreate,\n      };\n    });\n\n    it('creates a Feature App', () => {\n      const {featureAppManager} = createFeatureHub(\n        'test:integrator',\n        featureHubOptions,\n      );\n\n      const {featureApp} = featureAppManager.createFeatureAppScope(\n        'test:feature-app',\n        mockFeatureAppDefinition,\n      );\n\n      expect(mockFeatureAppCreate).toHaveBeenCalledWith({\n        featureAppId: 'test:feature-app',\n        featureServices: {},\n      });\n\n      expect(featureApp).toBe(mockFeatureApp);\n    });\n\n    describe('with provided externals', () => {\n      beforeEach(() => {\n        featureHubOptions = {...featureHubOptions, providedExternals: {}};\n      });\n\n      it('throws for a Feature App with mismatching externals', () => {\n        const {featureAppManager} = createFeatureHub(\n          'test:integrator',\n          featureHubOptions,\n        );\n\n        expect(() =>\n          featureAppManager.createFeatureAppScope(\n            'test:feature-app',\n            mockFeatureAppDefinition,\n          ),\n        ).toThrowError(\n          new Error(\n            'The external dependency \"foo\" as required by \"test:feature-app\" is not provided.',\n          ),\n        );\n      });\n    });\n\n    describe('with an onBind callback', () => {\n      it('calls the onBind callback successfully', () => {\n        const mockOnBind = jest.fn();\n        const featureAppId = 'testId';\n        const featureAppName = 'testName';\n\n        const {featureAppManager} = createFeatureHub('test:integrator', {\n          ...featureHubOptions,\n          onBind: mockOnBind,\n        });\n\n        const parentFeatureApp: FeatureAppDescriptor = {\n          featureAppId: 'parentTestId',\n          featureAppName: 'parentTestName',\n        };\n\n        featureAppManager.createFeatureAppScope(\n          featureAppId,\n          mockFeatureAppDefinition,\n          {featureAppName, parentFeatureApp},\n        );\n\n        expect(mockOnBind.mock.calls).toEqual([\n          [\n            {\n              featureAppDefinition: mockFeatureAppDefinition,\n              featureAppId,\n              featureAppName,\n              parentFeatureApp,\n            },\n          ],\n        ]);\n      });\n    });\n  });\n\n  describe('with Feature Service definitions', () => {\n    let mockFeatureServiceCreate: jest.Mock;\n    let mockFeatureServiceV1Binder: jest.Mock;\n    let mockFeatureServiceV1: {};\n\n    beforeEach(() => {\n      mockFeatureServiceV1 = {};\n\n      mockFeatureServiceV1Binder = jest.fn(() => ({\n        featureService: mockFeatureServiceV1,\n      }));\n\n      mockFeatureServiceCreate = jest.fn(() => ({\n        '1.0.0': mockFeatureServiceV1Binder,\n      }));\n\n      featureHubOptions = {\n        ...featureHubOptions,\n        featureServiceDefinitions: [\n          {\n            id: 'test:feature-service',\n            dependencies: {externals: {foo: '^1.0.0'}},\n            create: mockFeatureServiceCreate,\n          },\n        ],\n      };\n    });\n\n    it('registers and creates the Feature Services', () => {\n      createFeatureHub('test:integrator', featureHubOptions);\n\n      expect(mockFeatureServiceCreate).toHaveBeenCalledWith({\n        featureServices: {},\n      });\n    });\n\n    describe('and with provided externals', () => {\n      beforeEach(() => {\n        featureHubOptions = {...featureHubOptions, providedExternals: {}};\n      });\n\n      it('throws for a Feature Service with mismatching externals', () => {\n        expect(() =>\n          createFeatureHub('test:integrator', featureHubOptions),\n        ).toThrowError(\n          new Error(\n            'The external dependency \"foo\" as required by \"test:feature-service\" is not provided.',\n          ),\n        );\n      });\n    });\n\n    describe('and without Feature Service dependencies', () => {\n      it('creates a Feature Hub that contains an empty set of Feature Services', () => {\n        const {featureServices} = createFeatureHub(\n          'test:integrator',\n          featureHubOptions,\n        );\n\n        expect(featureServices).toEqual({});\n      });\n    });\n\n    describe('and with Feature Service dependencies', () => {\n      beforeEach(() => {\n        featureHubOptions = {\n          ...featureHubOptions,\n          featureServiceDependencies: {'test:feature-service': '^1.0.0'},\n        };\n      });\n\n      it('creates a Feature Hub that contains Feature Services that are bound to the integrator', () => {\n        const {featureServices} = createFeatureHub(\n          'test:integrator',\n          featureHubOptions,\n        );\n\n        expect(mockFeatureServiceV1Binder.mock.calls).toEqual([\n          ['test:integrator', undefined],\n        ]);\n\n        expect(featureServices['test:feature-service']).toBe(\n          mockFeatureServiceV1,\n        );\n      });\n    });\n  });\n\n  describe('logging', () => {\n    let featureAppDefinition: FeatureAppDefinition<unknown>;\n    let featureServiceDefinitions: FeatureServiceProviderDefinition<SharedFeatureService>[];\n    let expectedLogCalls: string[][];\n\n    beforeEach(() => {\n      featureAppDefinition = {create: jest.fn(() => ({}))};\n\n      featureServiceDefinitions = [\n        {id: 'test:feature-service', create: () => ({'1.0.0': jest.fn()})},\n      ];\n\n      expectedLogCalls = [\n        [\n          'The Feature Service \"test:feature-service\" has been successfully registered by registrant \"test:integrator\".',\n        ],\n        [\n          'The Feature App with the ID \"test:feature-app\" has been successfully created.',\n        ],\n      ];\n    });\n\n    describe('with a custom logger', () => {\n      it('logs messages using the custom logger', () => {\n        const {featureAppManager} = createFeatureHub('test:integrator', {\n          featureServiceDefinitions,\n          logger,\n        });\n\n        featureAppManager.createFeatureAppScope(\n          'test:feature-app',\n          featureAppDefinition,\n        );\n\n        expect(logger.info.mock.calls).toEqual(expectedLogCalls);\n      });\n    });\n\n    describe('without a custom logger', () => {\n      let consoleInfoSpy: jest.SpyInstance;\n\n      beforeEach(() => {\n        consoleInfoSpy = jest.spyOn(console, 'info');\n      });\n\n      afterEach(() => {\n        consoleInfoSpy.mockRestore();\n      });\n\n      it('logs messages using the console', () => {\n        const {featureAppManager} = createFeatureHub('test:integrator', {\n          featureServiceDefinitions,\n        });\n\n        featureAppManager.createFeatureAppScope(\n          'test:feature-app',\n          featureAppDefinition,\n        );\n\n        expect(consoleInfoSpy.mock.calls).toEqual(expectedLogCalls);\n      });\n    });\n  });\n});\n"]}