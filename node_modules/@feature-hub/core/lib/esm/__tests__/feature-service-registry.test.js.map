{"version":3,"file":"feature-service-registry.test.js","sourceRoot":"","sources":["../../../src/__tests__/feature-service-registry.test.ts"],"names":[],"mappings":"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","sourcesContent":["// tslint:disable:no-implicit-dependencies\n\nimport {\n  FeatureServiceBinding,\n  FeatureServiceProviderDefinition,\n  FeatureServiceRegistry,\n  SharedFeatureService,\n} from '..';\nimport {ExternalsValidator} from '../externals-validator';\nimport {logger} from './logger';\n\ninterface MockProviderDefinition\n  extends FeatureServiceProviderDefinition<SharedFeatureService> {\n  create: jest.Mock;\n}\n\ninterface MockFeatureService {\n  kind: string;\n}\n\ninterface MockFeatureServiceBinding\n  extends FeatureServiceBinding<MockFeatureService> {\n  unbind?: jest.Mock;\n}\n\ndescribe('FeatureServiceRegistry', () => {\n  let featureServiceRegistry: FeatureServiceRegistry;\n  let mockExternalsValidator: ExternalsValidator;\n  let providerDefinitionA: MockProviderDefinition;\n  let providerDefinitionB: MockProviderDefinition;\n  let providerDefinitionC: MockProviderDefinition;\n  let binderA: jest.Mock;\n  let binderB: jest.Mock;\n  let binderC: jest.Mock;\n  let bindingA: MockFeatureServiceBinding;\n  let bindingB: MockFeatureServiceBinding;\n  let bindingC: MockFeatureServiceBinding;\n  let featureServiceA: MockFeatureService;\n  let featureServiceB: MockFeatureService;\n  let featureServiceC: MockFeatureService;\n\n  beforeEach(() => {\n    mockExternalsValidator = {\n      validate: jest.fn(),\n    } as Partial<ExternalsValidator> as ExternalsValidator;\n\n    featureServiceRegistry = new FeatureServiceRegistry({logger});\n\n    featureServiceA = {kind: 'featureServiceA'};\n    bindingA = {featureService: featureServiceA};\n    binderA = jest.fn(() => bindingA);\n\n    providerDefinitionA = {\n      id: 'a',\n      create: jest.fn(() => ({'1.1.0': binderA})),\n    };\n\n    featureServiceB = {kind: 'featureServiceB'};\n    bindingB = {featureService: featureServiceB};\n    binderB = jest.fn(() => bindingB);\n\n    providerDefinitionB = {\n      id: 'b',\n      optionalDependencies: {featureServices: {a: '^1.0.0'}},\n      create: jest.fn(() => ({'1.0.0': binderB})),\n    };\n\n    featureServiceC = {kind: 'featureServiceC'};\n    bindingC = {featureService: featureServiceC};\n    binderC = jest.fn(() => bindingC);\n\n    providerDefinitionC = {\n      id: 'c',\n      dependencies: {featureServices: {a: '^1.0.0', b: '1.0.0'}},\n      create: jest.fn(() => ({'2.0.0': binderC})),\n    };\n  });\n\n  describe('#registerFeatureServices', () => {\n    function testRegistrationOrderABC(): void {\n      expect(providerDefinitionA.create.mock.calls).toEqual([\n        [{featureServices: {}}],\n      ]);\n\n      expect(binderA.mock.calls).toEqual([\n        ['b', undefined],\n        ['c', undefined],\n      ]);\n\n      expect(providerDefinitionB.create.mock.calls).toEqual([\n        [{featureServices: {a: featureServiceA}}],\n      ]);\n\n      expect(binderB.mock.calls).toEqual([['c', undefined]]);\n\n      expect(providerDefinitionC.create.mock.calls).toEqual([\n        [{featureServices: {a: featureServiceA, b: featureServiceB}}],\n      ]);\n\n      expect(binderC.mock.calls).toEqual([]);\n\n      expect(logger.info.mock.calls).toEqual([\n        [\n          'The Feature Service \"a\" has been successfully registered by registrant \"test\".',\n        ],\n        [\n          'The required Feature Service \"a\" has been successfully bound to consumer \"b\".',\n        ],\n        [\n          'The Feature Service \"b\" has been successfully registered by registrant \"test\".',\n        ],\n        [\n          'The required Feature Service \"a\" has been successfully bound to consumer \"c\".',\n        ],\n        [\n          'The required Feature Service \"b\" has been successfully bound to consumer \"c\".',\n        ],\n        [\n          'The Feature Service \"c\" has been successfully registered by registrant \"test\".',\n        ],\n      ]);\n    }\n    beforeEach(() => {\n      featureServiceRegistry = new FeatureServiceRegistry({logger});\n    });\n\n    it('registers the Feature Services \"a\", \"b\", \"c\" one after the other', () => {\n      featureServiceRegistry.registerFeatureServices(\n        [providerDefinitionA],\n        'test',\n      );\n\n      featureServiceRegistry.registerFeatureServices(\n        [providerDefinitionB],\n        'test',\n      );\n\n      featureServiceRegistry.registerFeatureServices(\n        [providerDefinitionC],\n        'test',\n      );\n\n      testRegistrationOrderABC();\n    });\n\n    it('registers the Feature Services \"a\", \"b\", \"c\" all at once in topologically sorted order', () => {\n      featureServiceRegistry.registerFeatureServices(\n        [providerDefinitionB, providerDefinitionC, providerDefinitionA],\n        'test',\n      );\n\n      testRegistrationOrderABC();\n    });\n\n    it('does not register the already existing Feature Service \"b\"', () => {\n      featureServiceRegistry.registerFeatureServices(\n        [providerDefinitionA, providerDefinitionB],\n        'test',\n      );\n\n      featureServiceRegistry.registerFeatureServices(\n        [providerDefinitionB],\n        'test',\n      );\n\n      expect(providerDefinitionB.create.mock.calls).toEqual([\n        [{featureServices: {a: featureServiceA}}],\n      ]);\n\n      expect(binderA.mock.calls).toEqual([['b', undefined]]);\n      expect(binderB.mock.calls).toEqual([]);\n\n      expect(logger.info.mock.calls).toEqual([\n        [\n          'The Feature Service \"a\" has been successfully registered by registrant \"test\".',\n        ],\n        [\n          'The required Feature Service \"a\" has been successfully bound to consumer \"b\".',\n        ],\n        [\n          'The Feature Service \"b\" has been successfully registered by registrant \"test\".',\n        ],\n      ]);\n\n      expect(logger.warn.mock.calls).toEqual([\n        [\n          'The already registered Feature Service \"b\" could not be re-registered by registrant \"test\".',\n        ],\n      ]);\n    });\n\n    it('does not register a Feature Service that returns undefined from create', () => {\n      providerDefinitionA.create.mockReturnValue(undefined);\n\n      featureServiceRegistry.registerFeatureServices(\n        [providerDefinitionA],\n        'test',\n      );\n\n      expect(providerDefinitionA.create.mock.calls).toEqual([\n        [{featureServices: {}}],\n      ]);\n\n      expect(logger.info.mock.calls).toEqual([\n        [\n          'The Feature Service \"a\" could not be registered by registrant \"test\" because it returned undefined.',\n        ],\n      ]);\n    });\n\n    it('fails to register the Feature Service \"c\" due to the lack of dependency \"a\"', () => {\n      expect(() =>\n        featureServiceRegistry.registerFeatureServices(\n          [providerDefinitionC],\n          'test',\n        ),\n      ).toThrowError(\n        new Error(\n          'The required Feature Service \"a\" is not registered and therefore could not be bound to consumer \"c\".',\n        ),\n      );\n    });\n\n    it('does not fail to register the Feature Service \"b\" due to the lack of optional dependency \"a\"', () => {\n      providerDefinitionB = {\n        id: 'b',\n        optionalDependencies: {featureServices: {a: '^1.0.0'}},\n        create: jest.fn(() => ({'1.0.0': jest.fn()})),\n      };\n\n      expect(() =>\n        featureServiceRegistry.registerFeatureServices(\n          [providerDefinitionB],\n          'test',\n        ),\n      ).not.toThrowError();\n\n      expect(logger.info.mock.calls).toEqual([\n        [\n          'The optional Feature Service \"a\" is not registered and therefore could not be bound to consumer \"b\".',\n        ],\n        [\n          'The Feature Service \"b\" has been successfully registered by registrant \"test\".',\n        ],\n      ]);\n    });\n\n    it('fails to register a Feature Service due to an unsupported dependency version', () => {\n      const stateProviderD = {\n        id: 'd',\n        dependencies: {featureServices: {a: '^2.0.0'}},\n        create: jest.fn(),\n      };\n\n      expect(() =>\n        featureServiceRegistry.registerFeatureServices(\n          [providerDefinitionA, stateProviderD],\n          'test',\n        ),\n      ).toThrowError(\n        new Error(\n          'The required Feature Service \"a\" in the unsupported version range \"^2.0.0\" could not be bound to consumer \"d\". The supported versions are [\"1.1.0\"].',\n        ),\n      );\n    });\n\n    it('does not fail to register a Feature Service due to an unsupported optional dependency version', () => {\n      const stateProviderD = {\n        id: 'd',\n        optionalDependencies: {featureServices: {a: '^2.0.0'}},\n        create: jest.fn(() => ({})),\n      };\n\n      expect(() =>\n        featureServiceRegistry.registerFeatureServices(\n          [providerDefinitionA, stateProviderD],\n          'test',\n        ),\n      ).not.toThrowError();\n\n      expect(logger.info.mock.calls).toEqual([\n        [\n          'The Feature Service \"a\" has been successfully registered by registrant \"test\".',\n        ],\n        [\n          'The optional Feature Service \"a\" in the unsupported version range \"^2.0.0\" could not be bound to consumer \"d\". The supported versions are [\"1.1.0\"].',\n        ],\n        [\n          'The Feature Service \"d\" has been successfully registered by registrant \"test\".',\n        ],\n      ]);\n    });\n\n    it('fails to register a Feature Service due to an invalid dependency version', () => {\n      const stateProviderDefinitionD = {\n        id: 'd',\n        dependencies: {featureServices: {a: ''}},\n        create: jest.fn(),\n      };\n\n      expect(() =>\n        featureServiceRegistry.registerFeatureServices(\n          [providerDefinitionA, stateProviderDefinitionD],\n          'test',\n        ),\n      ).toThrowError(\n        new Error(\n          'The required Feature Service \"a\" in an invalid version could not be bound to consumer \"d\".',\n        ),\n      );\n    });\n\n    it('does not fail to register a Feature Service due to an invalid optional dependency version', () => {\n      const stateProviderDefinitionD = {\n        id: 'd',\n        optionalDependencies: {featureServices: {a: ''}},\n        create: jest.fn(() => ({})),\n      };\n\n      expect(() =>\n        featureServiceRegistry.registerFeatureServices(\n          [providerDefinitionA, stateProviderDefinitionD],\n          'test',\n        ),\n      ).not.toThrowError();\n\n      expect(logger.info.mock.calls).toEqual([\n        [\n          'The Feature Service \"a\" has been successfully registered by registrant \"test\".',\n        ],\n        [\n          'The optional Feature Service \"a\" in an invalid version could not be bound to consumer \"d\".',\n        ],\n        [\n          'The Feature Service \"d\" has been successfully registered by registrant \"test\".',\n        ],\n      ]);\n    });\n\n    it('fails to register a Feature Service that provides an invalid version', () => {\n      const stateProviderDefinitionD = {\n        id: 'd',\n        create: jest.fn(() => ({'1.0.0': jest.fn(), '2.0': jest.fn()})),\n      };\n\n      expect(() =>\n        featureServiceRegistry.registerFeatureServices(\n          [stateProviderDefinitionD],\n          'test',\n        ),\n      ).toThrowError(\n        new Error(\n          'The Feature Service \"d\" could not be registered by registrant \"test\" because it defines the invalid version \"2.0\".',\n        ),\n      );\n    });\n\n    describe('without an ExternalsValidator provided to the FeatureServiceRegistry', () => {\n      describe('with a Feature Service definition that is declaring external dependencies', () => {\n        beforeEach(() => {\n          providerDefinitionA = {\n            ...providerDefinitionA,\n            dependencies: {\n              externals: {\n                react: '^16.0.0',\n              },\n            },\n          };\n        });\n\n        it(\"doesn't throw an error\", () => {\n          expect(() => {\n            featureServiceRegistry.registerFeatureServices(\n              [providerDefinitionA],\n              'test',\n            );\n          }).not.toThrowError();\n        });\n      });\n    });\n\n    describe('with an ExternalsValidator provided to the FeatureServiceRegistry', () => {\n      beforeEach(() => {\n        featureServiceRegistry = new FeatureServiceRegistry({\n          externalsValidator: mockExternalsValidator,\n          logger,\n        });\n      });\n\n      describe('with a Feature Service definition that is failing the externals validation', () => {\n        let mockError: Error;\n\n        beforeEach(() => {\n          mockError = new Error('mockError');\n\n          mockExternalsValidator.validate = jest.fn(() => {\n            throw mockError;\n          });\n\n          providerDefinitionA = {\n            ...providerDefinitionA,\n            dependencies: {\n              externals: {\n                react: '^16.0.0',\n              },\n            },\n          };\n        });\n\n        it('calls the provided ExternalsValidator with the defined externals', () => {\n          try {\n            featureServiceRegistry.registerFeatureServices(\n              [providerDefinitionA],\n              'test',\n            );\n          } catch {}\n\n          expect(mockExternalsValidator.validate).toHaveBeenCalledWith(\n            {react: '^16.0.0'},\n            'a',\n          );\n        });\n\n        it('throws the validation error', () => {\n          expect(() => {\n            featureServiceRegistry.registerFeatureServices(\n              [providerDefinitionA],\n              'test',\n            );\n          }).toThrowError(mockError);\n        });\n      });\n\n      describe('with a Feature Service definition that is not failing the externals validation', () => {\n        beforeEach(() => {\n          providerDefinitionA = {\n            ...providerDefinitionA,\n            dependencies: {\n              externals: {\n                react: '^16.0.0',\n              },\n            },\n          };\n        });\n\n        it('calls the provided ExternalsValidator with the defined externals', () => {\n          try {\n            featureServiceRegistry.registerFeatureServices(\n              [providerDefinitionA],\n              'test',\n            );\n          } catch {}\n\n          expect(mockExternalsValidator.validate).toHaveBeenCalledWith(\n            {react: '^16.0.0'},\n            'a',\n          );\n        });\n\n        it(\"doesn't throw an error\", () => {\n          expect(() => {\n            featureServiceRegistry.registerFeatureServices(\n              [providerDefinitionA],\n              'test',\n            );\n          }).not.toThrowError();\n        });\n      });\n\n      describe('with a Feature Service definition that declares no externals', () => {\n        it('does not call the provided ExternalsValidator', () => {\n          featureServiceRegistry.registerFeatureServices(\n            [providerDefinitionA],\n            'test',\n          );\n\n          expect(mockExternalsValidator.validate).not.toHaveBeenCalled();\n        });\n\n        it(\"doesn't throw an error\", () => {\n          expect(() => {\n            featureServiceRegistry.registerFeatureServices(\n              [providerDefinitionA],\n              'test',\n            );\n          }).not.toThrowError();\n        });\n      });\n    });\n  });\n\n  describe('#bindFeatureServices', () => {\n    describe('for a Feature Service consumer without dependencies', () => {\n      it('creates a bindings object with no Feature Services', () => {\n        expect(featureServiceRegistry.bindFeatureServices({}, 'foo')).toEqual({\n          featureServices: {},\n          unbind: expect.any(Function),\n        });\n      });\n    });\n\n    describe('for a Feature Service consumer with caret range dependencies', () => {\n      it('creates a bindings object with Feature Services', () => {\n        featureServiceRegistry = new FeatureServiceRegistry({logger});\n\n        featureServiceRegistry.registerFeatureServices(\n          [providerDefinitionA],\n          'test',\n        );\n\n        expect(binderA.mock.calls).toEqual([]);\n\n        expect(\n          featureServiceRegistry.bindFeatureServices(\n            {dependencies: {featureServices: {a: '^1.0.0'}}},\n            'foo',\n          ),\n        ).toEqual({\n          featureServices: {a: featureServiceA},\n          unbind: expect.any(Function),\n        });\n\n        expect(binderA.mock.calls).toEqual([['foo', undefined]]);\n      });\n    });\n\n    describe('for a Feature Service consumer with tilde range dependencies', () => {\n      it('creates a bindings object with Feature Services', () => {\n        featureServiceRegistry = new FeatureServiceRegistry({logger});\n\n        featureServiceRegistry.registerFeatureServices(\n          [providerDefinitionA],\n          'test',\n        );\n\n        expect(binderA.mock.calls).toEqual([]);\n\n        expect(\n          featureServiceRegistry.bindFeatureServices(\n            {dependencies: {featureServices: {a: '~1.0.0'}}},\n            'foo',\n          ),\n        ).toEqual({\n          featureServices: {a: featureServiceA},\n          unbind: expect.any(Function),\n        });\n\n        expect(binderA.mock.calls).toEqual([['foo', undefined]]);\n      });\n    });\n\n    describe('for a Feature Service consumer with exact dependencies', () => {\n      it('creates a bindings object with Feature Services', () => {\n        featureServiceRegistry = new FeatureServiceRegistry({logger});\n\n        featureServiceRegistry.registerFeatureServices(\n          [providerDefinitionA],\n          'test',\n        );\n\n        expect(binderA.mock.calls).toEqual([]);\n\n        expect(\n          featureServiceRegistry.bindFeatureServices(\n            {dependencies: {featureServices: {a: '1.0.0'}}},\n            'foo',\n          ),\n        ).toEqual({\n          featureServices: {a: featureServiceA},\n          unbind: expect.any(Function),\n        });\n\n        expect(binderA.mock.calls).toEqual([['foo', undefined]]);\n      });\n    });\n\n    describe('for a Feature Service consumer and an optional dependency to a Feature Service that returned undefined in create', () => {\n      it('creates a bindings object without Feature Services', () => {\n        featureServiceRegistry = new FeatureServiceRegistry({logger});\n\n        providerDefinitionA.create.mockReturnValue(undefined);\n\n        featureServiceRegistry.registerFeatureServices(\n          [providerDefinitionA],\n          'test',\n        );\n\n        expect(binderA.mock.calls).toEqual([]);\n\n        expect(\n          featureServiceRegistry.bindFeatureServices(\n            {optionalDependencies: {featureServices: {a: '1.1.0'}}},\n            'foo',\n          ),\n        ).toEqual({featureServices: {}, unbind: expect.any(Function)});\n\n        expect(binderA.mock.calls).toEqual([]);\n      });\n    });\n\n    describe('for a Feature Service consumer and two optional dependencies', () => {\n      describe('with the first dependency missing', () => {\n        it('creates a bindings object with Feature Services', () => {\n          featureServiceRegistry = new FeatureServiceRegistry({logger});\n\n          featureServiceRegistry.registerFeatureServices(\n            [providerDefinitionA],\n            'test',\n          );\n\n          expect(binderA.mock.calls).toEqual([]);\n\n          expect(\n            featureServiceRegistry.bindFeatureServices(\n              {\n                optionalDependencies: {\n                  featureServices: {b: '1.0.0', a: '1.1.0'},\n                },\n              },\n              'foo',\n            ),\n          ).toEqual({\n            featureServices: {a: featureServiceA},\n            unbind: expect.any(Function),\n          });\n\n          expect(binderA.mock.calls).toEqual([['foo', undefined]]);\n        });\n      });\n\n      describe('with the second dependency missing', () => {\n        it('creates a bindings object with Feature Services', () => {\n          featureServiceRegistry = new FeatureServiceRegistry({logger});\n\n          featureServiceRegistry.registerFeatureServices(\n            [providerDefinitionA],\n            'test',\n          );\n\n          expect(binderA.mock.calls).toEqual([]);\n\n          expect(\n            featureServiceRegistry.bindFeatureServices(\n              {\n                optionalDependencies: {\n                  featureServices: {a: '1.1.0', b: '1.0.0'},\n                },\n              },\n              'foo',\n            ),\n          ).toEqual({\n            featureServices: {a: featureServiceA},\n            unbind: expect.any(Function),\n          });\n\n          expect(binderA.mock.calls).toEqual([['foo', undefined]]);\n        });\n      });\n\n      describe('with no dependency missing', () => {\n        it('creates a bindings object with Feature Services', () => {\n          featureServiceRegistry = new FeatureServiceRegistry({logger});\n\n          featureServiceRegistry.registerFeatureServices(\n            [providerDefinitionA, providerDefinitionB],\n            'test',\n          );\n\n          expect(binderA.mock.calls).toEqual([['b', undefined]]);\n\n          expect(\n            featureServiceRegistry.bindFeatureServices(\n              {\n                optionalDependencies: {\n                  featureServices: {a: '1.1.0', b: '^1.0.0'},\n                },\n              },\n              'foo',\n            ),\n          ).toEqual({\n            featureServices: {a: featureServiceA, b: featureServiceB},\n            unbind: expect.any(Function),\n          });\n\n          expect(binderA.mock.calls).toEqual([\n            ['b', undefined],\n            ['foo', undefined],\n          ]);\n\n          expect(binderB.mock.calls).toEqual([['foo', undefined]]);\n        });\n      });\n    });\n\n    describe('when a consumerName is provided', () => {\n      it('passes the consumerName to the Feature Service binders of all dependencies', () => {\n        featureServiceRegistry = new FeatureServiceRegistry({logger});\n\n        featureServiceRegistry.registerFeatureServices(\n          [providerDefinitionA, providerDefinitionB],\n          'testId',\n        );\n\n        expect(\n          featureServiceRegistry.bindFeatureServices(\n            {dependencies: {featureServices: {a: '^1.0.0', b: '^1.0.0'}}},\n            'testId',\n            'testName',\n          ),\n        ).toEqual({\n          featureServices: {a: featureServiceA, b: featureServiceB},\n          unbind: expect.any(Function),\n        });\n\n        expect(binderA.mock.calls).toEqual([\n          ['b', undefined],\n          ['testId', 'testName'],\n        ]);\n\n        expect(binderB.mock.calls).toEqual([['testId', 'testName']]);\n      });\n    });\n\n    it('fails to create a bindings object for a consumer which is already bound', () => {\n      featureServiceRegistry.bindFeatureServices({}, 'foo');\n\n      expect(() =>\n        featureServiceRegistry.bindFeatureServices({}, 'foo'),\n      ).toThrowError(\n        new Error(\n          'All required Feature Services are already bound to consumer \"foo\".',\n        ),\n      );\n    });\n\n    describe('#unbind', () => {\n      it('unbinds the consumer', () => {\n        const bindings = featureServiceRegistry.bindFeatureServices(\n          providerDefinitionA,\n          providerDefinitionA.id,\n        );\n\n        bindings.unbind();\n\n        expect(() =>\n          featureServiceRegistry.bindFeatureServices(\n            providerDefinitionA,\n            providerDefinitionA.id,\n          ),\n        ).not.toThrowError();\n      });\n\n      it('unbinds all consumers if applicable, errors are ignored', () => {\n        const mockError = new Error('I should be caught.');\n\n        bindingA.unbind = jest.fn(() => {\n          throw mockError;\n        });\n\n        // The \"bindingB\" intentionally has no destroy method.\n\n        bindingC.unbind = jest.fn();\n\n        featureServiceRegistry.registerFeatureServices(\n          [providerDefinitionA, providerDefinitionB, providerDefinitionC],\n          'test',\n        );\n\n        const bindings = featureServiceRegistry.bindFeatureServices(\n          {\n            dependencies: {\n              featureServices: {a: '1.1.0', b: '1.0.0', c: '2.0.0'},\n            },\n          },\n          'foo',\n        );\n\n        bindings.unbind();\n\n        expect(bindingA.unbind).toHaveBeenCalledTimes(1);\n        expect(bindingC.unbind).toHaveBeenCalledTimes(1);\n\n        expect(logger.info.mock.calls).toEqual([\n          [\n            'The Feature Service \"a\" has been successfully registered by registrant \"test\".',\n          ],\n          [\n            'The required Feature Service \"a\" has been successfully bound to consumer \"b\".',\n          ],\n          [\n            'The Feature Service \"b\" has been successfully registered by registrant \"test\".',\n          ],\n          [\n            'The required Feature Service \"a\" has been successfully bound to consumer \"c\".',\n          ],\n          [\n            'The required Feature Service \"b\" has been successfully bound to consumer \"c\".',\n          ],\n          [\n            'The Feature Service \"c\" has been successfully registered by registrant \"test\".',\n          ],\n          [\n            'The required Feature Service \"a\" has been successfully bound to consumer \"foo\".',\n          ],\n          [\n            'The required Feature Service \"b\" has been successfully bound to consumer \"foo\".',\n          ],\n          [\n            'The required Feature Service \"c\" has been successfully bound to consumer \"foo\".',\n          ],\n          [\n            'The required Feature Service \"b\" has been successfully unbound from consumer \"foo\".',\n          ],\n          [\n            'The required Feature Service \"c\" has been successfully unbound from consumer \"foo\".',\n          ],\n        ]);\n\n        expect(logger.error.mock.calls).toEqual([\n          [\n            'The required Feature Service \"a\" could not be unbound from consumer \"foo\".',\n            mockError,\n          ],\n        ]);\n      });\n\n      it('fails to unbind an already unbound consumer', () => {\n        const bindings = featureServiceRegistry.bindFeatureServices(\n          providerDefinitionA,\n          providerDefinitionA.id,\n        );\n\n        bindings.unbind();\n\n        expect(() => bindings.unbind()).toThrowError(\n          new Error(\n            'All required Feature Services are already unbound from consumer \"a\".',\n          ),\n        );\n      });\n\n      it('fails to unbind an already unbound consumer, even if this consumer has been re-bound', () => {\n        const bindings = featureServiceRegistry.bindFeatureServices(\n          providerDefinitionA,\n          providerDefinitionA.id,\n        );\n\n        bindings.unbind();\n\n        featureServiceRegistry.bindFeatureServices(\n          providerDefinitionA,\n          providerDefinitionA.id,\n        );\n\n        expect(() => bindings.unbind()).toThrowError(\n          new Error(\n            'All required Feature Services are already unbound from consumer \"a\".',\n          ),\n        );\n      });\n    });\n  });\n\n  describe('#getInfo', () => {\n    it('returns info about consumers and registered feature services', () => {\n      featureServiceRegistry = new FeatureServiceRegistry({logger});\n\n      providerDefinitionB = {\n        id: 'b',\n        dependencies: {featureServices: {a: '^1.0.0'}},\n        create: jest.fn(() => ({'1.0.0': binderB, '2.0.0': binderB})),\n      };\n\n      featureServiceRegistry.registerFeatureServices(\n        [providerDefinitionA, providerDefinitionB],\n        'test',\n      );\n\n      featureServiceRegistry.bindFeatureServices(\n        {dependencies: {featureServices: {a: '1.0.0'}}},\n        'foo',\n      );\n\n      expect(featureServiceRegistry.getInfo()).toEqual({\n        consumerIds: ['a', 'b', 'foo'],\n        featureServices: [\n          {id: 'a', versions: ['1.1.0']},\n          {id: 'b', versions: ['1.0.0', '2.0.0']},\n        ],\n      });\n    });\n  });\n\n  describe('without a custom logger', () => {\n    let consoleInfoSpy: jest.SpyInstance;\n\n    beforeEach(() => {\n      consoleInfoSpy = jest.spyOn(console, 'info');\n      featureServiceRegistry = new FeatureServiceRegistry();\n    });\n\n    afterEach(() => {\n      consoleInfoSpy.mockRestore();\n    });\n\n    it('logs messages using the console', () => {\n      featureServiceRegistry.registerFeatureServices(\n        [providerDefinitionA],\n        'test',\n      );\n\n      expect(consoleInfoSpy.mock.calls).toEqual([\n        [\n          'The Feature Service \"a\" has been successfully registered by registrant \"test\".',\n        ],\n      ]);\n    });\n  });\n});\n"]}