import * as React from 'react';
import { FeatureHubContextConsumer } from './feature-hub-context';
import { FeatureAppContext } from './internal/feature-app-context';
import { InternalFeatureAppContainer, } from './internal/internal-feature-app-container';
/**
 * The `FeatureAppContainer` component allows the integrator to bundle Feature
 * Apps instead of loading them from a remote location. It can also be used by
 * a Feature App to render another Feature App as a child.
 *
 * When a Feature App throws an error while rendering or, in the case of a
 * [[ReactFeatureApp]], throws an error in a lifecycle method, the
 * `FeatureAppContainer` renders `null`. On the server, however, rendering
 * errors are not caught and must therefore be handled by the integrator.
 */
export function FeatureAppContainer(props) {
    return (React.createElement(FeatureHubContextConsumer, null, ({ featureAppManager, logger }) => (React.createElement(FeatureAppContext.Consumer, null, (parentFeatureApp) => (React.createElement(InternalFeatureAppContainer, Object.assign({ featureAppManager: featureAppManager, logger: logger, parentFeatureApp: parentFeatureApp }, props)))))));
}
//# sourceMappingURL=feature-app-container.js.map