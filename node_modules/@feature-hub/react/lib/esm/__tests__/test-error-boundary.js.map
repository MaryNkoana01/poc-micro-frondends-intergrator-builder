{"version":3,"file":"test-error-boundary.js","sourceRoot":"","sources":["../../../src/__tests__/test-error-boundary.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAU/B,MAAM,OAAO,iBAAkB,SAAQ,KAAK,CAAC,SAG5C;IAHD;;QAMS,UAAK,GAAG,EAAC,QAAQ,EAAE,KAAK,EAAC,CAAC;IASnC,CAAC;IAPQ,iBAAiB,CAAC,KAAY;QACnC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAEM,MAAM;QACX,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;IAC3E,CAAC;;AAVa,0CAAwB,GAAG,GAAG,EAAE,CAAC,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,AAA3B,CAA4B","sourcesContent":["import * as React from 'react';\n\nexport interface TestErrorBoundaryProps {\n  handleError: (error: Error) => void;\n}\n\nexport interface TestErrorBoundaryState {\n  readonly hasError: boolean;\n}\n\nexport class TestErrorBoundary extends React.Component<\n  TestErrorBoundaryProps,\n  TestErrorBoundaryState\n> {\n  public static getDerivedStateFromError = () => ({hasError: true});\n\n  public state = {hasError: false};\n\n  public componentDidCatch(error: Error): void {\n    this.props.handleError(error);\n  }\n\n  public render(): React.ReactNode {\n    return this.state.hasError ? 'test error boundary' : this.props.children;\n  }\n}\n"]}