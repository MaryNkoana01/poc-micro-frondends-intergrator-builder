{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":";;;AAAA,iCAAiC;AACjC,8BAA4B;AAC5B,kDAAgD;AAChD,uCAAqC;AAOrC;;;;GAIG;AACH,SAAgB,eAAe,CAAC,SAAoB;IAClD,KAAK,MAAM,YAAY,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;QACjD,MAAM,CAAC,QAAQ,CAAC,YAAY,EAAE,EAAE,EAAE,CAAC,QAAQ,EAAE,EAAE;YAC7C,QAAQ,CAAC,SAAS,CAAC,YAAY,CAAkB,CAAC,CAAC;YAEnD,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CAAC;KACJ;AACH,CAAC;AARD,0CAQC;AAED;;;;;GAKG;AACI,KAAK,UAAU,aAAa,CAAC,GAAW;IAC7C,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,MAAM,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC,CAAC;IAEjE,OAAO,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC;AACrD,CAAC;AAJD,sCAIC;AAED,SAAS,uBAAuB,CAAC,GAAW;IAC1C,IAAI,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;QAClD,OAAO,GAAG,CAAC;KACZ;IAED,OAAO,KAAK,GAAG,EAAE,CAAC;AACpB,CAAC","sourcesContent":["// tslint:disable:ordered-imports\nimport 'systemjs/dist/s.js';\nimport 'systemjs/dist/extras/named-register.js';\nimport 'systemjs/dist/extras/amd.js';\n// tslint:enable:ordered-imports\n\nexport interface Externals {\n  readonly [externalName: string]: unknown;\n}\n\n/**\n * @param externals An object with shared npm dependencies that the integrator\n * wants to provide to Feature Apps. The keys are the names of the dependencies\n * that are used in import/require statements. The values are the modules.\n */\nexport function defineExternals(externals: Externals): void {\n  for (const externalName of Object.keys(externals)) {\n    System.register(externalName, [], (exportFn) => {\n      exportFn(externals[externalName] as System.Module);\n\n      return {};\n    });\n  }\n}\n\n/**\n * @param url A URL pointing to a bundle that was built as an AMD or UMD module.\n *\n * @returns A promise that resolves with the loaded module, or is rejected if\n * the module can not be loaded.\n */\nexport async function loadAmdModule(url: string): Promise<unknown> {\n  const module = await System.import(normalizeUrlForSystemJs(url));\n\n  return module.__esModule ? module.default : module;\n}\n\nfunction normalizeUrlForSystemJs(url: string): string {\n  if (/^https?:\\/\\//.test(url) || /^\\.?\\//.test(url)) {\n    return url;\n  }\n\n  return `./${url}`;\n}\n"]}