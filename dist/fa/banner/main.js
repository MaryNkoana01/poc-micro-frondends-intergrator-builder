(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.esm.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.esm.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ isPropValid)
/* harmony export */ });
/* harmony import */ var _emotion_memoize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/memoize */ "./node_modules/@emotion/memoize/dist/emotion-memoize.esm.js");


var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23

var isPropValid = /* #__PURE__ */(0,_emotion_memoize__WEBPACK_IMPORTED_MODULE_0__["default"])(function (prop) {
  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111
  /* o */
  && prop.charCodeAt(1) === 110
  /* n */
  && prop.charCodeAt(2) < 91;
}
/* Z+1 */
);




/***/ }),

/***/ "./node_modules/@emotion/memoize/dist/emotion-memoize.esm.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@emotion/memoize/dist/emotion-memoize.esm.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ memoize)
/* harmony export */ });
function memoize(fn) {
  var cache = Object.create(null);
  return function (arg) {
    if (cache[arg] === undefined) cache[arg] = fn(arg);
    return cache[arg];
  };
}




/***/ }),

/***/ "./node_modules/@emotion/unitless/dist/emotion-unitless.esm.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@emotion/unitless/dist/emotion-unitless.esm.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var unitlessKeys = {
  animationIterationCount: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (unitlessKeys);


/***/ }),

/***/ "./node_modules/@mtnkente/design-tokens/dist/index.cjs.js":
/*!****************************************************************!*\
  !*** ./node_modules/@mtnkente/design-tokens/dist/index.cjs.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

exports.Variant = void 0;
(function (Variant) {
    Variant["LIGHT"] = "light";
    Variant["DARK"] = "dark";
})(exports.Variant || (exports.Variant = {}));
exports.Platform = void 0;
(function (Platform) {
    Platform["CORE"] = "core";
    Platform["PLAY"] = "play";
    Platform["MOMO"] = "momo";
})(exports.Platform || (exports.Platform = {}));
exports.PlatformId = void 0;
(function (PlatformId) {
    PlatformId["CORE"] = "16:1";
    PlatformId["PLAY"] = "55:7";
    PlatformId["MOMO"] = "395:0";
})(exports.PlatformId || (exports.PlatformId = {}));
exports.ModeId = void 0;
(function (ModeId) {
    ModeId["MODE_1"] = "15:0";
})(exports.ModeId || (exports.ModeId = {}));
exports.VariantId = void 0;
(function (VariantId) {
    VariantId["LIGHT"] = "16:2";
    VariantId["DARK"] = "130:0";
})(exports.VariantId || (exports.VariantId = {}));
exports.BreakpointId = void 0;
(function (BreakpointId) {
    BreakpointId["DESKTOP_1440"] = "16:3";
    BreakpointId["TABLET_768"] = "1158:2";
    BreakpointId["MOBILE_360"] = "1158:3";
})(exports.BreakpointId || (exports.BreakpointId = {}));

exports.ModeName = void 0;
(function (ModeName) {
    ModeName["CORE"] = "core";
    ModeName["PLAY"] = "play";
    ModeName["MOMO"] = "momo";
    ModeName["MODE_1"] = "Mode 1";
    ModeName["LIGHT"] = "light";
    ModeName["DARK"] = "dark";
    ModeName["DESKTOP_1440"] = "desktop-1440";
    ModeName["TABLET_768"] = "tablet-768";
    ModeName["MOBILE_360"] = "mobile-360";
})(exports.ModeName || (exports.ModeName = {}));
exports.ResolvedType = void 0;
(function (ResolvedType) {
    ResolvedType["Color"] = "COLOR";
    ResolvedType["Float"] = "FLOAT";
})(exports.ResolvedType || (exports.ResolvedType = {}));
exports.Scope = void 0;
(function (Scope) {
    Scope["AllFills"] = "ALL_FILLS";
    Scope["AllScopes"] = "ALL_SCOPES";
    Scope["CornerRadius"] = "CORNER_RADIUS";
    Scope["EffectColor"] = "EFFECT_COLOR";
    Scope["EffectFloat"] = "EFFECT_FLOAT";
    Scope["FrameFill"] = "FRAME_FILL";
    Scope["Gap"] = "GAP";
    Scope["Opacity"] = "OPACITY";
    Scope["ShapeFill"] = "SHAPE_FILL";
    Scope["StrokeColor"] = "STROKE_COLOR";
    Scope["StrokeFloat"] = "STROKE_FLOAT";
    Scope["TextFill"] = "TEXT_FILL";
    Scope["WidthHeight"] = "WIDTH_HEIGHT";
})(exports.Scope || (exports.Scope = {}));
exports.Type = void 0;
(function (Type) {
    Type["VariableAlias"] = "VARIABLE_ALIAS";
})(exports.Type || (exports.Type = {}));
exports.VariableCollectionName = void 0;
(function (VariableCollectionName) {
    VariableCollectionName["SYS"] = "sys";
    VariableCollectionName["REF"] = "ref";
    VariableCollectionName["COMP"] = "comp";
    VariableCollectionName["BREAKPOINTS"] = "breakpoints";
    VariableCollectionName["SEMANTICS"] = "02.Semantics";
})(exports.VariableCollectionName || (exports.VariableCollectionName = {}));

exports.StyleType = void 0;
(function (StyleType) {
    StyleType["EFFECT"] = "EFFECT";
    StyleType["GRID"] = "GRID";
    StyleType["TEXT"] = "TEXT";
})(exports.StyleType || (exports.StyleType = {}));

exports.TextTransform = void 0;
(function (TextTransform) {
    TextTransform["UPPER"] = "UPPER";
    TextTransform["TITLE"] = "TITLE";
})(exports.TextTransform || (exports.TextTransform = {}));

var core = {
	light: {
		colors: {
			"logo-core-default-colour": "#000000ff",
			"logo-core-inverted-colour": "#ffffffff",
			"logo-core-brand-colour": "#ffcb05ff",
			"logo-core-on-image-colour-light": "#ffffffff",
			"logo-core-on-image-colour-dark": "#262626ff",
			"logo-play-default-colour": "#000000ff",
			"logo-play-inverted-colour": "#ffffffff",
			"logo-play-brand-colour": "#ffcb05ff",
			"logo-play-on-image-colour-light": "#ffffffff",
			"logo-play-on-image-colour-dark": "#262626ff",
			"logo-payment-default-colour": "#000000ff",
			"logo-payment-opacity-colour": "#00000052",
			"logo-payment-opacity-inverse-colour": "#ffffff52",
			"container-bg-colour-full": "#ffffffff",
			"container-bg-colour-subtle": "#f5f5f5ff",
			"container-bg-colour-dim": "#e9e9e9ff",
			"container-bg-colour-brand": "#ffcb05ff",
			"container-bg-colour-full-inverse": "#000000ff",
			"container-bg-colour-subtle-inverse": "#262626ff",
			"container-bg-colour-dim-inverse": "#434343ff",
			"accessible-focus-border-container-border-colour": "#ffcb05ff",
			"avatar-container-colour": "#000000a3",
			"avatar-label-text-colour": "#ffffffcc",
			"avatar-icon-colour": "#ffffffcc",
			"accordion-button-label-text-colour": "#000000ff",
			"accordion-button-icon-colour": "#000000ff",
			"accordion-button-container-border-colour": "#00000029",
			"accordion-button-hovered-label-text-colour": "#000000ff",
			"accordion-button-hovered-container-colour": "#00000014",
			"accordion-button-focused-label-text-colour": "#000000ff",
			"accordion-button-focused-container-colour": "#00000014",
			"accordion-button-pressed-container-colour": "#00000029",
			"accordion-button-disabled-label-text-colour": "#7b7b7bff",
			"accordion-button-disabled-icon-colour": "#d9d9d9ff",
			"accordion-container-border-colour": "#00000014",
			"accordion-button-active-label-text-colour": "#000000ff",
			"accordion-button-active-container-colour": "#00000014",
			"accordion-button-active-hovered-container-colour": "#00000014",
			"accordion-button-active-pressed-container-colour": "#00000029",
			"accordion-button-active-focused-container-colour": "#00000014",
			"badge-label-text-colour": "#ffffffff",
			"badge-container-colour": "#000000ff",
			"badge-alert-label-text-colour": "#ffbec4ff",
			"badge-alert-container-colour": "#b20010ff",
			"badge-warning-label-text-colour": "#000000ff",
			"badge-warning-container-colour": "#ff732eff",
			"badge-positive-label-text-colour": "#ffffffff",
			"badge-positive-container-colour": "#398004ff",
			"badge-informative-label-text-colour": "#c7ebffff",
			"badge-informative-container-colour": "#004a71ff",
			"badge-brand-core-label-text-colour": "#000000ff",
			"badge-brand-core-container-colour": "#ffcb05ff",
			"button-action-transparent-icon-colour": "#ffffffff",
			"button-action-transparent-container-colour": "#000000a3",
			"button-action-transparent-hovered-icon-colour": "#f5f5f5ff",
			"button-action-transparent-hovered-container-colour": "#000000cc",
			"button-action-transparent-focused-icon-colour": "#f5f5f5ff",
			"button-action-transparent-focused-container-colour": "#000000cc",
			"button-action-transparent-pressed-icon-colour": "#f5f5f5ff",
			"button-action-transparent-pressed-container-colour": "#00000052",
			"button-action-transparent-disabled-icon-colour": "#555555ff",
			"button-action-transparent-disabled-container-colour": "#00000029",
			"button-action-filled-container-border-colour": "#00000029",
			"button-action-filled-icon-colour": "#000000ff",
			"button-action-filled-container-colour": "#ffffffff",
			"button-action-filled-hovered-container-border-colour": "#00000014",
			"button-action-filled-hovered-icon-colour": "#434343ff",
			"button-action-filled-hovered-container-colour": "#f5f5f5ff",
			"button-action-filled-focused-icon-colour": "#434343ff",
			"button-action-filled-focused-container-colour": "#f5f5f5ff",
			"button-action-filled-pressed-icon-colour": "#434343ff",
			"button-action-filled-disabled-container-colour": "#f5f5f5ff",
			"button-action-filled-disabled-icon-colour": "#d9d9d9ff",
			"button-action-filled-disabled-container-border-colour": "#00000014",
			"button-action-filled-pressed-container-colour": "#d9d9d9ff",
			"button-action-filled-pressed-container-border-colour": "#00000014",
			"button-app-standard-hovered-container-colour": "#f5f5f5ff",
			"button-app-standard-hovered-label-text-colour": "#000000ff",
			"button-app-standard-hovered-symbol-colour": "#000000ff",
			"button-app-standard-focused-container-colour": "#ffffffff",
			"button-app-standard-focused-label-text-colour": "#000000ff",
			"button-app-standard-focused-symbol-colour": "#000000ff",
			"button-app-standard-container-colour": "#ffffffff",
			"button-app-standard-container-border-colour": "#00000029",
			"button-app-standard-label-text-colour": "#000000ff",
			"button-app-standard-symbol-colour": "#000000ff",
			"button-app-inverted-container-colour": "#000000ff",
			"button-app-inverted-container-border-colour": "#ffffff29",
			"button-app-inverted-label-text-colour": "#ffffffff",
			"button-app-inverted-symbol-colour": "#ffffffff",
			"button-app-inverted-hovered-container-colour": "#262626ff",
			"button-app-inverted-hovered-label-text-colour": "#ffffffff",
			"button-app-inverted-hovered-symbol-colour": "#ffffffff",
			"button-app-inverted-focused-container-colour": "#000000ff",
			"button-app-inverted-focused-label-text-colour": "#ffffffff",
			"button-app-inverted-focused-symbol-colour": "#ffffffff",
			"button-primary-container-colour": "#ffcb05ff",
			"button-primary-icon-colour": "#000000ff",
			"button-primary-label-text-colour": "#000000ff",
			"button-secondary-icon-colour": "#000000ff",
			"button-secondary-label-text-colour": "#000000ff",
			"button-secondary-container-border-colour": "#000000a3",
			"button-secondary-hovered-icon-colour": "#434343ff",
			"button-secondary-hovered-label-text-colour": "#434343ff",
			"button-secondary-hovered-container-colour": "#00000014",
			"button-secondary-hovered-container-border-colour": "#434343ff",
			"button-secondary-focused-icon-colour": "#434343ff",
			"button-secondary-focused-label-text-colour": "#434343ff",
			"button-secondary-focused-container-colour": "#00000014",
			"button-secondary-pressed-icon-colour": "#7b7b7bff",
			"button-secondary-pressed-label-text-colour": "#7b7b7bff",
			"button-secondary-pressed-container-colour": "#00000014",
			"button-secondary-pressed-container-border-colour": "#7b7b7bff",
			"button-secondary-disabled-icon-colour": "#7b7b7bff",
			"button-secondary-disabled-label-text-colour": "#7b7b7bff",
			"button-secondary-disabled-container-border-colour": "#c4c4c4ff",
			"button-primary-hovered-container-colour": "#ffdd5fff",
			"button-primary-focused-container-colour": "#ffdd5fff",
			"button-primary-pressed-container-colour": "#ffdd5fff",
			"button-primary-pressed-icon-colour": "#434343ff",
			"button-primary-pressed-label-text-colour": "#434343ff",
			"button-primary-disabled-container-colour": "#d9d9d9ff",
			"button-primary-disabled-icon-colour": "#7b7b7bff",
			"button-primary-disabled-label-text-colour": "#7b7b7bff",
			"button-call-out-container-colour": "#000000ff",
			"button-call-out-icon-colour": "#ffffffff",
			"button-call-out-lable-text-colour": "#ffffffff",
			"button-call-out-hovered-container-colour": "#434343ff",
			"button-call-out-focused-container-colour": "#434343ff",
			"button-call-out-pressed-container-colour": "#434343ff",
			"button-call-out-pressed-icon-colour": "#d9d9d9ff",
			"button-call-out-pressed-label-text-colour": "#d9d9d9ff",
			"button-call-out-disabled-container-colour": "#d9d9d9ff",
			"button-call-out-disabled-icon-colour": "#7b7b7bff",
			"button-call-out-disabled-label-text-colour": "#7b7b7bff",
			"button-text-icon-colour": "#000000ff",
			"button-text-label-text-colour": "#000000ff",
			"button-text-hovered-icon-colour": "#434343ff",
			"button-text-hovered-label-text-colour": "#434343ff",
			"button-text-hovered-container-border-colour": "#000000ff",
			"button-text-focused-icon-colour": "#434343ff",
			"button-text-focused-label-text-colour": "#434343ff",
			"button-text-pressed-icon-colour": "#434343ff",
			"button-text-pressed-label-text-colour": "#434343ff",
			"button-text-pressed-container-border-colour": "#ffdd5fff",
			"button-text-disabled-icon-colour": "#7b7b7bff",
			"button-text-disabled-label-text-colour": "#7b7b7bff",
			"button-icon-icon-primary-colour": "#ffcb05ff",
			"button-icon-icon-colour": "#000000ff",
			"button-icon-label-text-colour": "#000000ff",
			"button-icon-outline-container-border-colour": "#00000014",
			"button-icon-filled-container-colour": "#0000000a",
			"button-icon-hovered-container-colour": "#00000029",
			"button-icon-focused-icon-colour": "#434343ff",
			"button-icon-focused-label-text-colour": "#434343ff",
			"button-icon-focused-container-colour": "#00000029",
			"button-icon-pressed-icon-colour": "#434343ff",
			"button-icon-pressed-label-text-colour": "#434343ff",
			"button-icon-pressed-container-colour": "#00000052",
			"button-icon-disabled-icon-colour": "#7b7b7bff",
			"button-icon-disabled-label-text-colour": "#7b7b7bff",
			"button-icon-disabled-container-colour": "#0000000a",
			"button-icon-outline-disabled-container-border-colour": "#00000014",
			"button-fab-primary-icon-colour": "#000000ff",
			"button-fab-primary-label-text-colour": "#000000ff",
			"button-fab-primary-container-colour": "#ffcb05ff",
			"button-fab-primary-hovered-container-colour": "#ffdd5fff",
			"button-fab-primary-focused-container-colour": "#ffdd5fff",
			"button-fab-primary-pressed-icon-colour": "#434343ff",
			"button-fab-primary-pressed-label-text-colour": "#434343ff",
			"button-fab-primary-pressed-container-colour": "#ffdd5fff",
			"button-fab-primary-disabled-icon-colour": "#555555ff",
			"button-fab-primary-disabled-label-text-colour": "#555555ff",
			"button-fab-primary-disabled-container-colour": "#d9d9d9ff",
			"button-fab-secondary-icon-colour": "#ffffffff",
			"button-fab-secondary-label-text-colour": "#ffffffff",
			"button-fab-secondary-container-colour": "#000000ff",
			"button-fab-secondary-hovered-container-colour": "#434343ff",
			"button-fab-secondary-focused-container-colour": "#434343ff",
			"button-fab-secondary-pressed-icon-colour": "#f5f5f5ff",
			"button-fab-secondary-pressed-label-text-colour": "#f5f5f5ff",
			"button-fab-secondary-pressed-container-colour": "#555555ff",
			"button-fab-secondary-disabled-icon-colour": "#7b7b7bff",
			"button-fab-secondary-disabled-label-text-colour": "#7b7b7bff",
			"button-fab-secondary-disabled-container-colour": "#d9d9d9ff",
			"button-select-container-border-colour": "#000000a3",
			"button-select-label-text-colour": "#000000ff",
			"button-select-hovered-container-colour": "#00000014",
			"button-select-focused-label-text-colour": "#000000ff",
			"button-select-focused-container-colour": "#ffcb05ff",
			"button-select-pressed-container-border-colour": "#434343ff",
			"button-select-active-label-text-colour": "#000000ff",
			"button-select-active-container-colour": "#ffcb05ff",
			"button-select-pressed-container-colour": "#00000029",
			"button-select-pressed-label-text-colour": "#434343ff",
			"button-select-disabled-container-border-colour": "#c4c4c4ff",
			"button-select-disabled-label-text-colour": "#7b7b7bff",
			"button-payment-logo-colour": "#ffffffff",
			"button-payment-container-colour": "#000000ff",
			"button-payment-hovered-container-colour": "#434343ff",
			"button-payment-focused-container-colour": "#434343ff",
			"button-payment-pressed-logo-colour": "#d9d9d9ff",
			"button-payment-pressed-container-colour": "#434343ff",
			"button-payment-disabled-logo-colour": "#7b7b7bff",
			"button-payment-disabled-container-colour": "#d9d9d9ff",
			"card-base-elevated-container-colour": "#ffffffff",
			"card-base-elevated-hovered-container-border-colour": "#00000029",
			"card-base-elevated-pressed-container-colour": "#f5f5f5ff",
			"card-base-outlined-container-colour": "#ffffffff",
			"card-base-outlined-container-border-colour": "#00000029",
			"card-base-outlined-hovered-container-border-colour": "#00000052",
			"card-base-outlined-pressed-container-colour": "#f5f5f5ff",
			"card-base-primary-container-colour": "#ffcb05ff",
			"card-base-primary-hovered-container-border-colour": "#00000014",
			"card-base-primary-hovered-container-colour": "#ffdd5fff",
			"card-base-primary-pressed-container-colour": "#ffdd5fff",
			"card-base-inverted-container-colour": "#000000ff",
			"card-base-inverted-hovered-container-colour": "#262626ff",
			"card-base-inverted-hovered-container-border-colour": "#ffffffa3",
			"card-base-inverted-pressed-container-colour": "#434343ff",
			"card-base-glass-container-colour": "#ffffffcc",
			"card-base-glass-hovered-container-colour": "#ffffffb8",
			"card-base-glass-hovered-container-border-colour": "#ffffffa3",
			"card-base-glass-pressed-container-colour": "#ffffffa3",
			"card-base-glass-inverted-container-colour": "#000000cc",
			"card-base-glass-inverted-hovered-container-colour": "#000000b8",
			"card-base-glass-inverted-hovered-container-border-colour": "#000000a3",
			"card-base-glass-inverted-pressed-container-colour": "#000000a3",
			"carousel-title-text-colour": "#000000ff",
			"checkbox-label-text-colour": "#434343ff",
			"checkbox-hovered-label-text-colour": "#000000ff",
			"checkbox-hovered-box-container-colour": "#ffcb05ff",
			"checkbox-box-border-colour": "#000000ff",
			"checkbox-focused-label-text-colour": "#000000ff",
			"date-picker-week-day-label-text-colour": "#00000052",
			"date-picker-date-label-text-colour": "#000000b8",
			"date-picker-container-colour": "#ffffffff",
			"date-picker-container-border-colour": "#00000014",
			"date-picker-date-current-container-border-colour": "#ffcb05ff",
			"date-picker-month-selection-icon-colour": "#000000ff",
			"date-picker-month-selection-label-text-colour": "#000000ff",
			"date-picker-date-hovered-label-text-colour": "#000000ff",
			"date-picker-date-hovered-container-colour": "#00000014",
			"date-picker-date-focused-label-text-colour": "#000000ff",
			"date-picker-date-focused-container-colour": "#00000014",
			"date-picker-date-active-label-text-colour": "#000000ff",
			"date-picker-date-active-start-label-text-colour": "#000000ff",
			"date-picker-date-active-start-container-colour": "#ffcb05ff",
			"date-picker-date-active-middle-label-text-colour": "#000000ff",
			"date-picker-date-active-end-label-text-colour": "#000000ff",
			"date-picker-date-active-end-container-colour": "#ffcb05ff",
			"date-picker-date-active-middle-container-colour": "#ffdd5fff",
			"date-picker-date-disabled-label-text-colour": "#00000052",
			"date-picker-date-active-container-colour": "#ffcb05ff",
			"dialog-title-text-colour": "#000000ff",
			"dialog-text-colour": "#000000ff",
			"dialog-container-colour": "#ffffffff",
			"dialog-contianer-border-colour": "#00000014",
			"dismissible-hovered-icon-colour": "#000000b8",
			"dismissible-pressed-icon-colour": "#000000a3",
			"divider-on-primary-container-colour": "#00000014",
			"divider-on-secondary-container-colour": "#00000014",
			"divider-on-tertiary-container-colour": "#00000014",
			"divider-on-primary-inverse-container-colour": "#ffffff52",
			"divider-on-secondary-inverse-container-colour": "#ffffff52",
			"divider-on-tertiary-inverse-container-colour": "#ffffff52",
			"divider-on-brand-container-colour": "#00000029",
			"dot-indicator-container-colour": "#00000052",
			"dot-indicator-standard-hovered-container-colour": "#000000a3",
			"dot-indicator-standard-active-container-colour": "#000000b8",
			"dot-indicator-inverted-container-colour": "#ffffff52",
			"dot-indicator-inverted-hovered-container-colour": "#ffffffa3",
			"dropdown-hovered-input-container-colour": "#00000014",
			"dot-indicator-inverted-active-container-colour": "#ffffffb8",
			"dropdown-hovered-input-container-border-colour": "#434343ff",
			"dropdown-focused-label-text-colour": "#555555ff",
			"dropdown-focused-input-container-border-colour": "#ffcb05ff",
			"dropdown-completed-input-text-colour": "#000000ff",
			"dropdown-error-input-text-colour": "#000000ff",
			"dropdown-error-input-container-colour": "#00000014",
			"dropdown-error-helper-icon-colour": "#b20010ff",
			"dropdown-error-input-container-border-colour": "#b20010ff",
			"dropdown-disabled-input-label-text-colour": "#00000052",
			"dropdown-disabled-icon-colour": "#00000052",
			"dropdown-input-container-colour": "#0000000a",
			"dropdown-disabled-input-container-border-colour": "#c4c4c4ff",
			"dropdown-input-label-text-colour": "#434343ff",
			"dropdown-icon-colour": "#434343ff",
			"dropdown-helper-text-colour": "#555555ff",
			"dropdown-helper-icon-colour": "#555555ff",
			"dropdown-input-container-border-colour": "#000000ff",
			"list-icon-label-text-colour": "#000000ff",
			"list-icon-icon-primary-colour": "#ffcb05ff",
			"list-icon-icon-secondary-colour": "#000000ff",
			"list-unordered-label-text-colour": "#000000ff",
			"list-unordered-symbol-primary-colour": "#ffcb05ff",
			"list-unordered-symbol-secondary-colour": "#000000ff",
			"list-ordered-label-text-colour": "#000000ff",
			"list-ordered-number-primary-colour": "#ffcb05ff",
			"list-ordered-number-secondary-colour": "#000000ff",
			"menu-container-colour": "#ffffffff",
			"menu-container-border-colour": "#e9e9e9ff",
			"menu-item-label-text-colour": "#434343ff",
			"menu-item-leading-icon-colour": "#434343ff",
			"menu-item-trailing-icon-colour": "#555555ff",
			"menu-item-container-colour": "#ffffffff",
			"menu-item-hovered-label-text-colour": "#000000ff",
			"menu-item-hovered-leading-icon-colour": "#000000ff",
			"menu-item-hovered-container-colour": "#f5f5f5ff",
			"menu-item-focused-container-colour": "#f5f5f5ff",
			"menu-item-active-label-text-colour": "#000000ff",
			"menu-item-active-leading-icon-colour": "#000000ff",
			"menu-item-active-trailing-icon-colour": "#000000ff",
			"menu-item-active-container-colour": "#f5f5f5ff",
			"menu-search-label-text-colour": "#555555ff",
			"menu-search-icon-colour": "#00000052",
			"menu-search-container-colour": "#ffffffff",
			"menu-search-container-border-colour": "#00000014",
			"menu-search-focused-container-colour": "#f5f5f5ff",
			"menu-search-hovered-container-colour": "#f5f5f5ff",
			"menu-search-completed-label-text-colour": "#000000ff",
			"menu-search-completed-leading-icon-colour": "#555555ff",
			"menu-search-completed-trailing-icon-colour": "#00000052",
			"menu-search-completed-container-colour": "#f5f5f5ff",
			"mobile-number-input-input-container-colour": "#0000000a",
			"mobile-number-input-input-label-text-colour": "#434343ff",
			"mobile-number-input-input-text-colour": "#555555ff",
			"mobile-number-input-input-icon-colour": "#434343ff",
			"mobile-number-input-input-dropdown-icon-colour": "#00000052",
			"mobile-number-input-helper-text-colour": "#555555ff",
			"mobile-number-input-helper-icon-colour": "#555555ff",
			"mobile-number-input-input-container-border-colour": "#000000ff",
			"mobile-number-input-input-country-border colour": "#00000029",
			"mobile-number-input-hovered-input-text-colour": "#434343ff",
			"mobile-number-input-hovered-input-container-colour": "#00000014",
			"mobile-number-input-hovered-input-container-border-colour": "#434343ff",
			"mobile-number-input-focused-input-container-border-colour": "#ffcb05ff",
			"mobile-number-input-completed-input-text-colour": "#000000ff",
			"mobile-number-input-error-input-text-colour": "#000000ff",
			"mobile-number-input-error-input-container-colour": "#00000014",
			"mobile-number-input-error-helper-icon-colour": "#b20010ff",
			"mobile-number-input-error-input-container-border-colour": "#b20010ff",
			"mobile-number-input-disabled-input-label-text-colour": "#00000052",
			"mobile-number-input-disabled-input-text-colour": "#00000052",
			"mobile-number-input-disabled-input-icon-colour": "#00000052",
			"mobile-number-input-disabled-input-container-border-colour": "#c4c4c4ff",
			"mobile-number-input-disabled-input-dropdown-icon-colour": "#00000029",
			"navigation-bar-transparent-container-background-colour": "#ffffffcc",
			"navigation-bar-filled-container-background-colour": "#ffffffff",
			"navigation-bar-brand-container-background-colour": "#ffcb05ff",
			"navigation-bar-container-border-colour": "#00000014",
			"navigation-bar-item-icon-colour": "#000000a3",
			"navigation-bar-item-label-text-colour": "#000000a3",
			"navigation-bar-item-hovered-label-text-colour": "#000000cc",
			"navigation-bar-item-hovered-icon-colour": "#000000cc",
			"navigation-bar-item-hovered-container-background": "#0000000a",
			"navigation-bar-item-focused-label-text-colour": "#000000cc",
			"navigation-bar-item-focused-icon-colour": "#000000cc",
			"navigation-bar-item-focused-container-background": "#0000000a",
			"navigation-bar-item-active-label-text-colour": "#000000ff",
			"navigation-bar-item-active-icon-colour": "#ffcb05ff",
			"notification-toast-container-colour": "#ffffffb8",
			"notification-toast-container-border-colour": "#00000014",
			"notification-toast-title-text-colour": "#000000ff",
			"notification-toast-body-text-colour": "#434343ff",
			"notification-toast-button-border-colour": "#00000052",
			"notification-toast-button-label-text-colour": "#000000ff",
			"notification-toast-hovered-button-container-colour": "#0000000a",
			"notification-toast-pressed-button-label-text-colour": "#434343ff",
			"notification-alert-container-border-colour": "#00000014",
			"notification-alert-icon-colour": "#000000ff",
			"notification-alert-text-colour": "#000000ff",
			"notification-alert-brand-container-colour": "#fffae6ff",
			"notification-alert-brand-inner-container-border-colour": "#ffcb05ff",
			"notification-alert-informative-container-colour": "#ebf8ffff",
			"notification-alert-informative-inner-container-border-colour": "#004a71ff",
			"notification-alert-success-container-colour": "#eef6e5ff",
			"notification-alert-success-inner-container-border-colour": "#398004ff",
			"notification-alert-warning-container-colour": "#ffeee5ff",
			"notification-alert-warning-inner-container-border-colour": "#ff732eff",
			"notification-alert-error-container-colour": "#ffe8eaff",
			"notification-alert-error-inner-container-border-colour": "#b20010ff",
			"notification-inline-container-border-colour": "#00000014",
			"notification-inline-icon-colour": "#000000ff",
			"notification-inline-text-colour": "#000000ff",
			"notification-inline-brand-container-colour": "#fffae6ff",
			"notification-inline-brand-inner-container-border-colour": "#ffcb05ff",
			"notification-inline-informative-container-colour": "#ebf8ffff",
			"notification-inline-informative-inner-container-border-colour": "#004a71ff",
			"notification-inline-success-container-colour": "#eef6e5ff",
			"notification-inline-success-inner-container-border-colour": "#398004ff",
			"notification-inline-warning-container-colour": "#ffeee5ff",
			"notification-inline-warning-inner-container-border-colour": "#ff732eff",
			"notification-inline-error-container-colour": "#ffe8eaff",
			"notification-inline-error-inner-container-border-colour": "#b20010ff",
			"number-input-input-container-colour": "#0000000a",
			"number-input-input-label-text-colour": "#434343ff",
			"number-input-input-text-colour": "#555555ff",
			"number-input-input-plus-icon-colour": "#434343ff",
			"number-input-icon-divider-border-colour": "#00000029",
			"number-input-input-minus-icon-colour": "#00000052",
			"number-input-helper-text-colour": "#555555ff",
			"number-input-helper-icon-colour": "#555555ff",
			"number-input-input-container-border-colour": "#000000ff",
			"number-input-hovered-input-container-colour": "#00000014",
			"number-input-hovered-input-container-border-colour": "#434343ff",
			"number-input-focused-input-container-border-colour": "#ffcb05ff",
			"number-input-completed-input-text-colour": "#000000ff",
			"number-input-completed-input-minus-icon-colour": "#434343ff",
			"number-input-error-input-text-colour": "#000000ff",
			"number-input-disabled-input-label-text-colour": "#00000052",
			"number-input-disabled-input-text-colour": "#00000052",
			"number-input-disabled-input-container-border-colour": "#c4c4c4ff",
			"number-input-disabled-input-plus-icon-colour": "#00000029",
			"number-input-disabled-input-minus-icon-colour": "#00000029",
			"number-input-error-input-container-colour": "#00000014",
			"number-input-error-helper-icon-colour": "#b20010ff",
			"number-input-error-input-container-border-colour": "#b20010ff",
			"pagination-item-label-text-colour": "#000000b8",
			"pagination-item-hovered-label-text-colour": "#000000ff",
			"pagination-item-hovered-container-colour": "#00000014",
			"pagination-item-focused-label-text-colour": "#000000ff",
			"pagination-item-focused-container-colour": "#00000014",
			"pagination-item-active-label-text-colour": "#ffffffff",
			"pagination-item-active-container-colour": "#000000cc",
			"pagination-arrow-icon-colour": "#000000b8",
			"pagination-arrow-hovered-container-colour": "#00000014",
			"pagination-arrow-focused-container-colour": "#00000014",
			"pagination-arrow-disabled-icon-colour": "#00000052",
			"pin-input-helper-text-colour": "#555555ff",
			"pin-input-helper-icon-colour": "#555555ff",
			"pin-input-error-helper-icon-colour": "#b20010ff",
			"pin-input-field-container-colour": "#0000000a",
			"pin-input-field-container-border-colour": "#000000ff",
			"pin-input-field-hovered-container-colour": "#00000014",
			"pin-input-field-hovered-container-border-colour": "#434343ff",
			"pin-input-field-focused-input-text-colour": "#555555ff",
			"pin-input-field-focused-container-border-colour": "#ffcb05ff",
			"pin-input-field-completed-input-text-colour": "#000000ff",
			"pin-input-field-error-input-text-colour": "#000000ff",
			"pin-input-field-error-container-colour": "#00000014",
			"pin-input-field-error-container-border-colour": "#b20010ff",
			"pin-input-field-disabled-container-border-colour": "#c4c4c4ff",
			"progress-indicator-linear-track-colour": "#00000029",
			"progress-indicator-linear-indicator-colour": "#ffcb05ff",
			"progress-indicator-circular-indicator-colour": "#ffcb05ff",
			"progress-indicator-circular-track-colour": "#00000014",
			"radio-button-label-text-colour": "#434343ff",
			"radio-button-radio-container-border-colour": "#000000ff",
			"radio-button-hovered-label-text-colour": "#000000ff",
			"radio-button-focused-label-text-colour": "#000000ff",
			"radio-button-focused-radio-container-border-colour": "#ffcb05ff",
			"radio-button-completed-radio-dot-colour": "#ffcb05ff",
			"radio-button-completed-radio-container-border-colour": "#ffcb05ff",
			"radio-button-error-radio-border-colour": "#b20010ff",
			"radio-button-disabled-label-text-colour": "#555555ff",
			"radio-button-disabled-radio-border-colour": "#c4c4c4ff",
			"rating-star-icon-colour": "#000000a3",
			"rating-star-hovered-icon-colour": "#00000052",
			"rating-star-active-icon-colour": "#ffcb05ff",
			"rating-star-focused-icon-colour": "#ffcb05ff",
			"rating-experience-label-text-colour": "#000000a3",
			"rating-experience-hovered-label-text-colour": "#00000052",
			"rating-experience-active-label-text-colour": "#000000ff",
			"rating-experience-focused-label-text-colour": "#000000ff",
			"scrollbar-track-colour": "#00000029",
			"scrollbar-indicator-colour": "#000000a3",
			"scrollbar-hovered-indicator-colour": "#ffcb05ff",
			"scrollbar-focused-indicator-border-colour": "#ffcb05ff",
			"search-bar-label-text-colour": "#555555ff",
			"search-bar-leading-icon-colour": "#00000052",
			"search-bar-container-colour": "#ffffffff",
			"search-container-colour": "#ffffffff",
			"search-bar-container-border-colour": "#00000014",
			"search-bar-focused-container-colour": "#f5f5f5ff",
			"search-bar-active-container-border-colour": "#00000014",
			"search-bar-active-label-text-colour": "#000000ff",
			"search-bar-completed-label-text-colour": "#000000ff",
			"search-bar-completed-leading-icon-colour": "#555555ff",
			"search-bar-completed-trailing-icon-colour": "#00000052",
			"search-bar-completed-container-colour": "#f5f5f5ff",
			"search-suggestion-label-text-colour": "#000000ff",
			"search-suggestion-description-text-colour": "#000000a3",
			"search-suggestion-icon-colour": "#000000ff",
			"search-no-results-label-text-colour": "#000000ff",
			"search-no-results-description-text-colour": "#000000a3",
			"search-no-results-icon-colour": "#000000ff",
			"search-suggestion-container-colour": "#ffffffff",
			"search-suggestion-hovered-container-colour": "#f5f5f5ff",
			"search-suggestion-focused-container-colour": "#f5f5f5ff",
			"sheet-bottom-elevated-container-colour": "#ffffffff",
			"sheet-bottom-drag-line-colour": "#00000029",
			"sheet-bottom-glass-container-colour": "#ffffffcc",
			"sheet-side-elevated-container-colour": "#ffffffff",
			"sheet-side-glass-container-colour": "#ffffffcc",
			"sheet-side-content-colour": "#000000ff",
			"switch-label-text-colour": "#434343ff",
			"switch-toggle-container-colour": "#00000029",
			"switch-toggle-circle-colour": "#ffffffff",
			"switch-hovered-label-text-colour": "#000000ff",
			"switch-hovered-toggle-container-colour": "#00000052",
			"switch-focused-label-text-colour": "#000000ff",
			"switch-active-label-text-colour": "#000000ff",
			"switch-active-toggle-container-colour": "#ffcb05ff",
			"switch-disabled-label-text-colour": "#555555ff",
			"switch-disabled-toggle-container-colour": "#00000014",
			"tabs-label-text-colour": "#000000cc",
			"tabs-hovered-label-text-colour": "#000000a3",
			"tabs-active-label-text-colour": "#000000ff",
			"tabs-active-label-underline-colour": "#ffcb05ff",
			"tag-label-text-colour": "#000000ff",
			"tag-icon-colour": "#000000ff",
			"tag-outlined-container-border-colour": "#000000ff",
			"tag-outlined-hovered-container-colour": "#0000000a",
			"tag-outlined-pressed-container-colour": "#0000000a",
			"tag-outlined-pressed-container-border-colour": "#434343ff",
			"tag-outlined-pressed-label-text-colour": "#434343ff",
			"tag-outlined-pressed-icon-colour": "#434343ff",
			"tag-outlined-focused-container-colour": "#0000000a",
			"tag-filled-container-colour": "#00000029",
			"tag-filled-pressed-container-colour": "#00000052",
			"tag-filled-pressed-label-text-colour": "#434343ff",
			"tag-filled-pressed-icon-colour": "#434343ff",
			"tag-filled-hovered-container-colour": "#00000052",
			"text-area-input-container-colour": "#0000000a",
			"text-area-input-label-text-colour": "#434343ff",
			"text-area-input-text-colour": "#555555ff",
			"text-area-input-icon-colour": "#434343ff",
			"text-area-input-container-border-colour": "#000000ff",
			"text-area-character-count-label-text-colour": "#434343ff",
			"text-area-character-count-container-colour": "#00000029",
			"text-area-helper-text-colour": "#555555ff",
			"text-area-helper-icon-colour": "#555555ff",
			"text-area-hovered-input-container-colour": "#00000014",
			"text-area-hovered-input-container-border-colour": "#434343ff",
			"text-area-focused-input-container-border-colour": "#ffcb05ff",
			"text-area-completed-input-text-colour": "#000000ff",
			"text-area-disabled-input-label-text-colour": "#00000052",
			"text-area-disabled-character-count-container-colour": "#0000000a",
			"text-area-disabled-character-count-label-text-colour": "#00000029",
			"text-area-disabled-input-text-colour": "#00000052",
			"text-area-disabled-input-icon-colour": "#00000052",
			"text-area-disabled-input-container-border-colour": "#c4c4c4ff",
			"text-area-error-input-text-colour": "#000000ff",
			"text-area-error-input-container-colour": "#00000014",
			"text-area-error-helper-icon-colour": "#b20010ff",
			"text-area-error-input-container-border-colour": "#b20010ff",
			"text-embed-secondary-colour": "#000000ff",
			"text-embed-tertiary-colour": "#555555ff",
			"text-embed-secondary-colour-inverse": "#ffffffff",
			"text-embed-tertiary-colour-inverse": "#d9d9d9ff",
			"text-embed-on-image-colour-light": "#ffffffff",
			"text-embed-on-image-colour-dark": "#000000ff",
			"text-embed-on-primary": "#000000ff",
			"text-embed-on-secondary": "#ffffffff",
			"text-input-input-container-colour": "#0000000a",
			"text-input-input-label-text-colour": "#434343ff",
			"text-input-input-icon-colour": "#434343ff",
			"text-input-helper-text-colour": "#555555ff",
			"text-input-helper-icon-colour": "#555555ff",
			"text-input-input-container-border-colour": "#000000ff",
			"text-input-hovered-input-container-colour": "#00000014",
			"text-input-hovered-input-container-border-colour": "#434343ff",
			"text-link-label-text-colour": "#000000ff",
			"text-link-container-border-colour": "#000000ff",
			"text-link-hovered-label-text-colour": "#434343ff",
			"text-link-hovered-container-border-colour": "#ffcb05ff",
			"text-link-pressed-label-text-colour": "#555555ff",
			"text-link-pressed-container-border-colour": "#ffdd5fff",
			"text-link-disabled-label-text-colour": "#d9d9d9ff",
			"text-link-disabled-container-border-colour": "#d9d9d9ff",
			"tooltip-container-colour": "#262626ff",
			"tooltip-caret-tip-colour": "#262626ff",
			"tooltip-text-colour": "#ffffffff",
			"tooltip-dismissible-icon-colour": "#ffffffff",
			"tooltip-trigger-icon-colour": "#000000ff",
			"tooltip-trigger-text-colour": "#000000ff",
			"tooltip-trigger-text-underline-colour": "#004a71ff",
			"tooltip-trigger-hovered-icon-colour": "#434343ff",
			"tooltip-trigger-hovered-text-colour": "#434343ff",
			"icon-colour": "#000000ff",
			"*Cursor-initial-colour": "#000000ff",
			"*Cursor-brand-colour": "#ffcb05ff",
			"*Documentation-code-snippet-container-colour": "#ffffffff",
			"*Documentation-code-snippet-border-colour": "#434343ff",
			"*Documentation-code-snippet-text-colour": "#000000ff",
			"*Native-bg-primary": "#f9f9f9ff",
			"*Demo-fg-colour-secondary": "#000000ff",
			"*Demo-fg-colour-tertiary": "#434343ff",
			"*Demo-bg-primary": "#f5f5f5ff",
			"*Demo-border": "#00000029",
			"*Demo-bg-overlay-level2": "#ffffffa3",
			"*Demo-bg-overlay-level3": "#ffffffcc",
			"*Demo-bg-indicator": "#00000029",
			"*Demo-fg-indicator": "#555555ff",
			"text-input-focused-input-text-colour": "#555555ff",
			"text-input-focused-input-container-border-colour": "#ffcb05ff",
			"text-input-completed-input-text-colour": "#000000ff",
			"text-input-error-input-text-colour": "#000000ff",
			"text-input-error-input-container-colour": "#00000014",
			"text-input-error-input-container-border-colour": "#b20010ff",
			"text-input-error-helper-icon-colour": "#b20010ff",
			"text-input-disabled-label-text-colour": "#00000052",
			"text-input-disabled-input-icon-colour": "#00000052",
			"text-input-disabled-container-border-colour": "#c4c4c4ff",
			"checkbox-completed-icon-colour": "#000000ff",
			"checkbox-completed-box-container-colour": "#ffcb05ff",
			"checkbox-error-box-border-colour": "#b20010ff",
			"checkbox-disabled-label-text-colour": "#555555ff",
			"checkbox-disabled-box-border-colour": "#c4c4c4ff",
			"*Graveyard-drawer-container-colour": "#ffcb05ff",
			"*Graveyard-drawer-icon-colour": "#000000ff",
			"*Graveyard-drawer-hovered-container-colour": "#ffdd5fff",
			"*Graveyard-drawer-focused-container-colour": "#ffdd5fff",
			"*Graveyard-drawer-pressed-icon-colour": "#434343ff",
			"*Graveyard-drawer-pressed-container-colour": "#ffdd5fff",
			"*Graveyard-drawer-disabled-icon-colour": "#7b7b7bff",
			"*Graveyard-drawer-disabled-container-colour": "#d9d9d9ff",
			"*Graveyard-toggletip-plain-container-colour": "#000000cc",
			"*Graveyard-toggletip-plain-caret-tip-colour": "#000000cc",
			"*Graveyard-toggletip-plain-trigger-icon-colour": "#000000ff",
			"*Graveyard-toggletip-plain-text-colour": "#ffffffff",
			"*Graveyard-toggletip-plain-close-icon-colour": "#ffffffff",
			"*Graveyard-toggletip-plain-hovered-trigger-icon-colour": "#434343ff",
			"*Graveyard-toggletip-plain-hovered-close-icon-colour": "#d9d9d9ff",
			"*Graveyard-toggletip-plain-focused-trigger-icon-border-colour": "#ffcb05ff",
			"*Graveyard-toggletip-plain-focused-close-icon-border-colour": "#ffcb05ff",
			"accessible-focus-border-container-outer-shadow-colour": "#ffffffff",
			"navigation-bar-item-brand-icon-colour": "#000000ff",
			"navigation-bar-item-brand-label-text-colour": "#000000ff",
			"navigation-bar-item-brand-hovered-container-background": "#0000000a",
			"navigation-bar-item-brand-focused-container-background": "#00000014",
			"navigation-bar-item-brand-active-label-text-colour": "#000000ff",
			"navigation-bar-item-brand-active-icon-colour": "#000000ff",
			"colour-primary": "#ffcb05ff",
			"colour-on-primary": "#000000ff",
			"colour-primary-inverse": "#ffcb05ff",
			"colour-on-primary-inverse": "#000000ff",
			"colour-primary-interaction": "#ffdd5fff",
			"colour-primary-interaction-inverse": "#d6aa00ff",
			"colour-secondary": "#000000ff",
			"colour-on-secondary": "#ffffffff",
			"colour-secondary-inverse": "#ffffffff",
			"colour-on-secondary-inverse": "#000000ff",
			"colour-secondary-interaction": "#434343ff",
			"colour-secondary-interaction-inverse": "#d9d9d9ff",
			"colour-tertiary": "#434343ff",
			"colour-on-tertiary": "#f5f5f5ff",
			"colour-tertiary-inverse": "#f5f5f5ff",
			"colour-on-tertiary-inverse": "#434343ff",
			"colour-tertiary-interaction": "#555555ff",
			"colour-tertiary-interaction-inverse": "#d9d9d9ff",
			"colour-disabled": "#d9d9d9ff",
			"colour-on-disabled": "#7b7b7bff",
			"colour-disabled-inverse": "#7b7b7bff",
			"colour-on-disabled-inverse": "#d9d9d9ff",
			"colour-error": "#b20010ff",
			"colour-on-error": "#ffbec4ff",
			"colour-error-inverse": "#ffbec4ff",
			"colour-on-error-inverse": "#b20010ff",
			"colour-success": "#398004ff",
			"colour-on-success": "#ffffffff",
			"colour-success-inverse": "#d5e9bfff",
			"colour-on-success-inverse": "#000000ff",
			"colour-warning": "#ff732eff",
			"colour-on-warning-inverse": "#000000ff",
			"colour-on-warning": "#000000ff",
			"colour-warning-inverse": "#ffb18aff",
			"colour-informative": "#004a71ff",
			"colour-on-informative": "#c7ebffff",
			"colour-informative-inverse": "#c7ebffff",
			"colour-on-informative-inverse": "#004a71ff",
			"colour-surface": "#f5f5f5ff",
			"colour-on-surface": "#000000ff",
			"colour-surface-inverse": "#262626ff",
			"colour-on-surface-inverse": "#ffffffff",
			"colour-surface-full": "#ffffffff",
			"colour-on-surface-full": "#000000ff",
			"colour-surface-full-inverse": "#000000ff",
			"colour-on-surface-full-inverse": "#ffffffff",
			"colour-surface-dim": "#e9e9e9ff",
			"colour-on-surface-dim": "#000000ff",
			"colour-surface-dim-inverse": "#434343ff",
			"colour-on-surface-dim-inverse": "#ffffffff",
			"colour-surface-subtle-primary": "#fffae6ff",
			"colour-surface-subtle-primary-inverse": "#5c4900ff",
			"colour-surface-subtle-success": "#eef6e5ff",
			"colour-surface-subtle-success-inverse": "#085f00ff",
			"colour-surface-subtle-error": "#ffe8eaff",
			"colour-surface-subtle-error-inverse": "#610009ff",
			"colour-surface-subtle-warning": "#ffeee5ff",
			"colour-surface-subtle-warning-inverse": "#4d1a00ff",
			"colour-surface-subtle-informative": "#ebf8ffff",
			"colour-surface-subtle-informative-inverse": "#002f48ff",
			"colour-opacity-highest": "#ffffffcc",
			"colour-opacity-higher": "#ffffffb8",
			"colour-opacity-high": "#ffffffa3",
			"colour-opacity-medium": "#ffffff52",
			"colour-opacity-low": "#ffffff29",
			"colour-opacity-lower": "#ffffff14",
			"colour-opacity-lowest": "#ffffff0a",
			"colour-opacity-highest-inverse": "#000000cc",
			"colour-opacity-higher-inverse": "#000000b8",
			"colour-opacity-high-inverse": "#000000a3",
			"colour-opacity-medium-inverse": "#00000052",
			"colour-opacity-low-inverse": "#00000029",
			"colour-opacity-lower-inverse": "#00000014",
			"colour-opacity-lowest-inverse": "#0000000a",
			"border-colour-primary": "#ffcb05ff",
			"border-colour-primary-inverse": "#ffcb05ff",
			"border-colour-primary-interaction": "#ffdd5fff",
			"border-colour-primary-interaction-inverse": "#d6aa00ff",
			"border-colour-secondary": "#000000ff",
			"border-colour-secondary-inverse": "#ffffffff",
			"border-colour-secondary-interaction": "#434343ff",
			"border-colour-secondary-interaction-inverse": "#d9d9d9ff",
			"border-colour-opacity-inverse-64": "#000000a3",
			"border-colour-opacity-64": "#ffffffa3",
			"border-colour-opacity-inverse-32": "#00000052",
			"border-colour-opacity-32": "#ffffff52",
			"border-colour-opacity-inverse-16": "#00000029",
			"border-colour-opacity-16": "#ffffff29",
			"border-colour-opacity-inverse-8": "#00000014",
			"border-colour-opacity-8": "#ffffff14",
			"border-colour-tertiary": "#555555ff",
			"border-colour-tertiary-inverse": "#e9e9e9ff",
			"border-colour-disabled": "#c4c4c4ff",
			"border-colour-disabled-inverse": "#7b7b7bff",
			"border-colour-error": "#b20010ff",
			"border-colour-error-inverse": "#ffbec4ff",
			"border-colour-success": "#398004ff",
			"border-colour-success-inverse": "#d5e9bfff",
			"border-colour-warning": "#ff732eff",
			"border-colour-warning-inverse": "#ffb18aff",
			"border-colour-informative": "#004a71ff",
			"border-colour-informative-inverse": "#c7ebffff",
			"border-colour-accessible": "#ffcb05ff",
			"border-colour-accessible-inverse": "#ffcb05ff",
			"shadow-accessible-light-colour": "#ffffffff",
			"shadow-accessible-dark-colour": "#000000ff",
			"shadow-level-1-colour": "#00000029",
			"shadow-level-2-colour": "#00000029",
			"shadow-level-3-colour": "#00000029",
			"shadow-inverted-colour": "#00000014",
			"shadow-left-colour": "#00000014",
			"shadow-right-colour": "#00000014",
			"shadow-top-colour": "#00000014"
		},
		floats: {
			"accordion-button-scale-m-l-container-padding-left-right": "1.5rem",
			"accordion-button-container-height": "80px",
			"accordion-button-container-border-bottom": "1px",
			"accordion-button-hovered-container-border": "0px",
			"accordion-button-hovered-container-corner-radius-all-round": "8px",
			"accordion-button-focused-container-corner-radius-all-round": "8px",
			"accordion-button-pressed-container-border": "0px",
			"accordion-button-pressed-container-corner-radius-all-round": "8px",
			"accordion-container-border-bottom-left-right": "1px",
			"accordion-opened-container-corner-radius-all-round": "8px",
			"accordion-closed-container-corner-radius": "0px",
			"accordion-button-active-container-border": "0px",
			"accordion-button-active-container-corner-radius-top": "8px",
			"accordion-content-margin": "24px",
			"accordion-scale-m-l-container-padding-scale": "1.5rem",
			"aspect-ratio-container-corner-radius-all-round": "24px",
			"badge-container-padding-small": "8px",
			"badge-scale-m-l-container-padding": "0.5rem",
			"badge-scale-m-l-container-height": "1.5rem",
			"badge-scale-m-l-container-corner-radius-all-round": "0.25rem",
			"badge-scale-large-container-corner-radius-all-round": "8px",
			"badge-container-rounded-corner-radius": "56px",
			"button-action-filled-container-border": "1px",
			"button-action-scale-m-l-small-icon": "1.5rem",
			"button-action-scale-m-l-large-icon": "2rem",
			"button-action-container-corner-radius-all-round": "100px",
			"button-action-scale-m-l-small-container-padding": "1rem",
			"button-action-scale-m-l-large-container-padding": "1.5rem",
			"button-app-standard-container-corner-radius": "8px",
			"button-app-scale-m-l-container-height": "3.5rem",
			"button-app-scale-m-l-container-width": "190px",
			"button-app-scale-large-container-width": "200px",
			"button-app-standard-container-border": "1px",
			"button-app-inverted-container-border": "1px",
			"button-primary-container-padding-left-right": "24px",
			"button-primary-container-corner-radius-all-round": "100px",
			"button-primary-scale-m-l-icon-margin-right": "0.5rem",
			"button-secondary-container-border": "1px",
			"button-secondary-scale-m-l-icon-margin-right": "0.5rem",
			"button-secondary-container-padding-left-right": "24px",
			"button-secondary-corner-radius-all-round": "100px",
			"button-secondary-scale-m-l-container-height": "3.5rem",
			"button-secondary-scale-m-l-icon": "1.5rem",
			"button-primary-scale-m-l-container-height": "3.5rem",
			"button-primary-scale-m-l-icon": "1.5rem",
			"button-call-out-container-padding-left-right": "24px",
			"button-call-out-container-padding-top-bottom": "12px",
			"button-call-out-container-corner-radius-all-round": "100px",
			"button-call-out-scale-m-l-icon-margin-right": "0.5rem",
			"button-call-out-scale-m-l-container-height": "3.5rem",
			"button-text-hovered-container-border-bottom": "2px",
			"button-text-pressed-container-border-bottom": "2px",
			"button-combo-scale-m-l-button-margin": "0.75rem",
			"button-icon-scale-m-l-icon-margin": "0.75rem",
			"button-icon-scale-m-l-icon-margin 2": "1rem",
			"button-icon-outline-container-border": "2px",
			"button-icon-scale-m-l-container-corner-radius": "1rem",
			"button-icon-scale-m-l-container-padding-left-right": "0.75rem",
			"button-icon-scale-m-l-container-padding-top-bottom": "0.75rem",
			"button-fab-primary-scale-m-l-container-padding": "0.75rem",
			"button-fab-primary-scale-m-l-container-corner-radius": "1rem",
			"button-fab-primary-scale-m-l-icon-margin-right": "0.75rem",
			"button-fab-primary-scale-m-l-icon-size": "2rem",
			"button-fab-secondary-scale-m-l-container-padding": "0.75rem",
			"button-fab-secondary-scale-m-l-container-corner-radius": "1rem",
			"button-fab-secondary-scale-m-l-container-margin": "0.5rem",
			"button-fab-secondary-scale-m-l-icon-margin-right": "0.75rem",
			"button-fab-secondary-scale-m-l-icon-size": "2rem",
			"button-select-active-container-border": "0px",
			"button-select-container-border": "1px",
			"button-select-hovered-container-border": "0px",
			"button-select-pressed-container-border": "0px",
			"button-select-container-padding-left-right": "24px",
			"button-select-container-padding-top-bottom": "12px",
			"button-select-container-corner-radius": "8px",
			"button-select-scale-m-l-container-height": "3rem",
			"button-group-scale-m-l-button-margin": "0.75rem",
			"button-payment-container-padding-left-right": "0px",
			"button-payment-container-padding-top-bottom": "12px",
			"button-payment-container-corner-radius-all-round": "100px",
			"button-payment-scale-m-l-container-height": "3.5rem",
			"button-payment-scale-m-l-container-width": "168px",
			"button-call-out-scale-m-l-icon": "1.5rem",
			"card-base-elevated-hovered-container-border": "1px",
			"card-base-outlined-container-border": "1px",
			"card-base-primary-hovered-container-border": "1px",
			"card-base-inverted-hovered-container-border": "1px",
			"card-base-glass-hovered-container-border": "1px",
			"card-base-glass-inverted-hovered-container-border": "1px",
			"card-base-container-corner-radius-all-round": "16px",
			"carousel-scale-m-l-card-margin": "1rem",
			"carousel-scale-m-l-container-padding-top-bottom": "2.5rem",
			"carousel-scale-m-l-content-margin": "1.5rem",
			"checkbox-hovered-box-container-border": "0px",
			"checkbox-box-container-border": "2px",
			"checkbox-scale-m-l-label-margin-left": "0.75rem",
			"checkbox-box-container-corner-radius-all-round": "4px",
			"date-picker-date-container-corner-radius": "100px",
			"date-picker-floating-container-corner-radius": "8px",
			"date-picker-fixed-container-corner-radius-bottom-left-right": "8px",
			"date-picker-container-padding": "24px",
			"date-picker-scale-m-l-row-margin": "0.25rem",
			"date-picker-date-scale-m-l-container-size": "3rem",
			"date-picker-date-scale-large-container-size": "52px",
			"date-picker-week-day-scale-m-l-container-size": "3rem",
			"date-picker-date-current-container-border": "1px",
			"date-picker-container-min-width": "328px",
			"date-picker-fixed-container-border-bottom-left-right": "1px",
			"date-picker-floating-container-border": "1px",
			"date-picker-flat-container-border": "0px",
			"date-picker-month-selection-container-padding-bottom": "16px",
			"date-picker-date-active-start-container-corner-radius-top-left": "24px",
			"date-picker-date-active-start-container-corner-radius-bottom-left": "24px",
			"date-picker-date-active-end-container-corner-radius-top-right": "24px",
			"date-picker-date-active-end-container-corner-radius-bottom-right": "24px",
			"date-picker-date-active-middle-container-corner-radius": "0px",
			"dialog-container-corner-radius-all-round": "16px",
			"dialog-container-padding": "24px",
			"dialog-content-margin": "24px",
			"dialog-container-border": "1px",
			"divider-container-border": "1px",
			"dot-indicator-container-padding": "24px",
			"dropdown-completed-input-label-margin-bottom": "8px",
			"dropdown-error-input-label-margin-bottom": "8px",
			"dot-indicator-dot-margin": "12px",
			"dropdown-input-container-padding-left-right": "16px",
			"dropdown-input-corner-radius-top": "8px",
			"dropdown-input-container-border-bottom": "2px",
			"dropdown-input-text-margin-right": "16px",
			"dropdown-helper-text-margin-left": "8px",
			"list-icon-icon-margin-right": "8px",
			"list-icon-padding-bottom": "12px",
			"list-unordered-symbol-margin-right": "16px",
			"list-unordered-indent-padding-left": "32px",
			"list-unordered-padding-bottom": "12px",
			"list-ordered-number-margin-right": "8px",
			"list-ordered-indent-padding-left": "32px",
			"list-ordered-padding-bottom": "12px",
			"menu-attached-container-corner-radius-bottom": "16px",
			"menu-attached-container-padding-bottom": "8px",
			"menu-floating-container-padding-top-bottom": "8px",
			"menu-floating-container-corner-radius-all-round": "16px",
			"menu-container-border": "1px",
			"menu-item-container-padding": "16px",
			"menu-item-content-margin": "16px",
			"menu-search-container-padding": "16px",
			"menu-search-content-margin": "16px",
			"menu-search-container-border-bottom": "1px",
			"menu-search-scale-m-l-container-height": "3.25rem",
			"menu-search-scale-m-l-icon-size": "1.5rem",
			"mobile-number-input-input-container-padding-top-left-right": "16px",
			"mobile-number-input-input-container-corner-radius-top": "8px",
			"mobile-number-input-input-container-border-bottom": "2px",
			"mobile-number-input-input-content-margin-right": "16px",
			"mobile-number-input-helper-text-margin-left": "8px",
			"mobile-number-input-input-country-border": "1px",
			"mobile-number-input-input-country-margin-right": "4px",
			"mobile-number-input-disabled-input-country-opacity": "56px",
			"navigation-bar-container-border-top": "1px",
			"navigation-bar-scale-small-container-height": "88px",
			"navigation-bar-scale-medium-container-height": "104px",
			"navigation-bar-item-scale-m-l-icon-container-padding-top": "1.5rem",
			"navigation-bar-item-scale-m-l-container-height": "6.5rem",
			"navigation-bar-item-scale-m-l-content-margin": "0.75rem",
			"navigation-bar-item-container-min-padding-left-right": "8px",
			"notification-toast-container-border-weight": "1px",
			"notification-toast-container-padding-all-round": "8px",
			"notification-toast-text-wrapper-padding-all-round": "8px",
			"notification-toast-container-corner-radius-all-round": "8px",
			"notification-toast-scale-m-l-title-margin-bottom": "0.5rem",
			"notification-toast-button-border-weight": "1px",
			"notification-toast-small-button-padding-left-right": "12px",
			"notification-toast-large-button-padding-left-right": "16px",
			"notification-toast-button-margin-left": "16px",
			"notification-toast-button-margin-right": "8px",
			"notification-toast-scale-m-l-button-margin-right": "0.5rem",
			"notification-toast-small-button-height": "32px",
			"notification-toast-large-button-height": "36px",
			"notification-alert-container-padding-top-bottom": "12px",
			"notification-alert-container-padding-left": "24px",
			"notification-alert-container-padding-right": "16px",
			"notification-alert-scale-m-l-container-height": "4.25rem",
			"notification-alert-container-corner-radius-all-round": "8px",
			"notification-alert-container-border-weight": "1px",
			"notification-alert-inner-container-border-weight": "12px",
			"notification-alert-icon-margin-right": "8px",
			"notification-alert-icon-margin-top": "4px",
			"notification-alert-title-margin-right": "8px",
			"notification-alert-text-container-margin": "12px",
			"notification-alert-dismissible-icon-margin-top-mobile": "4px",
			"notification-alert-dismissible-icon-margin-left-mobile": "8px",
			"notification-alert-dismissible-icon-margin-left-tablet": "12px",
			"notification-alert-dismissible-icon-margin-left-desktop": "16px",
			"notification-inline-container-padding-top-bottom": "12px",
			"notification-inline-container-padding-left": "24px",
			"notification-inline-container-padding-right": "16px",
			"notification-inline-container-height-tablet": "56px",
			"notification-inline-container-height-desktop": "60px",
			"notification-inline-container-corner-radius-all-round": "0px",
			"notification-inline-container-border-weight": "1px",
			"notification-inline-inner-container-border-weight": "12px",
			"notification-inline-icon-margin-right": "8px",
			"notification-inline-icon-margin-top-mobile": "4px",
			"notification-inline-title-margin-right": "8px",
			"notification-inline-text-container-margin": "12px",
			"notification-inline-dismissible-icon-margin-top-mobile": "4px",
			"notification-inline-dismissible-icon-margin-left-mobile": "8px",
			"notification-inline-dismissible-icon-margin-left-tablet": "12px",
			"notification-inline-dismissible-icon-margin-left-desktop": "16px",
			"number-input-input-container-padding-top-left-right": "16px",
			"number-input-input-container-corner-radius-top": "8px",
			"number-input-input-container-border-bottom": "2px",
			"number-input-input-icon-divider-border": "1px",
			"number-input-input-text-margin-right": "16px",
			"number-input-helper-text-margin-left": "8px",
			"pagination-number-margin": "12px",
			"pagination-arrow-margin": "16px",
			"pagination-item-container-corner-radius": "100px",
			"pagination-item-scale-m-l-container-size": "2.25rem",
			"pagination-arrow-container-corner-radius": "24px",
			"pagination-arrow-scale-m-l-icon-size": "1.5rem",
			"pagination-arrow-scale-m-l-container-size": "2.25rem",
			"pin-input-scale-m-l-helper-margin-top": "0.75rem",
			"pin-input-helper-text-margin-left": "8px",
			"pin-input-container-input-margin": "8px",
			"pin-input-container-max-width": "508px",
			"pin-input-field-container-padding-left-right": "16px",
			"pin-input-field-container-corner-radius-top": "8px",
			"pin-input-field-container-border-bottom": "2px",
			"menu-item-scale-m-l-container-height": "3.25rem",
			"menu-item-scale-m-l-icon-size": "1.5rem",
			"menu-item-scale-m-l-flag-size": "1.5rem",
			"progress-indicator-linear-container-padding": "0px",
			"progress-indicator-linear-track-corner-radius": "4px",
			"progress-indicator-linear-indeterminate-track-corner-radius": "4px",
			"progress-indicator-linear-indicator-corner-radius": "0px",
			"progress-indicator-circular-container-padding": "0px",
			"progress-indicator-circular-indicator-corner-radius-top": "2px",
			"radio-button-radio-container-border": "2px",
			"radio-button-scale-m-l-label-margin-left": "0.75rem",
			"radio-button-radio-container-corner-radius-all-round": "100px",
			"radio-button-hovered-radio-container-border": "0px",
			"radio-button-completed-radio-container-border": "0px",
			"rating-star-container-width-min": "40px",
			"rating-star-container-height-min": "40px",
			"rating-star-icon-margin-right": "12px",
			"rating-experience-container-margin-right-compact": "12px",
			"rating-experience-container-margin-right-comfortable": "24px",
			"rating-experience-icon-opacity": "80px",
			"rating-experience-icon-margin-bottom": "8px",
			"rating-experience-active-icon-opacity": "100px",
			"scrollbar-container-padding": "0px",
			"scrollbar-track-corner-radius": "16px",
			"scrollbar-indicator-corner-radius": "16px",
			"scrollbar-indicator-height": "4px",
			"scrollbar-hovered-indicator-height-hover": "8px",
			"scrollbar-focused-indicator-border": "1px",
			"search-bar-container-padding": "16px",
			"search-bar-scale-m-l-container-height": "4rem",
			"search-bar-scale-m-l-icon-size": "1.5rem",
			"search-bar-content-margin": "16px",
			"search-bar-container-border": "1px",
			"search-bar-container-corner-radius-all-round": "16px",
			"search-bar-hovered-container-border": "0px",
			"search-bar-focused-container-border": "0px",
			"search-bar-active-container-border-bottom": "1px",
			"search-bar-active-container-corner-radius-top": "16px",
			"search-suggestion-container-padding": "16px",
			"search-suggestion-content-margin": "16px",
			"search-suggestion-scale-m-l-container-height": "3.75rem",
			"search-suggestion-scale-m-l-icon-size": "1.5rem",
			"search-suggestion-scale-m-l-label-margin-bottom": "0.5rem",
			"search-container-corner-radius-all-round": "16px",
			"search-scale-m-l-active-container-padding-bottom": "0.75rem",
			"sheet-bottom-container-corner-radius-top": "24px",
			"sheet-side-container-corner-radius-top-left": "24px",
			"sheet-side-container-corner-radius-top-right": "24px",
			"sheet-side-container-padding-left-right": "24px",
			"sheet-side-container-padding-top": "40px",
			"switch-scale-m-l-label-margin-right": "0.75rem",
			"switch-scale-m-l-label-margin-left": "0.75rem",
			"switch-toggle-container-corner-radius-all-round": "24px",
			"switch-toggle-padding-all-round": "2px",
			"tabs-label-padding-left-right": "24px",
			"tabs-label-padding-top-bottom": "24px",
			"tabs-active-label-underline-border-weight": "4px",
			"tag-container-padding-left-right": "12px",
			"tag-content-margins": "8px",
			"tag-container-corner-radius": "56px",
			"tag-scale-m-l-icon-size": "1rem",
			"tag-scale-m-l-container-height": "2.25rem",
			"tag-outlined-container-border-weight": "1px",
			"text-area-input-container-padding": "16px",
			"text-area-input-container-corner-radius-top": "8px",
			"text-area-input-container-border-bottom": "2px",
			"text-area-input-text-margin-right": "16px",
			"text-area-character-count-container-corner-radius": "16px",
			"text-area-character-count-container-padding-top-bottom": "4px",
			"text-area-character-count-container-padding-left-right": "8px",
			"text-area-helper-text-margin-left": "8px",
			"text-input-input-container-padding-top-left-right": "16px",
			"text-input-input-container-corner-radius-top": "8px",
			"text-input-input-container-border-bottom": "2px",
			"text-input-input-text-margin-right": "16px",
			"text-input-helper-text-margin-left": "8px",
			"text-input-scale-m-l-input-container-height": "4rem",
			"text-input-scale-m-l-input-margin-bottom": "0.75rem",
			"text-input-scale-m-l-input-icon-size": "1.5rem",
			"text-input-scale-m-l-input-label-margin-bottom": "0.5rem",
			"mobile-number-input-scale-m-l-input-container-height": "4rem",
			"mobile-number-input-scale-m-l-input-margin-bottom": "0.75rem",
			"mobile-number-input-scale-m-l-input-icon-size": "1.5rem",
			"mobile-number-input-scale-m-l-input-label-margin-bottom": "0.5rem",
			"number-input-scale-m-l-input-container-height": "4rem",
			"number-input-scale-m-l-input-margin-bottom": "0.75rem",
			"number-input-scale-m-l-input-icon-size": "1.5rem",
			"number-input-scale-m-l-input-label-margin-bottom": "0.5rem",
			"dropdown-scale-m-l-input-container-height": "4rem",
			"pin-input-field-scale-m-l-input-container-height": "4rem",
			"dropdown-scale-m-l-input-margin-bottom": "0.75rem",
			"dropdown-scale-m-l-input-icon-size": "1.5rem",
			"dropdown-scale-m-l-input-label-margin-bottom": "0.5rem",
			"text-area-scale-m-l-input-margin-bottom": "0.75rem",
			"text-area-scale-m-l-input-icon-size": "1.5rem",
			"text-area-scale-m-l-input-label-margin-bottom": "0.5rem",
			"text-link-container-border-bottom": "1px",
			"text-link-container-padding-all-round": "4px",
			"tooltip-container-padding-left-right": "12px",
			"tooltip-container-padding-top-bottom": "12px",
			"tooltip-container-margin": "8px",
			"tooltip-container-width-max": "300px",
			"tooltip-dismissible-icon-margin-left": "8px",
			"tooltip-scale-m-l-icon-size": "1rem",
			"tooltip-trigger-icon-corner-radius": "100px",
			"button-text-scale-m-l-icon-margin-right": "0.5rem",
			"*Demo-corner-radius-large": "32px",
			"*Demo-corner-radius-medium": "24px",
			"*Demo-corner-radius-small": "16px",
			"*Demo-gap": "0px",
			"*Demo-padding": "24px",
			"checkbox-completed-box-container-border": "0px",
			"*Graveyard-drawer-container-padding-left-right": "8px",
			"*Graveyard-drawer-container-padding-top-bottom": "16px",
			"*Graveyard-drawer-container-corner-radius": "8px",
			"*Graveyard-toggletip-plain-container-corner-radius": "4px",
			"*Graveyard-toggletip-plain-container-padding-left-right": "8px",
			"*Graveyard-toggletip-plain-container-padding-top-bottom": "4px",
			"*Graveyard-toggletip-plain-container-margin": "4px",
			"*Graveyard-toggletip-plain-container-width-max": "140px",
			"*Graveyard-toggletip-plain-trigger-corner-radius": "100px",
			"*Graveyard-toggletip-plain-text-margin-right": "16px",
			"*Graveyard-toggletip-plain-close-icon-margin-top": "2px",
			"*Graveyard-toggletip-plain-focused-trigger-icon-border-weight": "2px",
			"*Graveyard-toggletip-plain-focused-close-icon-border-weight": "1px",
			"accessible-focus-border-container-border": "4px",
			"accessible-focus-border-container-outer-border": "2px",
			"navigation-bar-item-brand-scale-m-l-icon-container-padding-top": "1.5rem",
			"navigation-bar-item-brand-scale-m-l-container-height": "6.5rem",
			"navigation-bar-item-brand-scale-m-l-content-margin": "0.75rem",
			"navigation-bar-item-brand-container-min-padding-left-right": "8px",
			"navigation-bar-item-brand-label-text-opacity": "48px",
			"navigation-bar-item-brand-icon-opacity": "48px",
			"navigation-bar-item-brand-active-label-text-opacity": "100px",
			"navigation-bar-item-brand-active-icon-opacity": "100px",
			"button-text-scale-m-l-icon": "1.5rem",
			"button-text-scale-m-l-container-height": "3.5rem",
			"button-text-scale-large-container-height": "60px",
			"button-icon-scale-m-l-icon-size": "1.5rem",
			"border-weight-none": "0px",
			"border-weight-small": "1px",
			"border-weight-medium": "2px",
			"border-weight-large": "4px",
			"padding-none": "0px",
			"padding-3xsmall": "2px",
			"padding-2xsmall": "4px",
			"padding-xsmall": "8px",
			"padding-small": "12px",
			"padding-medium": "16px",
			"padding-large": "24px",
			"padding-xlarge": "32px",
			"padding-2xlarge": "40px",
			"padding-3xlarge": "48px",
			"margin-none": "0px",
			"margin-3xsmall": "2px",
			"margin-2xsmall": "4px",
			"margin-xsmall": "8px",
			"margin-small": "12px",
			"margin-medium": "16px",
			"margin-large": "24px",
			"margin-xlarge": "32px",
			"margin-2xlarge": "40px",
			"margin-section-vertical-large": "72px",
			"margin-section-vertical-medium": "64px",
			"margin-section-vertical-small": "56px",
			"corner-radius-none": "0px",
			"corner-radius-3xsmall": "2px",
			"corner-radius-2xsmall": "4px",
			"corner-radius-xsmall": "8px",
			"corner-radius-small": "16px",
			"corner-radius-medium": "24px",
			"corner-radius-large": "32px",
			"corner-radius-xlarge": "40px",
			"corner-radius-2xlarge": "48px",
			"corner-radius-3xlarge": "56px",
			"corner-radius-full": "100px",
			"shadow-accessible": "3px",
			"shadow-level-1-blur": "4px",
			"shadow-level-1-y": "1px",
			"shadow-level-1-spread": "0px",
			"shadow-level-2-blur": "16px",
			"shadow-level-2-y": "8px",
			"shadow-level-2-spread": "2px",
			"shadow-level-3-blur": "24px",
			"shadow-level-3-y": "16px",
			"shadow-level-3-spread": "4px",
			"shadow-inverted-blur": "8px",
			"shadow-inverted-y": "-4px",
			"shadow-inverted-spread": "2px",
			"shadow-left-blur": "8px",
			"shadow-left-x": "-4px",
			"shadow-left-spread": "2px",
			"shadow-right-blur": "8px",
			"shadow-right-x": "4px",
			"shadow-right-spread": "2px",
			"shadow-top-blur": "8px",
			"shadow-top-y": "-2px",
			"shadow-top-spread": "1px",
			"blur-background-level-1": "4px",
			"blur-background-level-2": "8px",
			"blur-background-level-3": "16px",
			"blur-layer-level-1": "24px",
			"blur-layer-level-2": "48px",
			"blur-layer-level-3": "96px"
		}
	},
	dark: {
		colors: {
			"logo-core-default-colour": "#ffffffff",
			"logo-core-inverted-colour": "#000000ff",
			"logo-core-brand-colour": "#ffcb05ff",
			"logo-core-on-image-colour-light": "#ffffffff",
			"logo-core-on-image-colour-dark": "#262626ff",
			"logo-play-default-colour": "#ffffffff",
			"logo-play-inverted-colour": "#000000ff",
			"logo-play-brand-colour": "#ffcb05ff",
			"logo-play-on-image-colour-light": "#ffffffff",
			"logo-play-on-image-colour-dark": "#262626ff",
			"logo-payment-default-colour": "#ffffffff",
			"logo-payment-opacity-colour": "#ffffff52",
			"logo-payment-opacity-inverse-colour": "#00000052",
			"container-bg-colour-full": "#000000ff",
			"container-bg-colour-subtle": "#262626ff",
			"container-bg-colour-dim": "#434343ff",
			"container-bg-colour-brand": "#ffcb05ff",
			"container-bg-colour-full-inverse": "#ffffffff",
			"container-bg-colour-subtle-inverse": "#f5f5f5ff",
			"container-bg-colour-dim-inverse": "#e9e9e9ff",
			"accessible-focus-border-container-border-colour": "#ffcb05ff",
			"avatar-container-colour": "#ffffffa3",
			"avatar-label-text-colour": "#000000cc",
			"avatar-icon-colour": "#000000cc",
			"accordion-button-label-text-colour": "#ffffffff",
			"accordion-button-icon-colour": "#ffffffff",
			"accordion-button-container-border-colour": "#ffffff29",
			"accordion-button-hovered-label-text-colour": "#ffffffff",
			"accordion-button-hovered-container-colour": "#ffffff14",
			"accordion-button-focused-label-text-colour": "#ffffffff",
			"accordion-button-focused-container-colour": "#ffffff14",
			"accordion-button-pressed-container-colour": "#ffffff29",
			"accordion-button-disabled-label-text-colour": "#d9d9d9ff",
			"accordion-button-disabled-icon-colour": "#7b7b7bff",
			"accordion-container-border-colour": "#ffffff14",
			"accordion-button-active-label-text-colour": "#ffffffff",
			"accordion-button-active-container-colour": "#ffffff14",
			"accordion-button-active-hovered-container-colour": "#ffffff14",
			"accordion-button-active-pressed-container-colour": "#ffffff29",
			"accordion-button-active-focused-container-colour": "#ffffff14",
			"badge-label-text-colour": "#000000ff",
			"badge-container-colour": "#ffffffff",
			"badge-alert-label-text-colour": "#b20010ff",
			"badge-alert-container-colour": "#ffbec4ff",
			"badge-warning-label-text-colour": "#000000ff",
			"badge-warning-container-colour": "#ffb18aff",
			"badge-positive-label-text-colour": "#000000ff",
			"badge-positive-container-colour": "#d5e9bfff",
			"badge-informative-label-text-colour": "#004a71ff",
			"badge-informative-container-colour": "#c7ebffff",
			"badge-brand-core-label-text-colour": "#000000ff",
			"badge-brand-core-container-colour": "#ffcb05ff",
			"button-action-transparent-icon-colour": "#000000ff",
			"button-action-transparent-container-colour": "#ffffffa3",
			"button-action-transparent-hovered-icon-colour": "#434343ff",
			"button-action-transparent-hovered-container-colour": "#ffffffcc",
			"button-action-transparent-focused-icon-colour": "#434343ff",
			"button-action-transparent-focused-container-colour": "#ffffffcc",
			"button-action-transparent-pressed-icon-colour": "#434343ff",
			"button-action-transparent-pressed-container-colour": "#ffffff52",
			"button-action-transparent-disabled-icon-colour": "#555555ff",
			"button-action-transparent-disabled-container-colour": "#ffffff29",
			"button-action-filled-container-border-colour": "#ffffff52",
			"button-action-filled-icon-colour": "#ffffffff",
			"button-action-filled-container-colour": "#000000ff",
			"button-action-filled-hovered-container-border-colour": "#ffffff14",
			"button-action-filled-hovered-icon-colour": "#f5f5f5ff",
			"button-action-filled-hovered-container-colour": "#434343ff",
			"button-action-filled-focused-icon-colour": "#f5f5f5ff",
			"button-action-filled-focused-container-colour": "#434343ff",
			"button-action-filled-pressed-icon-colour": "#f5f5f5ff",
			"button-action-filled-disabled-container-colour": "#262626ff",
			"button-action-filled-disabled-icon-colour": "#7b7b7bff",
			"button-action-filled-disabled-container-border-colour": "#ffffff29",
			"button-action-filled-pressed-container-colour": "#555555ff",
			"button-action-filled-pressed-container-border-colour": "#ffffff14",
			"button-app-standard-hovered-container-colour": "#262626ff",
			"button-app-standard-hovered-label-text-colour": "#ffffffff",
			"button-app-standard-hovered-symbol-colour": "#ffffffff",
			"button-app-standard-focused-container-colour": "#000000ff",
			"button-app-standard-focused-label-text-colour": "#ffffffff",
			"button-app-standard-focused-symbol-colour": "#ffffffff",
			"button-app-standard-container-colour": "#000000ff",
			"button-app-standard-container-border-colour": "#ffffff29",
			"button-app-standard-label-text-colour": "#ffffffff",
			"button-app-standard-symbol-colour": "#ffffffff",
			"button-app-inverted-container-colour": "#ffffffff",
			"button-app-inverted-container-border-colour": "#00000029",
			"button-app-inverted-label-text-colour": "#000000ff",
			"button-app-inverted-symbol-colour": "#000000ff",
			"button-app-inverted-hovered-container-colour": "#f5f5f5ff",
			"button-app-inverted-hovered-label-text-colour": "#000000ff",
			"button-app-inverted-hovered-symbol-colour": "#000000ff",
			"button-app-inverted-focused-container-colour": "#ffffffff",
			"button-app-inverted-focused-label-text-colour": "#000000ff",
			"button-app-inverted-focused-symbol-colour": "#000000ff",
			"button-primary-container-colour": "#ffcb05ff",
			"button-primary-icon-colour": "#000000ff",
			"button-primary-label-text-colour": "#000000ff",
			"button-secondary-icon-colour": "#ffffffff",
			"button-secondary-label-text-colour": "#ffffffff",
			"button-secondary-container-border-colour": "#ffffffa3",
			"button-secondary-hovered-icon-colour": "#d9d9d9ff",
			"button-secondary-hovered-label-text-colour": "#d9d9d9ff",
			"button-secondary-hovered-container-colour": "#ffffff14",
			"button-secondary-hovered-container-border-colour": "#e9e9e9ff",
			"button-secondary-focused-icon-colour": "#d9d9d9ff",
			"button-secondary-focused-label-text-colour": "#d9d9d9ff",
			"button-secondary-focused-container-colour": "#ffffff14",
			"button-secondary-pressed-icon-colour": "#d9d9d9ff",
			"button-secondary-pressed-label-text-colour": "#d9d9d9ff",
			"button-secondary-pressed-container-colour": "#ffffff14",
			"button-secondary-pressed-container-border-colour": "#c4c4c4ff",
			"button-secondary-disabled-icon-colour": "#d9d9d9ff",
			"button-secondary-disabled-label-text-colour": "#d9d9d9ff",
			"button-secondary-disabled-container-border-colour": "#7b7b7bff",
			"button-primary-hovered-container-colour": "#d6aa00ff",
			"button-primary-focused-container-colour": "#d6aa00ff",
			"button-primary-pressed-container-colour": "#d6aa00ff",
			"button-primary-pressed-icon-colour": "#434343ff",
			"button-primary-pressed-label-text-colour": "#434343ff",
			"button-primary-disabled-container-colour": "#7b7b7bff",
			"button-primary-disabled-icon-colour": "#d9d9d9ff",
			"button-primary-disabled-label-text-colour": "#d9d9d9ff",
			"button-call-out-container-colour": "#ffffffff",
			"button-call-out-icon-colour": "#000000ff",
			"button-call-out-lable-text-colour": "#000000ff",
			"button-call-out-hovered-container-colour": "#d9d9d9ff",
			"button-call-out-focused-container-colour": "#d9d9d9ff",
			"button-call-out-pressed-container-colour": "#d9d9d9ff",
			"button-call-out-pressed-icon-colour": "#434343ff",
			"button-call-out-pressed-label-text-colour": "#434343ff",
			"button-call-out-disabled-container-colour": "#7b7b7bff",
			"button-call-out-disabled-icon-colour": "#d9d9d9ff",
			"button-call-out-disabled-label-text-colour": "#d9d9d9ff",
			"button-text-icon-colour": "#ffffffff",
			"button-text-label-text-colour": "#ffffffff",
			"button-text-hovered-icon-colour": "#d9d9d9ff",
			"button-text-hovered-label-text-colour": "#d9d9d9ff",
			"button-text-hovered-container-border-colour": "#ffffffff",
			"button-text-focused-icon-colour": "#d9d9d9ff",
			"button-text-focused-label-text-colour": "#d9d9d9ff",
			"button-text-pressed-icon-colour": "#d9d9d9ff",
			"button-text-pressed-label-text-colour": "#d9d9d9ff",
			"button-text-pressed-container-border-colour": "#ffdd5fff",
			"button-text-disabled-icon-colour": "#7b7b7bff",
			"button-text-disabled-label-text-colour": "#7b7b7bff",
			"button-icon-icon-primary-colour": "#ffcb05ff",
			"button-icon-icon-colour": "#ffffffff",
			"button-icon-label-text-colour": "#ffffffff",
			"button-icon-outline-container-border-colour": "#ffffff29",
			"button-icon-filled-container-colour": "#ffffff14",
			"button-icon-hovered-container-colour": "#ffffff29",
			"button-icon-focused-icon-colour": "#d9d9d9ff",
			"button-icon-focused-label-text-colour": "#d9d9d9ff",
			"button-icon-focused-container-colour": "#ffffff29",
			"button-icon-pressed-icon-colour": "#d9d9d9ff",
			"button-icon-pressed-label-text-colour": "#d9d9d9ff",
			"button-icon-pressed-container-colour": "#ffffff52",
			"button-icon-disabled-icon-colour": "#7b7b7bff",
			"button-icon-disabled-label-text-colour": "#7b7b7bff",
			"button-icon-disabled-container-colour": "#ffffff0a",
			"button-icon-outline-disabled-container-border-colour": "#ffffff14",
			"button-fab-primary-icon-colour": "#000000ff",
			"button-fab-primary-label-text-colour": "#000000ff",
			"button-fab-primary-container-colour": "#ffcb05ff",
			"button-fab-primary-hovered-container-colour": "#ffcb05ff",
			"button-fab-primary-focused-container-colour": "#d6aa00ff",
			"button-fab-primary-pressed-icon-colour": "#434343ff",
			"button-fab-primary-pressed-label-text-colour": "#434343ff",
			"button-fab-primary-pressed-container-colour": "#d6aa00ff",
			"button-fab-primary-disabled-icon-colour": "#d9d9d9ff",
			"button-fab-primary-disabled-label-text-colour": "#d9d9d9ff",
			"button-fab-primary-disabled-container-colour": "#7b7b7bff",
			"button-fab-secondary-icon-colour": "#000000ff",
			"button-fab-secondary-label-text-colour": "#000000ff",
			"button-fab-secondary-container-colour": "#ffffffff",
			"button-fab-secondary-hovered-container-colour": "#d9d9d9ff",
			"button-fab-secondary-focused-container-colour": "#d9d9d9ff",
			"button-fab-secondary-pressed-icon-colour": "#434343ff",
			"button-fab-secondary-pressed-label-text-colour": "#434343ff",
			"button-fab-secondary-pressed-container-colour": "#d9d9d9ff",
			"button-fab-secondary-disabled-icon-colour": "#d9d9d9ff",
			"button-fab-secondary-disabled-label-text-colour": "#d9d9d9ff",
			"button-fab-secondary-disabled-container-colour": "#7b7b7bff",
			"button-select-container-border-colour": "#ffffffa3",
			"button-select-label-text-colour": "#ffffffff",
			"button-select-hovered-container-colour": "#ffffff29",
			"button-select-focused-label-text-colour": "#000000ff",
			"button-select-focused-container-colour": "#ffcb05ff",
			"button-select-pressed-container-border-colour": "#d9d9d9ff",
			"button-select-active-label-text-colour": "#000000ff",
			"button-select-active-container-colour": "#ffcb05ff",
			"button-select-pressed-container-colour": "#ffffff29",
			"button-select-pressed-label-text-colour": "#d9d9d9ff",
			"button-select-disabled-container-border-colour": "#7b7b7bff",
			"button-select-disabled-label-text-colour": "#7b7b7bff",
			"button-payment-logo-colour": "#000000ff",
			"button-payment-container-colour": "#ffffffff",
			"button-payment-hovered-container-colour": "#d9d9d9ff",
			"button-payment-focused-container-colour": "#d9d9d9ff",
			"button-payment-pressed-logo-colour": "#434343ff",
			"button-payment-pressed-container-colour": "#d9d9d9ff",
			"button-payment-disabled-logo-colour": "#d9d9d9ff",
			"button-payment-disabled-container-colour": "#7b7b7bff",
			"card-base-elevated-container-colour": "#000000ff",
			"card-base-elevated-hovered-container-border-colour": "#ffffff52",
			"card-base-elevated-pressed-container-colour": "#262626ff",
			"card-base-outlined-container-colour": "#000000ff",
			"card-base-outlined-container-border-colour": "#ffffff52",
			"card-base-outlined-hovered-container-border-colour": "#ffffffa3",
			"card-base-outlined-pressed-container-colour": "#262626ff",
			"card-base-primary-container-colour": "#ffcb05ff",
			"card-base-primary-hovered-container-border-colour": "#ffffffa3",
			"card-base-primary-hovered-container-colour": "#d6aa00ff",
			"card-base-primary-pressed-container-colour": "#d6aa00ff",
			"card-base-inverted-container-colour": "#ffffffff",
			"card-base-inverted-hovered-container-colour": "#f5f5f5ff",
			"card-base-inverted-hovered-container-border-colour": "#000000a3",
			"card-base-inverted-pressed-container-colour": "#e9e9e9ff",
			"card-base-glass-container-colour": "#000000cc",
			"card-base-glass-hovered-container-colour": "#000000b8",
			"card-base-glass-hovered-container-border-colour": "#000000a3",
			"card-base-glass-pressed-container-colour": "#000000a3",
			"card-base-glass-inverted-container-colour": "#ffffffcc",
			"card-base-glass-inverted-hovered-container-colour": "#ffffffb8",
			"card-base-glass-inverted-hovered-container-border-colour": "#ffffffa3",
			"card-base-glass-inverted-pressed-container-colour": "#ffffffa3",
			"carousel-title-text-colour": "#ffffffff",
			"checkbox-label-text-colour": "#f5f5f5ff",
			"checkbox-hovered-label-text-colour": "#ffffffff",
			"checkbox-hovered-box-container-colour": "#ffcb05ff",
			"checkbox-box-border-colour": "#ffffffff",
			"checkbox-focused-label-text-colour": "#ffffffff",
			"date-picker-week-day-label-text-colour": "#ffffffa3",
			"date-picker-date-label-text-colour": "#ffffffcc",
			"date-picker-container-colour": "#000000ff",
			"date-picker-container-border-colour": "#ffffff29",
			"date-picker-date-current-container-border-colour": "#ffcb05ff",
			"date-picker-month-selection-icon-colour": "#ffffffff",
			"date-picker-month-selection-label-text-colour": "#ffffffff",
			"date-picker-date-hovered-label-text-colour": "#ffffffff",
			"date-picker-date-hovered-container-colour": "#ffffff29",
			"date-picker-date-focused-label-text-colour": "#ffffffff",
			"date-picker-date-focused-container-colour": "#ffffff29",
			"date-picker-date-active-label-text-colour": "#000000ff",
			"date-picker-date-active-start-label-text-colour": "#000000ff",
			"date-picker-date-active-start-container-colour": "#ffcb05ff",
			"date-picker-date-active-middle-label-text-colour": "#000000ff",
			"date-picker-date-active-end-label-text-colour": "#000000ff",
			"date-picker-date-active-end-container-colour": "#ffcb05ff",
			"date-picker-date-active-middle-container-colour": "#d6aa00ff",
			"date-picker-date-disabled-label-text-colour": "#ffffffa3",
			"date-picker-date-active-container-colour": "#ffcb05ff",
			"dialog-title-text-colour": "#ffffffff",
			"dialog-text-colour": "#ffffffff",
			"dialog-container-colour": "#000000ff",
			"dialog-contianer-border-colour": "#ffffff29",
			"dismissible-hovered-icon-colour": "#ffffffb8",
			"dismissible-pressed-icon-colour": "#ffffffa3",
			"divider-on-primary-container-colour": "#ffffff52",
			"divider-on-secondary-container-colour": "#ffffff52",
			"divider-on-tertiary-container-colour": "#ffffff52",
			"divider-on-primary-inverse-container-colour": "#00000014",
			"divider-on-secondary-inverse-container-colour": "#00000014",
			"divider-on-tertiary-inverse-container-colour": "#00000014",
			"divider-on-brand-container-colour": "#00000029",
			"dot-indicator-container-colour": "#ffffff52",
			"dot-indicator-standard-hovered-container-colour": "#ffffffa3",
			"dot-indicator-standard-active-container-colour": "#ffffffb8",
			"dot-indicator-inverted-container-colour": "#00000052",
			"dot-indicator-inverted-hovered-container-colour": "#000000a3",
			"dropdown-hovered-input-container-colour": "#ffffff29",
			"dot-indicator-inverted-active-container-colour": "#000000b8",
			"dropdown-hovered-input-container-border-colour": "#d9d9d9ff",
			"dropdown-focused-label-text-colour": "#d9d9d9ff",
			"dropdown-focused-input-container-border-colour": "#ffcb05ff",
			"dropdown-completed-input-text-colour": "#ffffffff",
			"dropdown-error-input-text-colour": "#ffffffff",
			"dropdown-error-input-container-colour": "#ffffff29",
			"dropdown-error-helper-icon-colour": "#ffbec4ff",
			"dropdown-error-input-container-border-colour": "#ffbec4ff",
			"dropdown-disabled-input-label-text-colour": "#ffffff52",
			"dropdown-disabled-icon-colour": "#ffffff52",
			"dropdown-input-container-colour": "#ffffff14",
			"dropdown-disabled-input-container-border-colour": "#7b7b7bff",
			"dropdown-input-label-text-colour": "#f5f5f5ff",
			"dropdown-icon-colour": "#f5f5f5ff",
			"dropdown-helper-text-colour": "#d9d9d9ff",
			"dropdown-helper-icon-colour": "#d9d9d9ff",
			"dropdown-input-container-border-colour": "#ffffffff",
			"list-icon-label-text-colour": "#ffffffff",
			"list-icon-icon-primary-colour": "#ffcb05ff",
			"list-icon-icon-secondary-colour": "#ffffffff",
			"list-unordered-label-text-colour": "#ffffffff",
			"list-unordered-symbol-primary-colour": "#ffcb05ff",
			"list-unordered-symbol-secondary-colour": "#ffffffff",
			"list-ordered-label-text-colour": "#ffffffff",
			"list-ordered-number-primary-colour": "#ffcb05ff",
			"list-ordered-number-secondary-colour": "#ffffffff",
			"menu-container-colour": "#000000ff",
			"menu-container-border-colour": "#555555ff",
			"menu-item-label-text-colour": "#f5f5f5ff",
			"menu-item-leading-icon-colour": "#f5f5f5ff",
			"menu-item-trailing-icon-colour": "#d9d9d9ff",
			"menu-item-container-colour": "#000000ff",
			"menu-item-hovered-label-text-colour": "#ffffffff",
			"menu-item-hovered-leading-icon-colour": "#ffffffff",
			"menu-item-hovered-container-colour": "#262626ff",
			"menu-item-focused-container-colour": "#262626ff",
			"menu-item-active-label-text-colour": "#ffffffff",
			"menu-item-active-leading-icon-colour": "#ffffffff",
			"menu-item-active-trailing-icon-colour": "#ffffffff",
			"menu-item-active-container-colour": "#262626ff",
			"menu-search-label-text-colour": "#d9d9d9ff",
			"menu-search-icon-colour": "#ffffffa3",
			"menu-search-container-colour": "#000000ff",
			"menu-search-container-border-colour": "#ffffff52",
			"menu-search-focused-container-colour": "#262626ff",
			"menu-search-hovered-container-colour": "#262626ff",
			"menu-search-completed-label-text-colour": "#ffffffff",
			"menu-search-completed-leading-icon-colour": "#d9d9d9ff",
			"menu-search-completed-trailing-icon-colour": "#ffffffa3",
			"menu-search-completed-container-colour": "#262626ff",
			"mobile-number-input-input-container-colour": "#ffffff14",
			"mobile-number-input-input-label-text-colour": "#f5f5f5ff",
			"mobile-number-input-input-text-colour": "#d9d9d9ff",
			"mobile-number-input-input-icon-colour": "#f5f5f5ff",
			"mobile-number-input-input-dropdown-icon-colour": "#ffffff52",
			"mobile-number-input-helper-text-colour": "#d9d9d9ff",
			"mobile-number-input-helper-icon-colour": "#d9d9d9ff",
			"mobile-number-input-input-container-border-colour": "#ffffffff",
			"mobile-number-input-input-country-border colour": "#ffffff52",
			"mobile-number-input-hovered-input-text-colour": "#f5f5f5ff",
			"mobile-number-input-hovered-input-container-colour": "#ffffff29",
			"mobile-number-input-hovered-input-container-border-colour": "#d9d9d9ff",
			"mobile-number-input-focused-input-container-border-colour": "#ffcb05ff",
			"mobile-number-input-completed-input-text-colour": "#ffffffff",
			"mobile-number-input-error-input-text-colour": "#ffffffff",
			"mobile-number-input-error-input-container-colour": "#ffffff29",
			"mobile-number-input-error-helper-icon-colour": "#ffbec4ff",
			"mobile-number-input-error-input-container-border-colour": "#ffbec4ff",
			"mobile-number-input-disabled-input-label-text-colour": "#ffffff52",
			"mobile-number-input-disabled-input-text-colour": "#ffffff52",
			"mobile-number-input-disabled-input-icon-colour": "#ffffff52",
			"mobile-number-input-disabled-input-container-border-colour": "#7b7b7bff",
			"mobile-number-input-disabled-input-dropdown-icon-colour": "#ffffff29",
			"navigation-bar-transparent-container-background-colour": "#000000cc",
			"navigation-bar-filled-container-background-colour": "#000000ff",
			"navigation-bar-brand-container-background-colour": "#ffcb05ff",
			"navigation-bar-container-border-colour": "#ffffff14",
			"navigation-bar-item-icon-colour": "#ffffffa3",
			"navigation-bar-item-label-text-colour": "#ffffffa3",
			"navigation-bar-item-hovered-label-text-colour": "#ffffffcc",
			"navigation-bar-item-hovered-icon-colour": "#ffffffcc",
			"navigation-bar-item-hovered-container-background": "#ffffff14",
			"navigation-bar-item-focused-label-text-colour": "#ffffffcc",
			"navigation-bar-item-focused-icon-colour": "#ffffffcc",
			"navigation-bar-item-focused-container-background": "#ffffff14",
			"navigation-bar-item-active-label-text-colour": "#ffffffff",
			"navigation-bar-item-active-icon-colour": "#ffcb05ff",
			"notification-toast-container-colour": "#000000b8",
			"notification-toast-container-border-colour": "#ffffff29",
			"notification-toast-title-text-colour": "#ffffffff",
			"notification-toast-body-text-colour": "#f5f5f5ff",
			"notification-toast-button-border-colour": "#ffffff52",
			"notification-toast-button-label-text-colour": "#ffffffff",
			"notification-toast-hovered-button-container-colour": "#ffffff0a",
			"notification-toast-pressed-button-label-text-colour": "#d9d9d9ff",
			"notification-alert-container-border-colour": "#ffffff29",
			"notification-alert-icon-colour": "#ffffffff",
			"notification-alert-text-colour": "#ffffffff",
			"notification-alert-brand-container-colour": "#5c4900ff",
			"notification-alert-brand-inner-container-border-colour": "#ffcb05ff",
			"notification-alert-informative-container-colour": "#002f48ff",
			"notification-alert-informative-inner-container-border-colour": "#c7ebffff",
			"notification-alert-success-container-colour": "#085f00ff",
			"notification-alert-success-inner-container-border-colour": "#d5e9bfff",
			"notification-alert-warning-container-colour": "#4d1a00ff",
			"notification-alert-warning-inner-container-border-colour": "#ffb18aff",
			"notification-alert-error-container-colour": "#610009ff",
			"notification-alert-error-inner-container-border-colour": "#ffbec4ff",
			"notification-inline-container-border-colour": "#ffffff29",
			"notification-inline-icon-colour": "#ffffffff",
			"notification-inline-text-colour": "#ffffffff",
			"notification-inline-brand-container-colour": "#5c4900ff",
			"notification-inline-brand-inner-container-border-colour": "#ffcb05ff",
			"notification-inline-informative-container-colour": "#002f48ff",
			"notification-inline-informative-inner-container-border-colour": "#c7ebffff",
			"notification-inline-success-container-colour": "#085f00ff",
			"notification-inline-success-inner-container-border-colour": "#d5e9bfff",
			"notification-inline-warning-container-colour": "#4d1a00ff",
			"notification-inline-warning-inner-container-border-colour": "#ffb18aff",
			"notification-inline-error-container-colour": "#610009ff",
			"notification-inline-error-inner-container-border-colour": "#ffbec4ff",
			"number-input-input-container-colour": "#ffffff14",
			"number-input-input-label-text-colour": "#f5f5f5ff",
			"number-input-input-text-colour": "#d9d9d9ff",
			"number-input-input-plus-icon-colour": "#f5f5f5ff",
			"number-input-icon-divider-border-colour": "#ffffff29",
			"number-input-input-minus-icon-colour": "#ffffffa3",
			"number-input-helper-text-colour": "#d9d9d9ff",
			"number-input-helper-icon-colour": "#d9d9d9ff",
			"number-input-input-container-border-colour": "#ffffffff",
			"number-input-hovered-input-container-colour": "#ffffff29",
			"number-input-hovered-input-container-border-colour": "#d9d9d9ff",
			"number-input-focused-input-container-border-colour": "#ffcb05ff",
			"number-input-completed-input-text-colour": "#ffffffff",
			"number-input-completed-input-minus-icon-colour": "#f5f5f5ff",
			"number-input-error-input-text-colour": "#ffffffff",
			"number-input-disabled-input-label-text-colour": "#ffffff52",
			"number-input-disabled-input-text-colour": "#ffffff52",
			"number-input-disabled-input-container-border-colour": "#7b7b7bff",
			"number-input-disabled-input-plus-icon-colour": "#ffffff52",
			"number-input-disabled-input-minus-icon-colour": "#ffffff52",
			"number-input-error-input-container-colour": "#ffffff29",
			"number-input-error-helper-icon-colour": "#ffbec4ff",
			"number-input-error-input-container-border-colour": "#ffbec4ff",
			"pagination-item-label-text-colour": "#ffffffcc",
			"pagination-item-hovered-label-text-colour": "#ffffffff",
			"pagination-item-hovered-container-colour": "#ffffff29",
			"pagination-item-focused-label-text-colour": "#ffffffff",
			"pagination-item-focused-container-colour": "#ffffff29",
			"pagination-item-active-label-text-colour": "#000000ff",
			"pagination-item-active-container-colour": "#ffffffcc",
			"pagination-arrow-icon-colour": "#ffffffcc",
			"pagination-arrow-hovered-container-colour": "#ffffff29",
			"pagination-arrow-focused-container-colour": "#ffffff29",
			"pagination-arrow-disabled-icon-colour": "#ffffff52",
			"pin-input-helper-text-colour": "#d9d9d9ff",
			"pin-input-helper-icon-colour": "#d9d9d9ff",
			"pin-input-error-helper-icon-colour": "#ffbec4ff",
			"pin-input-field-container-colour": "#ffffff14",
			"pin-input-field-container-border-colour": "#ffffffff",
			"pin-input-field-hovered-container-colour": "#ffffff29",
			"pin-input-field-hovered-container-border-colour": "#d9d9d9ff",
			"pin-input-field-focused-input-text-colour": "#d9d9d9ff",
			"pin-input-field-focused-container-border-colour": "#ffcb05ff",
			"pin-input-field-completed-input-text-colour": "#ffffffff",
			"pin-input-field-error-input-text-colour": "#ffffffff",
			"pin-input-field-error-container-colour": "#ffffff29",
			"pin-input-field-error-container-border-colour": "#ffbec4ff",
			"pin-input-field-disabled-container-border-colour": "#7b7b7bff",
			"progress-indicator-linear-track-colour": "#ffffff52",
			"progress-indicator-linear-indicator-colour": "#ffcb05ff",
			"progress-indicator-circular-indicator-colour": "#ffcb05ff",
			"progress-indicator-circular-track-colour": "#ffffff29",
			"radio-button-label-text-colour": "#f5f5f5ff",
			"radio-button-radio-container-border-colour": "#ffffffff",
			"radio-button-hovered-label-text-colour": "#ffffffff",
			"radio-button-focused-label-text-colour": "#ffffffff",
			"radio-button-focused-radio-container-border-colour": "#ffcb05ff",
			"radio-button-completed-radio-dot-colour": "#ffcb05ff",
			"radio-button-completed-radio-container-border-colour": "#ffcb05ff",
			"radio-button-error-radio-border-colour": "#ffbec4ff",
			"radio-button-disabled-label-text-colour": "#d9d9d9ff",
			"radio-button-disabled-radio-border-colour": "#7b7b7bff",
			"rating-star-icon-colour": "#ffffffa3",
			"rating-star-hovered-icon-colour": "#ffffff52",
			"rating-star-active-icon-colour": "#ffcb05ff",
			"rating-star-focused-icon-colour": "#ffcb05ff",
			"rating-experience-label-text-colour": "#ffffffa3",
			"rating-experience-hovered-label-text-colour": "#ffffff52",
			"rating-experience-active-label-text-colour": "#ffffffff",
			"rating-experience-focused-label-text-colour": "#ffffffff",
			"scrollbar-track-colour": "#ffffff52",
			"scrollbar-indicator-colour": "#ffffffa3",
			"scrollbar-hovered-indicator-colour": "#ffcb05ff",
			"scrollbar-focused-indicator-border-colour": "#ffcb05ff",
			"search-bar-label-text-colour": "#d9d9d9ff",
			"search-bar-leading-icon-colour": "#ffffffa3",
			"search-bar-container-colour": "#000000ff",
			"search-container-colour": "#000000ff",
			"search-bar-container-border-colour": "#ffffff29",
			"search-bar-focused-container-colour": "#262626ff",
			"search-bar-active-container-border-colour": "#ffffff29",
			"search-bar-active-label-text-colour": "#ffffffff",
			"search-bar-completed-label-text-colour": "#ffffffff",
			"search-bar-completed-leading-icon-colour": "#d9d9d9ff",
			"search-bar-completed-trailing-icon-colour": "#ffffffa3",
			"search-bar-completed-container-colour": "#262626ff",
			"search-suggestion-label-text-colour": "#ffffffff",
			"search-suggestion-description-text-colour": "#ffffffcc",
			"search-suggestion-icon-colour": "#ffffffff",
			"search-no-results-label-text-colour": "#ffffffff",
			"search-no-results-description-text-colour": "#ffffffcc",
			"search-no-results-icon-colour": "#ffffffff",
			"search-suggestion-container-colour": "#000000ff",
			"search-suggestion-hovered-container-colour": "#262626ff",
			"search-suggestion-focused-container-colour": "#262626ff",
			"sheet-bottom-elevated-container-colour": "#000000ff",
			"sheet-bottom-drag-line-colour": "#ffffff29",
			"sheet-bottom-glass-container-colour": "#000000cc",
			"sheet-side-elevated-container-colour": "#000000ff",
			"sheet-side-glass-container-colour": "#000000cc",
			"sheet-side-content-colour": "#ffffffff",
			"switch-label-text-colour": "#f5f5f5ff",
			"switch-toggle-container-colour": "#ffffff52",
			"switch-toggle-circle-colour": "#000000ff",
			"switch-hovered-label-text-colour": "#ffffffff",
			"switch-hovered-toggle-container-colour": "#ffffffa3",
			"switch-focused-label-text-colour": "#ffffffff",
			"switch-active-label-text-colour": "#ffffffff",
			"switch-active-toggle-container-colour": "#ffcb05ff",
			"switch-disabled-label-text-colour": "#d9d9d9ff",
			"switch-disabled-toggle-container-colour": "#ffffff29",
			"tabs-label-text-colour": "#ffffffcc",
			"tabs-hovered-label-text-colour": "#ffffffa3",
			"tabs-active-label-text-colour": "#ffffffff",
			"tabs-active-label-underline-colour": "#ffcb05ff",
			"tag-label-text-colour": "#ffffffff",
			"tag-icon-colour": "#ffffffff",
			"tag-outlined-container-border-colour": "#ffffffff",
			"tag-outlined-hovered-container-colour": "#ffffff0a",
			"tag-outlined-pressed-container-colour": "#ffffff0a",
			"tag-outlined-pressed-container-border-colour": "#d9d9d9ff",
			"tag-outlined-pressed-label-text-colour": "#d9d9d9ff",
			"tag-outlined-pressed-icon-colour": "#d9d9d9ff",
			"tag-outlined-focused-container-colour": "#ffffff0a",
			"tag-filled-container-colour": "#ffffff29",
			"tag-filled-pressed-container-colour": "#ffffff52",
			"tag-filled-pressed-label-text-colour": "#d9d9d9ff",
			"tag-filled-pressed-icon-colour": "#d9d9d9ff",
			"tag-filled-hovered-container-colour": "#ffffff52",
			"text-area-input-container-colour": "#ffffff14",
			"text-area-input-label-text-colour": "#f5f5f5ff",
			"text-area-input-text-colour": "#d9d9d9ff",
			"text-area-input-icon-colour": "#f5f5f5ff",
			"text-area-input-container-border-colour": "#ffffffff",
			"text-area-character-count-label-text-colour": "#f5f5f5ff",
			"text-area-character-count-container-colour": "#ffffff29",
			"text-area-helper-text-colour": "#d9d9d9ff",
			"text-area-helper-icon-colour": "#d9d9d9ff",
			"text-area-hovered-input-container-colour": "#ffffff29",
			"text-area-hovered-input-container-border-colour": "#d9d9d9ff",
			"text-area-focused-input-container-border-colour": "#ffcb05ff",
			"text-area-completed-input-text-colour": "#ffffffff",
			"text-area-disabled-input-label-text-colour": "#ffffff52",
			"text-area-disabled-character-count-container-colour": "#ffffff29",
			"text-area-disabled-character-count-label-text-colour": "#ffffff29",
			"text-area-disabled-input-text-colour": "#ffffff52",
			"text-area-disabled-input-icon-colour": "#ffffff52",
			"text-area-disabled-input-container-border-colour": "#7b7b7bff",
			"text-area-error-input-text-colour": "#ffffffff",
			"text-area-error-input-container-colour": "#ffffff29",
			"text-area-error-helper-icon-colour": "#ffbec4ff",
			"text-area-error-input-container-border-colour": "#ffbec4ff",
			"text-embed-secondary-colour": "#ffffffff",
			"text-embed-tertiary-colour": "#d9d9d9ff",
			"text-embed-secondary-colour-inverse": "#000000ff",
			"text-embed-tertiary-colour-inverse": "#555555ff",
			"text-embed-on-image-colour-light": "#ffffffff",
			"text-embed-on-image-colour-dark": "#000000ff",
			"text-embed-on-primary": "#000000ff",
			"text-embed-on-secondary": "#000000ff",
			"text-input-input-container-colour": "#ffffff14",
			"text-input-input-label-text-colour": "#f5f5f5ff",
			"text-input-input-icon-colour": "#f5f5f5ff",
			"text-input-helper-text-colour": "#d9d9d9ff",
			"text-input-helper-icon-colour": "#d9d9d9ff",
			"text-input-input-container-border-colour": "#ffffffff",
			"text-input-hovered-input-container-colour": "#ffffff29",
			"text-input-hovered-input-container-border-colour": "#d9d9d9ff",
			"text-link-label-text-colour": "#ffffffff",
			"text-link-container-border-colour": "#ffffffff",
			"text-link-hovered-label-text-colour": "#f5f5f5ff",
			"text-link-hovered-container-border-colour": "#ffcb05ff",
			"text-link-pressed-label-text-colour": "#d9d9d9ff",
			"text-link-pressed-container-border-colour": "#d6aa00ff",
			"text-link-disabled-label-text-colour": "#7b7b7bff",
			"text-link-disabled-container-border-colour": "#7b7b7bff",
			"tooltip-container-colour": "#f5f5f5ff",
			"tooltip-caret-tip-colour": "#f5f5f5ff",
			"tooltip-text-colour": "#000000ff",
			"tooltip-dismissible-icon-colour": "#000000ff",
			"tooltip-trigger-icon-colour": "#ffffffff",
			"tooltip-trigger-text-colour": "#ffffffff",
			"tooltip-trigger-text-underline-colour": "#c7ebffff",
			"tooltip-trigger-hovered-icon-colour": "#d9d9d9ff",
			"tooltip-trigger-hovered-text-colour": "#d9d9d9ff",
			"icon-colour": "#ffffffff",
			"*Cursor-initial-colour": "#ffffffff",
			"*Cursor-brand-colour": "#ffcb05ff",
			"*Documentation-code-snippet-container-colour": "#000000ff",
			"*Documentation-code-snippet-border-colour": "#d9d9d9ff",
			"*Documentation-code-snippet-text-colour": "#ffffffff",
			"*Native-bg-primary": "#1a1a1aff",
			"*Demo-fg-colour-secondary": "#ffffffff",
			"*Demo-fg-colour-tertiary": "#f5f5f5ff",
			"*Demo-bg-primary": "#262626ff",
			"*Demo-border": "#ffffff29",
			"*Demo-bg-overlay-level2": "#000000a3",
			"*Demo-bg-overlay-level3": "#000000cc",
			"*Demo-bg-indicator": "#ffffff29",
			"*Demo-fg-indicator": "#d9d9d9ff",
			"text-input-focused-input-text-colour": "#d9d9d9ff",
			"text-input-focused-input-container-border-colour": "#ffcb05ff",
			"text-input-completed-input-text-colour": "#ffffffff",
			"text-input-error-input-text-colour": "#ffffffff",
			"text-input-error-input-container-colour": "#ffffff29",
			"text-input-error-input-container-border-colour": "#ffbec4ff",
			"text-input-error-helper-icon-colour": "#ffbec4ff",
			"text-input-disabled-label-text-colour": "#ffffff52",
			"text-input-disabled-input-icon-colour": "#ffffff52",
			"text-input-disabled-container-border-colour": "#7b7b7bff",
			"checkbox-completed-icon-colour": "#000000ff",
			"checkbox-completed-box-container-colour": "#ffcb05ff",
			"checkbox-error-box-border-colour": "#ffbec4ff",
			"checkbox-disabled-label-text-colour": "#d9d9d9ff",
			"checkbox-disabled-box-border-colour": "#7b7b7bff",
			"*Graveyard-drawer-container-colour": "#ffcb05ff",
			"*Graveyard-drawer-icon-colour": "#000000ff",
			"*Graveyard-drawer-hovered-container-colour": "#d6aa00ff",
			"*Graveyard-drawer-focused-container-colour": "#d6aa00ff",
			"*Graveyard-drawer-pressed-icon-colour": "#434343ff",
			"*Graveyard-drawer-pressed-container-colour": "#d6aa00ff",
			"*Graveyard-drawer-disabled-icon-colour": "#d9d9d9ff",
			"*Graveyard-drawer-disabled-container-colour": "#7b7b7bff",
			"*Graveyard-toggletip-plain-container-colour": "#ffffffcc",
			"*Graveyard-toggletip-plain-caret-tip-colour": "#ffffffcc",
			"*Graveyard-toggletip-plain-trigger-icon-colour": "#ffffffff",
			"*Graveyard-toggletip-plain-text-colour": "#000000ff",
			"*Graveyard-toggletip-plain-close-icon-colour": "#000000ff",
			"*Graveyard-toggletip-plain-hovered-trigger-icon-colour": "#d9d9d9ff",
			"*Graveyard-toggletip-plain-hovered-close-icon-colour": "#434343ff",
			"*Graveyard-toggletip-plain-focused-trigger-icon-border-colour": "#ffcb05ff",
			"*Graveyard-toggletip-plain-focused-close-icon-border-colour": "#ffcb05ff",
			"accessible-focus-border-container-outer-shadow-colour": "#000000ff",
			"navigation-bar-item-brand-icon-colour": "#000000ff",
			"navigation-bar-item-brand-label-text-colour": "#000000ff",
			"navigation-bar-item-brand-hovered-container-background": "#00000014",
			"navigation-bar-item-brand-focused-container-background": "#0000000a",
			"navigation-bar-item-brand-active-label-text-colour": "#000000ff",
			"navigation-bar-item-brand-active-icon-colour": "#000000ff",
			"colour-primary": "#ffcb05ff",
			"colour-on-primary": "#000000ff",
			"colour-primary-inverse": "#ffcb05ff",
			"colour-on-primary-inverse": "#000000ff",
			"colour-primary-interaction": "#ffdd5fff",
			"colour-primary-interaction-inverse": "#d6aa00ff",
			"colour-secondary": "#000000ff",
			"colour-on-secondary": "#ffffffff",
			"colour-secondary-inverse": "#ffffffff",
			"colour-on-secondary-inverse": "#000000ff",
			"colour-secondary-interaction": "#434343ff",
			"colour-secondary-interaction-inverse": "#d9d9d9ff",
			"colour-tertiary": "#434343ff",
			"colour-on-tertiary": "#f5f5f5ff",
			"colour-tertiary-inverse": "#f5f5f5ff",
			"colour-on-tertiary-inverse": "#434343ff",
			"colour-tertiary-interaction": "#555555ff",
			"colour-tertiary-interaction-inverse": "#d9d9d9ff",
			"colour-disabled": "#d9d9d9ff",
			"colour-on-disabled": "#7b7b7bff",
			"colour-disabled-inverse": "#7b7b7bff",
			"colour-on-disabled-inverse": "#d9d9d9ff",
			"colour-error": "#b20010ff",
			"colour-on-error": "#ffbec4ff",
			"colour-error-inverse": "#ffbec4ff",
			"colour-on-error-inverse": "#b20010ff",
			"colour-success": "#398004ff",
			"colour-on-success": "#ffffffff",
			"colour-success-inverse": "#d5e9bfff",
			"colour-on-success-inverse": "#000000ff",
			"colour-warning": "#ff732eff",
			"colour-on-warning-inverse": "#000000ff",
			"colour-on-warning": "#000000ff",
			"colour-warning-inverse": "#ffb18aff",
			"colour-informative": "#004a71ff",
			"colour-on-informative": "#c7ebffff",
			"colour-informative-inverse": "#c7ebffff",
			"colour-on-informative-inverse": "#004a71ff",
			"colour-surface": "#f5f5f5ff",
			"colour-on-surface": "#000000ff",
			"colour-surface-inverse": "#262626ff",
			"colour-on-surface-inverse": "#ffffffff",
			"colour-surface-full": "#ffffffff",
			"colour-on-surface-full": "#000000ff",
			"colour-surface-full-inverse": "#000000ff",
			"colour-on-surface-full-inverse": "#ffffffff",
			"colour-surface-dim": "#e9e9e9ff",
			"colour-on-surface-dim": "#000000ff",
			"colour-surface-dim-inverse": "#434343ff",
			"colour-on-surface-dim-inverse": "#ffffffff",
			"colour-surface-subtle-primary": "#fffae6ff",
			"colour-surface-subtle-primary-inverse": "#5c4900ff",
			"colour-surface-subtle-success": "#eef6e5ff",
			"colour-surface-subtle-success-inverse": "#085f00ff",
			"colour-surface-subtle-error": "#ffe8eaff",
			"colour-surface-subtle-error-inverse": "#610009ff",
			"colour-surface-subtle-warning": "#ffeee5ff",
			"colour-surface-subtle-warning-inverse": "#4d1a00ff",
			"colour-surface-subtle-informative": "#ebf8ffff",
			"colour-surface-subtle-informative-inverse": "#002f48ff",
			"colour-opacity-highest": "#ffffffcc",
			"colour-opacity-higher": "#ffffffb8",
			"colour-opacity-high": "#ffffffa3",
			"colour-opacity-medium": "#ffffff52",
			"colour-opacity-low": "#ffffff29",
			"colour-opacity-lower": "#ffffff14",
			"colour-opacity-lowest": "#ffffff0a",
			"colour-opacity-highest-inverse": "#000000cc",
			"colour-opacity-higher-inverse": "#000000b8",
			"colour-opacity-high-inverse": "#000000a3",
			"colour-opacity-medium-inverse": "#00000052",
			"colour-opacity-low-inverse": "#00000029",
			"colour-opacity-lower-inverse": "#00000014",
			"colour-opacity-lowest-inverse": "#0000000a",
			"border-colour-primary": "#ffcb05ff",
			"border-colour-primary-inverse": "#ffcb05ff",
			"border-colour-primary-interaction": "#ffdd5fff",
			"border-colour-primary-interaction-inverse": "#d6aa00ff",
			"border-colour-secondary": "#000000ff",
			"border-colour-secondary-inverse": "#ffffffff",
			"border-colour-secondary-interaction": "#434343ff",
			"border-colour-secondary-interaction-inverse": "#d9d9d9ff",
			"border-colour-opacity-inverse-64": "#000000a3",
			"border-colour-opacity-64": "#ffffffa3",
			"border-colour-opacity-inverse-32": "#00000052",
			"border-colour-opacity-32": "#ffffff52",
			"border-colour-opacity-inverse-16": "#00000029",
			"border-colour-opacity-16": "#ffffff29",
			"border-colour-opacity-inverse-8": "#00000014",
			"border-colour-opacity-8": "#ffffff14",
			"border-colour-tertiary": "#555555ff",
			"border-colour-tertiary-inverse": "#e9e9e9ff",
			"border-colour-disabled": "#c4c4c4ff",
			"border-colour-disabled-inverse": "#7b7b7bff",
			"border-colour-error": "#b20010ff",
			"border-colour-error-inverse": "#ffbec4ff",
			"border-colour-success": "#398004ff",
			"border-colour-success-inverse": "#d5e9bfff",
			"border-colour-warning": "#ff732eff",
			"border-colour-warning-inverse": "#ffb18aff",
			"border-colour-informative": "#004a71ff",
			"border-colour-informative-inverse": "#c7ebffff",
			"border-colour-accessible": "#ffcb05ff",
			"border-colour-accessible-inverse": "#ffcb05ff",
			"shadow-accessible-light-colour": "#ffffffff",
			"shadow-accessible-dark-colour": "#000000ff",
			"shadow-level-1-colour": "#00000029",
			"shadow-level-2-colour": "#00000029",
			"shadow-level-3-colour": "#00000029",
			"shadow-inverted-colour": "#00000014",
			"shadow-left-colour": "#00000014",
			"shadow-right-colour": "#00000014",
			"shadow-top-colour": "#00000014"
		},
		floats: {
			"accordion-button-scale-m-l-container-padding-left-right": "1.5rem",
			"accordion-button-container-height": "80px",
			"accordion-button-container-border-bottom": "1px",
			"accordion-button-hovered-container-border": "0px",
			"accordion-button-hovered-container-corner-radius-all-round": "8px",
			"accordion-button-focused-container-corner-radius-all-round": "8px",
			"accordion-button-pressed-container-border": "0px",
			"accordion-button-pressed-container-corner-radius-all-round": "8px",
			"accordion-container-border-bottom-left-right": "1px",
			"accordion-opened-container-corner-radius-all-round": "8px",
			"accordion-closed-container-corner-radius": "0px",
			"accordion-button-active-container-border": "0px",
			"accordion-button-active-container-corner-radius-top": "8px",
			"accordion-content-margin": "24px",
			"accordion-scale-m-l-container-padding-scale": "1.5rem",
			"aspect-ratio-container-corner-radius-all-round": "24px",
			"badge-container-padding-small": "8px",
			"badge-scale-m-l-container-padding": "0.5rem",
			"badge-scale-m-l-container-height": "1.5rem",
			"badge-scale-m-l-container-corner-radius-all-round": "0.25rem",
			"badge-scale-large-container-corner-radius-all-round": "8px",
			"badge-container-rounded-corner-radius": "56px",
			"button-action-filled-container-border": "1px",
			"button-action-scale-m-l-small-icon": "1.5rem",
			"button-action-scale-m-l-large-icon": "2rem",
			"button-action-container-corner-radius-all-round": "100px",
			"button-action-scale-m-l-small-container-padding": "1rem",
			"button-action-scale-m-l-large-container-padding": "1.5rem",
			"button-app-standard-container-corner-radius": "8px",
			"button-app-scale-m-l-container-height": "3.5rem",
			"button-app-scale-m-l-container-width": "190px",
			"button-app-scale-large-container-width": "200px",
			"button-app-standard-container-border": "1px",
			"button-app-inverted-container-border": "1px",
			"button-primary-container-padding-left-right": "24px",
			"button-primary-container-corner-radius-all-round": "100px",
			"button-primary-scale-m-l-icon-margin-right": "0.5rem",
			"button-secondary-container-border": "1px",
			"button-secondary-scale-m-l-icon-margin-right": "0.5rem",
			"button-secondary-container-padding-left-right": "24px",
			"button-secondary-corner-radius-all-round": "100px",
			"button-secondary-scale-m-l-container-height": "3.5rem",
			"button-secondary-scale-m-l-icon": "1.5rem",
			"button-primary-scale-m-l-container-height": "3.5rem",
			"button-primary-scale-m-l-icon": "1.5rem",
			"button-call-out-container-padding-left-right": "24px",
			"button-call-out-container-padding-top-bottom": "12px",
			"button-call-out-container-corner-radius-all-round": "100px",
			"button-call-out-scale-m-l-icon-margin-right": "0.5rem",
			"button-call-out-scale-m-l-container-height": "3.5rem",
			"button-text-hovered-container-border-bottom": "2px",
			"button-text-pressed-container-border-bottom": "2px",
			"button-combo-scale-m-l-button-margin": "0.75rem",
			"button-icon-scale-m-l-icon-margin": "0.75rem",
			"button-icon-scale-m-l-icon-margin 2": "1rem",
			"button-icon-outline-container-border": "2px",
			"button-icon-scale-m-l-container-corner-radius": "1rem",
			"button-icon-scale-m-l-container-padding-left-right": "0.75rem",
			"button-icon-scale-m-l-container-padding-top-bottom": "0.75rem",
			"button-fab-primary-scale-m-l-container-padding": "0.75rem",
			"button-fab-primary-scale-m-l-container-corner-radius": "1rem",
			"button-fab-primary-scale-m-l-icon-margin-right": "0.75rem",
			"button-fab-primary-scale-m-l-icon-size": "2rem",
			"button-fab-secondary-scale-m-l-container-padding": "0.75rem",
			"button-fab-secondary-scale-m-l-container-corner-radius": "1rem",
			"button-fab-secondary-scale-m-l-container-margin": "0.5rem",
			"button-fab-secondary-scale-m-l-icon-margin-right": "0.75rem",
			"button-fab-secondary-scale-m-l-icon-size": "2rem",
			"button-select-active-container-border": "0px",
			"button-select-container-border": "1px",
			"button-select-hovered-container-border": "0px",
			"button-select-pressed-container-border": "0px",
			"button-select-container-padding-left-right": "24px",
			"button-select-container-padding-top-bottom": "12px",
			"button-select-container-corner-radius": "8px",
			"button-select-scale-m-l-container-height": "3rem",
			"button-group-scale-m-l-button-margin": "0.75rem",
			"button-payment-container-padding-left-right": "0px",
			"button-payment-container-padding-top-bottom": "12px",
			"button-payment-container-corner-radius-all-round": "100px",
			"button-payment-scale-m-l-container-height": "3.5rem",
			"button-payment-scale-m-l-container-width": "168px",
			"button-call-out-scale-m-l-icon": "1.5rem",
			"card-base-elevated-hovered-container-border": "1px",
			"card-base-outlined-container-border": "1px",
			"card-base-primary-hovered-container-border": "1px",
			"card-base-inverted-hovered-container-border": "1px",
			"card-base-glass-hovered-container-border": "1px",
			"card-base-glass-inverted-hovered-container-border": "1px",
			"card-base-container-corner-radius-all-round": "16px",
			"carousel-scale-m-l-card-margin": "1rem",
			"carousel-scale-m-l-container-padding-top-bottom": "2.5rem",
			"carousel-scale-m-l-content-margin": "1.5rem",
			"checkbox-hovered-box-container-border": "0px",
			"checkbox-box-container-border": "2px",
			"checkbox-scale-m-l-label-margin-left": "0.75rem",
			"checkbox-box-container-corner-radius-all-round": "4px",
			"date-picker-date-container-corner-radius": "100px",
			"date-picker-floating-container-corner-radius": "8px",
			"date-picker-fixed-container-corner-radius-bottom-left-right": "8px",
			"date-picker-container-padding": "24px",
			"date-picker-scale-m-l-row-margin": "0.25rem",
			"date-picker-date-scale-m-l-container-size": "3rem",
			"date-picker-date-scale-large-container-size": "52px",
			"date-picker-week-day-scale-m-l-container-size": "3rem",
			"date-picker-date-current-container-border": "1px",
			"date-picker-container-min-width": "328px",
			"date-picker-fixed-container-border-bottom-left-right": "1px",
			"date-picker-floating-container-border": "1px",
			"date-picker-flat-container-border": "0px",
			"date-picker-month-selection-container-padding-bottom": "16px",
			"date-picker-date-active-start-container-corner-radius-top-left": "24px",
			"date-picker-date-active-start-container-corner-radius-bottom-left": "24px",
			"date-picker-date-active-end-container-corner-radius-top-right": "24px",
			"date-picker-date-active-end-container-corner-radius-bottom-right": "24px",
			"date-picker-date-active-middle-container-corner-radius": "0px",
			"dialog-container-corner-radius-all-round": "16px",
			"dialog-container-padding": "24px",
			"dialog-content-margin": "24px",
			"dialog-container-border": "1px",
			"divider-container-border": "1px",
			"dot-indicator-container-padding": "24px",
			"dropdown-completed-input-label-margin-bottom": "8px",
			"dropdown-error-input-label-margin-bottom": "8px",
			"dot-indicator-dot-margin": "12px",
			"dropdown-input-container-padding-left-right": "16px",
			"dropdown-input-corner-radius-top": "8px",
			"dropdown-input-container-border-bottom": "2px",
			"dropdown-input-text-margin-right": "16px",
			"dropdown-helper-text-margin-left": "8px",
			"list-icon-icon-margin-right": "8px",
			"list-icon-padding-bottom": "12px",
			"list-unordered-symbol-margin-right": "16px",
			"list-unordered-indent-padding-left": "32px",
			"list-unordered-padding-bottom": "12px",
			"list-ordered-number-margin-right": "8px",
			"list-ordered-indent-padding-left": "32px",
			"list-ordered-padding-bottom": "12px",
			"menu-attached-container-corner-radius-bottom": "16px",
			"menu-attached-container-padding-bottom": "8px",
			"menu-floating-container-padding-top-bottom": "8px",
			"menu-floating-container-corner-radius-all-round": "16px",
			"menu-container-border": "1px",
			"menu-item-container-padding": "16px",
			"menu-item-content-margin": "16px",
			"menu-search-container-padding": "16px",
			"menu-search-content-margin": "16px",
			"menu-search-container-border-bottom": "1px",
			"menu-search-scale-m-l-container-height": "3.25rem",
			"menu-search-scale-m-l-icon-size": "1.5rem",
			"mobile-number-input-input-container-padding-top-left-right": "16px",
			"mobile-number-input-input-container-corner-radius-top": "8px",
			"mobile-number-input-input-container-border-bottom": "2px",
			"mobile-number-input-input-content-margin-right": "16px",
			"mobile-number-input-helper-text-margin-left": "8px",
			"mobile-number-input-input-country-border": "1px",
			"mobile-number-input-input-country-margin-right": "4px",
			"mobile-number-input-disabled-input-country-opacity": "56px",
			"navigation-bar-container-border-top": "1px",
			"navigation-bar-scale-small-container-height": "88px",
			"navigation-bar-scale-medium-container-height": "104px",
			"navigation-bar-item-scale-m-l-icon-container-padding-top": "1.5rem",
			"navigation-bar-item-scale-m-l-container-height": "6.5rem",
			"navigation-bar-item-scale-m-l-content-margin": "0.75rem",
			"navigation-bar-item-container-min-padding-left-right": "8px",
			"notification-toast-container-border-weight": "1px",
			"notification-toast-container-padding-all-round": "8px",
			"notification-toast-text-wrapper-padding-all-round": "8px",
			"notification-toast-container-corner-radius-all-round": "8px",
			"notification-toast-scale-m-l-title-margin-bottom": "0.5rem",
			"notification-toast-button-border-weight": "1px",
			"notification-toast-small-button-padding-left-right": "12px",
			"notification-toast-large-button-padding-left-right": "16px",
			"notification-toast-button-margin-left": "16px",
			"notification-toast-button-margin-right": "8px",
			"notification-toast-scale-m-l-button-margin-right": "0.5rem",
			"notification-toast-small-button-height": "32px",
			"notification-toast-large-button-height": "36px",
			"notification-alert-container-padding-top-bottom": "12px",
			"notification-alert-container-padding-left": "24px",
			"notification-alert-container-padding-right": "16px",
			"notification-alert-scale-m-l-container-height": "4.25rem",
			"notification-alert-container-corner-radius-all-round": "8px",
			"notification-alert-container-border-weight": "1px",
			"notification-alert-inner-container-border-weight": "12px",
			"notification-alert-icon-margin-right": "8px",
			"notification-alert-icon-margin-top": "4px",
			"notification-alert-title-margin-right": "8px",
			"notification-alert-text-container-margin": "12px",
			"notification-alert-dismissible-icon-margin-top-mobile": "4px",
			"notification-alert-dismissible-icon-margin-left-mobile": "8px",
			"notification-alert-dismissible-icon-margin-left-tablet": "12px",
			"notification-alert-dismissible-icon-margin-left-desktop": "16px",
			"notification-inline-container-padding-top-bottom": "12px",
			"notification-inline-container-padding-left": "24px",
			"notification-inline-container-padding-right": "16px",
			"notification-inline-container-height-tablet": "56px",
			"notification-inline-container-height-desktop": "60px",
			"notification-inline-container-corner-radius-all-round": "0px",
			"notification-inline-container-border-weight": "1px",
			"notification-inline-inner-container-border-weight": "12px",
			"notification-inline-icon-margin-right": "8px",
			"notification-inline-icon-margin-top-mobile": "4px",
			"notification-inline-title-margin-right": "8px",
			"notification-inline-text-container-margin": "12px",
			"notification-inline-dismissible-icon-margin-top-mobile": "4px",
			"notification-inline-dismissible-icon-margin-left-mobile": "8px",
			"notification-inline-dismissible-icon-margin-left-tablet": "12px",
			"notification-inline-dismissible-icon-margin-left-desktop": "16px",
			"number-input-input-container-padding-top-left-right": "16px",
			"number-input-input-container-corner-radius-top": "8px",
			"number-input-input-container-border-bottom": "2px",
			"number-input-input-icon-divider-border": "1px",
			"number-input-input-text-margin-right": "16px",
			"number-input-helper-text-margin-left": "8px",
			"pagination-number-margin": "12px",
			"pagination-arrow-margin": "16px",
			"pagination-item-container-corner-radius": "100px",
			"pagination-item-scale-m-l-container-size": "2.25rem",
			"pagination-arrow-container-corner-radius": "24px",
			"pagination-arrow-scale-m-l-icon-size": "1.5rem",
			"pagination-arrow-scale-m-l-container-size": "2.25rem",
			"pin-input-scale-m-l-helper-margin-top": "0.75rem",
			"pin-input-helper-text-margin-left": "8px",
			"pin-input-container-input-margin": "8px",
			"pin-input-container-max-width": "508px",
			"pin-input-field-container-padding-left-right": "16px",
			"pin-input-field-container-corner-radius-top": "8px",
			"pin-input-field-container-border-bottom": "2px",
			"menu-item-scale-m-l-container-height": "3.25rem",
			"menu-item-scale-m-l-icon-size": "1.5rem",
			"menu-item-scale-m-l-flag-size": "1.5rem",
			"progress-indicator-linear-container-padding": "0px",
			"progress-indicator-linear-track-corner-radius": "4px",
			"progress-indicator-linear-indeterminate-track-corner-radius": "4px",
			"progress-indicator-linear-indicator-corner-radius": "0px",
			"progress-indicator-circular-container-padding": "0px",
			"progress-indicator-circular-indicator-corner-radius-top": "2px",
			"radio-button-radio-container-border": "2px",
			"radio-button-scale-m-l-label-margin-left": "0.75rem",
			"radio-button-radio-container-corner-radius-all-round": "100px",
			"radio-button-hovered-radio-container-border": "0px",
			"radio-button-completed-radio-container-border": "0px",
			"rating-star-container-width-min": "40px",
			"rating-star-container-height-min": "40px",
			"rating-star-icon-margin-right": "12px",
			"rating-experience-container-margin-right-compact": "12px",
			"rating-experience-container-margin-right-comfortable": "24px",
			"rating-experience-icon-opacity": "80px",
			"rating-experience-icon-margin-bottom": "8px",
			"rating-experience-active-icon-opacity": "100px",
			"scrollbar-container-padding": "0px",
			"scrollbar-track-corner-radius": "16px",
			"scrollbar-indicator-corner-radius": "16px",
			"scrollbar-indicator-height": "4px",
			"scrollbar-hovered-indicator-height-hover": "8px",
			"scrollbar-focused-indicator-border": "1px",
			"search-bar-container-padding": "16px",
			"search-bar-scale-m-l-container-height": "4rem",
			"search-bar-scale-m-l-icon-size": "1.5rem",
			"search-bar-content-margin": "16px",
			"search-bar-container-border": "1px",
			"search-bar-container-corner-radius-all-round": "16px",
			"search-bar-hovered-container-border": "0px",
			"search-bar-focused-container-border": "0px",
			"search-bar-active-container-border-bottom": "1px",
			"search-bar-active-container-corner-radius-top": "16px",
			"search-suggestion-container-padding": "16px",
			"search-suggestion-content-margin": "16px",
			"search-suggestion-scale-m-l-container-height": "3.75rem",
			"search-suggestion-scale-m-l-icon-size": "1.5rem",
			"search-suggestion-scale-m-l-label-margin-bottom": "0.5rem",
			"search-container-corner-radius-all-round": "16px",
			"search-scale-m-l-active-container-padding-bottom": "0.75rem",
			"sheet-bottom-container-corner-radius-top": "24px",
			"sheet-side-container-corner-radius-top-left": "24px",
			"sheet-side-container-corner-radius-top-right": "24px",
			"sheet-side-container-padding-left-right": "24px",
			"sheet-side-container-padding-top": "40px",
			"switch-scale-m-l-label-margin-right": "0.75rem",
			"switch-scale-m-l-label-margin-left": "0.75rem",
			"switch-toggle-container-corner-radius-all-round": "24px",
			"switch-toggle-padding-all-round": "2px",
			"tabs-label-padding-left-right": "24px",
			"tabs-label-padding-top-bottom": "24px",
			"tabs-active-label-underline-border-weight": "4px",
			"tag-container-padding-left-right": "12px",
			"tag-content-margins": "8px",
			"tag-container-corner-radius": "56px",
			"tag-scale-m-l-icon-size": "1rem",
			"tag-scale-m-l-container-height": "2.25rem",
			"tag-outlined-container-border-weight": "1px",
			"text-area-input-container-padding": "16px",
			"text-area-input-container-corner-radius-top": "8px",
			"text-area-input-container-border-bottom": "2px",
			"text-area-input-text-margin-right": "16px",
			"text-area-character-count-container-corner-radius": "16px",
			"text-area-character-count-container-padding-top-bottom": "4px",
			"text-area-character-count-container-padding-left-right": "8px",
			"text-area-helper-text-margin-left": "8px",
			"text-input-input-container-padding-top-left-right": "16px",
			"text-input-input-container-corner-radius-top": "8px",
			"text-input-input-container-border-bottom": "2px",
			"text-input-input-text-margin-right": "16px",
			"text-input-helper-text-margin-left": "8px",
			"text-input-scale-m-l-input-container-height": "4rem",
			"text-input-scale-m-l-input-margin-bottom": "0.75rem",
			"text-input-scale-m-l-input-icon-size": "1.5rem",
			"text-input-scale-m-l-input-label-margin-bottom": "0.5rem",
			"mobile-number-input-scale-m-l-input-container-height": "4rem",
			"mobile-number-input-scale-m-l-input-margin-bottom": "0.75rem",
			"mobile-number-input-scale-m-l-input-icon-size": "1.5rem",
			"mobile-number-input-scale-m-l-input-label-margin-bottom": "0.5rem",
			"number-input-scale-m-l-input-container-height": "4rem",
			"number-input-scale-m-l-input-margin-bottom": "0.75rem",
			"number-input-scale-m-l-input-icon-size": "1.5rem",
			"number-input-scale-m-l-input-label-margin-bottom": "0.5rem",
			"dropdown-scale-m-l-input-container-height": "4rem",
			"pin-input-field-scale-m-l-input-container-height": "4rem",
			"dropdown-scale-m-l-input-margin-bottom": "0.75rem",
			"dropdown-scale-m-l-input-icon-size": "1.5rem",
			"dropdown-scale-m-l-input-label-margin-bottom": "0.5rem",
			"text-area-scale-m-l-input-margin-bottom": "0.75rem",
			"text-area-scale-m-l-input-icon-size": "1.5rem",
			"text-area-scale-m-l-input-label-margin-bottom": "0.5rem",
			"text-link-container-border-bottom": "1px",
			"text-link-container-padding-all-round": "4px",
			"tooltip-container-padding-left-right": "12px",
			"tooltip-container-padding-top-bottom": "12px",
			"tooltip-container-margin": "8px",
			"tooltip-container-width-max": "300px",
			"tooltip-dismissible-icon-margin-left": "8px",
			"tooltip-scale-m-l-icon-size": "1rem",
			"tooltip-trigger-icon-corner-radius": "100px",
			"button-text-scale-m-l-icon-margin-right": "0.5rem",
			"*Demo-corner-radius-large": "32px",
			"*Demo-corner-radius-medium": "24px",
			"*Demo-corner-radius-small": "16px",
			"*Demo-gap": "0px",
			"*Demo-padding": "24px",
			"checkbox-completed-box-container-border": "0px",
			"*Graveyard-drawer-container-padding-left-right": "8px",
			"*Graveyard-drawer-container-padding-top-bottom": "16px",
			"*Graveyard-drawer-container-corner-radius": "8px",
			"*Graveyard-toggletip-plain-container-corner-radius": "4px",
			"*Graveyard-toggletip-plain-container-padding-left-right": "8px",
			"*Graveyard-toggletip-plain-container-padding-top-bottom": "4px",
			"*Graveyard-toggletip-plain-container-margin": "4px",
			"*Graveyard-toggletip-plain-container-width-max": "140px",
			"*Graveyard-toggletip-plain-trigger-corner-radius": "100px",
			"*Graveyard-toggletip-plain-text-margin-right": "16px",
			"*Graveyard-toggletip-plain-close-icon-margin-top": "2px",
			"*Graveyard-toggletip-plain-focused-trigger-icon-border-weight": "2px",
			"*Graveyard-toggletip-plain-focused-close-icon-border-weight": "1px",
			"accessible-focus-border-container-border": "4px",
			"accessible-focus-border-container-outer-border": "2px",
			"navigation-bar-item-brand-scale-m-l-icon-container-padding-top": "1.5rem",
			"navigation-bar-item-brand-scale-m-l-container-height": "6.5rem",
			"navigation-bar-item-brand-scale-m-l-content-margin": "0.75rem",
			"navigation-bar-item-brand-container-min-padding-left-right": "8px",
			"navigation-bar-item-brand-label-text-opacity": "48px",
			"navigation-bar-item-brand-icon-opacity": "48px",
			"navigation-bar-item-brand-active-label-text-opacity": "100px",
			"navigation-bar-item-brand-active-icon-opacity": "100px",
			"button-text-scale-m-l-icon": "1.5rem",
			"button-text-scale-m-l-container-height": "3.5rem",
			"button-text-scale-large-container-height": "60px",
			"button-icon-scale-m-l-icon-size": "1.5rem",
			"border-weight-none": "0px",
			"border-weight-small": "1px",
			"border-weight-medium": "2px",
			"border-weight-large": "4px",
			"padding-none": "0px",
			"padding-3xsmall": "2px",
			"padding-2xsmall": "4px",
			"padding-xsmall": "8px",
			"padding-small": "12px",
			"padding-medium": "16px",
			"padding-large": "24px",
			"padding-xlarge": "32px",
			"padding-2xlarge": "40px",
			"padding-3xlarge": "48px",
			"margin-none": "0px",
			"margin-3xsmall": "2px",
			"margin-2xsmall": "4px",
			"margin-xsmall": "8px",
			"margin-small": "12px",
			"margin-medium": "16px",
			"margin-large": "24px",
			"margin-xlarge": "32px",
			"margin-2xlarge": "40px",
			"margin-section-vertical-large": "72px",
			"margin-section-vertical-medium": "64px",
			"margin-section-vertical-small": "56px",
			"corner-radius-none": "0px",
			"corner-radius-3xsmall": "2px",
			"corner-radius-2xsmall": "4px",
			"corner-radius-xsmall": "8px",
			"corner-radius-small": "16px",
			"corner-radius-medium": "24px",
			"corner-radius-large": "32px",
			"corner-radius-xlarge": "40px",
			"corner-radius-2xlarge": "48px",
			"corner-radius-3xlarge": "56px",
			"corner-radius-full": "100px",
			"shadow-accessible": "3px",
			"shadow-level-1-blur": "4px",
			"shadow-level-1-y": "1px",
			"shadow-level-1-spread": "0px",
			"shadow-level-2-blur": "16px",
			"shadow-level-2-y": "8px",
			"shadow-level-2-spread": "2px",
			"shadow-level-3-blur": "24px",
			"shadow-level-3-y": "16px",
			"shadow-level-3-spread": "4px",
			"shadow-inverted-blur": "8px",
			"shadow-inverted-y": "-4px",
			"shadow-inverted-spread": "2px",
			"shadow-left-blur": "8px",
			"shadow-left-x": "-4px",
			"shadow-left-spread": "2px",
			"shadow-right-blur": "8px",
			"shadow-right-x": "4px",
			"shadow-right-spread": "2px",
			"shadow-top-blur": "8px",
			"shadow-top-y": "-2px",
			"shadow-top-spread": "1px",
			"blur-background-level-1": "4px",
			"blur-background-level-2": "8px",
			"blur-background-level-3": "16px",
			"blur-layer-level-1": "24px",
			"blur-layer-level-2": "48px",
			"blur-layer-level-3": "96px"
		}
	}
};
var play = {
	light: {
		colors: {
			"logo-core-default-colour": "#000000ff",
			"logo-core-inverted-colour": "#ffffffff",
			"logo-core-brand-colour": "#ffcb05ff",
			"logo-core-on-image-colour-light": "#ffffffff",
			"logo-core-on-image-colour-dark": "#303335ff",
			"logo-play-default-colour": "#000000ff",
			"logo-play-inverted-colour": "#ffffffff",
			"logo-play-brand-colour": "#ffcb05ff",
			"logo-play-on-image-colour-light": "#ffffffff",
			"logo-play-on-image-colour-dark": "#303335ff",
			"logo-payment-default-colour": "#000000ff",
			"logo-payment-opacity-colour": "#10131552",
			"logo-payment-opacity-inverse-colour": "#ffffff52",
			"container-bg-colour-full": "#ffffffff",
			"container-bg-colour-subtle": "#f4f8faff",
			"container-bg-colour-dim": "#ebeff1ff",
			"container-bg-colour-brand": "#ffcb05ff",
			"container-bg-colour-full-inverse": "#101315ff",
			"container-bg-colour-subtle-inverse": "#303335ff",
			"container-bg-colour-dim-inverse": "#4e5153ff",
			"accessible-focus-border-container-border-colour": "#ffcb05ff",
			"avatar-container-colour": "#101315a3",
			"avatar-label-text-colour": "#ffffffcc",
			"avatar-icon-colour": "#ffffffcc",
			"accordion-button-label-text-colour": "#000000ff",
			"accordion-button-icon-colour": "#000000ff",
			"accordion-button-container-border-colour": "#10131529",
			"accordion-button-hovered-label-text-colour": "#000000ff",
			"accordion-button-hovered-container-colour": "#10131514",
			"accordion-button-focused-label-text-colour": "#000000ff",
			"accordion-button-focused-container-colour": "#10131514",
			"accordion-button-pressed-container-colour": "#10131529",
			"accordion-button-disabled-label-text-colour": "#7b7b7bff",
			"accordion-button-disabled-icon-colour": "#d9d9d9ff",
			"accordion-container-border-colour": "#10131514",
			"accordion-button-active-label-text-colour": "#000000ff",
			"accordion-button-active-container-colour": "#10131514",
			"accordion-button-active-hovered-container-colour": "#10131514",
			"accordion-button-active-pressed-container-colour": "#10131529",
			"accordion-button-active-focused-container-colour": "#10131514",
			"badge-label-text-colour": "#ffffffff",
			"badge-container-colour": "#000000ff",
			"badge-alert-label-text-colour": "#ffbec4ff",
			"badge-alert-container-colour": "#b20010ff",
			"badge-warning-label-text-colour": "#101315ff",
			"badge-warning-container-colour": "#ff732eff",
			"badge-positive-label-text-colour": "#ffffffff",
			"badge-positive-container-colour": "#398004ff",
			"badge-informative-label-text-colour": "#c7ebffff",
			"badge-informative-container-colour": "#004a71ff",
			"badge-brand-core-label-text-colour": "#000000ff",
			"badge-brand-core-container-colour": "#ffcb05ff",
			"button-action-transparent-icon-colour": "#ffffffff",
			"button-action-transparent-container-colour": "#101315a3",
			"button-action-transparent-hovered-icon-colour": "#f5f5f5ff",
			"button-action-transparent-hovered-container-colour": "#101315cc",
			"button-action-transparent-focused-icon-colour": "#f5f5f5ff",
			"button-action-transparent-focused-container-colour": "#101315cc",
			"button-action-transparent-pressed-icon-colour": "#f5f5f5ff",
			"button-action-transparent-pressed-container-colour": "#10131552",
			"button-action-transparent-disabled-icon-colour": "#555555ff",
			"button-action-transparent-disabled-container-colour": "#10131529",
			"button-action-filled-container-border-colour": "#10131529",
			"button-action-filled-icon-colour": "#000000ff",
			"button-action-filled-container-colour": "#ffffffff",
			"button-action-filled-hovered-container-border-colour": "#10131514",
			"button-action-filled-hovered-icon-colour": "#434343ff",
			"button-action-filled-hovered-container-colour": "#f5f5f5ff",
			"button-action-filled-focused-icon-colour": "#434343ff",
			"button-action-filled-focused-container-colour": "#f5f5f5ff",
			"button-action-filled-pressed-icon-colour": "#434343ff",
			"button-action-filled-disabled-container-colour": "#f4f8faff",
			"button-action-filled-disabled-icon-colour": "#d9d9d9ff",
			"button-action-filled-disabled-container-border-colour": "#10131514",
			"button-action-filled-pressed-container-colour": "#d9d9d9ff",
			"button-action-filled-pressed-container-border-colour": "#10131514",
			"button-app-standard-hovered-container-colour": "#f4f8faff",
			"button-app-standard-hovered-label-text-colour": "#000000ff",
			"button-app-standard-hovered-symbol-colour": "#000000ff",
			"button-app-standard-focused-container-colour": "#ffffffff",
			"button-app-standard-focused-label-text-colour": "#000000ff",
			"button-app-standard-focused-symbol-colour": "#000000ff",
			"button-app-standard-container-colour": "#ffffffff",
			"button-app-standard-container-border-colour": "#10131529",
			"button-app-standard-label-text-colour": "#000000ff",
			"button-app-standard-symbol-colour": "#000000ff",
			"button-app-inverted-container-colour": "#101315ff",
			"button-app-inverted-container-border-colour": "#ffffff29",
			"button-app-inverted-label-text-colour": "#ffffffff",
			"button-app-inverted-symbol-colour": "#ffffffff",
			"button-app-inverted-hovered-container-colour": "#303335ff",
			"button-app-inverted-hovered-label-text-colour": "#ffffffff",
			"button-app-inverted-hovered-symbol-colour": "#ffffffff",
			"button-app-inverted-focused-container-colour": "#101315ff",
			"button-app-inverted-focused-label-text-colour": "#ffffffff",
			"button-app-inverted-focused-symbol-colour": "#ffffffff",
			"button-primary-container-colour": "#ffcb05ff",
			"button-primary-icon-colour": "#000000ff",
			"button-primary-label-text-colour": "#000000ff",
			"button-secondary-icon-colour": "#000000ff",
			"button-secondary-label-text-colour": "#000000ff",
			"button-secondary-container-border-colour": "#101315a3",
			"button-secondary-hovered-icon-colour": "#434343ff",
			"button-secondary-hovered-label-text-colour": "#434343ff",
			"button-secondary-hovered-container-colour": "#10131514",
			"button-secondary-hovered-container-border-colour": "#434343ff",
			"button-secondary-focused-icon-colour": "#434343ff",
			"button-secondary-focused-label-text-colour": "#434343ff",
			"button-secondary-focused-container-colour": "#10131514",
			"button-secondary-pressed-icon-colour": "#7b7b7bff",
			"button-secondary-pressed-label-text-colour": "#7b7b7bff",
			"button-secondary-pressed-container-colour": "#10131514",
			"button-secondary-pressed-container-border-colour": "#7b7b7bff",
			"button-secondary-disabled-icon-colour": "#7b7b7bff",
			"button-secondary-disabled-label-text-colour": "#7b7b7bff",
			"button-secondary-disabled-container-border-colour": "#c4c4c4ff",
			"button-primary-hovered-container-colour": "#ffdd5fff",
			"button-primary-focused-container-colour": "#ffdd5fff",
			"button-primary-pressed-container-colour": "#ffdd5fff",
			"button-primary-pressed-icon-colour": "#434343ff",
			"button-primary-pressed-label-text-colour": "#434343ff",
			"button-primary-disabled-container-colour": "#d9d9d9ff",
			"button-primary-disabled-icon-colour": "#7b7b7bff",
			"button-primary-disabled-label-text-colour": "#7b7b7bff",
			"button-call-out-container-colour": "#000000ff",
			"button-call-out-icon-colour": "#ffffffff",
			"button-call-out-lable-text-colour": "#ffffffff",
			"button-call-out-hovered-container-colour": "#434343ff",
			"button-call-out-focused-container-colour": "#434343ff",
			"button-call-out-pressed-container-colour": "#434343ff",
			"button-call-out-pressed-icon-colour": "#d9d9d9ff",
			"button-call-out-pressed-label-text-colour": "#d9d9d9ff",
			"button-call-out-disabled-container-colour": "#d9d9d9ff",
			"button-call-out-disabled-icon-colour": "#7b7b7bff",
			"button-call-out-disabled-label-text-colour": "#7b7b7bff",
			"button-text-icon-colour": "#000000ff",
			"button-text-label-text-colour": "#000000ff",
			"button-text-hovered-icon-colour": "#434343ff",
			"button-text-hovered-label-text-colour": "#434343ff",
			"button-text-hovered-container-border-colour": "#101315ff",
			"button-text-focused-icon-colour": "#434343ff",
			"button-text-focused-label-text-colour": "#434343ff",
			"button-text-pressed-icon-colour": "#434343ff",
			"button-text-pressed-label-text-colour": "#434343ff",
			"button-text-pressed-container-border-colour": "#ffdd5fff",
			"button-text-disabled-icon-colour": "#7b7b7bff",
			"button-text-disabled-label-text-colour": "#7b7b7bff",
			"button-icon-icon-primary-colour": "#ffcb05ff",
			"button-icon-icon-colour": "#000000ff",
			"button-icon-label-text-colour": "#000000ff",
			"button-icon-outline-container-border-colour": "#10131514",
			"button-icon-filled-container-colour": "#1013150a",
			"button-icon-hovered-container-colour": "#10131529",
			"button-icon-focused-icon-colour": "#434343ff",
			"button-icon-focused-label-text-colour": "#434343ff",
			"button-icon-focused-container-colour": "#10131529",
			"button-icon-pressed-icon-colour": "#434343ff",
			"button-icon-pressed-label-text-colour": "#434343ff",
			"button-icon-pressed-container-colour": "#10131552",
			"button-icon-disabled-icon-colour": "#7b7b7bff",
			"button-icon-disabled-label-text-colour": "#7b7b7bff",
			"button-icon-disabled-container-colour": "#1013150a",
			"button-icon-outline-disabled-container-border-colour": "#10131514",
			"button-fab-primary-icon-colour": "#000000ff",
			"button-fab-primary-label-text-colour": "#000000ff",
			"button-fab-primary-container-colour": "#ffcb05ff",
			"button-fab-primary-hovered-container-colour": "#ffdd5fff",
			"button-fab-primary-focused-container-colour": "#ffdd5fff",
			"button-fab-primary-pressed-icon-colour": "#434343ff",
			"button-fab-primary-pressed-label-text-colour": "#434343ff",
			"button-fab-primary-pressed-container-colour": "#ffdd5fff",
			"button-fab-primary-disabled-icon-colour": "#555555ff",
			"button-fab-primary-disabled-label-text-colour": "#555555ff",
			"button-fab-primary-disabled-container-colour": "#d9d9d9ff",
			"button-fab-secondary-icon-colour": "#ffffffff",
			"button-fab-secondary-label-text-colour": "#ffffffff",
			"button-fab-secondary-container-colour": "#000000ff",
			"button-fab-secondary-hovered-container-colour": "#434343ff",
			"button-fab-secondary-focused-container-colour": "#434343ff",
			"button-fab-secondary-pressed-icon-colour": "#f5f5f5ff",
			"button-fab-secondary-pressed-label-text-colour": "#f5f5f5ff",
			"button-fab-secondary-pressed-container-colour": "#555555ff",
			"button-fab-secondary-disabled-icon-colour": "#7b7b7bff",
			"button-fab-secondary-disabled-label-text-colour": "#7b7b7bff",
			"button-fab-secondary-disabled-container-colour": "#d9d9d9ff",
			"button-select-container-border-colour": "#101315a3",
			"button-select-label-text-colour": "#000000ff",
			"button-select-hovered-container-colour": "#10131514",
			"button-select-focused-label-text-colour": "#000000ff",
			"button-select-focused-container-colour": "#ffcb05ff",
			"button-select-pressed-container-border-colour": "#434343ff",
			"button-select-active-label-text-colour": "#000000ff",
			"button-select-active-container-colour": "#ffcb05ff",
			"button-select-pressed-container-colour": "#10131529",
			"button-select-pressed-label-text-colour": "#434343ff",
			"button-select-disabled-container-border-colour": "#c4c4c4ff",
			"button-select-disabled-label-text-colour": "#7b7b7bff",
			"button-payment-logo-colour": "#ffffffff",
			"button-payment-container-colour": "#000000ff",
			"button-payment-hovered-container-colour": "#434343ff",
			"button-payment-focused-container-colour": "#434343ff",
			"button-payment-pressed-logo-colour": "#d9d9d9ff",
			"button-payment-pressed-container-colour": "#434343ff",
			"button-payment-disabled-logo-colour": "#7b7b7bff",
			"button-payment-disabled-container-colour": "#d9d9d9ff",
			"card-base-elevated-container-colour": "#ffffffff",
			"card-base-elevated-hovered-container-border-colour": "#10131529",
			"card-base-elevated-pressed-container-colour": "#f4f8faff",
			"card-base-outlined-container-colour": "#ffffffff",
			"card-base-outlined-container-border-colour": "#10131529",
			"card-base-outlined-hovered-container-border-colour": "#10131552",
			"card-base-outlined-pressed-container-colour": "#f4f8faff",
			"card-base-primary-container-colour": "#ffcb05ff",
			"card-base-primary-hovered-container-border-colour": "#10131514",
			"card-base-primary-hovered-container-colour": "#ffdd5fff",
			"card-base-primary-pressed-container-colour": "#ffdd5fff",
			"card-base-inverted-container-colour": "#101315ff",
			"card-base-inverted-hovered-container-colour": "#303335ff",
			"card-base-inverted-hovered-container-border-colour": "#ffffffa3",
			"card-base-inverted-pressed-container-colour": "#4e5153ff",
			"card-base-glass-container-colour": "#ffffffcc",
			"card-base-glass-hovered-container-colour": "#ffffffb8",
			"card-base-glass-hovered-container-border-colour": "#ffffffa3",
			"card-base-glass-pressed-container-colour": "#ffffffa3",
			"card-base-glass-inverted-container-colour": "#101315cc",
			"card-base-glass-inverted-hovered-container-colour": "#101315b8",
			"card-base-glass-inverted-hovered-container-border-colour": "#101315a3",
			"card-base-glass-inverted-pressed-container-colour": "#101315a3",
			"carousel-title-text-colour": "#000000ff",
			"checkbox-label-text-colour": "#434343ff",
			"checkbox-hovered-label-text-colour": "#000000ff",
			"checkbox-hovered-box-container-colour": "#ffcb05ff",
			"checkbox-box-border-colour": "#101315ff",
			"checkbox-focused-label-text-colour": "#000000ff",
			"date-picker-week-day-label-text-colour": "#10131552",
			"date-picker-date-label-text-colour": "#101315b8",
			"date-picker-container-colour": "#ffffffff",
			"date-picker-container-border-colour": "#10131514",
			"date-picker-date-current-container-border-colour": "#ffcb05ff",
			"date-picker-month-selection-icon-colour": "#000000ff",
			"date-picker-month-selection-label-text-colour": "#000000ff",
			"date-picker-date-hovered-label-text-colour": "#000000ff",
			"date-picker-date-hovered-container-colour": "#10131514",
			"date-picker-date-focused-label-text-colour": "#000000ff",
			"date-picker-date-focused-container-colour": "#10131514",
			"date-picker-date-active-label-text-colour": "#000000ff",
			"date-picker-date-active-start-label-text-colour": "#000000ff",
			"date-picker-date-active-start-container-colour": "#ffcb05ff",
			"date-picker-date-active-middle-label-text-colour": "#000000ff",
			"date-picker-date-active-end-label-text-colour": "#000000ff",
			"date-picker-date-active-end-container-colour": "#ffcb05ff",
			"date-picker-date-active-middle-container-colour": "#ffdd5fff",
			"date-picker-date-disabled-label-text-colour": "#10131552",
			"date-picker-date-active-container-colour": "#ffcb05ff",
			"dialog-title-text-colour": "#000000ff",
			"dialog-text-colour": "#000000ff",
			"dialog-container-colour": "#ffffffff",
			"dialog-contianer-border-colour": "#10131514",
			"dismissible-hovered-icon-colour": "#101315b8",
			"dismissible-pressed-icon-colour": "#101315a3",
			"divider-on-primary-container-colour": "#10131514",
			"divider-on-secondary-container-colour": "#10131514",
			"divider-on-tertiary-container-colour": "#10131514",
			"divider-on-primary-inverse-container-colour": "#ffffff52",
			"divider-on-secondary-inverse-container-colour": "#ffffff52",
			"divider-on-tertiary-inverse-container-colour": "#ffffff52",
			"divider-on-brand-container-colour": "#10131529",
			"dot-indicator-container-colour": "#10131552",
			"dot-indicator-standard-hovered-container-colour": "#101315a3",
			"dot-indicator-standard-active-container-colour": "#101315b8",
			"dot-indicator-inverted-container-colour": "#ffffff52",
			"dot-indicator-inverted-hovered-container-colour": "#ffffffa3",
			"dropdown-hovered-input-container-colour": "#10131514",
			"dot-indicator-inverted-active-container-colour": "#ffffffb8",
			"dropdown-hovered-input-container-border-colour": "#434343ff",
			"dropdown-focused-label-text-colour": "#555555ff",
			"dropdown-focused-input-container-border-colour": "#ffcb05ff",
			"dropdown-completed-input-text-colour": "#000000ff",
			"dropdown-error-input-text-colour": "#000000ff",
			"dropdown-error-input-container-colour": "#10131514",
			"dropdown-error-helper-icon-colour": "#b20010ff",
			"dropdown-error-input-container-border-colour": "#b20010ff",
			"dropdown-disabled-input-label-text-colour": "#10131552",
			"dropdown-disabled-icon-colour": "#10131552",
			"dropdown-input-container-colour": "#1013150a",
			"dropdown-disabled-input-container-border-colour": "#c4c4c4ff",
			"dropdown-input-label-text-colour": "#434343ff",
			"dropdown-icon-colour": "#434343ff",
			"dropdown-helper-text-colour": "#555555ff",
			"dropdown-helper-icon-colour": "#555555ff",
			"dropdown-input-container-border-colour": "#101315ff",
			"list-icon-label-text-colour": "#000000ff",
			"list-icon-icon-primary-colour": "#ffcb05ff",
			"list-icon-icon-secondary-colour": "#000000ff",
			"list-unordered-label-text-colour": "#000000ff",
			"list-unordered-symbol-primary-colour": "#ffcb05ff",
			"list-unordered-symbol-secondary-colour": "#000000ff",
			"list-ordered-label-text-colour": "#000000ff",
			"list-ordered-number-primary-colour": "#ffcb05ff",
			"list-ordered-number-secondary-colour": "#000000ff",
			"menu-container-colour": "#ffffffff",
			"menu-container-border-colour": "#e9e9e9ff",
			"menu-item-label-text-colour": "#434343ff",
			"menu-item-leading-icon-colour": "#434343ff",
			"menu-item-trailing-icon-colour": "#555555ff",
			"menu-item-container-colour": "#ffffffff",
			"menu-item-hovered-label-text-colour": "#000000ff",
			"menu-item-hovered-leading-icon-colour": "#000000ff",
			"menu-item-hovered-container-colour": "#f4f8faff",
			"menu-item-focused-container-colour": "#f4f8faff",
			"menu-item-active-label-text-colour": "#000000ff",
			"menu-item-active-leading-icon-colour": "#000000ff",
			"menu-item-active-trailing-icon-colour": "#000000ff",
			"menu-item-active-container-colour": "#f4f8faff",
			"menu-search-label-text-colour": "#555555ff",
			"menu-search-icon-colour": "#10131552",
			"menu-search-container-colour": "#ffffffff",
			"menu-search-container-border-colour": "#10131514",
			"menu-search-focused-container-colour": "#f4f8faff",
			"menu-search-hovered-container-colour": "#f4f8faff",
			"menu-search-completed-label-text-colour": "#000000ff",
			"menu-search-completed-leading-icon-colour": "#555555ff",
			"menu-search-completed-trailing-icon-colour": "#10131552",
			"menu-search-completed-container-colour": "#f4f8faff",
			"mobile-number-input-input-container-colour": "#1013150a",
			"mobile-number-input-input-label-text-colour": "#434343ff",
			"mobile-number-input-input-text-colour": "#555555ff",
			"mobile-number-input-input-icon-colour": "#434343ff",
			"mobile-number-input-input-dropdown-icon-colour": "#10131552",
			"mobile-number-input-helper-text-colour": "#555555ff",
			"mobile-number-input-helper-icon-colour": "#555555ff",
			"mobile-number-input-input-container-border-colour": "#101315ff",
			"mobile-number-input-input-country-border colour": "#10131529",
			"mobile-number-input-hovered-input-text-colour": "#434343ff",
			"mobile-number-input-hovered-input-container-colour": "#10131514",
			"mobile-number-input-hovered-input-container-border-colour": "#434343ff",
			"mobile-number-input-focused-input-container-border-colour": "#ffcb05ff",
			"mobile-number-input-completed-input-text-colour": "#000000ff",
			"mobile-number-input-error-input-text-colour": "#000000ff",
			"mobile-number-input-error-input-container-colour": "#10131514",
			"mobile-number-input-error-helper-icon-colour": "#b20010ff",
			"mobile-number-input-error-input-container-border-colour": "#b20010ff",
			"mobile-number-input-disabled-input-label-text-colour": "#10131552",
			"mobile-number-input-disabled-input-text-colour": "#10131552",
			"mobile-number-input-disabled-input-icon-colour": "#10131552",
			"mobile-number-input-disabled-input-container-border-colour": "#c4c4c4ff",
			"mobile-number-input-disabled-input-dropdown-icon-colour": "#10131529",
			"navigation-bar-transparent-container-background-colour": "#ffffffcc",
			"navigation-bar-filled-container-background-colour": "#ffffffff",
			"navigation-bar-brand-container-background-colour": "#ffcb05ff",
			"navigation-bar-container-border-colour": "#10131514",
			"navigation-bar-item-icon-colour": "#101315a3",
			"navigation-bar-item-label-text-colour": "#101315a3",
			"navigation-bar-item-hovered-label-text-colour": "#101315cc",
			"navigation-bar-item-hovered-icon-colour": "#101315cc",
			"navigation-bar-item-hovered-container-background": "#1013150a",
			"navigation-bar-item-focused-label-text-colour": "#101315cc",
			"navigation-bar-item-focused-icon-colour": "#101315cc",
			"navigation-bar-item-focused-container-background": "#1013150a",
			"navigation-bar-item-active-label-text-colour": "#000000ff",
			"navigation-bar-item-active-icon-colour": "#ffcb05ff",
			"notification-toast-container-colour": "#ffffffb8",
			"notification-toast-container-border-colour": "#10131514",
			"notification-toast-title-text-colour": "#000000ff",
			"notification-toast-body-text-colour": "#434343ff",
			"notification-toast-button-border-colour": "#10131552",
			"notification-toast-button-label-text-colour": "#000000ff",
			"notification-toast-hovered-button-container-colour": "#1013150a",
			"notification-toast-pressed-button-label-text-colour": "#434343ff",
			"notification-alert-container-border-colour": "#10131514",
			"notification-alert-icon-colour": "#000000ff",
			"notification-alert-text-colour": "#000000ff",
			"notification-alert-brand-container-colour": "#fffae6ff",
			"notification-alert-brand-inner-container-border-colour": "#ffcb05ff",
			"notification-alert-informative-container-colour": "#ebf8ffff",
			"notification-alert-informative-inner-container-border-colour": "#004a71ff",
			"notification-alert-success-container-colour": "#eef6e5ff",
			"notification-alert-success-inner-container-border-colour": "#398004ff",
			"notification-alert-warning-container-colour": "#ffeee5ff",
			"notification-alert-warning-inner-container-border-colour": "#ff732eff",
			"notification-alert-error-container-colour": "#ffe8eaff",
			"notification-alert-error-inner-container-border-colour": "#b20010ff",
			"notification-inline-container-border-colour": "#10131514",
			"notification-inline-icon-colour": "#000000ff",
			"notification-inline-text-colour": "#000000ff",
			"notification-inline-brand-container-colour": "#fffae6ff",
			"notification-inline-brand-inner-container-border-colour": "#ffcb05ff",
			"notification-inline-informative-container-colour": "#ebf8ffff",
			"notification-inline-informative-inner-container-border-colour": "#004a71ff",
			"notification-inline-success-container-colour": "#eef6e5ff",
			"notification-inline-success-inner-container-border-colour": "#398004ff",
			"notification-inline-warning-container-colour": "#ffeee5ff",
			"notification-inline-warning-inner-container-border-colour": "#ff732eff",
			"notification-inline-error-container-colour": "#ffe8eaff",
			"notification-inline-error-inner-container-border-colour": "#b20010ff",
			"number-input-input-container-colour": "#1013150a",
			"number-input-input-label-text-colour": "#434343ff",
			"number-input-input-text-colour": "#555555ff",
			"number-input-input-plus-icon-colour": "#434343ff",
			"number-input-icon-divider-border-colour": "#10131529",
			"number-input-input-minus-icon-colour": "#10131552",
			"number-input-helper-text-colour": "#555555ff",
			"number-input-helper-icon-colour": "#555555ff",
			"number-input-input-container-border-colour": "#101315ff",
			"number-input-hovered-input-container-colour": "#10131514",
			"number-input-hovered-input-container-border-colour": "#434343ff",
			"number-input-focused-input-container-border-colour": "#ffcb05ff",
			"number-input-completed-input-text-colour": "#000000ff",
			"number-input-completed-input-minus-icon-colour": "#434343ff",
			"number-input-error-input-text-colour": "#000000ff",
			"number-input-disabled-input-label-text-colour": "#10131552",
			"number-input-disabled-input-text-colour": "#10131552",
			"number-input-disabled-input-container-border-colour": "#c4c4c4ff",
			"number-input-disabled-input-plus-icon-colour": "#10131529",
			"number-input-disabled-input-minus-icon-colour": "#10131529",
			"number-input-error-input-container-colour": "#10131514",
			"number-input-error-helper-icon-colour": "#b20010ff",
			"number-input-error-input-container-border-colour": "#b20010ff",
			"pagination-item-label-text-colour": "#101315b8",
			"pagination-item-hovered-label-text-colour": "#000000ff",
			"pagination-item-hovered-container-colour": "#10131514",
			"pagination-item-focused-label-text-colour": "#000000ff",
			"pagination-item-focused-container-colour": "#10131514",
			"pagination-item-active-label-text-colour": "#ffffffff",
			"pagination-item-active-container-colour": "#101315cc",
			"pagination-arrow-icon-colour": "#101315b8",
			"pagination-arrow-hovered-container-colour": "#10131514",
			"pagination-arrow-focused-container-colour": "#10131514",
			"pagination-arrow-disabled-icon-colour": "#10131552",
			"pin-input-helper-text-colour": "#555555ff",
			"pin-input-helper-icon-colour": "#555555ff",
			"pin-input-error-helper-icon-colour": "#b20010ff",
			"pin-input-field-container-colour": "#1013150a",
			"pin-input-field-container-border-colour": "#101315ff",
			"pin-input-field-hovered-container-colour": "#10131514",
			"pin-input-field-hovered-container-border-colour": "#434343ff",
			"pin-input-field-focused-input-text-colour": "#555555ff",
			"pin-input-field-focused-container-border-colour": "#ffcb05ff",
			"pin-input-field-completed-input-text-colour": "#000000ff",
			"pin-input-field-error-input-text-colour": "#000000ff",
			"pin-input-field-error-container-colour": "#10131514",
			"pin-input-field-error-container-border-colour": "#b20010ff",
			"pin-input-field-disabled-container-border-colour": "#c4c4c4ff",
			"progress-indicator-linear-track-colour": "#10131529",
			"progress-indicator-linear-indicator-colour": "#ffcb05ff",
			"progress-indicator-circular-indicator-colour": "#ffcb05ff",
			"progress-indicator-circular-track-colour": "#10131514",
			"radio-button-label-text-colour": "#434343ff",
			"radio-button-radio-container-border-colour": "#101315ff",
			"radio-button-hovered-label-text-colour": "#000000ff",
			"radio-button-focused-label-text-colour": "#000000ff",
			"radio-button-focused-radio-container-border-colour": "#ffcb05ff",
			"radio-button-completed-radio-dot-colour": "#ffcb05ff",
			"radio-button-completed-radio-container-border-colour": "#ffcb05ff",
			"radio-button-error-radio-border-colour": "#b20010ff",
			"radio-button-disabled-label-text-colour": "#555555ff",
			"radio-button-disabled-radio-border-colour": "#c4c4c4ff",
			"rating-star-icon-colour": "#101315a3",
			"rating-star-hovered-icon-colour": "#10131552",
			"rating-star-active-icon-colour": "#ffcb05ff",
			"rating-star-focused-icon-colour": "#ffcb05ff",
			"rating-experience-label-text-colour": "#101315a3",
			"rating-experience-hovered-label-text-colour": "#10131552",
			"rating-experience-active-label-text-colour": "#000000ff",
			"rating-experience-focused-label-text-colour": "#000000ff",
			"scrollbar-track-colour": "#10131529",
			"scrollbar-indicator-colour": "#101315a3",
			"scrollbar-hovered-indicator-colour": "#ffcb05ff",
			"scrollbar-focused-indicator-border-colour": "#ffcb05ff",
			"search-bar-label-text-colour": "#555555ff",
			"search-bar-leading-icon-colour": "#10131552",
			"search-bar-container-colour": "#ffffffff",
			"search-container-colour": "#ffffffff",
			"search-bar-container-border-colour": "#10131514",
			"search-bar-focused-container-colour": "#f4f8faff",
			"search-bar-active-container-border-colour": "#10131514",
			"search-bar-active-label-text-colour": "#000000ff",
			"search-bar-completed-label-text-colour": "#000000ff",
			"search-bar-completed-leading-icon-colour": "#555555ff",
			"search-bar-completed-trailing-icon-colour": "#10131552",
			"search-bar-completed-container-colour": "#f4f8faff",
			"search-suggestion-label-text-colour": "#000000ff",
			"search-suggestion-description-text-colour": "#101315a3",
			"search-suggestion-icon-colour": "#000000ff",
			"search-no-results-label-text-colour": "#000000ff",
			"search-no-results-description-text-colour": "#101315a3",
			"search-no-results-icon-colour": "#000000ff",
			"search-suggestion-container-colour": "#ffffffff",
			"search-suggestion-hovered-container-colour": "#f4f8faff",
			"search-suggestion-focused-container-colour": "#f4f8faff",
			"sheet-bottom-elevated-container-colour": "#ffffffff",
			"sheet-bottom-drag-line-colour": "#10131529",
			"sheet-bottom-glass-container-colour": "#ffffffcc",
			"sheet-side-elevated-container-colour": "#ffffffff",
			"sheet-side-glass-container-colour": "#ffffffcc",
			"sheet-side-content-colour": "#000000ff",
			"switch-label-text-colour": "#434343ff",
			"switch-toggle-container-colour": "#10131529",
			"switch-toggle-circle-colour": "#ffffffff",
			"switch-hovered-label-text-colour": "#000000ff",
			"switch-hovered-toggle-container-colour": "#10131552",
			"switch-focused-label-text-colour": "#000000ff",
			"switch-active-label-text-colour": "#000000ff",
			"switch-active-toggle-container-colour": "#ffcb05ff",
			"switch-disabled-label-text-colour": "#555555ff",
			"switch-disabled-toggle-container-colour": "#10131514",
			"tabs-label-text-colour": "#101315cc",
			"tabs-hovered-label-text-colour": "#101315a3",
			"tabs-active-label-text-colour": "#000000ff",
			"tabs-active-label-underline-colour": "#ffcb05ff",
			"tag-label-text-colour": "#000000ff",
			"tag-icon-colour": "#000000ff",
			"tag-outlined-container-border-colour": "#101315ff",
			"tag-outlined-hovered-container-colour": "#1013150a",
			"tag-outlined-pressed-container-colour": "#1013150a",
			"tag-outlined-pressed-container-border-colour": "#434343ff",
			"tag-outlined-pressed-label-text-colour": "#434343ff",
			"tag-outlined-pressed-icon-colour": "#434343ff",
			"tag-outlined-focused-container-colour": "#1013150a",
			"tag-filled-container-colour": "#10131529",
			"tag-filled-pressed-container-colour": "#10131552",
			"tag-filled-pressed-label-text-colour": "#434343ff",
			"tag-filled-pressed-icon-colour": "#434343ff",
			"tag-filled-hovered-container-colour": "#10131552",
			"text-area-input-container-colour": "#1013150a",
			"text-area-input-label-text-colour": "#434343ff",
			"text-area-input-text-colour": "#555555ff",
			"text-area-input-icon-colour": "#434343ff",
			"text-area-input-container-border-colour": "#101315ff",
			"text-area-character-count-label-text-colour": "#434343ff",
			"text-area-character-count-container-colour": "#10131529",
			"text-area-helper-text-colour": "#555555ff",
			"text-area-helper-icon-colour": "#555555ff",
			"text-area-hovered-input-container-colour": "#10131514",
			"text-area-hovered-input-container-border-colour": "#434343ff",
			"text-area-focused-input-container-border-colour": "#ffcb05ff",
			"text-area-completed-input-text-colour": "#000000ff",
			"text-area-disabled-input-label-text-colour": "#10131552",
			"text-area-disabled-character-count-container-colour": "#1013150a",
			"text-area-disabled-character-count-label-text-colour": "#10131529",
			"text-area-disabled-input-text-colour": "#10131552",
			"text-area-disabled-input-icon-colour": "#10131552",
			"text-area-disabled-input-container-border-colour": "#c4c4c4ff",
			"text-area-error-input-text-colour": "#000000ff",
			"text-area-error-input-container-colour": "#10131514",
			"text-area-error-helper-icon-colour": "#b20010ff",
			"text-area-error-input-container-border-colour": "#b20010ff",
			"text-embed-secondary-colour": "#000000ff",
			"text-embed-tertiary-colour": "#555555ff",
			"text-embed-secondary-colour-inverse": "#ffffffff",
			"text-embed-tertiary-colour-inverse": "#d9d9d9ff",
			"text-embed-on-image-colour-light": "#ffffffff",
			"text-embed-on-image-colour-dark": "#000000ff",
			"text-embed-on-primary": "#000000ff",
			"text-embed-on-secondary": "#ffffffff",
			"text-input-input-container-colour": "#1013150a",
			"text-input-input-label-text-colour": "#434343ff",
			"text-input-input-icon-colour": "#434343ff",
			"text-input-helper-text-colour": "#555555ff",
			"text-input-helper-icon-colour": "#555555ff",
			"text-input-input-container-border-colour": "#101315ff",
			"text-input-hovered-input-container-colour": "#10131514",
			"text-input-hovered-input-container-border-colour": "#434343ff",
			"text-link-label-text-colour": "#000000ff",
			"text-link-container-border-colour": "#000000ff",
			"text-link-hovered-label-text-colour": "#434343ff",
			"text-link-hovered-container-border-colour": "#ffcb05ff",
			"text-link-pressed-label-text-colour": "#555555ff",
			"text-link-pressed-container-border-colour": "#ffdd5fff",
			"text-link-disabled-label-text-colour": "#d9d9d9ff",
			"text-link-disabled-container-border-colour": "#d9d9d9ff",
			"tooltip-container-colour": "#303335ff",
			"tooltip-caret-tip-colour": "#303335ff",
			"tooltip-text-colour": "#ffffffff",
			"tooltip-dismissible-icon-colour": "#ffffffff",
			"tooltip-trigger-icon-colour": "#000000ff",
			"tooltip-trigger-text-colour": "#000000ff",
			"tooltip-trigger-text-underline-colour": "#004a71ff",
			"tooltip-trigger-hovered-icon-colour": "#434343ff",
			"tooltip-trigger-hovered-text-colour": "#434343ff",
			"icon-colour": "#000000ff",
			"*Cursor-initial-colour": "#000000ff",
			"*Cursor-brand-colour": "#ffcb05ff",
			"*Documentation-code-snippet-container-colour": "#ffffffff",
			"*Documentation-code-snippet-border-colour": "#434343ff",
			"*Documentation-code-snippet-text-colour": "#000000ff",
			"*Native-bg-primary": "#f9f9f9ff",
			"*Demo-fg-colour-secondary": "#000000ff",
			"*Demo-fg-colour-tertiary": "#434343ff",
			"*Demo-bg-primary": "#f4f8faff",
			"*Demo-border": "#10131529",
			"*Demo-bg-overlay-level2": "#ffffffa3",
			"*Demo-bg-overlay-level3": "#ffffffcc",
			"*Demo-bg-indicator": "#10131529",
			"*Demo-fg-indicator": "#555555ff",
			"text-input-focused-input-text-colour": "#555555ff",
			"text-input-focused-input-container-border-colour": "#ffcb05ff",
			"text-input-completed-input-text-colour": "#000000ff",
			"text-input-error-input-text-colour": "#000000ff",
			"text-input-error-input-container-colour": "#10131514",
			"text-input-error-input-container-border-colour": "#b20010ff",
			"text-input-error-helper-icon-colour": "#b20010ff",
			"text-input-disabled-label-text-colour": "#10131552",
			"text-input-disabled-input-icon-colour": "#10131552",
			"text-input-disabled-container-border-colour": "#c4c4c4ff",
			"checkbox-completed-icon-colour": "#000000ff",
			"checkbox-completed-box-container-colour": "#ffcb05ff",
			"checkbox-error-box-border-colour": "#b20010ff",
			"checkbox-disabled-label-text-colour": "#555555ff",
			"checkbox-disabled-box-border-colour": "#c4c4c4ff",
			"*Graveyard-drawer-container-colour": "#ffcb05ff",
			"*Graveyard-drawer-icon-colour": "#000000ff",
			"*Graveyard-drawer-hovered-container-colour": "#ffdd5fff",
			"*Graveyard-drawer-focused-container-colour": "#ffdd5fff",
			"*Graveyard-drawer-pressed-icon-colour": "#434343ff",
			"*Graveyard-drawer-pressed-container-colour": "#ffdd5fff",
			"*Graveyard-drawer-disabled-icon-colour": "#7b7b7bff",
			"*Graveyard-drawer-disabled-container-colour": "#d9d9d9ff",
			"*Graveyard-toggletip-plain-container-colour": "#101315cc",
			"*Graveyard-toggletip-plain-caret-tip-colour": "#101315cc",
			"*Graveyard-toggletip-plain-trigger-icon-colour": "#000000ff",
			"*Graveyard-toggletip-plain-text-colour": "#ffffffff",
			"*Graveyard-toggletip-plain-close-icon-colour": "#ffffffff",
			"*Graveyard-toggletip-plain-hovered-trigger-icon-colour": "#434343ff",
			"*Graveyard-toggletip-plain-hovered-close-icon-colour": "#d9d9d9ff",
			"*Graveyard-toggletip-plain-focused-trigger-icon-border-colour": "#ffcb05ff",
			"*Graveyard-toggletip-plain-focused-close-icon-border-colour": "#ffcb05ff",
			"accessible-focus-border-container-outer-shadow-colour": "#ffffffff",
			"navigation-bar-item-brand-icon-colour": "#000000ff",
			"navigation-bar-item-brand-label-text-colour": "#000000ff",
			"navigation-bar-item-brand-hovered-container-background": "#1013150a",
			"navigation-bar-item-brand-focused-container-background": "#10131514",
			"navigation-bar-item-brand-active-label-text-colour": "#000000ff",
			"navigation-bar-item-brand-active-icon-colour": "#000000ff",
			"colour-primary": "#ffcb05ff",
			"colour-on-primary": "#000000ff",
			"colour-primary-inverse": "#ffcb05ff",
			"colour-on-primary-inverse": "#000000ff",
			"colour-primary-interaction": "#ffdd5fff",
			"colour-primary-interaction-inverse": "#d6aa00ff",
			"colour-secondary": "#000000ff",
			"colour-on-secondary": "#ffffffff",
			"colour-secondary-inverse": "#ffffffff",
			"colour-on-secondary-inverse": "#000000ff",
			"colour-secondary-interaction": "#434343ff",
			"colour-secondary-interaction-inverse": "#d9d9d9ff",
			"colour-tertiary": "#434343ff",
			"colour-on-tertiary": "#f5f5f5ff",
			"colour-tertiary-inverse": "#f5f5f5ff",
			"colour-on-tertiary-inverse": "#434343ff",
			"colour-tertiary-interaction": "#555555ff",
			"colour-tertiary-interaction-inverse": "#d9d9d9ff",
			"colour-disabled": "#d9d9d9ff",
			"colour-on-disabled": "#7b7b7bff",
			"colour-disabled-inverse": "#7b7b7bff",
			"colour-on-disabled-inverse": "#d9d9d9ff",
			"colour-error": "#b20010ff",
			"colour-on-error": "#ffbec4ff",
			"colour-error-inverse": "#ffbec4ff",
			"colour-on-error-inverse": "#b20010ff",
			"colour-success": "#398004ff",
			"colour-on-success": "#ffffffff",
			"colour-success-inverse": "#d5e9bfff",
			"colour-on-success-inverse": "#101315ff",
			"colour-warning": "#ff732eff",
			"colour-on-warning-inverse": "#101315ff",
			"colour-on-warning": "#101315ff",
			"colour-warning-inverse": "#ffb18aff",
			"colour-informative": "#004a71ff",
			"colour-on-informative": "#c7ebffff",
			"colour-informative-inverse": "#c7ebffff",
			"colour-on-informative-inverse": "#004a71ff",
			"colour-surface": "#f4f8faff",
			"colour-on-surface": "#000000ff",
			"colour-surface-inverse": "#303335ff",
			"colour-on-surface-inverse": "#ffffffff",
			"colour-surface-full": "#ffffffff",
			"colour-on-surface-full": "#000000ff",
			"colour-surface-full-inverse": "#101315ff",
			"colour-on-surface-full-inverse": "#ffffffff",
			"colour-surface-dim": "#ebeff1ff",
			"colour-on-surface-dim": "#000000ff",
			"colour-surface-dim-inverse": "#4e5153ff",
			"colour-on-surface-dim-inverse": "#ffffffff",
			"colour-surface-subtle-primary": "#fffae6ff",
			"colour-surface-subtle-primary-inverse": "#5c4900ff",
			"colour-surface-subtle-success": "#eef6e5ff",
			"colour-surface-subtle-success-inverse": "#085f00ff",
			"colour-surface-subtle-error": "#ffe8eaff",
			"colour-surface-subtle-error-inverse": "#610009ff",
			"colour-surface-subtle-warning": "#ffeee5ff",
			"colour-surface-subtle-warning-inverse": "#4d1a00ff",
			"colour-surface-subtle-informative": "#ebf8ffff",
			"colour-surface-subtle-informative-inverse": "#002f48ff",
			"colour-opacity-highest": "#ffffffcc",
			"colour-opacity-higher": "#ffffffb8",
			"colour-opacity-high": "#ffffffa3",
			"colour-opacity-medium": "#ffffff52",
			"colour-opacity-low": "#ffffff29",
			"colour-opacity-lower": "#ffffff14",
			"colour-opacity-lowest": "#ffffff0a",
			"colour-opacity-highest-inverse": "#101315cc",
			"colour-opacity-higher-inverse": "#101315b8",
			"colour-opacity-high-inverse": "#101315a3",
			"colour-opacity-medium-inverse": "#10131552",
			"colour-opacity-low-inverse": "#10131529",
			"colour-opacity-lower-inverse": "#10131514",
			"colour-opacity-lowest-inverse": "#1013150a",
			"border-colour-primary": "#ffcb05ff",
			"border-colour-primary-inverse": "#ffcb05ff",
			"border-colour-primary-interaction": "#ffdd5fff",
			"border-colour-primary-interaction-inverse": "#d6aa00ff",
			"border-colour-secondary": "#101315ff",
			"border-colour-secondary-inverse": "#ffffffff",
			"border-colour-secondary-interaction": "#434343ff",
			"border-colour-secondary-interaction-inverse": "#d9d9d9ff",
			"border-colour-opacity-inverse-64": "#101315a3",
			"border-colour-opacity-64": "#ffffffa3",
			"border-colour-opacity-inverse-32": "#10131552",
			"border-colour-opacity-32": "#ffffff52",
			"border-colour-opacity-inverse-16": "#10131529",
			"border-colour-opacity-16": "#ffffff29",
			"border-colour-opacity-inverse-8": "#10131514",
			"border-colour-opacity-8": "#ffffff14",
			"border-colour-tertiary": "#555555ff",
			"border-colour-tertiary-inverse": "#e9e9e9ff",
			"border-colour-disabled": "#c4c4c4ff",
			"border-colour-disabled-inverse": "#7b7b7bff",
			"border-colour-error": "#b20010ff",
			"border-colour-error-inverse": "#ffbec4ff",
			"border-colour-success": "#398004ff",
			"border-colour-success-inverse": "#d5e9bfff",
			"border-colour-warning": "#ff732eff",
			"border-colour-warning-inverse": "#ffb18aff",
			"border-colour-informative": "#004a71ff",
			"border-colour-informative-inverse": "#c7ebffff",
			"border-colour-accessible": "#ffcb05ff",
			"border-colour-accessible-inverse": "#ffcb05ff",
			"shadow-accessible-light-colour": "#ffffffff",
			"shadow-accessible-dark-colour": "#000000ff",
			"shadow-level-1-colour": "#00000029",
			"shadow-level-2-colour": "#00000029",
			"shadow-level-3-colour": "#00000029",
			"shadow-inverted-colour": "#00000014",
			"shadow-left-colour": "#00000014",
			"shadow-right-colour": "#00000014",
			"shadow-top-colour": "#00000014"
		},
		floats: {
			"accordion-button-scale-m-l-container-padding-left-right": "1.5rem",
			"accordion-button-container-height": "80px",
			"accordion-button-container-border-bottom": "1px",
			"accordion-button-hovered-container-border": "0px",
			"accordion-button-hovered-container-corner-radius-all-round": "8px",
			"accordion-button-focused-container-corner-radius-all-round": "8px",
			"accordion-button-pressed-container-border": "0px",
			"accordion-button-pressed-container-corner-radius-all-round": "8px",
			"accordion-container-border-bottom-left-right": "1px",
			"accordion-opened-container-corner-radius-all-round": "8px",
			"accordion-closed-container-corner-radius": "0px",
			"accordion-button-active-container-border": "0px",
			"accordion-button-active-container-corner-radius-top": "8px",
			"accordion-content-margin": "24px",
			"accordion-scale-m-l-container-padding-scale": "1.5rem",
			"aspect-ratio-container-corner-radius-all-round": "24px",
			"badge-container-padding-small": "8px",
			"badge-scale-m-l-container-padding": "0.5rem",
			"badge-scale-m-l-container-height": "1.5rem",
			"badge-scale-m-l-container-corner-radius-all-round": "0.25rem",
			"badge-scale-large-container-corner-radius-all-round": "8px",
			"badge-container-rounded-corner-radius": "56px",
			"button-action-filled-container-border": "1px",
			"button-action-scale-m-l-small-icon": "1.5rem",
			"button-action-scale-m-l-large-icon": "2rem",
			"button-action-container-corner-radius-all-round": "100px",
			"button-action-scale-m-l-small-container-padding": "1rem",
			"button-action-scale-m-l-large-container-padding": "1.5rem",
			"button-app-standard-container-corner-radius": "8px",
			"button-app-scale-m-l-container-height": "3.5rem",
			"button-app-scale-m-l-container-width": "190px",
			"button-app-scale-large-container-width": "200px",
			"button-app-standard-container-border": "1px",
			"button-app-inverted-container-border": "1px",
			"button-primary-container-padding-left-right": "24px",
			"button-primary-container-corner-radius-all-round": "100px",
			"button-primary-scale-m-l-icon-margin-right": "0.5rem",
			"button-secondary-container-border": "1px",
			"button-secondary-scale-m-l-icon-margin-right": "0.5rem",
			"button-secondary-container-padding-left-right": "24px",
			"button-secondary-corner-radius-all-round": "100px",
			"button-secondary-scale-m-l-container-height": "3.5rem",
			"button-secondary-scale-m-l-icon": "1.5rem",
			"button-primary-scale-m-l-container-height": "3.5rem",
			"button-primary-scale-m-l-icon": "1.5rem",
			"button-call-out-container-padding-left-right": "24px",
			"button-call-out-container-padding-top-bottom": "12px",
			"button-call-out-container-corner-radius-all-round": "100px",
			"button-call-out-scale-m-l-icon-margin-right": "0.5rem",
			"button-call-out-scale-m-l-container-height": "3.5rem",
			"button-text-hovered-container-border-bottom": "2px",
			"button-text-pressed-container-border-bottom": "2px",
			"button-combo-scale-m-l-button-margin": "0.75rem",
			"button-icon-scale-m-l-icon-margin": "0.75rem",
			"button-icon-scale-m-l-icon-margin 2": "1rem",
			"button-icon-outline-container-border": "2px",
			"button-icon-scale-m-l-container-corner-radius": "1rem",
			"button-icon-scale-m-l-container-padding-left-right": "0.75rem",
			"button-icon-scale-m-l-container-padding-top-bottom": "0.75rem",
			"button-fab-primary-scale-m-l-container-padding": "0.75rem",
			"button-fab-primary-scale-m-l-container-corner-radius": "1rem",
			"button-fab-primary-scale-m-l-icon-margin-right": "0.75rem",
			"button-fab-primary-scale-m-l-icon-size": "2rem",
			"button-fab-secondary-scale-m-l-container-padding": "0.75rem",
			"button-fab-secondary-scale-m-l-container-corner-radius": "1rem",
			"button-fab-secondary-scale-m-l-container-margin": "0.5rem",
			"button-fab-secondary-scale-m-l-icon-margin-right": "0.75rem",
			"button-fab-secondary-scale-m-l-icon-size": "2rem",
			"button-select-active-container-border": "0px",
			"button-select-container-border": "1px",
			"button-select-hovered-container-border": "0px",
			"button-select-pressed-container-border": "0px",
			"button-select-container-padding-left-right": "24px",
			"button-select-container-padding-top-bottom": "12px",
			"button-select-container-corner-radius": "8px",
			"button-select-scale-m-l-container-height": "3rem",
			"button-group-scale-m-l-button-margin": "0.75rem",
			"button-payment-container-padding-left-right": "0px",
			"button-payment-container-padding-top-bottom": "12px",
			"button-payment-container-corner-radius-all-round": "100px",
			"button-payment-scale-m-l-container-height": "3.5rem",
			"button-payment-scale-m-l-container-width": "168px",
			"button-call-out-scale-m-l-icon": "1.5rem",
			"card-base-elevated-hovered-container-border": "1px",
			"card-base-outlined-container-border": "1px",
			"card-base-primary-hovered-container-border": "1px",
			"card-base-inverted-hovered-container-border": "1px",
			"card-base-glass-hovered-container-border": "1px",
			"card-base-glass-inverted-hovered-container-border": "1px",
			"card-base-container-corner-radius-all-round": "16px",
			"carousel-scale-m-l-card-margin": "1rem",
			"carousel-scale-m-l-container-padding-top-bottom": "2.5rem",
			"carousel-scale-m-l-content-margin": "1.5rem",
			"checkbox-hovered-box-container-border": "0px",
			"checkbox-box-container-border": "2px",
			"checkbox-scale-m-l-label-margin-left": "0.75rem",
			"checkbox-box-container-corner-radius-all-round": "4px",
			"date-picker-date-container-corner-radius": "100px",
			"date-picker-floating-container-corner-radius": "8px",
			"date-picker-fixed-container-corner-radius-bottom-left-right": "8px",
			"date-picker-container-padding": "24px",
			"date-picker-scale-m-l-row-margin": "0.25rem",
			"date-picker-date-scale-m-l-container-size": "3rem",
			"date-picker-date-scale-large-container-size": "52px",
			"date-picker-week-day-scale-m-l-container-size": "3rem",
			"date-picker-date-current-container-border": "1px",
			"date-picker-container-min-width": "328px",
			"date-picker-fixed-container-border-bottom-left-right": "1px",
			"date-picker-floating-container-border": "1px",
			"date-picker-flat-container-border": "0px",
			"date-picker-month-selection-container-padding-bottom": "16px",
			"date-picker-date-active-start-container-corner-radius-top-left": "24px",
			"date-picker-date-active-start-container-corner-radius-bottom-left": "24px",
			"date-picker-date-active-end-container-corner-radius-top-right": "24px",
			"date-picker-date-active-end-container-corner-radius-bottom-right": "24px",
			"date-picker-date-active-middle-container-corner-radius": "0px",
			"dialog-container-corner-radius-all-round": "16px",
			"dialog-container-padding": "24px",
			"dialog-content-margin": "24px",
			"dialog-container-border": "1px",
			"divider-container-border": "1px",
			"dot-indicator-container-padding": "24px",
			"dropdown-completed-input-label-margin-bottom": "8px",
			"dropdown-error-input-label-margin-bottom": "8px",
			"dot-indicator-dot-margin": "12px",
			"dropdown-input-container-padding-left-right": "16px",
			"dropdown-input-corner-radius-top": "8px",
			"dropdown-input-container-border-bottom": "2px",
			"dropdown-input-text-margin-right": "16px",
			"dropdown-helper-text-margin-left": "8px",
			"list-icon-icon-margin-right": "8px",
			"list-icon-padding-bottom": "12px",
			"list-unordered-symbol-margin-right": "16px",
			"list-unordered-indent-padding-left": "32px",
			"list-unordered-padding-bottom": "12px",
			"list-ordered-number-margin-right": "8px",
			"list-ordered-indent-padding-left": "32px",
			"list-ordered-padding-bottom": "12px",
			"menu-attached-container-corner-radius-bottom": "16px",
			"menu-attached-container-padding-bottom": "8px",
			"menu-floating-container-padding-top-bottom": "8px",
			"menu-floating-container-corner-radius-all-round": "16px",
			"menu-container-border": "1px",
			"menu-item-container-padding": "16px",
			"menu-item-content-margin": "16px",
			"menu-search-container-padding": "16px",
			"menu-search-content-margin": "16px",
			"menu-search-container-border-bottom": "1px",
			"menu-search-scale-m-l-container-height": "3.25rem",
			"menu-search-scale-m-l-icon-size": "1.5rem",
			"mobile-number-input-input-container-padding-top-left-right": "16px",
			"mobile-number-input-input-container-corner-radius-top": "8px",
			"mobile-number-input-input-container-border-bottom": "2px",
			"mobile-number-input-input-content-margin-right": "16px",
			"mobile-number-input-helper-text-margin-left": "8px",
			"mobile-number-input-input-country-border": "1px",
			"mobile-number-input-input-country-margin-right": "4px",
			"mobile-number-input-disabled-input-country-opacity": "56px",
			"navigation-bar-container-border-top": "1px",
			"navigation-bar-scale-small-container-height": "88px",
			"navigation-bar-scale-medium-container-height": "104px",
			"navigation-bar-item-scale-m-l-icon-container-padding-top": "1.5rem",
			"navigation-bar-item-scale-m-l-container-height": "6.5rem",
			"navigation-bar-item-scale-m-l-content-margin": "0.75rem",
			"navigation-bar-item-container-min-padding-left-right": "8px",
			"notification-toast-container-border-weight": "1px",
			"notification-toast-container-padding-all-round": "8px",
			"notification-toast-text-wrapper-padding-all-round": "8px",
			"notification-toast-container-corner-radius-all-round": "8px",
			"notification-toast-scale-m-l-title-margin-bottom": "0.5rem",
			"notification-toast-button-border-weight": "1px",
			"notification-toast-small-button-padding-left-right": "12px",
			"notification-toast-large-button-padding-left-right": "16px",
			"notification-toast-button-margin-left": "16px",
			"notification-toast-button-margin-right": "8px",
			"notification-toast-scale-m-l-button-margin-right": "0.5rem",
			"notification-toast-small-button-height": "32px",
			"notification-toast-large-button-height": "36px",
			"notification-alert-container-padding-top-bottom": "12px",
			"notification-alert-container-padding-left": "24px",
			"notification-alert-container-padding-right": "16px",
			"notification-alert-scale-m-l-container-height": "4.25rem",
			"notification-alert-container-corner-radius-all-round": "8px",
			"notification-alert-container-border-weight": "1px",
			"notification-alert-inner-container-border-weight": "12px",
			"notification-alert-icon-margin-right": "8px",
			"notification-alert-icon-margin-top": "4px",
			"notification-alert-title-margin-right": "8px",
			"notification-alert-text-container-margin": "12px",
			"notification-alert-dismissible-icon-margin-top-mobile": "4px",
			"notification-alert-dismissible-icon-margin-left-mobile": "8px",
			"notification-alert-dismissible-icon-margin-left-tablet": "12px",
			"notification-alert-dismissible-icon-margin-left-desktop": "16px",
			"notification-inline-container-padding-top-bottom": "12px",
			"notification-inline-container-padding-left": "24px",
			"notification-inline-container-padding-right": "16px",
			"notification-inline-container-height-tablet": "56px",
			"notification-inline-container-height-desktop": "60px",
			"notification-inline-container-corner-radius-all-round": "0px",
			"notification-inline-container-border-weight": "1px",
			"notification-inline-inner-container-border-weight": "12px",
			"notification-inline-icon-margin-right": "8px",
			"notification-inline-icon-margin-top-mobile": "4px",
			"notification-inline-title-margin-right": "8px",
			"notification-inline-text-container-margin": "12px",
			"notification-inline-dismissible-icon-margin-top-mobile": "4px",
			"notification-inline-dismissible-icon-margin-left-mobile": "8px",
			"notification-inline-dismissible-icon-margin-left-tablet": "12px",
			"notification-inline-dismissible-icon-margin-left-desktop": "16px",
			"number-input-input-container-padding-top-left-right": "16px",
			"number-input-input-container-corner-radius-top": "8px",
			"number-input-input-container-border-bottom": "2px",
			"number-input-input-icon-divider-border": "1px",
			"number-input-input-text-margin-right": "16px",
			"number-input-helper-text-margin-left": "8px",
			"pagination-number-margin": "12px",
			"pagination-arrow-margin": "16px",
			"pagination-item-container-corner-radius": "100px",
			"pagination-item-scale-m-l-container-size": "2.25rem",
			"pagination-arrow-container-corner-radius": "24px",
			"pagination-arrow-scale-m-l-icon-size": "1.5rem",
			"pagination-arrow-scale-m-l-container-size": "2.25rem",
			"pin-input-scale-m-l-helper-margin-top": "0.75rem",
			"pin-input-helper-text-margin-left": "8px",
			"pin-input-container-input-margin": "8px",
			"pin-input-container-max-width": "508px",
			"pin-input-field-container-padding-left-right": "16px",
			"pin-input-field-container-corner-radius-top": "8px",
			"pin-input-field-container-border-bottom": "2px",
			"menu-item-scale-m-l-container-height": "3.25rem",
			"menu-item-scale-m-l-icon-size": "1.5rem",
			"menu-item-scale-m-l-flag-size": "1.5rem",
			"progress-indicator-linear-container-padding": "0px",
			"progress-indicator-linear-track-corner-radius": "4px",
			"progress-indicator-linear-indeterminate-track-corner-radius": "4px",
			"progress-indicator-linear-indicator-corner-radius": "0px",
			"progress-indicator-circular-container-padding": "0px",
			"progress-indicator-circular-indicator-corner-radius-top": "2px",
			"radio-button-radio-container-border": "2px",
			"radio-button-scale-m-l-label-margin-left": "0.75rem",
			"radio-button-radio-container-corner-radius-all-round": "100px",
			"radio-button-hovered-radio-container-border": "0px",
			"radio-button-completed-radio-container-border": "0px",
			"rating-star-container-width-min": "40px",
			"rating-star-container-height-min": "40px",
			"rating-star-icon-margin-right": "12px",
			"rating-experience-container-margin-right-compact": "12px",
			"rating-experience-container-margin-right-comfortable": "24px",
			"rating-experience-icon-opacity": "80px",
			"rating-experience-icon-margin-bottom": "8px",
			"rating-experience-active-icon-opacity": "100px",
			"scrollbar-container-padding": "0px",
			"scrollbar-track-corner-radius": "16px",
			"scrollbar-indicator-corner-radius": "16px",
			"scrollbar-indicator-height": "4px",
			"scrollbar-hovered-indicator-height-hover": "8px",
			"scrollbar-focused-indicator-border": "1px",
			"search-bar-container-padding": "16px",
			"search-bar-scale-m-l-container-height": "4rem",
			"search-bar-scale-m-l-icon-size": "1.5rem",
			"search-bar-content-margin": "16px",
			"search-bar-container-border": "1px",
			"search-bar-container-corner-radius-all-round": "16px",
			"search-bar-hovered-container-border": "0px",
			"search-bar-focused-container-border": "0px",
			"search-bar-active-container-border-bottom": "1px",
			"search-bar-active-container-corner-radius-top": "16px",
			"search-suggestion-container-padding": "16px",
			"search-suggestion-content-margin": "16px",
			"search-suggestion-scale-m-l-container-height": "3.75rem",
			"search-suggestion-scale-m-l-icon-size": "1.5rem",
			"search-suggestion-scale-m-l-label-margin-bottom": "0.5rem",
			"search-container-corner-radius-all-round": "16px",
			"search-scale-m-l-active-container-padding-bottom": "0.75rem",
			"sheet-bottom-container-corner-radius-top": "24px",
			"sheet-side-container-corner-radius-top-left": "24px",
			"sheet-side-container-corner-radius-top-right": "24px",
			"sheet-side-container-padding-left-right": "24px",
			"sheet-side-container-padding-top": "40px",
			"switch-scale-m-l-label-margin-right": "0.75rem",
			"switch-scale-m-l-label-margin-left": "0.75rem",
			"switch-toggle-container-corner-radius-all-round": "24px",
			"switch-toggle-padding-all-round": "2px",
			"tabs-label-padding-left-right": "24px",
			"tabs-label-padding-top-bottom": "24px",
			"tabs-active-label-underline-border-weight": "4px",
			"tag-container-padding-left-right": "12px",
			"tag-content-margins": "8px",
			"tag-container-corner-radius": "56px",
			"tag-scale-m-l-icon-size": "1rem",
			"tag-scale-m-l-container-height": "2.25rem",
			"tag-outlined-container-border-weight": "1px",
			"text-area-input-container-padding": "16px",
			"text-area-input-container-corner-radius-top": "8px",
			"text-area-input-container-border-bottom": "2px",
			"text-area-input-text-margin-right": "16px",
			"text-area-character-count-container-corner-radius": "16px",
			"text-area-character-count-container-padding-top-bottom": "4px",
			"text-area-character-count-container-padding-left-right": "8px",
			"text-area-helper-text-margin-left": "8px",
			"text-input-input-container-padding-top-left-right": "16px",
			"text-input-input-container-corner-radius-top": "8px",
			"text-input-input-container-border-bottom": "2px",
			"text-input-input-text-margin-right": "16px",
			"text-input-helper-text-margin-left": "8px",
			"text-input-scale-m-l-input-container-height": "4rem",
			"text-input-scale-m-l-input-margin-bottom": "0.75rem",
			"text-input-scale-m-l-input-icon-size": "1.5rem",
			"text-input-scale-m-l-input-label-margin-bottom": "0.5rem",
			"mobile-number-input-scale-m-l-input-container-height": "4rem",
			"mobile-number-input-scale-m-l-input-margin-bottom": "0.75rem",
			"mobile-number-input-scale-m-l-input-icon-size": "1.5rem",
			"mobile-number-input-scale-m-l-input-label-margin-bottom": "0.5rem",
			"number-input-scale-m-l-input-container-height": "4rem",
			"number-input-scale-m-l-input-margin-bottom": "0.75rem",
			"number-input-scale-m-l-input-icon-size": "1.5rem",
			"number-input-scale-m-l-input-label-margin-bottom": "0.5rem",
			"dropdown-scale-m-l-input-container-height": "4rem",
			"pin-input-field-scale-m-l-input-container-height": "4rem",
			"dropdown-scale-m-l-input-margin-bottom": "0.75rem",
			"dropdown-scale-m-l-input-icon-size": "1.5rem",
			"dropdown-scale-m-l-input-label-margin-bottom": "0.5rem",
			"text-area-scale-m-l-input-margin-bottom": "0.75rem",
			"text-area-scale-m-l-input-icon-size": "1.5rem",
			"text-area-scale-m-l-input-label-margin-bottom": "0.5rem",
			"text-link-container-border-bottom": "1px",
			"text-link-container-padding-all-round": "4px",
			"tooltip-container-padding-left-right": "12px",
			"tooltip-container-padding-top-bottom": "12px",
			"tooltip-container-margin": "8px",
			"tooltip-container-width-max": "300px",
			"tooltip-dismissible-icon-margin-left": "8px",
			"tooltip-scale-m-l-icon-size": "1rem",
			"tooltip-trigger-icon-corner-radius": "100px",
			"button-text-scale-m-l-icon-margin-right": "0.5rem",
			"*Demo-corner-radius-large": "32px",
			"*Demo-corner-radius-medium": "24px",
			"*Demo-corner-radius-small": "16px",
			"*Demo-gap": "0px",
			"*Demo-padding": "24px",
			"checkbox-completed-box-container-border": "0px",
			"*Graveyard-drawer-container-padding-left-right": "8px",
			"*Graveyard-drawer-container-padding-top-bottom": "16px",
			"*Graveyard-drawer-container-corner-radius": "8px",
			"*Graveyard-toggletip-plain-container-corner-radius": "4px",
			"*Graveyard-toggletip-plain-container-padding-left-right": "8px",
			"*Graveyard-toggletip-plain-container-padding-top-bottom": "4px",
			"*Graveyard-toggletip-plain-container-margin": "4px",
			"*Graveyard-toggletip-plain-container-width-max": "140px",
			"*Graveyard-toggletip-plain-trigger-corner-radius": "100px",
			"*Graveyard-toggletip-plain-text-margin-right": "16px",
			"*Graveyard-toggletip-plain-close-icon-margin-top": "2px",
			"*Graveyard-toggletip-plain-focused-trigger-icon-border-weight": "2px",
			"*Graveyard-toggletip-plain-focused-close-icon-border-weight": "1px",
			"accessible-focus-border-container-border": "4px",
			"accessible-focus-border-container-outer-border": "2px",
			"navigation-bar-item-brand-scale-m-l-icon-container-padding-top": "1.5rem",
			"navigation-bar-item-brand-scale-m-l-container-height": "6.5rem",
			"navigation-bar-item-brand-scale-m-l-content-margin": "0.75rem",
			"navigation-bar-item-brand-container-min-padding-left-right": "8px",
			"navigation-bar-item-brand-label-text-opacity": "48px",
			"navigation-bar-item-brand-icon-opacity": "48px",
			"navigation-bar-item-brand-active-label-text-opacity": "100px",
			"navigation-bar-item-brand-active-icon-opacity": "100px",
			"button-text-scale-m-l-icon": "1.5rem",
			"button-text-scale-m-l-container-height": "3.5rem",
			"button-text-scale-large-container-height": "60px",
			"button-icon-scale-m-l-icon-size": "1.5rem",
			"border-weight-none": "0px",
			"border-weight-small": "1px",
			"border-weight-medium": "2px",
			"border-weight-large": "4px",
			"padding-none": "0px",
			"padding-3xsmall": "2px",
			"padding-2xsmall": "4px",
			"padding-xsmall": "8px",
			"padding-small": "12px",
			"padding-medium": "16px",
			"padding-large": "24px",
			"padding-xlarge": "32px",
			"padding-2xlarge": "40px",
			"padding-3xlarge": "48px",
			"margin-none": "0px",
			"margin-3xsmall": "2px",
			"margin-2xsmall": "4px",
			"margin-xsmall": "8px",
			"margin-small": "12px",
			"margin-medium": "16px",
			"margin-large": "24px",
			"margin-xlarge": "32px",
			"margin-2xlarge": "40px",
			"margin-section-vertical-large": "72px",
			"margin-section-vertical-medium": "64px",
			"margin-section-vertical-small": "56px",
			"corner-radius-none": "0px",
			"corner-radius-3xsmall": "2px",
			"corner-radius-2xsmall": "4px",
			"corner-radius-xsmall": "8px",
			"corner-radius-small": "16px",
			"corner-radius-medium": "24px",
			"corner-radius-large": "32px",
			"corner-radius-xlarge": "40px",
			"corner-radius-2xlarge": "48px",
			"corner-radius-3xlarge": "56px",
			"corner-radius-full": "100px",
			"shadow-accessible": "3px",
			"shadow-level-1-blur": "4px",
			"shadow-level-1-y": "1px",
			"shadow-level-1-spread": "0px",
			"shadow-level-2-blur": "16px",
			"shadow-level-2-y": "8px",
			"shadow-level-2-spread": "2px",
			"shadow-level-3-blur": "24px",
			"shadow-level-3-y": "16px",
			"shadow-level-3-spread": "4px",
			"shadow-inverted-blur": "8px",
			"shadow-inverted-y": "-4px",
			"shadow-inverted-spread": "2px",
			"shadow-left-blur": "8px",
			"shadow-left-x": "-4px",
			"shadow-left-spread": "2px",
			"shadow-right-blur": "8px",
			"shadow-right-x": "4px",
			"shadow-right-spread": "2px",
			"shadow-top-blur": "8px",
			"shadow-top-y": "-2px",
			"shadow-top-spread": "1px",
			"blur-background-level-1": "4px",
			"blur-background-level-2": "8px",
			"blur-background-level-3": "16px",
			"blur-layer-level-1": "24px",
			"blur-layer-level-2": "48px",
			"blur-layer-level-3": "96px"
		}
	},
	dark: {
		colors: {
			"logo-core-default-colour": "#ffffffff",
			"logo-core-inverted-colour": "#000000ff",
			"logo-core-brand-colour": "#ffcb05ff",
			"logo-core-on-image-colour-light": "#ffffffff",
			"logo-core-on-image-colour-dark": "#303335ff",
			"logo-play-default-colour": "#ffffffff",
			"logo-play-inverted-colour": "#000000ff",
			"logo-play-brand-colour": "#ffcb05ff",
			"logo-play-on-image-colour-light": "#ffffffff",
			"logo-play-on-image-colour-dark": "#303335ff",
			"logo-payment-default-colour": "#ffffffff",
			"logo-payment-opacity-colour": "#ffffff52",
			"logo-payment-opacity-inverse-colour": "#10131552",
			"container-bg-colour-full": "#101315ff",
			"container-bg-colour-subtle": "#303335ff",
			"container-bg-colour-dim": "#4e5153ff",
			"container-bg-colour-brand": "#ffcb05ff",
			"container-bg-colour-full-inverse": "#ffffffff",
			"container-bg-colour-subtle-inverse": "#f4f8faff",
			"container-bg-colour-dim-inverse": "#ebeff1ff",
			"accessible-focus-border-container-border-colour": "#ffcb05ff",
			"avatar-container-colour": "#ffffffa3",
			"avatar-label-text-colour": "#101315cc",
			"avatar-icon-colour": "#101315cc",
			"accordion-button-label-text-colour": "#ffffffff",
			"accordion-button-icon-colour": "#ffffffff",
			"accordion-button-container-border-colour": "#ffffff29",
			"accordion-button-hovered-label-text-colour": "#ffffffff",
			"accordion-button-hovered-container-colour": "#ffffff14",
			"accordion-button-focused-label-text-colour": "#ffffffff",
			"accordion-button-focused-container-colour": "#ffffff14",
			"accordion-button-pressed-container-colour": "#ffffff29",
			"accordion-button-disabled-label-text-colour": "#d9d9d9ff",
			"accordion-button-disabled-icon-colour": "#7b7b7bff",
			"accordion-container-border-colour": "#ffffff14",
			"accordion-button-active-label-text-colour": "#ffffffff",
			"accordion-button-active-container-colour": "#ffffff14",
			"accordion-button-active-hovered-container-colour": "#ffffff14",
			"accordion-button-active-pressed-container-colour": "#ffffff29",
			"accordion-button-active-focused-container-colour": "#ffffff14",
			"badge-label-text-colour": "#000000ff",
			"badge-container-colour": "#ffffffff",
			"badge-alert-label-text-colour": "#b20010ff",
			"badge-alert-container-colour": "#ffbec4ff",
			"badge-warning-label-text-colour": "#101315ff",
			"badge-warning-container-colour": "#ffb18aff",
			"badge-positive-label-text-colour": "#101315ff",
			"badge-positive-container-colour": "#d5e9bfff",
			"badge-informative-label-text-colour": "#004a71ff",
			"badge-informative-container-colour": "#c7ebffff",
			"badge-brand-core-label-text-colour": "#000000ff",
			"badge-brand-core-container-colour": "#ffcb05ff",
			"button-action-transparent-icon-colour": "#000000ff",
			"button-action-transparent-container-colour": "#ffffffa3",
			"button-action-transparent-hovered-icon-colour": "#434343ff",
			"button-action-transparent-hovered-container-colour": "#ffffffcc",
			"button-action-transparent-focused-icon-colour": "#434343ff",
			"button-action-transparent-focused-container-colour": "#ffffffcc",
			"button-action-transparent-pressed-icon-colour": "#434343ff",
			"button-action-transparent-pressed-container-colour": "#ffffff52",
			"button-action-transparent-disabled-icon-colour": "#555555ff",
			"button-action-transparent-disabled-container-colour": "#ffffff29",
			"button-action-filled-container-border-colour": "#ffffff52",
			"button-action-filled-icon-colour": "#ffffffff",
			"button-action-filled-container-colour": "#101315ff",
			"button-action-filled-hovered-container-border-colour": "#ffffff14",
			"button-action-filled-hovered-icon-colour": "#f5f5f5ff",
			"button-action-filled-hovered-container-colour": "#434343ff",
			"button-action-filled-focused-icon-colour": "#f5f5f5ff",
			"button-action-filled-focused-container-colour": "#434343ff",
			"button-action-filled-pressed-icon-colour": "#f5f5f5ff",
			"button-action-filled-disabled-container-colour": "#303335ff",
			"button-action-filled-disabled-icon-colour": "#7b7b7bff",
			"button-action-filled-disabled-container-border-colour": "#ffffff29",
			"button-action-filled-pressed-container-colour": "#555555ff",
			"button-action-filled-pressed-container-border-colour": "#ffffff14",
			"button-app-standard-hovered-container-colour": "#303335ff",
			"button-app-standard-hovered-label-text-colour": "#ffffffff",
			"button-app-standard-hovered-symbol-colour": "#ffffffff",
			"button-app-standard-focused-container-colour": "#101315ff",
			"button-app-standard-focused-label-text-colour": "#ffffffff",
			"button-app-standard-focused-symbol-colour": "#ffffffff",
			"button-app-standard-container-colour": "#101315ff",
			"button-app-standard-container-border-colour": "#ffffff29",
			"button-app-standard-label-text-colour": "#ffffffff",
			"button-app-standard-symbol-colour": "#ffffffff",
			"button-app-inverted-container-colour": "#ffffffff",
			"button-app-inverted-container-border-colour": "#10131529",
			"button-app-inverted-label-text-colour": "#000000ff",
			"button-app-inverted-symbol-colour": "#000000ff",
			"button-app-inverted-hovered-container-colour": "#f4f8faff",
			"button-app-inverted-hovered-label-text-colour": "#000000ff",
			"button-app-inverted-hovered-symbol-colour": "#000000ff",
			"button-app-inverted-focused-container-colour": "#ffffffff",
			"button-app-inverted-focused-label-text-colour": "#000000ff",
			"button-app-inverted-focused-symbol-colour": "#000000ff",
			"button-primary-container-colour": "#ffcb05ff",
			"button-primary-icon-colour": "#000000ff",
			"button-primary-label-text-colour": "#000000ff",
			"button-secondary-icon-colour": "#ffffffff",
			"button-secondary-label-text-colour": "#ffffffff",
			"button-secondary-container-border-colour": "#ffffffa3",
			"button-secondary-hovered-icon-colour": "#d9d9d9ff",
			"button-secondary-hovered-label-text-colour": "#d9d9d9ff",
			"button-secondary-hovered-container-colour": "#ffffff14",
			"button-secondary-hovered-container-border-colour": "#e9e9e9ff",
			"button-secondary-focused-icon-colour": "#d9d9d9ff",
			"button-secondary-focused-label-text-colour": "#d9d9d9ff",
			"button-secondary-focused-container-colour": "#ffffff14",
			"button-secondary-pressed-icon-colour": "#d9d9d9ff",
			"button-secondary-pressed-label-text-colour": "#d9d9d9ff",
			"button-secondary-pressed-container-colour": "#ffffff14",
			"button-secondary-pressed-container-border-colour": "#c4c4c4ff",
			"button-secondary-disabled-icon-colour": "#d9d9d9ff",
			"button-secondary-disabled-label-text-colour": "#d9d9d9ff",
			"button-secondary-disabled-container-border-colour": "#7b7b7bff",
			"button-primary-hovered-container-colour": "#d6aa00ff",
			"button-primary-focused-container-colour": "#d6aa00ff",
			"button-primary-pressed-container-colour": "#d6aa00ff",
			"button-primary-pressed-icon-colour": "#434343ff",
			"button-primary-pressed-label-text-colour": "#434343ff",
			"button-primary-disabled-container-colour": "#7b7b7bff",
			"button-primary-disabled-icon-colour": "#d9d9d9ff",
			"button-primary-disabled-label-text-colour": "#d9d9d9ff",
			"button-call-out-container-colour": "#ffffffff",
			"button-call-out-icon-colour": "#000000ff",
			"button-call-out-lable-text-colour": "#000000ff",
			"button-call-out-hovered-container-colour": "#d9d9d9ff",
			"button-call-out-focused-container-colour": "#d9d9d9ff",
			"button-call-out-pressed-container-colour": "#d9d9d9ff",
			"button-call-out-pressed-icon-colour": "#434343ff",
			"button-call-out-pressed-label-text-colour": "#434343ff",
			"button-call-out-disabled-container-colour": "#7b7b7bff",
			"button-call-out-disabled-icon-colour": "#d9d9d9ff",
			"button-call-out-disabled-label-text-colour": "#d9d9d9ff",
			"button-text-icon-colour": "#ffffffff",
			"button-text-label-text-colour": "#ffffffff",
			"button-text-hovered-icon-colour": "#d9d9d9ff",
			"button-text-hovered-label-text-colour": "#d9d9d9ff",
			"button-text-hovered-container-border-colour": "#ffffffff",
			"button-text-focused-icon-colour": "#d9d9d9ff",
			"button-text-focused-label-text-colour": "#d9d9d9ff",
			"button-text-pressed-icon-colour": "#d9d9d9ff",
			"button-text-pressed-label-text-colour": "#d9d9d9ff",
			"button-text-pressed-container-border-colour": "#ffdd5fff",
			"button-text-disabled-icon-colour": "#7b7b7bff",
			"button-text-disabled-label-text-colour": "#7b7b7bff",
			"button-icon-icon-primary-colour": "#ffcb05ff",
			"button-icon-icon-colour": "#ffffffff",
			"button-icon-label-text-colour": "#ffffffff",
			"button-icon-outline-container-border-colour": "#ffffff29",
			"button-icon-filled-container-colour": "#ffffff14",
			"button-icon-hovered-container-colour": "#ffffff29",
			"button-icon-focused-icon-colour": "#d9d9d9ff",
			"button-icon-focused-label-text-colour": "#d9d9d9ff",
			"button-icon-focused-container-colour": "#ffffff29",
			"button-icon-pressed-icon-colour": "#d9d9d9ff",
			"button-icon-pressed-label-text-colour": "#d9d9d9ff",
			"button-icon-pressed-container-colour": "#ffffff52",
			"button-icon-disabled-icon-colour": "#7b7b7bff",
			"button-icon-disabled-label-text-colour": "#7b7b7bff",
			"button-icon-disabled-container-colour": "#ffffff0a",
			"button-icon-outline-disabled-container-border-colour": "#ffffff14",
			"button-fab-primary-icon-colour": "#000000ff",
			"button-fab-primary-label-text-colour": "#000000ff",
			"button-fab-primary-container-colour": "#ffcb05ff",
			"button-fab-primary-hovered-container-colour": "#ffcb05ff",
			"button-fab-primary-focused-container-colour": "#d6aa00ff",
			"button-fab-primary-pressed-icon-colour": "#434343ff",
			"button-fab-primary-pressed-label-text-colour": "#434343ff",
			"button-fab-primary-pressed-container-colour": "#d6aa00ff",
			"button-fab-primary-disabled-icon-colour": "#d9d9d9ff",
			"button-fab-primary-disabled-label-text-colour": "#d9d9d9ff",
			"button-fab-primary-disabled-container-colour": "#7b7b7bff",
			"button-fab-secondary-icon-colour": "#000000ff",
			"button-fab-secondary-label-text-colour": "#000000ff",
			"button-fab-secondary-container-colour": "#ffffffff",
			"button-fab-secondary-hovered-container-colour": "#d9d9d9ff",
			"button-fab-secondary-focused-container-colour": "#d9d9d9ff",
			"button-fab-secondary-pressed-icon-colour": "#434343ff",
			"button-fab-secondary-pressed-label-text-colour": "#434343ff",
			"button-fab-secondary-pressed-container-colour": "#d9d9d9ff",
			"button-fab-secondary-disabled-icon-colour": "#d9d9d9ff",
			"button-fab-secondary-disabled-label-text-colour": "#d9d9d9ff",
			"button-fab-secondary-disabled-container-colour": "#7b7b7bff",
			"button-select-container-border-colour": "#ffffffa3",
			"button-select-label-text-colour": "#ffffffff",
			"button-select-hovered-container-colour": "#ffffff29",
			"button-select-focused-label-text-colour": "#000000ff",
			"button-select-focused-container-colour": "#ffcb05ff",
			"button-select-pressed-container-border-colour": "#d9d9d9ff",
			"button-select-active-label-text-colour": "#000000ff",
			"button-select-active-container-colour": "#ffcb05ff",
			"button-select-pressed-container-colour": "#ffffff29",
			"button-select-pressed-label-text-colour": "#d9d9d9ff",
			"button-select-disabled-container-border-colour": "#7b7b7bff",
			"button-select-disabled-label-text-colour": "#7b7b7bff",
			"button-payment-logo-colour": "#000000ff",
			"button-payment-container-colour": "#ffffffff",
			"button-payment-hovered-container-colour": "#d9d9d9ff",
			"button-payment-focused-container-colour": "#d9d9d9ff",
			"button-payment-pressed-logo-colour": "#434343ff",
			"button-payment-pressed-container-colour": "#d9d9d9ff",
			"button-payment-disabled-logo-colour": "#d9d9d9ff",
			"button-payment-disabled-container-colour": "#7b7b7bff",
			"card-base-elevated-container-colour": "#101315ff",
			"card-base-elevated-hovered-container-border-colour": "#ffffff52",
			"card-base-elevated-pressed-container-colour": "#303335ff",
			"card-base-outlined-container-colour": "#101315ff",
			"card-base-outlined-container-border-colour": "#ffffff52",
			"card-base-outlined-hovered-container-border-colour": "#ffffffa3",
			"card-base-outlined-pressed-container-colour": "#303335ff",
			"card-base-primary-container-colour": "#ffcb05ff",
			"card-base-primary-hovered-container-border-colour": "#ffffffa3",
			"card-base-primary-hovered-container-colour": "#d6aa00ff",
			"card-base-primary-pressed-container-colour": "#d6aa00ff",
			"card-base-inverted-container-colour": "#ffffffff",
			"card-base-inverted-hovered-container-colour": "#f4f8faff",
			"card-base-inverted-hovered-container-border-colour": "#101315a3",
			"card-base-inverted-pressed-container-colour": "#ebeff1ff",
			"card-base-glass-container-colour": "#101315cc",
			"card-base-glass-hovered-container-colour": "#101315b8",
			"card-base-glass-hovered-container-border-colour": "#101315a3",
			"card-base-glass-pressed-container-colour": "#101315a3",
			"card-base-glass-inverted-container-colour": "#ffffffcc",
			"card-base-glass-inverted-hovered-container-colour": "#ffffffb8",
			"card-base-glass-inverted-hovered-container-border-colour": "#ffffffa3",
			"card-base-glass-inverted-pressed-container-colour": "#ffffffa3",
			"carousel-title-text-colour": "#ffffffff",
			"checkbox-label-text-colour": "#f5f5f5ff",
			"checkbox-hovered-label-text-colour": "#ffffffff",
			"checkbox-hovered-box-container-colour": "#ffcb05ff",
			"checkbox-box-border-colour": "#ffffffff",
			"checkbox-focused-label-text-colour": "#ffffffff",
			"date-picker-week-day-label-text-colour": "#ffffffa3",
			"date-picker-date-label-text-colour": "#ffffffcc",
			"date-picker-container-colour": "#101315ff",
			"date-picker-container-border-colour": "#ffffff29",
			"date-picker-date-current-container-border-colour": "#ffcb05ff",
			"date-picker-month-selection-icon-colour": "#ffffffff",
			"date-picker-month-selection-label-text-colour": "#ffffffff",
			"date-picker-date-hovered-label-text-colour": "#ffffffff",
			"date-picker-date-hovered-container-colour": "#ffffff29",
			"date-picker-date-focused-label-text-colour": "#ffffffff",
			"date-picker-date-focused-container-colour": "#ffffff29",
			"date-picker-date-active-label-text-colour": "#000000ff",
			"date-picker-date-active-start-label-text-colour": "#000000ff",
			"date-picker-date-active-start-container-colour": "#ffcb05ff",
			"date-picker-date-active-middle-label-text-colour": "#000000ff",
			"date-picker-date-active-end-label-text-colour": "#000000ff",
			"date-picker-date-active-end-container-colour": "#ffcb05ff",
			"date-picker-date-active-middle-container-colour": "#d6aa00ff",
			"date-picker-date-disabled-label-text-colour": "#ffffffa3",
			"date-picker-date-active-container-colour": "#ffcb05ff",
			"dialog-title-text-colour": "#ffffffff",
			"dialog-text-colour": "#ffffffff",
			"dialog-container-colour": "#000000ff",
			"dialog-contianer-border-colour": "#ffffff29",
			"dismissible-hovered-icon-colour": "#ffffffb8",
			"dismissible-pressed-icon-colour": "#ffffffa3",
			"divider-on-primary-container-colour": "#ffffff52",
			"divider-on-secondary-container-colour": "#ffffff52",
			"divider-on-tertiary-container-colour": "#ffffff52",
			"divider-on-primary-inverse-container-colour": "#10131514",
			"divider-on-secondary-inverse-container-colour": "#10131514",
			"divider-on-tertiary-inverse-container-colour": "#10131514",
			"divider-on-brand-container-colour": "#10131529",
			"dot-indicator-container-colour": "#ffffff52",
			"dot-indicator-standard-hovered-container-colour": "#ffffffa3",
			"dot-indicator-standard-active-container-colour": "#ffffffb8",
			"dot-indicator-inverted-container-colour": "#10131552",
			"dot-indicator-inverted-hovered-container-colour": "#101315a3",
			"dropdown-hovered-input-container-colour": "#ffffff29",
			"dot-indicator-inverted-active-container-colour": "#101315b8",
			"dropdown-hovered-input-container-border-colour": "#d9d9d9ff",
			"dropdown-focused-label-text-colour": "#d9d9d9ff",
			"dropdown-focused-input-container-border-colour": "#ffcb05ff",
			"dropdown-completed-input-text-colour": "#ffffffff",
			"dropdown-error-input-text-colour": "#ffffffff",
			"dropdown-error-input-container-colour": "#ffffff29",
			"dropdown-error-helper-icon-colour": "#ffbec4ff",
			"dropdown-error-input-container-border-colour": "#ffbec4ff",
			"dropdown-disabled-input-label-text-colour": "#ffffff52",
			"dropdown-disabled-icon-colour": "#ffffff52",
			"dropdown-input-container-colour": "#ffffff14",
			"dropdown-disabled-input-container-border-colour": "#7b7b7bff",
			"dropdown-input-label-text-colour": "#f5f5f5ff",
			"dropdown-icon-colour": "#f5f5f5ff",
			"dropdown-helper-text-colour": "#d9d9d9ff",
			"dropdown-helper-icon-colour": "#d9d9d9ff",
			"dropdown-input-container-border-colour": "#ffffffff",
			"list-icon-label-text-colour": "#ffffffff",
			"list-icon-icon-primary-colour": "#ffcb05ff",
			"list-icon-icon-secondary-colour": "#ffffffff",
			"list-unordered-label-text-colour": "#ffffffff",
			"list-unordered-symbol-primary-colour": "#ffcb05ff",
			"list-unordered-symbol-secondary-colour": "#ffffffff",
			"list-ordered-label-text-colour": "#ffffffff",
			"list-ordered-number-primary-colour": "#ffcb05ff",
			"list-ordered-number-secondary-colour": "#ffffffff",
			"menu-container-colour": "#101315ff",
			"menu-container-border-colour": "#555555ff",
			"menu-item-label-text-colour": "#f5f5f5ff",
			"menu-item-leading-icon-colour": "#f5f5f5ff",
			"menu-item-trailing-icon-colour": "#d9d9d9ff",
			"menu-item-container-colour": "#101315ff",
			"menu-item-hovered-label-text-colour": "#ffffffff",
			"menu-item-hovered-leading-icon-colour": "#ffffffff",
			"menu-item-hovered-container-colour": "#303335ff",
			"menu-item-focused-container-colour": "#303335ff",
			"menu-item-active-label-text-colour": "#ffffffff",
			"menu-item-active-leading-icon-colour": "#ffffffff",
			"menu-item-active-trailing-icon-colour": "#ffffffff",
			"menu-item-active-container-colour": "#303335ff",
			"menu-search-label-text-colour": "#d9d9d9ff",
			"menu-search-icon-colour": "#ffffffa3",
			"menu-search-container-colour": "#101315ff",
			"menu-search-container-border-colour": "#ffffff52",
			"menu-search-focused-container-colour": "#303335ff",
			"menu-search-hovered-container-colour": "#303335ff",
			"menu-search-completed-label-text-colour": "#ffffffff",
			"menu-search-completed-leading-icon-colour": "#d9d9d9ff",
			"menu-search-completed-trailing-icon-colour": "#ffffffa3",
			"menu-search-completed-container-colour": "#303335ff",
			"mobile-number-input-input-container-colour": "#ffffff14",
			"mobile-number-input-input-label-text-colour": "#f5f5f5ff",
			"mobile-number-input-input-text-colour": "#d9d9d9ff",
			"mobile-number-input-input-icon-colour": "#f5f5f5ff",
			"mobile-number-input-input-dropdown-icon-colour": "#ffffff52",
			"mobile-number-input-helper-text-colour": "#d9d9d9ff",
			"mobile-number-input-helper-icon-colour": "#d9d9d9ff",
			"mobile-number-input-input-container-border-colour": "#ffffffff",
			"mobile-number-input-input-country-border colour": "#ffffff52",
			"mobile-number-input-hovered-input-text-colour": "#f5f5f5ff",
			"mobile-number-input-hovered-input-container-colour": "#ffffff29",
			"mobile-number-input-hovered-input-container-border-colour": "#d9d9d9ff",
			"mobile-number-input-focused-input-container-border-colour": "#ffcb05ff",
			"mobile-number-input-completed-input-text-colour": "#ffffffff",
			"mobile-number-input-error-input-text-colour": "#ffffffff",
			"mobile-number-input-error-input-container-colour": "#ffffff29",
			"mobile-number-input-error-helper-icon-colour": "#ffbec4ff",
			"mobile-number-input-error-input-container-border-colour": "#ffbec4ff",
			"mobile-number-input-disabled-input-label-text-colour": "#ffffff52",
			"mobile-number-input-disabled-input-text-colour": "#ffffff52",
			"mobile-number-input-disabled-input-icon-colour": "#ffffff52",
			"mobile-number-input-disabled-input-container-border-colour": "#7b7b7bff",
			"mobile-number-input-disabled-input-dropdown-icon-colour": "#ffffff29",
			"navigation-bar-transparent-container-background-colour": "#101315cc",
			"navigation-bar-filled-container-background-colour": "#101315ff",
			"navigation-bar-brand-container-background-colour": "#ffcb05ff",
			"navigation-bar-container-border-colour": "#ffffff14",
			"navigation-bar-item-icon-colour": "#ffffffa3",
			"navigation-bar-item-label-text-colour": "#ffffffa3",
			"navigation-bar-item-hovered-label-text-colour": "#ffffffcc",
			"navigation-bar-item-hovered-icon-colour": "#ffffffcc",
			"navigation-bar-item-hovered-container-background": "#ffffff14",
			"navigation-bar-item-focused-label-text-colour": "#ffffffcc",
			"navigation-bar-item-focused-icon-colour": "#ffffffcc",
			"navigation-bar-item-focused-container-background": "#ffffff14",
			"navigation-bar-item-active-label-text-colour": "#ffffffff",
			"navigation-bar-item-active-icon-colour": "#ffcb05ff",
			"notification-toast-container-colour": "#101315b8",
			"notification-toast-container-border-colour": "#ffffff29",
			"notification-toast-title-text-colour": "#ffffffff",
			"notification-toast-body-text-colour": "#f5f5f5ff",
			"notification-toast-button-border-colour": "#ffffff52",
			"notification-toast-button-label-text-colour": "#ffffffff",
			"notification-toast-hovered-button-container-colour": "#ffffff0a",
			"notification-toast-pressed-button-label-text-colour": "#d9d9d9ff",
			"notification-alert-container-border-colour": "#ffffff29",
			"notification-alert-icon-colour": "#ffffffff",
			"notification-alert-text-colour": "#ffffffff",
			"notification-alert-brand-container-colour": "#5c4900ff",
			"notification-alert-brand-inner-container-border-colour": "#ffcb05ff",
			"notification-alert-informative-container-colour": "#002f48ff",
			"notification-alert-informative-inner-container-border-colour": "#c7ebffff",
			"notification-alert-success-container-colour": "#085f00ff",
			"notification-alert-success-inner-container-border-colour": "#d5e9bfff",
			"notification-alert-warning-container-colour": "#4d1a00ff",
			"notification-alert-warning-inner-container-border-colour": "#ffb18aff",
			"notification-alert-error-container-colour": "#610009ff",
			"notification-alert-error-inner-container-border-colour": "#ffbec4ff",
			"notification-inline-container-border-colour": "#ffffff29",
			"notification-inline-icon-colour": "#ffffffff",
			"notification-inline-text-colour": "#ffffffff",
			"notification-inline-brand-container-colour": "#5c4900ff",
			"notification-inline-brand-inner-container-border-colour": "#ffcb05ff",
			"notification-inline-informative-container-colour": "#002f48ff",
			"notification-inline-informative-inner-container-border-colour": "#c7ebffff",
			"notification-inline-success-container-colour": "#085f00ff",
			"notification-inline-success-inner-container-border-colour": "#d5e9bfff",
			"notification-inline-warning-container-colour": "#4d1a00ff",
			"notification-inline-warning-inner-container-border-colour": "#ffb18aff",
			"notification-inline-error-container-colour": "#610009ff",
			"notification-inline-error-inner-container-border-colour": "#ffbec4ff",
			"number-input-input-container-colour": "#ffffff14",
			"number-input-input-label-text-colour": "#f5f5f5ff",
			"number-input-input-text-colour": "#d9d9d9ff",
			"number-input-input-plus-icon-colour": "#f5f5f5ff",
			"number-input-icon-divider-border-colour": "#ffffff29",
			"number-input-input-minus-icon-colour": "#ffffffa3",
			"number-input-helper-text-colour": "#d9d9d9ff",
			"number-input-helper-icon-colour": "#d9d9d9ff",
			"number-input-input-container-border-colour": "#ffffffff",
			"number-input-hovered-input-container-colour": "#ffffff29",
			"number-input-hovered-input-container-border-colour": "#d9d9d9ff",
			"number-input-focused-input-container-border-colour": "#ffcb05ff",
			"number-input-completed-input-text-colour": "#ffffffff",
			"number-input-completed-input-minus-icon-colour": "#f5f5f5ff",
			"number-input-error-input-text-colour": "#ffffffff",
			"number-input-disabled-input-label-text-colour": "#ffffff52",
			"number-input-disabled-input-text-colour": "#ffffff52",
			"number-input-disabled-input-container-border-colour": "#7b7b7bff",
			"number-input-disabled-input-plus-icon-colour": "#ffffff52",
			"number-input-disabled-input-minus-icon-colour": "#ffffff52",
			"number-input-error-input-container-colour": "#ffffff29",
			"number-input-error-helper-icon-colour": "#ffbec4ff",
			"number-input-error-input-container-border-colour": "#ffbec4ff",
			"pagination-item-label-text-colour": "#ffffffcc",
			"pagination-item-hovered-label-text-colour": "#ffffffff",
			"pagination-item-hovered-container-colour": "#ffffff29",
			"pagination-item-focused-label-text-colour": "#ffffffff",
			"pagination-item-focused-container-colour": "#ffffff29",
			"pagination-item-active-label-text-colour": "#000000ff",
			"pagination-item-active-container-colour": "#ffffffcc",
			"pagination-arrow-icon-colour": "#ffffffcc",
			"pagination-arrow-hovered-container-colour": "#ffffff29",
			"pagination-arrow-focused-container-colour": "#ffffff29",
			"pagination-arrow-disabled-icon-colour": "#ffffff52",
			"pin-input-helper-text-colour": "#d9d9d9ff",
			"pin-input-helper-icon-colour": "#d9d9d9ff",
			"pin-input-error-helper-icon-colour": "#ffbec4ff",
			"pin-input-field-container-colour": "#ffffff14",
			"pin-input-field-container-border-colour": "#ffffffff",
			"pin-input-field-hovered-container-colour": "#ffffff29",
			"pin-input-field-hovered-container-border-colour": "#d9d9d9ff",
			"pin-input-field-focused-input-text-colour": "#d9d9d9ff",
			"pin-input-field-focused-container-border-colour": "#ffcb05ff",
			"pin-input-field-completed-input-text-colour": "#ffffffff",
			"pin-input-field-error-input-text-colour": "#ffffffff",
			"pin-input-field-error-container-colour": "#ffffff29",
			"pin-input-field-error-container-border-colour": "#ffbec4ff",
			"pin-input-field-disabled-container-border-colour": "#7b7b7bff",
			"progress-indicator-linear-track-colour": "#ffffff52",
			"progress-indicator-linear-indicator-colour": "#ffcb05ff",
			"progress-indicator-circular-indicator-colour": "#ffcb05ff",
			"progress-indicator-circular-track-colour": "#ffffff29",
			"radio-button-label-text-colour": "#f5f5f5ff",
			"radio-button-radio-container-border-colour": "#ffffffff",
			"radio-button-hovered-label-text-colour": "#ffffffff",
			"radio-button-focused-label-text-colour": "#ffffffff",
			"radio-button-focused-radio-container-border-colour": "#ffcb05ff",
			"radio-button-completed-radio-dot-colour": "#ffcb05ff",
			"radio-button-completed-radio-container-border-colour": "#ffcb05ff",
			"radio-button-error-radio-border-colour": "#ffbec4ff",
			"radio-button-disabled-label-text-colour": "#d9d9d9ff",
			"radio-button-disabled-radio-border-colour": "#7b7b7bff",
			"rating-star-icon-colour": "#ffffffa3",
			"rating-star-hovered-icon-colour": "#ffffff52",
			"rating-star-active-icon-colour": "#ffcb05ff",
			"rating-star-focused-icon-colour": "#ffcb05ff",
			"rating-experience-label-text-colour": "#ffffffa3",
			"rating-experience-hovered-label-text-colour": "#ffffff52",
			"rating-experience-active-label-text-colour": "#ffffffff",
			"rating-experience-focused-label-text-colour": "#ffffffff",
			"scrollbar-track-colour": "#ffffff52",
			"scrollbar-indicator-colour": "#ffffffa3",
			"scrollbar-hovered-indicator-colour": "#ffcb05ff",
			"scrollbar-focused-indicator-border-colour": "#ffcb05ff",
			"search-bar-label-text-colour": "#d9d9d9ff",
			"search-bar-leading-icon-colour": "#ffffffa3",
			"search-bar-container-colour": "#101315ff",
			"search-container-colour": "#101315ff",
			"search-bar-container-border-colour": "#ffffff29",
			"search-bar-focused-container-colour": "#303335ff",
			"search-bar-active-container-border-colour": "#ffffff29",
			"search-bar-active-label-text-colour": "#ffffffff",
			"search-bar-completed-label-text-colour": "#ffffffff",
			"search-bar-completed-leading-icon-colour": "#d9d9d9ff",
			"search-bar-completed-trailing-icon-colour": "#ffffffa3",
			"search-bar-completed-container-colour": "#303335ff",
			"search-suggestion-label-text-colour": "#ffffffff",
			"search-suggestion-description-text-colour": "#ffffffcc",
			"search-suggestion-icon-colour": "#ffffffff",
			"search-no-results-label-text-colour": "#ffffffff",
			"search-no-results-description-text-colour": "#ffffffcc",
			"search-no-results-icon-colour": "#ffffffff",
			"search-suggestion-container-colour": "#000000ff",
			"search-suggestion-hovered-container-colour": "#303335ff",
			"search-suggestion-focused-container-colour": "#303335ff",
			"sheet-bottom-elevated-container-colour": "#101315ff",
			"sheet-bottom-drag-line-colour": "#ffffff29",
			"sheet-bottom-glass-container-colour": "#101315cc",
			"sheet-side-elevated-container-colour": "#101315ff",
			"sheet-side-glass-container-colour": "#101315cc",
			"sheet-side-content-colour": "#ffffffff",
			"switch-label-text-colour": "#f5f5f5ff",
			"switch-toggle-container-colour": "#ffffff52",
			"switch-toggle-circle-colour": "#000000ff",
			"switch-hovered-label-text-colour": "#ffffffff",
			"switch-hovered-toggle-container-colour": "#ffffffa3",
			"switch-focused-label-text-colour": "#ffffffff",
			"switch-active-label-text-colour": "#ffffffff",
			"switch-active-toggle-container-colour": "#ffcb05ff",
			"switch-disabled-label-text-colour": "#d9d9d9ff",
			"switch-disabled-toggle-container-colour": "#ffffff29",
			"tabs-label-text-colour": "#ffffffcc",
			"tabs-hovered-label-text-colour": "#ffffffa3",
			"tabs-active-label-text-colour": "#ffffffff",
			"tabs-active-label-underline-colour": "#ffcb05ff",
			"tag-label-text-colour": "#ffffffff",
			"tag-icon-colour": "#ffffffff",
			"tag-outlined-container-border-colour": "#ffffffff",
			"tag-outlined-hovered-container-colour": "#ffffff0a",
			"tag-outlined-pressed-container-colour": "#ffffff0a",
			"tag-outlined-pressed-container-border-colour": "#d9d9d9ff",
			"tag-outlined-pressed-label-text-colour": "#d9d9d9ff",
			"tag-outlined-pressed-icon-colour": "#d9d9d9ff",
			"tag-outlined-focused-container-colour": "#ffffff0a",
			"tag-filled-container-colour": "#ffffff29",
			"tag-filled-pressed-container-colour": "#ffffff52",
			"tag-filled-pressed-label-text-colour": "#d9d9d9ff",
			"tag-filled-pressed-icon-colour": "#d9d9d9ff",
			"tag-filled-hovered-container-colour": "#ffffff52",
			"text-area-input-container-colour": "#ffffff14",
			"text-area-input-label-text-colour": "#f5f5f5ff",
			"text-area-input-text-colour": "#d9d9d9ff",
			"text-area-input-icon-colour": "#f5f5f5ff",
			"text-area-input-container-border-colour": "#ffffffff",
			"text-area-character-count-label-text-colour": "#f5f5f5ff",
			"text-area-character-count-container-colour": "#ffffff29",
			"text-area-helper-text-colour": "#d9d9d9ff",
			"text-area-helper-icon-colour": "#d9d9d9ff",
			"text-area-hovered-input-container-colour": "#ffffff29",
			"text-area-hovered-input-container-border-colour": "#d9d9d9ff",
			"text-area-focused-input-container-border-colour": "#ffcb05ff",
			"text-area-completed-input-text-colour": "#ffffffff",
			"text-area-disabled-input-label-text-colour": "#ffffff52",
			"text-area-disabled-character-count-container-colour": "#ffffff29",
			"text-area-disabled-character-count-label-text-colour": "#ffffff29",
			"text-area-disabled-input-text-colour": "#ffffff52",
			"text-area-disabled-input-icon-colour": "#ffffff52",
			"text-area-disabled-input-container-border-colour": "#7b7b7bff",
			"text-area-error-input-text-colour": "#ffffffff",
			"text-area-error-input-container-colour": "#ffffff29",
			"text-area-error-helper-icon-colour": "#ffbec4ff",
			"text-area-error-input-container-border-colour": "#ffbec4ff",
			"text-embed-secondary-colour": "#ffffffff",
			"text-embed-tertiary-colour": "#d9d9d9ff",
			"text-embed-secondary-colour-inverse": "#000000ff",
			"text-embed-tertiary-colour-inverse": "#555555ff",
			"text-embed-on-image-colour-light": "#ffffffff",
			"text-embed-on-image-colour-dark": "#000000ff",
			"text-embed-on-primary": "#000000ff",
			"text-embed-on-secondary": "#000000ff",
			"text-input-input-container-colour": "#ffffff14",
			"text-input-input-label-text-colour": "#f5f5f5ff",
			"text-input-input-icon-colour": "#f5f5f5ff",
			"text-input-helper-text-colour": "#d9d9d9ff",
			"text-input-helper-icon-colour": "#d9d9d9ff",
			"text-input-input-container-border-colour": "#ffffffff",
			"text-input-hovered-input-container-colour": "#ffffff29",
			"text-input-hovered-input-container-border-colour": "#d9d9d9ff",
			"text-link-label-text-colour": "#ffffffff",
			"text-link-container-border-colour": "#ffffffff",
			"text-link-hovered-label-text-colour": "#f5f5f5ff",
			"text-link-hovered-container-border-colour": "#ffcb05ff",
			"text-link-pressed-label-text-colour": "#d9d9d9ff",
			"text-link-pressed-container-border-colour": "#d6aa00ff",
			"text-link-disabled-label-text-colour": "#7b7b7bff",
			"text-link-disabled-container-border-colour": "#7b7b7bff",
			"tooltip-container-colour": "#f4f8faff",
			"tooltip-caret-tip-colour": "#f4f8faff",
			"tooltip-text-colour": "#000000ff",
			"tooltip-dismissible-icon-colour": "#000000ff",
			"tooltip-trigger-icon-colour": "#ffffffff",
			"tooltip-trigger-text-colour": "#ffffffff",
			"tooltip-trigger-text-underline-colour": "#c7ebffff",
			"tooltip-trigger-hovered-icon-colour": "#d9d9d9ff",
			"tooltip-trigger-hovered-text-colour": "#d9d9d9ff",
			"icon-colour": "#ffffffff",
			"*Cursor-initial-colour": "#ffffffff",
			"*Cursor-brand-colour": "#ffcb05ff",
			"*Documentation-code-snippet-container-colour": "#000000ff",
			"*Documentation-code-snippet-border-colour": "#d9d9d9ff",
			"*Documentation-code-snippet-text-colour": "#ffffffff",
			"*Native-bg-primary": "#1a1a1aff",
			"*Demo-fg-colour-secondary": "#ffffffff",
			"*Demo-fg-colour-tertiary": "#f5f5f5ff",
			"*Demo-bg-primary": "#303335ff",
			"*Demo-border": "#ffffff29",
			"*Demo-bg-overlay-level2": "#101315a3",
			"*Demo-bg-overlay-level3": "#101315cc",
			"*Demo-bg-indicator": "#ffffff29",
			"*Demo-fg-indicator": "#d9d9d9ff",
			"text-input-focused-input-text-colour": "#d9d9d9ff",
			"text-input-focused-input-container-border-colour": "#ffcb05ff",
			"text-input-completed-input-text-colour": "#ffffffff",
			"text-input-error-input-text-colour": "#ffffffff",
			"text-input-error-input-container-colour": "#ffffff29",
			"text-input-error-input-container-border-colour": "#ffbec4ff",
			"text-input-error-helper-icon-colour": "#ffbec4ff",
			"text-input-disabled-label-text-colour": "#ffffff52",
			"text-input-disabled-input-icon-colour": "#ffffff52",
			"text-input-disabled-container-border-colour": "#7b7b7bff",
			"checkbox-completed-icon-colour": "#000000ff",
			"checkbox-completed-box-container-colour": "#ffcb05ff",
			"checkbox-error-box-border-colour": "#ffbec4ff",
			"checkbox-disabled-label-text-colour": "#d9d9d9ff",
			"checkbox-disabled-box-border-colour": "#7b7b7bff",
			"*Graveyard-drawer-container-colour": "#ffcb05ff",
			"*Graveyard-drawer-icon-colour": "#000000ff",
			"*Graveyard-drawer-hovered-container-colour": "#d6aa00ff",
			"*Graveyard-drawer-focused-container-colour": "#d6aa00ff",
			"*Graveyard-drawer-pressed-icon-colour": "#434343ff",
			"*Graveyard-drawer-pressed-container-colour": "#d6aa00ff",
			"*Graveyard-drawer-disabled-icon-colour": "#d9d9d9ff",
			"*Graveyard-drawer-disabled-container-colour": "#7b7b7bff",
			"*Graveyard-toggletip-plain-container-colour": "#ffffffcc",
			"*Graveyard-toggletip-plain-caret-tip-colour": "#ffffffcc",
			"*Graveyard-toggletip-plain-trigger-icon-colour": "#ffffffff",
			"*Graveyard-toggletip-plain-text-colour": "#000000ff",
			"*Graveyard-toggletip-plain-close-icon-colour": "#000000ff",
			"*Graveyard-toggletip-plain-hovered-trigger-icon-colour": "#d9d9d9ff",
			"*Graveyard-toggletip-plain-hovered-close-icon-colour": "#434343ff",
			"*Graveyard-toggletip-plain-focused-trigger-icon-border-colour": "#ffcb05ff",
			"*Graveyard-toggletip-plain-focused-close-icon-border-colour": "#ffcb05ff",
			"accessible-focus-border-container-outer-shadow-colour": "#101315ff",
			"navigation-bar-item-brand-icon-colour": "#000000ff",
			"navigation-bar-item-brand-label-text-colour": "#000000ff",
			"navigation-bar-item-brand-hovered-container-background": "#10131514",
			"navigation-bar-item-brand-focused-container-background": "#1013150a",
			"navigation-bar-item-brand-active-label-text-colour": "#000000ff",
			"navigation-bar-item-brand-active-icon-colour": "#000000ff",
			"colour-primary": "#ffcb05ff",
			"colour-on-primary": "#000000ff",
			"colour-primary-inverse": "#ffcb05ff",
			"colour-on-primary-inverse": "#000000ff",
			"colour-primary-interaction": "#ffdd5fff",
			"colour-primary-interaction-inverse": "#d6aa00ff",
			"colour-secondary": "#000000ff",
			"colour-on-secondary": "#ffffffff",
			"colour-secondary-inverse": "#ffffffff",
			"colour-on-secondary-inverse": "#000000ff",
			"colour-secondary-interaction": "#434343ff",
			"colour-secondary-interaction-inverse": "#d9d9d9ff",
			"colour-tertiary": "#434343ff",
			"colour-on-tertiary": "#f5f5f5ff",
			"colour-tertiary-inverse": "#f5f5f5ff",
			"colour-on-tertiary-inverse": "#434343ff",
			"colour-tertiary-interaction": "#555555ff",
			"colour-tertiary-interaction-inverse": "#d9d9d9ff",
			"colour-disabled": "#d9d9d9ff",
			"colour-on-disabled": "#7b7b7bff",
			"colour-disabled-inverse": "#7b7b7bff",
			"colour-on-disabled-inverse": "#d9d9d9ff",
			"colour-error": "#b20010ff",
			"colour-on-error": "#ffbec4ff",
			"colour-error-inverse": "#ffbec4ff",
			"colour-on-error-inverse": "#b20010ff",
			"colour-success": "#398004ff",
			"colour-on-success": "#ffffffff",
			"colour-success-inverse": "#d5e9bfff",
			"colour-on-success-inverse": "#101315ff",
			"colour-warning": "#ff732eff",
			"colour-on-warning-inverse": "#101315ff",
			"colour-on-warning": "#101315ff",
			"colour-warning-inverse": "#ffb18aff",
			"colour-informative": "#004a71ff",
			"colour-on-informative": "#c7ebffff",
			"colour-informative-inverse": "#c7ebffff",
			"colour-on-informative-inverse": "#004a71ff",
			"colour-surface": "#f4f8faff",
			"colour-on-surface": "#000000ff",
			"colour-surface-inverse": "#303335ff",
			"colour-on-surface-inverse": "#ffffffff",
			"colour-surface-full": "#ffffffff",
			"colour-on-surface-full": "#000000ff",
			"colour-surface-full-inverse": "#101315ff",
			"colour-on-surface-full-inverse": "#ffffffff",
			"colour-surface-dim": "#ebeff1ff",
			"colour-on-surface-dim": "#000000ff",
			"colour-surface-dim-inverse": "#4e5153ff",
			"colour-on-surface-dim-inverse": "#ffffffff",
			"colour-surface-subtle-primary": "#fffae6ff",
			"colour-surface-subtle-primary-inverse": "#5c4900ff",
			"colour-surface-subtle-success": "#eef6e5ff",
			"colour-surface-subtle-success-inverse": "#085f00ff",
			"colour-surface-subtle-error": "#ffe8eaff",
			"colour-surface-subtle-error-inverse": "#610009ff",
			"colour-surface-subtle-warning": "#ffeee5ff",
			"colour-surface-subtle-warning-inverse": "#4d1a00ff",
			"colour-surface-subtle-informative": "#ebf8ffff",
			"colour-surface-subtle-informative-inverse": "#002f48ff",
			"colour-opacity-highest": "#ffffffcc",
			"colour-opacity-higher": "#ffffffb8",
			"colour-opacity-high": "#ffffffa3",
			"colour-opacity-medium": "#ffffff52",
			"colour-opacity-low": "#ffffff29",
			"colour-opacity-lower": "#ffffff14",
			"colour-opacity-lowest": "#ffffff0a",
			"colour-opacity-highest-inverse": "#101315cc",
			"colour-opacity-higher-inverse": "#101315b8",
			"colour-opacity-high-inverse": "#101315a3",
			"colour-opacity-medium-inverse": "#10131552",
			"colour-opacity-low-inverse": "#10131529",
			"colour-opacity-lower-inverse": "#10131514",
			"colour-opacity-lowest-inverse": "#1013150a",
			"border-colour-primary": "#ffcb05ff",
			"border-colour-primary-inverse": "#ffcb05ff",
			"border-colour-primary-interaction": "#ffdd5fff",
			"border-colour-primary-interaction-inverse": "#d6aa00ff",
			"border-colour-secondary": "#101315ff",
			"border-colour-secondary-inverse": "#ffffffff",
			"border-colour-secondary-interaction": "#434343ff",
			"border-colour-secondary-interaction-inverse": "#d9d9d9ff",
			"border-colour-opacity-inverse-64": "#101315a3",
			"border-colour-opacity-64": "#ffffffa3",
			"border-colour-opacity-inverse-32": "#10131552",
			"border-colour-opacity-32": "#ffffff52",
			"border-colour-opacity-inverse-16": "#10131529",
			"border-colour-opacity-16": "#ffffff29",
			"border-colour-opacity-inverse-8": "#10131514",
			"border-colour-opacity-8": "#ffffff14",
			"border-colour-tertiary": "#555555ff",
			"border-colour-tertiary-inverse": "#e9e9e9ff",
			"border-colour-disabled": "#c4c4c4ff",
			"border-colour-disabled-inverse": "#7b7b7bff",
			"border-colour-error": "#b20010ff",
			"border-colour-error-inverse": "#ffbec4ff",
			"border-colour-success": "#398004ff",
			"border-colour-success-inverse": "#d5e9bfff",
			"border-colour-warning": "#ff732eff",
			"border-colour-warning-inverse": "#ffb18aff",
			"border-colour-informative": "#004a71ff",
			"border-colour-informative-inverse": "#c7ebffff",
			"border-colour-accessible": "#ffcb05ff",
			"border-colour-accessible-inverse": "#ffcb05ff",
			"shadow-accessible-light-colour": "#ffffffff",
			"shadow-accessible-dark-colour": "#000000ff",
			"shadow-level-1-colour": "#00000029",
			"shadow-level-2-colour": "#00000029",
			"shadow-level-3-colour": "#00000029",
			"shadow-inverted-colour": "#00000014",
			"shadow-left-colour": "#00000014",
			"shadow-right-colour": "#00000014",
			"shadow-top-colour": "#00000014"
		},
		floats: {
			"accordion-button-scale-m-l-container-padding-left-right": "1.5rem",
			"accordion-button-container-height": "80px",
			"accordion-button-container-border-bottom": "1px",
			"accordion-button-hovered-container-border": "0px",
			"accordion-button-hovered-container-corner-radius-all-round": "8px",
			"accordion-button-focused-container-corner-radius-all-round": "8px",
			"accordion-button-pressed-container-border": "0px",
			"accordion-button-pressed-container-corner-radius-all-round": "8px",
			"accordion-container-border-bottom-left-right": "1px",
			"accordion-opened-container-corner-radius-all-round": "8px",
			"accordion-closed-container-corner-radius": "0px",
			"accordion-button-active-container-border": "0px",
			"accordion-button-active-container-corner-radius-top": "8px",
			"accordion-content-margin": "24px",
			"accordion-scale-m-l-container-padding-scale": "1.5rem",
			"aspect-ratio-container-corner-radius-all-round": "24px",
			"badge-container-padding-small": "8px",
			"badge-scale-m-l-container-padding": "0.5rem",
			"badge-scale-m-l-container-height": "1.5rem",
			"badge-scale-m-l-container-corner-radius-all-round": "0.25rem",
			"badge-scale-large-container-corner-radius-all-round": "8px",
			"badge-container-rounded-corner-radius": "56px",
			"button-action-filled-container-border": "1px",
			"button-action-scale-m-l-small-icon": "1.5rem",
			"button-action-scale-m-l-large-icon": "2rem",
			"button-action-container-corner-radius-all-round": "100px",
			"button-action-scale-m-l-small-container-padding": "1rem",
			"button-action-scale-m-l-large-container-padding": "1.5rem",
			"button-app-standard-container-corner-radius": "8px",
			"button-app-scale-m-l-container-height": "3.5rem",
			"button-app-scale-m-l-container-width": "190px",
			"button-app-scale-large-container-width": "200px",
			"button-app-standard-container-border": "1px",
			"button-app-inverted-container-border": "1px",
			"button-primary-container-padding-left-right": "24px",
			"button-primary-container-corner-radius-all-round": "100px",
			"button-primary-scale-m-l-icon-margin-right": "0.5rem",
			"button-secondary-container-border": "1px",
			"button-secondary-scale-m-l-icon-margin-right": "0.5rem",
			"button-secondary-container-padding-left-right": "24px",
			"button-secondary-corner-radius-all-round": "100px",
			"button-secondary-scale-m-l-container-height": "3.5rem",
			"button-secondary-scale-m-l-icon": "1.5rem",
			"button-primary-scale-m-l-container-height": "3.5rem",
			"button-primary-scale-m-l-icon": "1.5rem",
			"button-call-out-container-padding-left-right": "24px",
			"button-call-out-container-padding-top-bottom": "12px",
			"button-call-out-container-corner-radius-all-round": "100px",
			"button-call-out-scale-m-l-icon-margin-right": "0.5rem",
			"button-call-out-scale-m-l-container-height": "3.5rem",
			"button-text-hovered-container-border-bottom": "2px",
			"button-text-pressed-container-border-bottom": "2px",
			"button-combo-scale-m-l-button-margin": "0.75rem",
			"button-icon-scale-m-l-icon-margin": "0.75rem",
			"button-icon-scale-m-l-icon-margin 2": "1rem",
			"button-icon-outline-container-border": "2px",
			"button-icon-scale-m-l-container-corner-radius": "1rem",
			"button-icon-scale-m-l-container-padding-left-right": "0.75rem",
			"button-icon-scale-m-l-container-padding-top-bottom": "0.75rem",
			"button-fab-primary-scale-m-l-container-padding": "0.75rem",
			"button-fab-primary-scale-m-l-container-corner-radius": "1rem",
			"button-fab-primary-scale-m-l-icon-margin-right": "0.75rem",
			"button-fab-primary-scale-m-l-icon-size": "2rem",
			"button-fab-secondary-scale-m-l-container-padding": "0.75rem",
			"button-fab-secondary-scale-m-l-container-corner-radius": "1rem",
			"button-fab-secondary-scale-m-l-container-margin": "0.5rem",
			"button-fab-secondary-scale-m-l-icon-margin-right": "0.75rem",
			"button-fab-secondary-scale-m-l-icon-size": "2rem",
			"button-select-active-container-border": "0px",
			"button-select-container-border": "1px",
			"button-select-hovered-container-border": "0px",
			"button-select-pressed-container-border": "0px",
			"button-select-container-padding-left-right": "24px",
			"button-select-container-padding-top-bottom": "12px",
			"button-select-container-corner-radius": "8px",
			"button-select-scale-m-l-container-height": "3rem",
			"button-group-scale-m-l-button-margin": "0.75rem",
			"button-payment-container-padding-left-right": "0px",
			"button-payment-container-padding-top-bottom": "12px",
			"button-payment-container-corner-radius-all-round": "100px",
			"button-payment-scale-m-l-container-height": "3.5rem",
			"button-payment-scale-m-l-container-width": "168px",
			"button-call-out-scale-m-l-icon": "1.5rem",
			"card-base-elevated-hovered-container-border": "1px",
			"card-base-outlined-container-border": "1px",
			"card-base-primary-hovered-container-border": "1px",
			"card-base-inverted-hovered-container-border": "1px",
			"card-base-glass-hovered-container-border": "1px",
			"card-base-glass-inverted-hovered-container-border": "1px",
			"card-base-container-corner-radius-all-round": "16px",
			"carousel-scale-m-l-card-margin": "1rem",
			"carousel-scale-m-l-container-padding-top-bottom": "2.5rem",
			"carousel-scale-m-l-content-margin": "1.5rem",
			"checkbox-hovered-box-container-border": "0px",
			"checkbox-box-container-border": "2px",
			"checkbox-scale-m-l-label-margin-left": "0.75rem",
			"checkbox-box-container-corner-radius-all-round": "4px",
			"date-picker-date-container-corner-radius": "100px",
			"date-picker-floating-container-corner-radius": "8px",
			"date-picker-fixed-container-corner-radius-bottom-left-right": "8px",
			"date-picker-container-padding": "24px",
			"date-picker-scale-m-l-row-margin": "0.25rem",
			"date-picker-date-scale-m-l-container-size": "3rem",
			"date-picker-date-scale-large-container-size": "52px",
			"date-picker-week-day-scale-m-l-container-size": "3rem",
			"date-picker-date-current-container-border": "1px",
			"date-picker-container-min-width": "328px",
			"date-picker-fixed-container-border-bottom-left-right": "1px",
			"date-picker-floating-container-border": "1px",
			"date-picker-flat-container-border": "0px",
			"date-picker-month-selection-container-padding-bottom": "16px",
			"date-picker-date-active-start-container-corner-radius-top-left": "24px",
			"date-picker-date-active-start-container-corner-radius-bottom-left": "24px",
			"date-picker-date-active-end-container-corner-radius-top-right": "24px",
			"date-picker-date-active-end-container-corner-radius-bottom-right": "24px",
			"date-picker-date-active-middle-container-corner-radius": "0px",
			"dialog-container-corner-radius-all-round": "16px",
			"dialog-container-padding": "24px",
			"dialog-content-margin": "24px",
			"dialog-container-border": "1px",
			"divider-container-border": "1px",
			"dot-indicator-container-padding": "24px",
			"dropdown-completed-input-label-margin-bottom": "8px",
			"dropdown-error-input-label-margin-bottom": "8px",
			"dot-indicator-dot-margin": "12px",
			"dropdown-input-container-padding-left-right": "16px",
			"dropdown-input-corner-radius-top": "8px",
			"dropdown-input-container-border-bottom": "2px",
			"dropdown-input-text-margin-right": "16px",
			"dropdown-helper-text-margin-left": "8px",
			"list-icon-icon-margin-right": "8px",
			"list-icon-padding-bottom": "12px",
			"list-unordered-symbol-margin-right": "16px",
			"list-unordered-indent-padding-left": "32px",
			"list-unordered-padding-bottom": "12px",
			"list-ordered-number-margin-right": "8px",
			"list-ordered-indent-padding-left": "32px",
			"list-ordered-padding-bottom": "12px",
			"menu-attached-container-corner-radius-bottom": "16px",
			"menu-attached-container-padding-bottom": "8px",
			"menu-floating-container-padding-top-bottom": "8px",
			"menu-floating-container-corner-radius-all-round": "16px",
			"menu-container-border": "1px",
			"menu-item-container-padding": "16px",
			"menu-item-content-margin": "16px",
			"menu-search-container-padding": "16px",
			"menu-search-content-margin": "16px",
			"menu-search-container-border-bottom": "1px",
			"menu-search-scale-m-l-container-height": "3.25rem",
			"menu-search-scale-m-l-icon-size": "1.5rem",
			"mobile-number-input-input-container-padding-top-left-right": "16px",
			"mobile-number-input-input-container-corner-radius-top": "8px",
			"mobile-number-input-input-container-border-bottom": "2px",
			"mobile-number-input-input-content-margin-right": "16px",
			"mobile-number-input-helper-text-margin-left": "8px",
			"mobile-number-input-input-country-border": "1px",
			"mobile-number-input-input-country-margin-right": "4px",
			"mobile-number-input-disabled-input-country-opacity": "56px",
			"navigation-bar-container-border-top": "1px",
			"navigation-bar-scale-small-container-height": "88px",
			"navigation-bar-scale-medium-container-height": "104px",
			"navigation-bar-item-scale-m-l-icon-container-padding-top": "1.5rem",
			"navigation-bar-item-scale-m-l-container-height": "6.5rem",
			"navigation-bar-item-scale-m-l-content-margin": "0.75rem",
			"navigation-bar-item-container-min-padding-left-right": "8px",
			"notification-toast-container-border-weight": "1px",
			"notification-toast-container-padding-all-round": "8px",
			"notification-toast-text-wrapper-padding-all-round": "8px",
			"notification-toast-container-corner-radius-all-round": "8px",
			"notification-toast-scale-m-l-title-margin-bottom": "0.5rem",
			"notification-toast-button-border-weight": "1px",
			"notification-toast-small-button-padding-left-right": "12px",
			"notification-toast-large-button-padding-left-right": "16px",
			"notification-toast-button-margin-left": "16px",
			"notification-toast-button-margin-right": "8px",
			"notification-toast-scale-m-l-button-margin-right": "0.5rem",
			"notification-toast-small-button-height": "32px",
			"notification-toast-large-button-height": "36px",
			"notification-alert-container-padding-top-bottom": "12px",
			"notification-alert-container-padding-left": "24px",
			"notification-alert-container-padding-right": "16px",
			"notification-alert-scale-m-l-container-height": "4.25rem",
			"notification-alert-container-corner-radius-all-round": "8px",
			"notification-alert-container-border-weight": "1px",
			"notification-alert-inner-container-border-weight": "12px",
			"notification-alert-icon-margin-right": "8px",
			"notification-alert-icon-margin-top": "4px",
			"notification-alert-title-margin-right": "8px",
			"notification-alert-text-container-margin": "12px",
			"notification-alert-dismissible-icon-margin-top-mobile": "4px",
			"notification-alert-dismissible-icon-margin-left-mobile": "8px",
			"notification-alert-dismissible-icon-margin-left-tablet": "12px",
			"notification-alert-dismissible-icon-margin-left-desktop": "16px",
			"notification-inline-container-padding-top-bottom": "12px",
			"notification-inline-container-padding-left": "24px",
			"notification-inline-container-padding-right": "16px",
			"notification-inline-container-height-tablet": "56px",
			"notification-inline-container-height-desktop": "60px",
			"notification-inline-container-corner-radius-all-round": "0px",
			"notification-inline-container-border-weight": "1px",
			"notification-inline-inner-container-border-weight": "12px",
			"notification-inline-icon-margin-right": "8px",
			"notification-inline-icon-margin-top-mobile": "4px",
			"notification-inline-title-margin-right": "8px",
			"notification-inline-text-container-margin": "12px",
			"notification-inline-dismissible-icon-margin-top-mobile": "4px",
			"notification-inline-dismissible-icon-margin-left-mobile": "8px",
			"notification-inline-dismissible-icon-margin-left-tablet": "12px",
			"notification-inline-dismissible-icon-margin-left-desktop": "16px",
			"number-input-input-container-padding-top-left-right": "16px",
			"number-input-input-container-corner-radius-top": "8px",
			"number-input-input-container-border-bottom": "2px",
			"number-input-input-icon-divider-border": "1px",
			"number-input-input-text-margin-right": "16px",
			"number-input-helper-text-margin-left": "8px",
			"pagination-number-margin": "12px",
			"pagination-arrow-margin": "16px",
			"pagination-item-container-corner-radius": "100px",
			"pagination-item-scale-m-l-container-size": "2.25rem",
			"pagination-arrow-container-corner-radius": "24px",
			"pagination-arrow-scale-m-l-icon-size": "1.5rem",
			"pagination-arrow-scale-m-l-container-size": "2.25rem",
			"pin-input-scale-m-l-helper-margin-top": "0.75rem",
			"pin-input-helper-text-margin-left": "8px",
			"pin-input-container-input-margin": "8px",
			"pin-input-container-max-width": "508px",
			"pin-input-field-container-padding-left-right": "16px",
			"pin-input-field-container-corner-radius-top": "8px",
			"pin-input-field-container-border-bottom": "2px",
			"menu-item-scale-m-l-container-height": "3.25rem",
			"menu-item-scale-m-l-icon-size": "1.5rem",
			"menu-item-scale-m-l-flag-size": "1.5rem",
			"progress-indicator-linear-container-padding": "0px",
			"progress-indicator-linear-track-corner-radius": "4px",
			"progress-indicator-linear-indeterminate-track-corner-radius": "4px",
			"progress-indicator-linear-indicator-corner-radius": "0px",
			"progress-indicator-circular-container-padding": "0px",
			"progress-indicator-circular-indicator-corner-radius-top": "2px",
			"radio-button-radio-container-border": "2px",
			"radio-button-scale-m-l-label-margin-left": "0.75rem",
			"radio-button-radio-container-corner-radius-all-round": "100px",
			"radio-button-hovered-radio-container-border": "0px",
			"radio-button-completed-radio-container-border": "0px",
			"rating-star-container-width-min": "40px",
			"rating-star-container-height-min": "40px",
			"rating-star-icon-margin-right": "12px",
			"rating-experience-container-margin-right-compact": "12px",
			"rating-experience-container-margin-right-comfortable": "24px",
			"rating-experience-icon-opacity": "80px",
			"rating-experience-icon-margin-bottom": "8px",
			"rating-experience-active-icon-opacity": "100px",
			"scrollbar-container-padding": "0px",
			"scrollbar-track-corner-radius": "16px",
			"scrollbar-indicator-corner-radius": "16px",
			"scrollbar-indicator-height": "4px",
			"scrollbar-hovered-indicator-height-hover": "8px",
			"scrollbar-focused-indicator-border": "1px",
			"search-bar-container-padding": "16px",
			"search-bar-scale-m-l-container-height": "4rem",
			"search-bar-scale-m-l-icon-size": "1.5rem",
			"search-bar-content-margin": "16px",
			"search-bar-container-border": "1px",
			"search-bar-container-corner-radius-all-round": "16px",
			"search-bar-hovered-container-border": "0px",
			"search-bar-focused-container-border": "0px",
			"search-bar-active-container-border-bottom": "1px",
			"search-bar-active-container-corner-radius-top": "16px",
			"search-suggestion-container-padding": "16px",
			"search-suggestion-content-margin": "16px",
			"search-suggestion-scale-m-l-container-height": "3.75rem",
			"search-suggestion-scale-m-l-icon-size": "1.5rem",
			"search-suggestion-scale-m-l-label-margin-bottom": "0.5rem",
			"search-container-corner-radius-all-round": "16px",
			"search-scale-m-l-active-container-padding-bottom": "0.75rem",
			"sheet-bottom-container-corner-radius-top": "24px",
			"sheet-side-container-corner-radius-top-left": "24px",
			"sheet-side-container-corner-radius-top-right": "24px",
			"sheet-side-container-padding-left-right": "24px",
			"sheet-side-container-padding-top": "40px",
			"switch-scale-m-l-label-margin-right": "0.75rem",
			"switch-scale-m-l-label-margin-left": "0.75rem",
			"switch-toggle-container-corner-radius-all-round": "24px",
			"switch-toggle-padding-all-round": "2px",
			"tabs-label-padding-left-right": "24px",
			"tabs-label-padding-top-bottom": "24px",
			"tabs-active-label-underline-border-weight": "4px",
			"tag-container-padding-left-right": "12px",
			"tag-content-margins": "8px",
			"tag-container-corner-radius": "56px",
			"tag-scale-m-l-icon-size": "1rem",
			"tag-scale-m-l-container-height": "2.25rem",
			"tag-outlined-container-border-weight": "1px",
			"text-area-input-container-padding": "16px",
			"text-area-input-container-corner-radius-top": "8px",
			"text-area-input-container-border-bottom": "2px",
			"text-area-input-text-margin-right": "16px",
			"text-area-character-count-container-corner-radius": "16px",
			"text-area-character-count-container-padding-top-bottom": "4px",
			"text-area-character-count-container-padding-left-right": "8px",
			"text-area-helper-text-margin-left": "8px",
			"text-input-input-container-padding-top-left-right": "16px",
			"text-input-input-container-corner-radius-top": "8px",
			"text-input-input-container-border-bottom": "2px",
			"text-input-input-text-margin-right": "16px",
			"text-input-helper-text-margin-left": "8px",
			"text-input-scale-m-l-input-container-height": "4rem",
			"text-input-scale-m-l-input-margin-bottom": "0.75rem",
			"text-input-scale-m-l-input-icon-size": "1.5rem",
			"text-input-scale-m-l-input-label-margin-bottom": "0.5rem",
			"mobile-number-input-scale-m-l-input-container-height": "4rem",
			"mobile-number-input-scale-m-l-input-margin-bottom": "0.75rem",
			"mobile-number-input-scale-m-l-input-icon-size": "1.5rem",
			"mobile-number-input-scale-m-l-input-label-margin-bottom": "0.5rem",
			"number-input-scale-m-l-input-container-height": "4rem",
			"number-input-scale-m-l-input-margin-bottom": "0.75rem",
			"number-input-scale-m-l-input-icon-size": "1.5rem",
			"number-input-scale-m-l-input-label-margin-bottom": "0.5rem",
			"dropdown-scale-m-l-input-container-height": "4rem",
			"pin-input-field-scale-m-l-input-container-height": "4rem",
			"dropdown-scale-m-l-input-margin-bottom": "0.75rem",
			"dropdown-scale-m-l-input-icon-size": "1.5rem",
			"dropdown-scale-m-l-input-label-margin-bottom": "0.5rem",
			"text-area-scale-m-l-input-margin-bottom": "0.75rem",
			"text-area-scale-m-l-input-icon-size": "1.5rem",
			"text-area-scale-m-l-input-label-margin-bottom": "0.5rem",
			"text-link-container-border-bottom": "1px",
			"text-link-container-padding-all-round": "4px",
			"tooltip-container-padding-left-right": "12px",
			"tooltip-container-padding-top-bottom": "12px",
			"tooltip-container-margin": "8px",
			"tooltip-container-width-max": "300px",
			"tooltip-dismissible-icon-margin-left": "8px",
			"tooltip-scale-m-l-icon-size": "1rem",
			"tooltip-trigger-icon-corner-radius": "100px",
			"button-text-scale-m-l-icon-margin-right": "0.5rem",
			"*Demo-corner-radius-large": "32px",
			"*Demo-corner-radius-medium": "24px",
			"*Demo-corner-radius-small": "16px",
			"*Demo-gap": "0px",
			"*Demo-padding": "24px",
			"checkbox-completed-box-container-border": "0px",
			"*Graveyard-drawer-container-padding-left-right": "8px",
			"*Graveyard-drawer-container-padding-top-bottom": "16px",
			"*Graveyard-drawer-container-corner-radius": "8px",
			"*Graveyard-toggletip-plain-container-corner-radius": "4px",
			"*Graveyard-toggletip-plain-container-padding-left-right": "8px",
			"*Graveyard-toggletip-plain-container-padding-top-bottom": "4px",
			"*Graveyard-toggletip-plain-container-margin": "4px",
			"*Graveyard-toggletip-plain-container-width-max": "140px",
			"*Graveyard-toggletip-plain-trigger-corner-radius": "100px",
			"*Graveyard-toggletip-plain-text-margin-right": "16px",
			"*Graveyard-toggletip-plain-close-icon-margin-top": "2px",
			"*Graveyard-toggletip-plain-focused-trigger-icon-border-weight": "2px",
			"*Graveyard-toggletip-plain-focused-close-icon-border-weight": "1px",
			"accessible-focus-border-container-border": "4px",
			"accessible-focus-border-container-outer-border": "2px",
			"navigation-bar-item-brand-scale-m-l-icon-container-padding-top": "1.5rem",
			"navigation-bar-item-brand-scale-m-l-container-height": "6.5rem",
			"navigation-bar-item-brand-scale-m-l-content-margin": "0.75rem",
			"navigation-bar-item-brand-container-min-padding-left-right": "8px",
			"navigation-bar-item-brand-label-text-opacity": "48px",
			"navigation-bar-item-brand-icon-opacity": "48px",
			"navigation-bar-item-brand-active-label-text-opacity": "100px",
			"navigation-bar-item-brand-active-icon-opacity": "100px",
			"button-text-scale-m-l-icon": "1.5rem",
			"button-text-scale-m-l-container-height": "3.5rem",
			"button-text-scale-large-container-height": "60px",
			"button-icon-scale-m-l-icon-size": "1.5rem",
			"border-weight-none": "0px",
			"border-weight-small": "1px",
			"border-weight-medium": "2px",
			"border-weight-large": "4px",
			"padding-none": "0px",
			"padding-3xsmall": "2px",
			"padding-2xsmall": "4px",
			"padding-xsmall": "8px",
			"padding-small": "12px",
			"padding-medium": "16px",
			"padding-large": "24px",
			"padding-xlarge": "32px",
			"padding-2xlarge": "40px",
			"padding-3xlarge": "48px",
			"margin-none": "0px",
			"margin-3xsmall": "2px",
			"margin-2xsmall": "4px",
			"margin-xsmall": "8px",
			"margin-small": "12px",
			"margin-medium": "16px",
			"margin-large": "24px",
			"margin-xlarge": "32px",
			"margin-2xlarge": "40px",
			"margin-section-vertical-large": "72px",
			"margin-section-vertical-medium": "64px",
			"margin-section-vertical-small": "56px",
			"corner-radius-none": "0px",
			"corner-radius-3xsmall": "2px",
			"corner-radius-2xsmall": "4px",
			"corner-radius-xsmall": "8px",
			"corner-radius-small": "16px",
			"corner-radius-medium": "24px",
			"corner-radius-large": "32px",
			"corner-radius-xlarge": "40px",
			"corner-radius-2xlarge": "48px",
			"corner-radius-3xlarge": "56px",
			"corner-radius-full": "100px",
			"shadow-accessible": "3px",
			"shadow-level-1-blur": "4px",
			"shadow-level-1-y": "1px",
			"shadow-level-1-spread": "0px",
			"shadow-level-2-blur": "16px",
			"shadow-level-2-y": "8px",
			"shadow-level-2-spread": "2px",
			"shadow-level-3-blur": "24px",
			"shadow-level-3-y": "16px",
			"shadow-level-3-spread": "4px",
			"shadow-inverted-blur": "8px",
			"shadow-inverted-y": "-4px",
			"shadow-inverted-spread": "2px",
			"shadow-left-blur": "8px",
			"shadow-left-x": "-4px",
			"shadow-left-spread": "2px",
			"shadow-right-blur": "8px",
			"shadow-right-x": "4px",
			"shadow-right-spread": "2px",
			"shadow-top-blur": "8px",
			"shadow-top-y": "-2px",
			"shadow-top-spread": "1px",
			"blur-background-level-1": "4px",
			"blur-background-level-2": "8px",
			"blur-background-level-3": "16px",
			"blur-layer-level-1": "24px",
			"blur-layer-level-2": "48px",
			"blur-layer-level-3": "96px"
		}
	}
};
var momo = {
	light: {
		colors: {
			"logo-core-default-colour": "#000000ff",
			"logo-core-inverted-colour": "#ffffffff",
			"logo-core-brand-colour": "#004f71ff",
			"logo-core-on-image-colour-light": "#ffffffff",
			"logo-core-on-image-colour-dark": "#00344bff",
			"logo-play-default-colour": "#000000ff",
			"logo-play-inverted-colour": "#ffffffff",
			"logo-play-brand-colour": "#004f71ff",
			"logo-play-on-image-colour-light": "#ffffffff",
			"logo-play-on-image-colour-dark": "#00344bff",
			"logo-payment-default-colour": "#000000ff",
			"logo-payment-opacity-colour": "#00344b52",
			"logo-payment-opacity-inverse-colour": "#ffffff52",
			"container-bg-colour-full": "#ffffffff",
			"container-bg-colour-subtle": "#f4f8faff",
			"container-bg-colour-dim": "#ebeff1ff",
			"container-bg-colour-brand": "#004f71ff",
			"container-bg-colour-full-inverse": "#101315ff",
			"container-bg-colour-subtle-inverse": "#00344bff",
			"container-bg-colour-dim-inverse": "#184a63ff",
			"accessible-focus-border-container-border-colour": "#004f71ff",
			"avatar-container-colour": "#00344ba3",
			"avatar-label-text-colour": "#ffffffcc",
			"avatar-icon-colour": "#ffffffcc",
			"accordion-button-label-text-colour": "#000000ff",
			"accordion-button-icon-colour": "#000000ff",
			"accordion-button-container-border-colour": "#00344b29",
			"accordion-button-hovered-label-text-colour": "#000000ff",
			"accordion-button-hovered-container-colour": "#00344b14",
			"accordion-button-focused-label-text-colour": "#000000ff",
			"accordion-button-focused-container-colour": "#00344b14",
			"accordion-button-pressed-container-colour": "#00344b29",
			"accordion-button-disabled-label-text-colour": "#7b7b7bff",
			"accordion-button-disabled-icon-colour": "#d9d9d9ff",
			"accordion-container-border-colour": "#00344b14",
			"accordion-button-active-label-text-colour": "#000000ff",
			"accordion-button-active-container-colour": "#00344b14",
			"accordion-button-active-hovered-container-colour": "#00344b14",
			"accordion-button-active-pressed-container-colour": "#00344b29",
			"accordion-button-active-focused-container-colour": "#00344b14",
			"badge-label-text-colour": "#ffffffff",
			"badge-container-colour": "#000000ff",
			"badge-alert-label-text-colour": "#ffbec4ff",
			"badge-alert-container-colour": "#b20010ff",
			"badge-warning-label-text-colour": "#000000ff",
			"badge-warning-container-colour": "#ff732eff",
			"badge-positive-label-text-colour": "#ffffffff",
			"badge-positive-container-colour": "#398004ff",
			"badge-informative-label-text-colour": "#c7ebffff",
			"badge-informative-container-colour": "#004a71ff",
			"badge-brand-core-label-text-colour": "#ffffffff",
			"badge-brand-core-container-colour": "#004f71ff",
			"button-action-transparent-icon-colour": "#ffffffff",
			"button-action-transparent-container-colour": "#00344ba3",
			"button-action-transparent-hovered-icon-colour": "#f5f5f5ff",
			"button-action-transparent-hovered-container-colour": "#00344bcc",
			"button-action-transparent-focused-icon-colour": "#f5f5f5ff",
			"button-action-transparent-focused-container-colour": "#00344bcc",
			"button-action-transparent-pressed-icon-colour": "#f5f5f5ff",
			"button-action-transparent-pressed-container-colour": "#00344b52",
			"button-action-transparent-disabled-icon-colour": "#555555ff",
			"button-action-transparent-disabled-container-colour": "#00344b29",
			"button-action-filled-container-border-colour": "#00344b29",
			"button-action-filled-icon-colour": "#000000ff",
			"button-action-filled-container-colour": "#ffffffff",
			"button-action-filled-hovered-container-border-colour": "#00344b14",
			"button-action-filled-hovered-icon-colour": "#434343ff",
			"button-action-filled-hovered-container-colour": "#f5f5f5ff",
			"button-action-filled-focused-icon-colour": "#434343ff",
			"button-action-filled-focused-container-colour": "#f5f5f5ff",
			"button-action-filled-pressed-icon-colour": "#434343ff",
			"button-action-filled-disabled-container-colour": "#f4f8faff",
			"button-action-filled-disabled-icon-colour": "#d9d9d9ff",
			"button-action-filled-disabled-container-border-colour": "#00344b14",
			"button-action-filled-pressed-container-colour": "#d9d9d9ff",
			"button-action-filled-pressed-container-border-colour": "#00344b14",
			"button-app-standard-hovered-container-colour": "#f4f8faff",
			"button-app-standard-hovered-label-text-colour": "#000000ff",
			"button-app-standard-hovered-symbol-colour": "#000000ff",
			"button-app-standard-focused-container-colour": "#ffffffff",
			"button-app-standard-focused-label-text-colour": "#000000ff",
			"button-app-standard-focused-symbol-colour": "#000000ff",
			"button-app-standard-container-colour": "#ffffffff",
			"button-app-standard-container-border-colour": "#00344b29",
			"button-app-standard-label-text-colour": "#000000ff",
			"button-app-standard-symbol-colour": "#000000ff",
			"button-app-inverted-container-colour": "#101315ff",
			"button-app-inverted-container-border-colour": "#ffffff29",
			"button-app-inverted-label-text-colour": "#ffffffff",
			"button-app-inverted-symbol-colour": "#ffffffff",
			"button-app-inverted-hovered-container-colour": "#00344bff",
			"button-app-inverted-hovered-label-text-colour": "#ffffffff",
			"button-app-inverted-hovered-symbol-colour": "#ffffffff",
			"button-app-inverted-focused-container-colour": "#101315ff",
			"button-app-inverted-focused-label-text-colour": "#ffffffff",
			"button-app-inverted-focused-symbol-colour": "#ffffffff",
			"button-primary-container-colour": "#004f71ff",
			"button-primary-icon-colour": "#ffffffff",
			"button-primary-label-text-colour": "#ffffffff",
			"button-secondary-icon-colour": "#000000ff",
			"button-secondary-label-text-colour": "#000000ff",
			"button-secondary-container-border-colour": "#00344ba3",
			"button-secondary-hovered-icon-colour": "#434343ff",
			"button-secondary-hovered-label-text-colour": "#434343ff",
			"button-secondary-hovered-container-colour": "#00344b14",
			"button-secondary-hovered-container-border-colour": "#434343ff",
			"button-secondary-focused-icon-colour": "#434343ff",
			"button-secondary-focused-label-text-colour": "#434343ff",
			"button-secondary-focused-container-colour": "#00344b14",
			"button-secondary-pressed-icon-colour": "#7b7b7bff",
			"button-secondary-pressed-label-text-colour": "#7b7b7bff",
			"button-secondary-pressed-container-colour": "#00344b14",
			"button-secondary-pressed-container-border-colour": "#7b7b7bff",
			"button-secondary-disabled-icon-colour": "#7b7b7bff",
			"button-secondary-disabled-label-text-colour": "#7b7b7bff",
			"button-secondary-disabled-container-border-colour": "#c4c4c4ff",
			"button-primary-hovered-container-colour": "#447fa2ff",
			"button-primary-focused-container-colour": "#447fa2ff",
			"button-primary-pressed-container-colour": "#447fa2ff",
			"button-primary-pressed-icon-colour": "#434343ff",
			"button-primary-pressed-label-text-colour": "#434343ff",
			"button-primary-disabled-container-colour": "#d9d9d9ff",
			"button-primary-disabled-icon-colour": "#7b7b7bff",
			"button-primary-disabled-label-text-colour": "#7b7b7bff",
			"button-call-out-container-colour": "#000000ff",
			"button-call-out-icon-colour": "#ffffffff",
			"button-call-out-lable-text-colour": "#ffffffff",
			"button-call-out-hovered-container-colour": "#434343ff",
			"button-call-out-focused-container-colour": "#434343ff",
			"button-call-out-pressed-container-colour": "#434343ff",
			"button-call-out-pressed-icon-colour": "#d9d9d9ff",
			"button-call-out-pressed-label-text-colour": "#d9d9d9ff",
			"button-call-out-disabled-container-colour": "#d9d9d9ff",
			"button-call-out-disabled-icon-colour": "#7b7b7bff",
			"button-call-out-disabled-label-text-colour": "#7b7b7bff",
			"button-text-icon-colour": "#ffffffff",
			"button-text-label-text-colour": "#ffffffff",
			"button-text-hovered-icon-colour": "#434343ff",
			"button-text-hovered-label-text-colour": "#434343ff",
			"button-text-hovered-container-border-colour": "#000000ff",
			"button-text-focused-icon-colour": "#434343ff",
			"button-text-focused-label-text-colour": "#434343ff",
			"button-text-pressed-icon-colour": "#434343ff",
			"button-text-pressed-label-text-colour": "#434343ff",
			"button-text-pressed-container-border-colour": "#447fa2ff",
			"button-text-disabled-icon-colour": "#7b7b7bff",
			"button-text-disabled-label-text-colour": "#7b7b7bff",
			"button-icon-icon-primary-colour": "#004f71ff",
			"button-icon-icon-colour": "#000000ff",
			"button-icon-label-text-colour": "#000000ff",
			"button-icon-outline-container-border-colour": "#00344b14",
			"button-icon-filled-container-colour": "#00344b0a",
			"button-icon-hovered-container-colour": "#00344b29",
			"button-icon-focused-icon-colour": "#434343ff",
			"button-icon-focused-label-text-colour": "#434343ff",
			"button-icon-focused-container-colour": "#00344b29",
			"button-icon-pressed-icon-colour": "#434343ff",
			"button-icon-pressed-label-text-colour": "#434343ff",
			"button-icon-pressed-container-colour": "#00344b52",
			"button-icon-disabled-icon-colour": "#7b7b7bff",
			"button-icon-disabled-label-text-colour": "#7b7b7bff",
			"button-icon-disabled-container-colour": "#00344b0a",
			"button-icon-outline-disabled-container-border-colour": "#00344b14",
			"button-fab-primary-icon-colour": "#ffffffff",
			"button-fab-primary-label-text-colour": "#ffffffff",
			"button-fab-primary-container-colour": "#004f71ff",
			"button-fab-primary-hovered-container-colour": "#447fa2ff",
			"button-fab-primary-focused-container-colour": "#447fa2ff",
			"button-fab-primary-pressed-icon-colour": "#434343ff",
			"button-fab-primary-pressed-label-text-colour": "#434343ff",
			"button-fab-primary-pressed-container-colour": "#447fa2ff",
			"button-fab-primary-disabled-icon-colour": "#555555ff",
			"button-fab-primary-disabled-label-text-colour": "#555555ff",
			"button-fab-primary-disabled-container-colour": "#d9d9d9ff",
			"button-fab-secondary-icon-colour": "#ffffffff",
			"button-fab-secondary-label-text-colour": "#ffffffff",
			"button-fab-secondary-container-colour": "#000000ff",
			"button-fab-secondary-hovered-container-colour": "#434343ff",
			"button-fab-secondary-focused-container-colour": "#434343ff",
			"button-fab-secondary-pressed-icon-colour": "#f5f5f5ff",
			"button-fab-secondary-pressed-label-text-colour": "#f5f5f5ff",
			"button-fab-secondary-pressed-container-colour": "#555555ff",
			"button-fab-secondary-disabled-icon-colour": "#7b7b7bff",
			"button-fab-secondary-disabled-label-text-colour": "#7b7b7bff",
			"button-fab-secondary-disabled-container-colour": "#d9d9d9ff",
			"button-select-container-border-colour": "#00344ba3",
			"button-select-label-text-colour": "#000000ff",
			"button-select-hovered-container-colour": "#00344b14",
			"button-select-focused-label-text-colour": "#ffffffff",
			"button-select-focused-container-colour": "#004f71ff",
			"button-select-pressed-container-border-colour": "#434343ff",
			"button-select-active-label-text-colour": "#ffffffff",
			"button-select-active-container-colour": "#004f71ff",
			"button-select-pressed-container-colour": "#00344b29",
			"button-select-pressed-label-text-colour": "#434343ff",
			"button-select-disabled-container-border-colour": "#c4c4c4ff",
			"button-select-disabled-label-text-colour": "#7b7b7bff",
			"button-payment-logo-colour": "#ffffffff",
			"button-payment-container-colour": "#000000ff",
			"button-payment-hovered-container-colour": "#434343ff",
			"button-payment-focused-container-colour": "#434343ff",
			"button-payment-pressed-logo-colour": "#d9d9d9ff",
			"button-payment-pressed-container-colour": "#434343ff",
			"button-payment-disabled-logo-colour": "#7b7b7bff",
			"button-payment-disabled-container-colour": "#d9d9d9ff",
			"card-base-elevated-container-colour": "#ffffffff",
			"card-base-elevated-hovered-container-border-colour": "#00344b29",
			"card-base-elevated-pressed-container-colour": "#f4f8faff",
			"card-base-outlined-container-colour": "#ffffffff",
			"card-base-outlined-container-border-colour": "#00344b29",
			"card-base-outlined-hovered-container-border-colour": "#00344b52",
			"card-base-outlined-pressed-container-colour": "#f4f8faff",
			"card-base-primary-container-colour": "#004f71ff",
			"card-base-primary-hovered-container-border-colour": "#00344b14",
			"card-base-primary-hovered-container-colour": "#447fa2ff",
			"card-base-primary-pressed-container-colour": "#447fa2ff",
			"card-base-inverted-container-colour": "#101315ff",
			"card-base-inverted-hovered-container-colour": "#00344bff",
			"card-base-inverted-hovered-container-border-colour": "#ffffffa3",
			"card-base-inverted-pressed-container-colour": "#184a63ff",
			"card-base-glass-container-colour": "#ffffffcc",
			"card-base-glass-hovered-container-colour": "#ffffffb8",
			"card-base-glass-hovered-container-border-colour": "#ffffffa3",
			"card-base-glass-pressed-container-colour": "#ffffffa3",
			"card-base-glass-inverted-container-colour": "#00344bcc",
			"card-base-glass-inverted-hovered-container-colour": "#00344bb8",
			"card-base-glass-inverted-hovered-container-border-colour": "#00344ba3",
			"card-base-glass-inverted-pressed-container-colour": "#00344ba3",
			"carousel-title-text-colour": "#000000ff",
			"checkbox-label-text-colour": "#434343ff",
			"checkbox-hovered-label-text-colour": "#000000ff",
			"checkbox-hovered-box-container-colour": "#004f71ff",
			"checkbox-box-border-colour": "#000000ff",
			"checkbox-focused-label-text-colour": "#000000ff",
			"date-picker-week-day-label-text-colour": "#00344b52",
			"date-picker-date-label-text-colour": "#00344bb8",
			"date-picker-container-colour": "#ffffffff",
			"date-picker-container-border-colour": "#00344b14",
			"date-picker-date-current-container-border-colour": "#004f71ff",
			"date-picker-month-selection-icon-colour": "#000000ff",
			"date-picker-month-selection-label-text-colour": "#000000ff",
			"date-picker-date-hovered-label-text-colour": "#000000ff",
			"date-picker-date-hovered-container-colour": "#00344b14",
			"date-picker-date-focused-label-text-colour": "#000000ff",
			"date-picker-date-focused-container-colour": "#00344b14",
			"date-picker-date-active-label-text-colour": "#ffffffff",
			"date-picker-date-active-start-label-text-colour": "#ffffffff",
			"date-picker-date-active-start-container-colour": "#004f71ff",
			"date-picker-date-active-middle-label-text-colour": "#ffffffff",
			"date-picker-date-active-end-label-text-colour": "#ffffffff",
			"date-picker-date-active-end-container-colour": "#004f71ff",
			"date-picker-date-active-middle-container-colour": "#447fa2ff",
			"date-picker-date-disabled-label-text-colour": "#00344b52",
			"date-picker-date-active-container-colour": "#004f71ff",
			"dialog-title-text-colour": "#000000ff",
			"dialog-text-colour": "#000000ff",
			"dialog-container-colour": "#ffffffff",
			"dialog-contianer-border-colour": "#00344b14",
			"dismissible-hovered-icon-colour": "#00344bb8",
			"dismissible-pressed-icon-colour": "#00344ba3",
			"divider-on-primary-container-colour": "#00344b14",
			"divider-on-secondary-container-colour": "#00344b14",
			"divider-on-tertiary-container-colour": "#00344b14",
			"divider-on-primary-inverse-container-colour": "#ffffff52",
			"divider-on-secondary-inverse-container-colour": "#ffffff52",
			"divider-on-tertiary-inverse-container-colour": "#ffffff52",
			"divider-on-brand-container-colour": "#00344b29",
			"dot-indicator-container-colour": "#00344b52",
			"dot-indicator-standard-hovered-container-colour": "#00344ba3",
			"dot-indicator-standard-active-container-colour": "#00344bb8",
			"dot-indicator-inverted-container-colour": "#ffffff52",
			"dot-indicator-inverted-hovered-container-colour": "#ffffffa3",
			"dropdown-hovered-input-container-colour": "#00344b14",
			"dot-indicator-inverted-active-container-colour": "#ffffffb8",
			"dropdown-hovered-input-container-border-colour": "#434343ff",
			"dropdown-focused-label-text-colour": "#555555ff",
			"dropdown-focused-input-container-border-colour": "#004f71ff",
			"dropdown-completed-input-text-colour": "#000000ff",
			"dropdown-error-input-text-colour": "#000000ff",
			"dropdown-error-input-container-colour": "#00344b14",
			"dropdown-error-helper-icon-colour": "#b20010ff",
			"dropdown-error-input-container-border-colour": "#b20010ff",
			"dropdown-disabled-input-label-text-colour": "#00344b52",
			"dropdown-disabled-icon-colour": "#00344b52",
			"dropdown-input-container-colour": "#00344b0a",
			"dropdown-disabled-input-container-border-colour": "#c4c4c4ff",
			"dropdown-input-label-text-colour": "#434343ff",
			"dropdown-icon-colour": "#434343ff",
			"dropdown-helper-text-colour": "#555555ff",
			"dropdown-helper-icon-colour": "#555555ff",
			"dropdown-input-container-border-colour": "#000000ff",
			"list-icon-label-text-colour": "#000000ff",
			"list-icon-icon-primary-colour": "#004f71ff",
			"list-icon-icon-secondary-colour": "#000000ff",
			"list-unordered-label-text-colour": "#000000ff",
			"list-unordered-symbol-primary-colour": "#004f71ff",
			"list-unordered-symbol-secondary-colour": "#000000ff",
			"list-ordered-label-text-colour": "#000000ff",
			"list-ordered-number-primary-colour": "#004f71ff",
			"list-ordered-number-secondary-colour": "#000000ff",
			"menu-container-colour": "#ffffffff",
			"menu-container-border-colour": "#e9e9e9ff",
			"menu-item-label-text-colour": "#434343ff",
			"menu-item-leading-icon-colour": "#434343ff",
			"menu-item-trailing-icon-colour": "#555555ff",
			"menu-item-container-colour": "#ffffffff",
			"menu-item-hovered-label-text-colour": "#000000ff",
			"menu-item-hovered-leading-icon-colour": "#000000ff",
			"menu-item-hovered-container-colour": "#f4f8faff",
			"menu-item-focused-container-colour": "#f4f8faff",
			"menu-item-active-label-text-colour": "#000000ff",
			"menu-item-active-leading-icon-colour": "#000000ff",
			"menu-item-active-trailing-icon-colour": "#000000ff",
			"menu-item-active-container-colour": "#f4f8faff",
			"menu-search-label-text-colour": "#555555ff",
			"menu-search-icon-colour": "#00344b52",
			"menu-search-container-colour": "#ffffffff",
			"menu-search-container-border-colour": "#00344b14",
			"menu-search-focused-container-colour": "#f4f8faff",
			"menu-search-hovered-container-colour": "#f4f8faff",
			"menu-search-completed-label-text-colour": "#000000ff",
			"menu-search-completed-leading-icon-colour": "#555555ff",
			"menu-search-completed-trailing-icon-colour": "#00344b52",
			"menu-search-completed-container-colour": "#f4f8faff",
			"mobile-number-input-input-container-colour": "#00344b0a",
			"mobile-number-input-input-label-text-colour": "#434343ff",
			"mobile-number-input-input-text-colour": "#555555ff",
			"mobile-number-input-input-icon-colour": "#434343ff",
			"mobile-number-input-input-dropdown-icon-colour": "#00344b52",
			"mobile-number-input-helper-text-colour": "#555555ff",
			"mobile-number-input-helper-icon-colour": "#555555ff",
			"mobile-number-input-input-container-border-colour": "#000000ff",
			"mobile-number-input-input-country-border colour": "#00344b29",
			"mobile-number-input-hovered-input-text-colour": "#434343ff",
			"mobile-number-input-hovered-input-container-colour": "#00344b14",
			"mobile-number-input-hovered-input-container-border-colour": "#434343ff",
			"mobile-number-input-focused-input-container-border-colour": "#004f71ff",
			"mobile-number-input-completed-input-text-colour": "#000000ff",
			"mobile-number-input-error-input-text-colour": "#000000ff",
			"mobile-number-input-error-input-container-colour": "#00344b14",
			"mobile-number-input-error-helper-icon-colour": "#b20010ff",
			"mobile-number-input-error-input-container-border-colour": "#b20010ff",
			"mobile-number-input-disabled-input-label-text-colour": "#00344b52",
			"mobile-number-input-disabled-input-text-colour": "#00344b52",
			"mobile-number-input-disabled-input-icon-colour": "#00344b52",
			"mobile-number-input-disabled-input-container-border-colour": "#c4c4c4ff",
			"mobile-number-input-disabled-input-dropdown-icon-colour": "#00344b29",
			"navigation-bar-transparent-container-background-colour": "#ffffffcc",
			"navigation-bar-filled-container-background-colour": "#ffffffff",
			"navigation-bar-brand-container-background-colour": "#004f71ff",
			"navigation-bar-container-border-colour": "#00344b14",
			"navigation-bar-item-icon-colour": "#00344ba3",
			"navigation-bar-item-label-text-colour": "#00344ba3",
			"navigation-bar-item-hovered-label-text-colour": "#00344bcc",
			"navigation-bar-item-hovered-icon-colour": "#00344bcc",
			"navigation-bar-item-hovered-container-background": "#00344b0a",
			"navigation-bar-item-focused-label-text-colour": "#00344bcc",
			"navigation-bar-item-focused-icon-colour": "#00344bcc",
			"navigation-bar-item-focused-container-background": "#00344b0a",
			"navigation-bar-item-active-label-text-colour": "#000000ff",
			"navigation-bar-item-active-icon-colour": "#004f71ff",
			"notification-toast-container-colour": "#ffffffb8",
			"notification-toast-container-border-colour": "#00344b14",
			"notification-toast-title-text-colour": "#000000ff",
			"notification-toast-body-text-colour": "#434343ff",
			"notification-toast-button-border-colour": "#00344b52",
			"notification-toast-button-label-text-colour": "#000000ff",
			"notification-toast-hovered-button-container-colour": "#00344b0a",
			"notification-toast-pressed-button-label-text-colour": "#434343ff",
			"notification-alert-container-border-colour": "#00344b14",
			"notification-alert-icon-colour": "#ffffffff",
			"notification-alert-text-colour": "#ffffffff",
			"notification-alert-brand-container-colour": "#d9f2ffff",
			"notification-alert-brand-inner-container-border-colour": "#004f71ff",
			"notification-alert-informative-container-colour": "#ebf8ffff",
			"notification-alert-informative-inner-container-border-colour": "#004a71ff",
			"notification-alert-success-container-colour": "#eef6e5ff",
			"notification-alert-success-inner-container-border-colour": "#398004ff",
			"notification-alert-warning-container-colour": "#ffeee5ff",
			"notification-alert-warning-inner-container-border-colour": "#ff732eff",
			"notification-alert-error-container-colour": "#ffe8eaff",
			"notification-alert-error-inner-container-border-colour": "#b20010ff",
			"notification-inline-container-border-colour": "#00344b14",
			"notification-inline-icon-colour": "#ffffffff",
			"notification-inline-text-colour": "#ffffffff",
			"notification-inline-brand-container-colour": "#d9f2ffff",
			"notification-inline-brand-inner-container-border-colour": "#004f71ff",
			"notification-inline-informative-container-colour": "#ebf8ffff",
			"notification-inline-informative-inner-container-border-colour": "#004a71ff",
			"notification-inline-success-container-colour": "#eef6e5ff",
			"notification-inline-success-inner-container-border-colour": "#398004ff",
			"notification-inline-warning-container-colour": "#ffeee5ff",
			"notification-inline-warning-inner-container-border-colour": "#ff732eff",
			"notification-inline-error-container-colour": "#ffe8eaff",
			"notification-inline-error-inner-container-border-colour": "#b20010ff",
			"number-input-input-container-colour": "#00344b0a",
			"number-input-input-label-text-colour": "#434343ff",
			"number-input-input-text-colour": "#555555ff",
			"number-input-input-plus-icon-colour": "#434343ff",
			"number-input-icon-divider-border-colour": "#00344b29",
			"number-input-input-minus-icon-colour": "#00344b52",
			"number-input-helper-text-colour": "#555555ff",
			"number-input-helper-icon-colour": "#555555ff",
			"number-input-input-container-border-colour": "#000000ff",
			"number-input-hovered-input-container-colour": "#00344b14",
			"number-input-hovered-input-container-border-colour": "#434343ff",
			"number-input-focused-input-container-border-colour": "#004f71ff",
			"number-input-completed-input-text-colour": "#000000ff",
			"number-input-completed-input-minus-icon-colour": "#434343ff",
			"number-input-error-input-text-colour": "#000000ff",
			"number-input-disabled-input-label-text-colour": "#00344b52",
			"number-input-disabled-input-text-colour": "#00344b52",
			"number-input-disabled-input-container-border-colour": "#c4c4c4ff",
			"number-input-disabled-input-plus-icon-colour": "#00344b29",
			"number-input-disabled-input-minus-icon-colour": "#00344b29",
			"number-input-error-input-container-colour": "#00344b14",
			"number-input-error-helper-icon-colour": "#b20010ff",
			"number-input-error-input-container-border-colour": "#b20010ff",
			"pagination-item-label-text-colour": "#00344bb8",
			"pagination-item-hovered-label-text-colour": "#000000ff",
			"pagination-item-hovered-container-colour": "#00344b14",
			"pagination-item-focused-label-text-colour": "#000000ff",
			"pagination-item-focused-container-colour": "#00344b14",
			"pagination-item-active-label-text-colour": "#ffffffff",
			"pagination-item-active-container-colour": "#00344bcc",
			"pagination-arrow-icon-colour": "#00344bb8",
			"pagination-arrow-hovered-container-colour": "#00344b14",
			"pagination-arrow-focused-container-colour": "#00344b14",
			"pagination-arrow-disabled-icon-colour": "#00344b52",
			"pin-input-helper-text-colour": "#555555ff",
			"pin-input-helper-icon-colour": "#555555ff",
			"pin-input-error-helper-icon-colour": "#b20010ff",
			"pin-input-field-container-colour": "#00344b0a",
			"pin-input-field-container-border-colour": "#000000ff",
			"pin-input-field-hovered-container-colour": "#00344b14",
			"pin-input-field-hovered-container-border-colour": "#434343ff",
			"pin-input-field-focused-input-text-colour": "#555555ff",
			"pin-input-field-focused-container-border-colour": "#004f71ff",
			"pin-input-field-completed-input-text-colour": "#000000ff",
			"pin-input-field-error-input-text-colour": "#000000ff",
			"pin-input-field-error-container-colour": "#00344b14",
			"pin-input-field-error-container-border-colour": "#b20010ff",
			"pin-input-field-disabled-container-border-colour": "#c4c4c4ff",
			"progress-indicator-linear-track-colour": "#00344b29",
			"progress-indicator-linear-indicator-colour": "#004f71ff",
			"progress-indicator-circular-indicator-colour": "#004f71ff",
			"progress-indicator-circular-track-colour": "#00344b14",
			"radio-button-label-text-colour": "#434343ff",
			"radio-button-radio-container-border-colour": "#000000ff",
			"radio-button-hovered-label-text-colour": "#000000ff",
			"radio-button-focused-label-text-colour": "#000000ff",
			"radio-button-focused-radio-container-border-colour": "#004f71ff",
			"radio-button-completed-radio-dot-colour": "#004f71ff",
			"radio-button-completed-radio-container-border-colour": "#004f71ff",
			"radio-button-error-radio-border-colour": "#b20010ff",
			"radio-button-disabled-label-text-colour": "#555555ff",
			"radio-button-disabled-radio-border-colour": "#c4c4c4ff",
			"rating-star-icon-colour": "#00344ba3",
			"rating-star-hovered-icon-colour": "#00344b52",
			"rating-star-active-icon-colour": "#004f71ff",
			"rating-star-focused-icon-colour": "#004f71ff",
			"rating-experience-label-text-colour": "#00344ba3",
			"rating-experience-hovered-label-text-colour": "#00344b52",
			"rating-experience-active-label-text-colour": "#000000ff",
			"rating-experience-focused-label-text-colour": "#000000ff",
			"scrollbar-track-colour": "#00344b29",
			"scrollbar-indicator-colour": "#00344ba3",
			"scrollbar-hovered-indicator-colour": "#004f71ff",
			"scrollbar-focused-indicator-border-colour": "#004f71ff",
			"search-bar-label-text-colour": "#555555ff",
			"search-bar-leading-icon-colour": "#00344b52",
			"search-bar-container-colour": "#ffffffff",
			"search-container-colour": "#ffffffff",
			"search-bar-container-border-colour": "#00344b14",
			"search-bar-focused-container-colour": "#f4f8faff",
			"search-bar-active-container-border-colour": "#00344b14",
			"search-bar-active-label-text-colour": "#000000ff",
			"search-bar-completed-label-text-colour": "#000000ff",
			"search-bar-completed-leading-icon-colour": "#555555ff",
			"search-bar-completed-trailing-icon-colour": "#00344b52",
			"search-bar-completed-container-colour": "#f4f8faff",
			"search-suggestion-label-text-colour": "#000000ff",
			"search-suggestion-description-text-colour": "#00344ba3",
			"search-suggestion-icon-colour": "#000000ff",
			"search-no-results-label-text-colour": "#000000ff",
			"search-no-results-description-text-colour": "#00344ba3",
			"search-no-results-icon-colour": "#000000ff",
			"search-suggestion-container-colour": "#ffffffff",
			"search-suggestion-hovered-container-colour": "#f4f8faff",
			"search-suggestion-focused-container-colour": "#f4f8faff",
			"sheet-bottom-elevated-container-colour": "#ffffffff",
			"sheet-bottom-drag-line-colour": "#00344b29",
			"sheet-bottom-glass-container-colour": "#ffffffcc",
			"sheet-side-elevated-container-colour": "#ffffffff",
			"sheet-side-glass-container-colour": "#ffffffcc",
			"sheet-side-content-colour": "#000000ff",
			"switch-label-text-colour": "#434343ff",
			"switch-toggle-container-colour": "#00344b29",
			"switch-toggle-circle-colour": "#ffffffff",
			"switch-hovered-label-text-colour": "#000000ff",
			"switch-hovered-toggle-container-colour": "#00344b52",
			"switch-focused-label-text-colour": "#000000ff",
			"switch-active-label-text-colour": "#000000ff",
			"switch-active-toggle-container-colour": "#004f71ff",
			"switch-disabled-label-text-colour": "#555555ff",
			"switch-disabled-toggle-container-colour": "#00344b14",
			"tabs-label-text-colour": "#00344bcc",
			"tabs-hovered-label-text-colour": "#00344ba3",
			"tabs-active-label-text-colour": "#000000ff",
			"tabs-active-label-underline-colour": "#004f71ff",
			"tag-label-text-colour": "#000000ff",
			"tag-icon-colour": "#000000ff",
			"tag-outlined-container-border-colour": "#000000ff",
			"tag-outlined-hovered-container-colour": "#00344b0a",
			"tag-outlined-pressed-container-colour": "#00344b0a",
			"tag-outlined-pressed-container-border-colour": "#434343ff",
			"tag-outlined-pressed-label-text-colour": "#434343ff",
			"tag-outlined-pressed-icon-colour": "#434343ff",
			"tag-outlined-focused-container-colour": "#00344b0a",
			"tag-filled-container-colour": "#00344b29",
			"tag-filled-pressed-container-colour": "#00344b52",
			"tag-filled-pressed-label-text-colour": "#434343ff",
			"tag-filled-pressed-icon-colour": "#434343ff",
			"tag-filled-hovered-container-colour": "#00344b52",
			"text-area-input-container-colour": "#00344b0a",
			"text-area-input-label-text-colour": "#434343ff",
			"text-area-input-text-colour": "#555555ff",
			"text-area-input-icon-colour": "#434343ff",
			"text-area-input-container-border-colour": "#000000ff",
			"text-area-character-count-label-text-colour": "#434343ff",
			"text-area-character-count-container-colour": "#00344b29",
			"text-area-helper-text-colour": "#555555ff",
			"text-area-helper-icon-colour": "#555555ff",
			"text-area-hovered-input-container-colour": "#00344b14",
			"text-area-hovered-input-container-border-colour": "#434343ff",
			"text-area-focused-input-container-border-colour": "#004f71ff",
			"text-area-completed-input-text-colour": "#000000ff",
			"text-area-disabled-input-label-text-colour": "#00344b52",
			"text-area-disabled-character-count-container-colour": "#00344b0a",
			"text-area-disabled-character-count-label-text-colour": "#00344b29",
			"text-area-disabled-input-text-colour": "#00344b52",
			"text-area-disabled-input-icon-colour": "#00344b52",
			"text-area-disabled-input-container-border-colour": "#c4c4c4ff",
			"text-area-error-input-text-colour": "#000000ff",
			"text-area-error-input-container-colour": "#00344b14",
			"text-area-error-helper-icon-colour": "#b20010ff",
			"text-area-error-input-container-border-colour": "#b20010ff",
			"text-embed-secondary-colour": "#000000ff",
			"text-embed-tertiary-colour": "#555555ff",
			"text-embed-secondary-colour-inverse": "#ffffffff",
			"text-embed-tertiary-colour-inverse": "#d9d9d9ff",
			"text-embed-on-image-colour-light": "#ffffffff",
			"text-embed-on-image-colour-dark": "#000000ff",
			"text-embed-on-primary": "#ffffffff",
			"text-embed-on-secondary": "#ffffffff",
			"text-input-input-container-colour": "#00344b0a",
			"text-input-input-label-text-colour": "#434343ff",
			"text-input-input-icon-colour": "#434343ff",
			"text-input-helper-text-colour": "#555555ff",
			"text-input-helper-icon-colour": "#555555ff",
			"text-input-input-container-border-colour": "#000000ff",
			"text-input-hovered-input-container-colour": "#00344b14",
			"text-input-hovered-input-container-border-colour": "#434343ff",
			"text-link-label-text-colour": "#000000ff",
			"text-link-container-border-colour": "#000000ff",
			"text-link-hovered-label-text-colour": "#434343ff",
			"text-link-hovered-container-border-colour": "#004f71ff",
			"text-link-pressed-label-text-colour": "#555555ff",
			"text-link-pressed-container-border-colour": "#447fa2ff",
			"text-link-disabled-label-text-colour": "#d9d9d9ff",
			"text-link-disabled-container-border-colour": "#d9d9d9ff",
			"tooltip-container-colour": "#00344bff",
			"tooltip-caret-tip-colour": "#00344bff",
			"tooltip-text-colour": "#ffffffff",
			"tooltip-dismissible-icon-colour": "#ffffffff",
			"tooltip-trigger-icon-colour": "#000000ff",
			"tooltip-trigger-text-colour": "#000000ff",
			"tooltip-trigger-text-underline-colour": "#004a71ff",
			"tooltip-trigger-hovered-icon-colour": "#434343ff",
			"tooltip-trigger-hovered-text-colour": "#434343ff",
			"icon-colour": "#000000ff",
			"*Cursor-initial-colour": "#000000ff",
			"*Cursor-brand-colour": "#004f71ff",
			"*Documentation-code-snippet-container-colour": "#ffffffff",
			"*Documentation-code-snippet-border-colour": "#434343ff",
			"*Documentation-code-snippet-text-colour": "#000000ff",
			"*Native-bg-primary": "#f9f9f9ff",
			"*Demo-fg-colour-secondary": "#000000ff",
			"*Demo-fg-colour-tertiary": "#434343ff",
			"*Demo-bg-primary": "#f4f8faff",
			"*Demo-border": "#00344b29",
			"*Demo-bg-overlay-level2": "#ffffffa3",
			"*Demo-bg-overlay-level3": "#ffffffcc",
			"*Demo-bg-indicator": "#00344b29",
			"*Demo-fg-indicator": "#555555ff",
			"text-input-focused-input-text-colour": "#555555ff",
			"text-input-focused-input-container-border-colour": "#004f71ff",
			"text-input-completed-input-text-colour": "#000000ff",
			"text-input-error-input-text-colour": "#000000ff",
			"text-input-error-input-container-colour": "#00344b14",
			"text-input-error-input-container-border-colour": "#b20010ff",
			"text-input-error-helper-icon-colour": "#b20010ff",
			"text-input-disabled-label-text-colour": "#00344b52",
			"text-input-disabled-input-icon-colour": "#00344b52",
			"text-input-disabled-container-border-colour": "#c4c4c4ff",
			"checkbox-completed-icon-colour": "#ffffffff",
			"checkbox-completed-box-container-colour": "#004f71ff",
			"checkbox-error-box-border-colour": "#b20010ff",
			"checkbox-disabled-label-text-colour": "#555555ff",
			"checkbox-disabled-box-border-colour": "#c4c4c4ff",
			"*Graveyard-drawer-container-colour": "#004f71ff",
			"*Graveyard-drawer-icon-colour": "#ffffffff",
			"*Graveyard-drawer-hovered-container-colour": "#447fa2ff",
			"*Graveyard-drawer-focused-container-colour": "#447fa2ff",
			"*Graveyard-drawer-pressed-icon-colour": "#434343ff",
			"*Graveyard-drawer-pressed-container-colour": "#447fa2ff",
			"*Graveyard-drawer-disabled-icon-colour": "#7b7b7bff",
			"*Graveyard-drawer-disabled-container-colour": "#d9d9d9ff",
			"*Graveyard-toggletip-plain-container-colour": "#00344bcc",
			"*Graveyard-toggletip-plain-caret-tip-colour": "#00344bcc",
			"*Graveyard-toggletip-plain-trigger-icon-colour": "#000000ff",
			"*Graveyard-toggletip-plain-text-colour": "#ffffffff",
			"*Graveyard-toggletip-plain-close-icon-colour": "#ffffffff",
			"*Graveyard-toggletip-plain-hovered-trigger-icon-colour": "#434343ff",
			"*Graveyard-toggletip-plain-hovered-close-icon-colour": "#d9d9d9ff",
			"*Graveyard-toggletip-plain-focused-trigger-icon-border-colour": "#004f71ff",
			"*Graveyard-toggletip-plain-focused-close-icon-border-colour": "#004f71ff",
			"accessible-focus-border-container-outer-shadow-colour": "#ffffffff",
			"navigation-bar-item-brand-icon-colour": "#ffffffff",
			"navigation-bar-item-brand-label-text-colour": "#ffffffff",
			"navigation-bar-item-brand-hovered-container-background": "#00344b0a",
			"navigation-bar-item-brand-focused-container-background": "#00344b14",
			"navigation-bar-item-brand-active-label-text-colour": "#ffffffff",
			"navigation-bar-item-brand-active-icon-colour": "#ffffffff",
			"colour-primary": "#004f71ff",
			"colour-on-primary": "#ffffffff",
			"colour-primary-inverse": "#367190ff",
			"colour-on-primary-inverse": "#ffffffff",
			"colour-primary-interaction": "#447fa2ff",
			"colour-primary-interaction-inverse": "#447fa2ff",
			"colour-secondary": "#000000ff",
			"colour-on-secondary": "#ffffffff",
			"colour-secondary-inverse": "#ffffffff",
			"colour-on-secondary-inverse": "#000000ff",
			"colour-secondary-interaction": "#434343ff",
			"colour-secondary-interaction-inverse": "#d9d9d9ff",
			"colour-tertiary": "#434343ff",
			"colour-on-tertiary": "#f5f5f5ff",
			"colour-tertiary-inverse": "#f5f5f5ff",
			"colour-on-tertiary-inverse": "#434343ff",
			"colour-tertiary-interaction": "#555555ff",
			"colour-tertiary-interaction-inverse": "#d9d9d9ff",
			"colour-disabled": "#d9d9d9ff",
			"colour-on-disabled": "#7b7b7bff",
			"colour-disabled-inverse": "#7b7b7bff",
			"colour-on-disabled-inverse": "#d9d9d9ff",
			"colour-error": "#b20010ff",
			"colour-on-error": "#ffbec4ff",
			"colour-error-inverse": "#ffbec4ff",
			"colour-on-error-inverse": "#b20010ff",
			"colour-success": "#398004ff",
			"colour-on-success": "#ffffffff",
			"colour-success-inverse": "#d5e9bfff",
			"colour-on-success-inverse": "#000000ff",
			"colour-warning": "#ff732eff",
			"colour-on-warning-inverse": "#000000ff",
			"colour-on-warning": "#000000ff",
			"colour-warning-inverse": "#ffb18aff",
			"colour-informative": "#004a71ff",
			"colour-on-informative": "#c7ebffff",
			"colour-informative-inverse": "#c7ebffff",
			"colour-on-informative-inverse": "#004a71ff",
			"colour-surface": "#f4f8faff",
			"colour-on-surface": "#000000ff",
			"colour-surface-inverse": "#00344bff",
			"colour-on-surface-inverse": "#ffffffff",
			"colour-surface-full": "#ffffffff",
			"colour-on-surface-full": "#000000ff",
			"colour-surface-full-inverse": "#101315ff",
			"colour-on-surface-full-inverse": "#ffffffff",
			"colour-surface-dim": "#ebeff1ff",
			"colour-on-surface-dim": "#000000ff",
			"colour-surface-dim-inverse": "#184a63ff",
			"colour-on-surface-dim-inverse": "#ffffffff",
			"colour-surface-subtle-primary": "#d9f2ffff",
			"colour-surface-subtle-primary-inverse": "#00344bff",
			"colour-surface-subtle-success": "#eef6e5ff",
			"colour-surface-subtle-success-inverse": "#085f00ff",
			"colour-surface-subtle-error": "#ffe8eaff",
			"colour-surface-subtle-error-inverse": "#610009ff",
			"colour-surface-subtle-warning": "#ffeee5ff",
			"colour-surface-subtle-warning-inverse": "#4d1a00ff",
			"colour-surface-subtle-informative": "#ebf8ffff",
			"colour-surface-subtle-informative-inverse": "#002f48ff",
			"colour-opacity-highest": "#ffffffcc",
			"colour-opacity-higher": "#ffffffb8",
			"colour-opacity-high": "#ffffffa3",
			"colour-opacity-medium": "#ffffff52",
			"colour-opacity-low": "#ffffff29",
			"colour-opacity-lower": "#ffffff14",
			"colour-opacity-lowest": "#ffffff0a",
			"colour-opacity-highest-inverse": "#00344bcc",
			"colour-opacity-higher-inverse": "#00344bb8",
			"colour-opacity-high-inverse": "#00344ba3",
			"colour-opacity-medium-inverse": "#00344b52",
			"colour-opacity-low-inverse": "#00344b29",
			"colour-opacity-lower-inverse": "#00344b14",
			"colour-opacity-lowest-inverse": "#00344b0a",
			"border-colour-primary": "#004f71ff",
			"border-colour-primary-inverse": "#367190ff",
			"border-colour-primary-interaction": "#447fa2ff",
			"border-colour-primary-interaction-inverse": "#447fa2ff",
			"border-colour-secondary": "#000000ff",
			"border-colour-secondary-inverse": "#ffffffff",
			"border-colour-secondary-interaction": "#434343ff",
			"border-colour-secondary-interaction-inverse": "#d9d9d9ff",
			"border-colour-opacity-inverse-64": "#00344ba3",
			"border-colour-opacity-64": "#ffffffa3",
			"border-colour-opacity-inverse-32": "#00344b52",
			"border-colour-opacity-32": "#ffffff52",
			"border-colour-opacity-inverse-16": "#00344b29",
			"border-colour-opacity-16": "#ffffff29",
			"border-colour-opacity-inverse-8": "#00344b14",
			"border-colour-opacity-8": "#ffffff14",
			"border-colour-tertiary": "#555555ff",
			"border-colour-tertiary-inverse": "#e9e9e9ff",
			"border-colour-disabled": "#c4c4c4ff",
			"border-colour-disabled-inverse": "#7b7b7bff",
			"border-colour-error": "#b20010ff",
			"border-colour-error-inverse": "#ffbec4ff",
			"border-colour-success": "#398004ff",
			"border-colour-success-inverse": "#d5e9bfff",
			"border-colour-warning": "#ff732eff",
			"border-colour-warning-inverse": "#ffb18aff",
			"border-colour-informative": "#004a71ff",
			"border-colour-informative-inverse": "#c7ebffff",
			"border-colour-accessible": "#004f71ff",
			"border-colour-accessible-inverse": "#367190ff",
			"shadow-accessible-light-colour": "#ffffffff",
			"shadow-accessible-dark-colour": "#000000ff",
			"shadow-level-1-colour": "#00000029",
			"shadow-level-2-colour": "#00000029",
			"shadow-level-3-colour": "#00000029",
			"shadow-inverted-colour": "#00000014",
			"shadow-left-colour": "#00000014",
			"shadow-right-colour": "#00000014",
			"shadow-top-colour": "#00000014"
		},
		floats: {
			"accordion-button-scale-m-l-container-padding-left-right": "1.5rem",
			"accordion-button-container-height": "80px",
			"accordion-button-container-border-bottom": "1px",
			"accordion-button-hovered-container-border": "0px",
			"accordion-button-hovered-container-corner-radius-all-round": "8px",
			"accordion-button-focused-container-corner-radius-all-round": "8px",
			"accordion-button-pressed-container-border": "0px",
			"accordion-button-pressed-container-corner-radius-all-round": "8px",
			"accordion-container-border-bottom-left-right": "1px",
			"accordion-opened-container-corner-radius-all-round": "8px",
			"accordion-closed-container-corner-radius": "0px",
			"accordion-button-active-container-border": "0px",
			"accordion-button-active-container-corner-radius-top": "8px",
			"accordion-content-margin": "24px",
			"accordion-scale-m-l-container-padding-scale": "1.5rem",
			"aspect-ratio-container-corner-radius-all-round": "24px",
			"badge-container-padding-small": "8px",
			"badge-scale-m-l-container-padding": "0.5rem",
			"badge-scale-m-l-container-height": "1.5rem",
			"badge-scale-m-l-container-corner-radius-all-round": "0.25rem",
			"badge-scale-large-container-corner-radius-all-round": "8px",
			"badge-container-rounded-corner-radius": "56px",
			"button-action-filled-container-border": "1px",
			"button-action-scale-m-l-small-icon": "1.5rem",
			"button-action-scale-m-l-large-icon": "2rem",
			"button-action-container-corner-radius-all-round": "100px",
			"button-action-scale-m-l-small-container-padding": "1rem",
			"button-action-scale-m-l-large-container-padding": "1.5rem",
			"button-app-standard-container-corner-radius": "8px",
			"button-app-scale-m-l-container-height": "3.5rem",
			"button-app-scale-m-l-container-width": "190px",
			"button-app-scale-large-container-width": "200px",
			"button-app-standard-container-border": "1px",
			"button-app-inverted-container-border": "1px",
			"button-primary-container-padding-left-right": "24px",
			"button-primary-container-corner-radius-all-round": "100px",
			"button-primary-scale-m-l-icon-margin-right": "0.5rem",
			"button-secondary-container-border": "1px",
			"button-secondary-scale-m-l-icon-margin-right": "0.5rem",
			"button-secondary-container-padding-left-right": "24px",
			"button-secondary-corner-radius-all-round": "100px",
			"button-secondary-scale-m-l-container-height": "3.5rem",
			"button-secondary-scale-m-l-icon": "1.5rem",
			"button-primary-scale-m-l-container-height": "3.5rem",
			"button-primary-scale-m-l-icon": "1.5rem",
			"button-call-out-container-padding-left-right": "24px",
			"button-call-out-container-padding-top-bottom": "12px",
			"button-call-out-container-corner-radius-all-round": "100px",
			"button-call-out-scale-m-l-icon-margin-right": "0.5rem",
			"button-call-out-scale-m-l-container-height": "3.5rem",
			"button-text-hovered-container-border-bottom": "2px",
			"button-text-pressed-container-border-bottom": "2px",
			"button-combo-scale-m-l-button-margin": "0.75rem",
			"button-icon-scale-m-l-icon-margin": "0.75rem",
			"button-icon-scale-m-l-icon-margin 2": "1rem",
			"button-icon-outline-container-border": "2px",
			"button-icon-scale-m-l-container-corner-radius": "1rem",
			"button-icon-scale-m-l-container-padding-left-right": "0.75rem",
			"button-icon-scale-m-l-container-padding-top-bottom": "0.75rem",
			"button-fab-primary-scale-m-l-container-padding": "0.75rem",
			"button-fab-primary-scale-m-l-container-corner-radius": "1rem",
			"button-fab-primary-scale-m-l-icon-margin-right": "0.75rem",
			"button-fab-primary-scale-m-l-icon-size": "2rem",
			"button-fab-secondary-scale-m-l-container-padding": "0.75rem",
			"button-fab-secondary-scale-m-l-container-corner-radius": "1rem",
			"button-fab-secondary-scale-m-l-container-margin": "0.5rem",
			"button-fab-secondary-scale-m-l-icon-margin-right": "0.75rem",
			"button-fab-secondary-scale-m-l-icon-size": "2rem",
			"button-select-active-container-border": "0px",
			"button-select-container-border": "1px",
			"button-select-hovered-container-border": "0px",
			"button-select-pressed-container-border": "0px",
			"button-select-container-padding-left-right": "24px",
			"button-select-container-padding-top-bottom": "12px",
			"button-select-container-corner-radius": "8px",
			"button-select-scale-m-l-container-height": "3rem",
			"button-group-scale-m-l-button-margin": "0.75rem",
			"button-payment-container-padding-left-right": "0px",
			"button-payment-container-padding-top-bottom": "12px",
			"button-payment-container-corner-radius-all-round": "100px",
			"button-payment-scale-m-l-container-height": "3.5rem",
			"button-payment-scale-m-l-container-width": "168px",
			"button-call-out-scale-m-l-icon": "1.5rem",
			"card-base-elevated-hovered-container-border": "1px",
			"card-base-outlined-container-border": "1px",
			"card-base-primary-hovered-container-border": "1px",
			"card-base-inverted-hovered-container-border": "1px",
			"card-base-glass-hovered-container-border": "1px",
			"card-base-glass-inverted-hovered-container-border": "1px",
			"card-base-container-corner-radius-all-round": "16px",
			"carousel-scale-m-l-card-margin": "1rem",
			"carousel-scale-m-l-container-padding-top-bottom": "2.5rem",
			"carousel-scale-m-l-content-margin": "1.5rem",
			"checkbox-hovered-box-container-border": "0px",
			"checkbox-box-container-border": "2px",
			"checkbox-scale-m-l-label-margin-left": "0.75rem",
			"checkbox-box-container-corner-radius-all-round": "4px",
			"date-picker-date-container-corner-radius": "100px",
			"date-picker-floating-container-corner-radius": "8px",
			"date-picker-fixed-container-corner-radius-bottom-left-right": "8px",
			"date-picker-container-padding": "24px",
			"date-picker-scale-m-l-row-margin": "0.25rem",
			"date-picker-date-scale-m-l-container-size": "3rem",
			"date-picker-date-scale-large-container-size": "52px",
			"date-picker-week-day-scale-m-l-container-size": "3rem",
			"date-picker-date-current-container-border": "1px",
			"date-picker-container-min-width": "328px",
			"date-picker-fixed-container-border-bottom-left-right": "1px",
			"date-picker-floating-container-border": "1px",
			"date-picker-flat-container-border": "0px",
			"date-picker-month-selection-container-padding-bottom": "16px",
			"date-picker-date-active-start-container-corner-radius-top-left": "24px",
			"date-picker-date-active-start-container-corner-radius-bottom-left": "24px",
			"date-picker-date-active-end-container-corner-radius-top-right": "24px",
			"date-picker-date-active-end-container-corner-radius-bottom-right": "24px",
			"date-picker-date-active-middle-container-corner-radius": "0px",
			"dialog-container-corner-radius-all-round": "16px",
			"dialog-container-padding": "24px",
			"dialog-content-margin": "24px",
			"dialog-container-border": "1px",
			"divider-container-border": "1px",
			"dot-indicator-container-padding": "24px",
			"dropdown-completed-input-label-margin-bottom": "8px",
			"dropdown-error-input-label-margin-bottom": "8px",
			"dot-indicator-dot-margin": "12px",
			"dropdown-input-container-padding-left-right": "16px",
			"dropdown-input-corner-radius-top": "8px",
			"dropdown-input-container-border-bottom": "2px",
			"dropdown-input-text-margin-right": "16px",
			"dropdown-helper-text-margin-left": "8px",
			"list-icon-icon-margin-right": "8px",
			"list-icon-padding-bottom": "12px",
			"list-unordered-symbol-margin-right": "16px",
			"list-unordered-indent-padding-left": "32px",
			"list-unordered-padding-bottom": "12px",
			"list-ordered-number-margin-right": "8px",
			"list-ordered-indent-padding-left": "32px",
			"list-ordered-padding-bottom": "12px",
			"menu-attached-container-corner-radius-bottom": "16px",
			"menu-attached-container-padding-bottom": "8px",
			"menu-floating-container-padding-top-bottom": "8px",
			"menu-floating-container-corner-radius-all-round": "16px",
			"menu-container-border": "1px",
			"menu-item-container-padding": "16px",
			"menu-item-content-margin": "16px",
			"menu-search-container-padding": "16px",
			"menu-search-content-margin": "16px",
			"menu-search-container-border-bottom": "1px",
			"menu-search-scale-m-l-container-height": "3.25rem",
			"menu-search-scale-m-l-icon-size": "1.5rem",
			"mobile-number-input-input-container-padding-top-left-right": "16px",
			"mobile-number-input-input-container-corner-radius-top": "8px",
			"mobile-number-input-input-container-border-bottom": "2px",
			"mobile-number-input-input-content-margin-right": "16px",
			"mobile-number-input-helper-text-margin-left": "8px",
			"mobile-number-input-input-country-border": "1px",
			"mobile-number-input-input-country-margin-right": "4px",
			"mobile-number-input-disabled-input-country-opacity": "56px",
			"navigation-bar-container-border-top": "1px",
			"navigation-bar-scale-small-container-height": "88px",
			"navigation-bar-scale-medium-container-height": "104px",
			"navigation-bar-item-scale-m-l-icon-container-padding-top": "1.5rem",
			"navigation-bar-item-scale-m-l-container-height": "6.5rem",
			"navigation-bar-item-scale-m-l-content-margin": "0.75rem",
			"navigation-bar-item-container-min-padding-left-right": "8px",
			"notification-toast-container-border-weight": "1px",
			"notification-toast-container-padding-all-round": "8px",
			"notification-toast-text-wrapper-padding-all-round": "8px",
			"notification-toast-container-corner-radius-all-round": "8px",
			"notification-toast-scale-m-l-title-margin-bottom": "0.5rem",
			"notification-toast-button-border-weight": "1px",
			"notification-toast-small-button-padding-left-right": "12px",
			"notification-toast-large-button-padding-left-right": "16px",
			"notification-toast-button-margin-left": "16px",
			"notification-toast-button-margin-right": "8px",
			"notification-toast-scale-m-l-button-margin-right": "0.5rem",
			"notification-toast-small-button-height": "32px",
			"notification-toast-large-button-height": "36px",
			"notification-alert-container-padding-top-bottom": "12px",
			"notification-alert-container-padding-left": "24px",
			"notification-alert-container-padding-right": "16px",
			"notification-alert-scale-m-l-container-height": "4.25rem",
			"notification-alert-container-corner-radius-all-round": "8px",
			"notification-alert-container-border-weight": "1px",
			"notification-alert-inner-container-border-weight": "12px",
			"notification-alert-icon-margin-right": "8px",
			"notification-alert-icon-margin-top": "4px",
			"notification-alert-title-margin-right": "8px",
			"notification-alert-text-container-margin": "12px",
			"notification-alert-dismissible-icon-margin-top-mobile": "4px",
			"notification-alert-dismissible-icon-margin-left-mobile": "8px",
			"notification-alert-dismissible-icon-margin-left-tablet": "12px",
			"notification-alert-dismissible-icon-margin-left-desktop": "16px",
			"notification-inline-container-padding-top-bottom": "12px",
			"notification-inline-container-padding-left": "24px",
			"notification-inline-container-padding-right": "16px",
			"notification-inline-container-height-tablet": "56px",
			"notification-inline-container-height-desktop": "60px",
			"notification-inline-container-corner-radius-all-round": "0px",
			"notification-inline-container-border-weight": "1px",
			"notification-inline-inner-container-border-weight": "12px",
			"notification-inline-icon-margin-right": "8px",
			"notification-inline-icon-margin-top-mobile": "4px",
			"notification-inline-title-margin-right": "8px",
			"notification-inline-text-container-margin": "12px",
			"notification-inline-dismissible-icon-margin-top-mobile": "4px",
			"notification-inline-dismissible-icon-margin-left-mobile": "8px",
			"notification-inline-dismissible-icon-margin-left-tablet": "12px",
			"notification-inline-dismissible-icon-margin-left-desktop": "16px",
			"number-input-input-container-padding-top-left-right": "16px",
			"number-input-input-container-corner-radius-top": "8px",
			"number-input-input-container-border-bottom": "2px",
			"number-input-input-icon-divider-border": "1px",
			"number-input-input-text-margin-right": "16px",
			"number-input-helper-text-margin-left": "8px",
			"pagination-number-margin": "12px",
			"pagination-arrow-margin": "16px",
			"pagination-item-container-corner-radius": "100px",
			"pagination-item-scale-m-l-container-size": "2.25rem",
			"pagination-arrow-container-corner-radius": "24px",
			"pagination-arrow-scale-m-l-icon-size": "1.5rem",
			"pagination-arrow-scale-m-l-container-size": "2.25rem",
			"pin-input-scale-m-l-helper-margin-top": "0.75rem",
			"pin-input-helper-text-margin-left": "8px",
			"pin-input-container-input-margin": "8px",
			"pin-input-container-max-width": "508px",
			"pin-input-field-container-padding-left-right": "16px",
			"pin-input-field-container-corner-radius-top": "8px",
			"pin-input-field-container-border-bottom": "2px",
			"menu-item-scale-m-l-container-height": "3.25rem",
			"menu-item-scale-m-l-icon-size": "1.5rem",
			"menu-item-scale-m-l-flag-size": "1.5rem",
			"progress-indicator-linear-container-padding": "0px",
			"progress-indicator-linear-track-corner-radius": "4px",
			"progress-indicator-linear-indeterminate-track-corner-radius": "4px",
			"progress-indicator-linear-indicator-corner-radius": "0px",
			"progress-indicator-circular-container-padding": "0px",
			"progress-indicator-circular-indicator-corner-radius-top": "2px",
			"radio-button-radio-container-border": "2px",
			"radio-button-scale-m-l-label-margin-left": "0.75rem",
			"radio-button-radio-container-corner-radius-all-round": "100px",
			"radio-button-hovered-radio-container-border": "0px",
			"radio-button-completed-radio-container-border": "0px",
			"rating-star-container-width-min": "40px",
			"rating-star-container-height-min": "40px",
			"rating-star-icon-margin-right": "12px",
			"rating-experience-container-margin-right-compact": "12px",
			"rating-experience-container-margin-right-comfortable": "24px",
			"rating-experience-icon-opacity": "80px",
			"rating-experience-icon-margin-bottom": "8px",
			"rating-experience-active-icon-opacity": "100px",
			"scrollbar-container-padding": "0px",
			"scrollbar-track-corner-radius": "16px",
			"scrollbar-indicator-corner-radius": "16px",
			"scrollbar-indicator-height": "4px",
			"scrollbar-hovered-indicator-height-hover": "8px",
			"scrollbar-focused-indicator-border": "1px",
			"search-bar-container-padding": "16px",
			"search-bar-scale-m-l-container-height": "4rem",
			"search-bar-scale-m-l-icon-size": "1.5rem",
			"search-bar-content-margin": "16px",
			"search-bar-container-border": "1px",
			"search-bar-container-corner-radius-all-round": "16px",
			"search-bar-hovered-container-border": "0px",
			"search-bar-focused-container-border": "0px",
			"search-bar-active-container-border-bottom": "1px",
			"search-bar-active-container-corner-radius-top": "16px",
			"search-suggestion-container-padding": "16px",
			"search-suggestion-content-margin": "16px",
			"search-suggestion-scale-m-l-container-height": "3.75rem",
			"search-suggestion-scale-m-l-icon-size": "1.5rem",
			"search-suggestion-scale-m-l-label-margin-bottom": "0.5rem",
			"search-container-corner-radius-all-round": "16px",
			"search-scale-m-l-active-container-padding-bottom": "0.75rem",
			"sheet-bottom-container-corner-radius-top": "24px",
			"sheet-side-container-corner-radius-top-left": "24px",
			"sheet-side-container-corner-radius-top-right": "24px",
			"sheet-side-container-padding-left-right": "24px",
			"sheet-side-container-padding-top": "40px",
			"switch-scale-m-l-label-margin-right": "0.75rem",
			"switch-scale-m-l-label-margin-left": "0.75rem",
			"switch-toggle-container-corner-radius-all-round": "24px",
			"switch-toggle-padding-all-round": "2px",
			"tabs-label-padding-left-right": "24px",
			"tabs-label-padding-top-bottom": "24px",
			"tabs-active-label-underline-border-weight": "4px",
			"tag-container-padding-left-right": "12px",
			"tag-content-margins": "8px",
			"tag-container-corner-radius": "56px",
			"tag-scale-m-l-icon-size": "1rem",
			"tag-scale-m-l-container-height": "2.25rem",
			"tag-outlined-container-border-weight": "1px",
			"text-area-input-container-padding": "16px",
			"text-area-input-container-corner-radius-top": "8px",
			"text-area-input-container-border-bottom": "2px",
			"text-area-input-text-margin-right": "16px",
			"text-area-character-count-container-corner-radius": "16px",
			"text-area-character-count-container-padding-top-bottom": "4px",
			"text-area-character-count-container-padding-left-right": "8px",
			"text-area-helper-text-margin-left": "8px",
			"text-input-input-container-padding-top-left-right": "16px",
			"text-input-input-container-corner-radius-top": "8px",
			"text-input-input-container-border-bottom": "2px",
			"text-input-input-text-margin-right": "16px",
			"text-input-helper-text-margin-left": "8px",
			"text-input-scale-m-l-input-container-height": "4rem",
			"text-input-scale-m-l-input-margin-bottom": "0.75rem",
			"text-input-scale-m-l-input-icon-size": "1.5rem",
			"text-input-scale-m-l-input-label-margin-bottom": "0.5rem",
			"mobile-number-input-scale-m-l-input-container-height": "4rem",
			"mobile-number-input-scale-m-l-input-margin-bottom": "0.75rem",
			"mobile-number-input-scale-m-l-input-icon-size": "1.5rem",
			"mobile-number-input-scale-m-l-input-label-margin-bottom": "0.5rem",
			"number-input-scale-m-l-input-container-height": "4rem",
			"number-input-scale-m-l-input-margin-bottom": "0.75rem",
			"number-input-scale-m-l-input-icon-size": "1.5rem",
			"number-input-scale-m-l-input-label-margin-bottom": "0.5rem",
			"dropdown-scale-m-l-input-container-height": "4rem",
			"pin-input-field-scale-m-l-input-container-height": "4rem",
			"dropdown-scale-m-l-input-margin-bottom": "0.75rem",
			"dropdown-scale-m-l-input-icon-size": "1.5rem",
			"dropdown-scale-m-l-input-label-margin-bottom": "0.5rem",
			"text-area-scale-m-l-input-margin-bottom": "0.75rem",
			"text-area-scale-m-l-input-icon-size": "1.5rem",
			"text-area-scale-m-l-input-label-margin-bottom": "0.5rem",
			"text-link-container-border-bottom": "1px",
			"text-link-container-padding-all-round": "4px",
			"tooltip-container-padding-left-right": "12px",
			"tooltip-container-padding-top-bottom": "12px",
			"tooltip-container-margin": "8px",
			"tooltip-container-width-max": "300px",
			"tooltip-dismissible-icon-margin-left": "8px",
			"tooltip-scale-m-l-icon-size": "1rem",
			"tooltip-trigger-icon-corner-radius": "100px",
			"button-text-scale-m-l-icon-margin-right": "0.5rem",
			"*Demo-corner-radius-large": "32px",
			"*Demo-corner-radius-medium": "24px",
			"*Demo-corner-radius-small": "16px",
			"*Demo-gap": "0px",
			"*Demo-padding": "24px",
			"checkbox-completed-box-container-border": "0px",
			"*Graveyard-drawer-container-padding-left-right": "8px",
			"*Graveyard-drawer-container-padding-top-bottom": "16px",
			"*Graveyard-drawer-container-corner-radius": "8px",
			"*Graveyard-toggletip-plain-container-corner-radius": "4px",
			"*Graveyard-toggletip-plain-container-padding-left-right": "8px",
			"*Graveyard-toggletip-plain-container-padding-top-bottom": "4px",
			"*Graveyard-toggletip-plain-container-margin": "4px",
			"*Graveyard-toggletip-plain-container-width-max": "140px",
			"*Graveyard-toggletip-plain-trigger-corner-radius": "100px",
			"*Graveyard-toggletip-plain-text-margin-right": "16px",
			"*Graveyard-toggletip-plain-close-icon-margin-top": "2px",
			"*Graveyard-toggletip-plain-focused-trigger-icon-border-weight": "2px",
			"*Graveyard-toggletip-plain-focused-close-icon-border-weight": "1px",
			"accessible-focus-border-container-border": "4px",
			"accessible-focus-border-container-outer-border": "2px",
			"navigation-bar-item-brand-scale-m-l-icon-container-padding-top": "1.5rem",
			"navigation-bar-item-brand-scale-m-l-container-height": "6.5rem",
			"navigation-bar-item-brand-scale-m-l-content-margin": "0.75rem",
			"navigation-bar-item-brand-container-min-padding-left-right": "8px",
			"navigation-bar-item-brand-label-text-opacity": "48px",
			"navigation-bar-item-brand-icon-opacity": "48px",
			"navigation-bar-item-brand-active-label-text-opacity": "100px",
			"navigation-bar-item-brand-active-icon-opacity": "100px",
			"button-text-scale-m-l-icon": "1.5rem",
			"button-text-scale-m-l-container-height": "3.5rem",
			"button-text-scale-large-container-height": "60px",
			"button-icon-scale-m-l-icon-size": "1.5rem",
			"border-weight-none": "0px",
			"border-weight-small": "1px",
			"border-weight-medium": "2px",
			"border-weight-large": "4px",
			"padding-none": "0px",
			"padding-3xsmall": "2px",
			"padding-2xsmall": "4px",
			"padding-xsmall": "8px",
			"padding-small": "12px",
			"padding-medium": "16px",
			"padding-large": "24px",
			"padding-xlarge": "32px",
			"padding-2xlarge": "40px",
			"padding-3xlarge": "48px",
			"margin-none": "0px",
			"margin-3xsmall": "2px",
			"margin-2xsmall": "4px",
			"margin-xsmall": "8px",
			"margin-small": "12px",
			"margin-medium": "16px",
			"margin-large": "24px",
			"margin-xlarge": "32px",
			"margin-2xlarge": "40px",
			"margin-section-vertical-large": "72px",
			"margin-section-vertical-medium": "64px",
			"margin-section-vertical-small": "56px",
			"corner-radius-none": "0px",
			"corner-radius-3xsmall": "2px",
			"corner-radius-2xsmall": "4px",
			"corner-radius-xsmall": "8px",
			"corner-radius-small": "16px",
			"corner-radius-medium": "24px",
			"corner-radius-large": "32px",
			"corner-radius-xlarge": "40px",
			"corner-radius-2xlarge": "48px",
			"corner-radius-3xlarge": "56px",
			"corner-radius-full": "100px",
			"shadow-accessible": "3px",
			"shadow-level-1-blur": "4px",
			"shadow-level-1-y": "1px",
			"shadow-level-1-spread": "0px",
			"shadow-level-2-blur": "16px",
			"shadow-level-2-y": "8px",
			"shadow-level-2-spread": "2px",
			"shadow-level-3-blur": "24px",
			"shadow-level-3-y": "16px",
			"shadow-level-3-spread": "4px",
			"shadow-inverted-blur": "8px",
			"shadow-inverted-y": "-4px",
			"shadow-inverted-spread": "2px",
			"shadow-left-blur": "8px",
			"shadow-left-x": "-4px",
			"shadow-left-spread": "2px",
			"shadow-right-blur": "8px",
			"shadow-right-x": "4px",
			"shadow-right-spread": "2px",
			"shadow-top-blur": "8px",
			"shadow-top-y": "-2px",
			"shadow-top-spread": "1px",
			"blur-background-level-1": "4px",
			"blur-background-level-2": "8px",
			"blur-background-level-3": "16px",
			"blur-layer-level-1": "24px",
			"blur-layer-level-2": "48px",
			"blur-layer-level-3": "96px"
		}
	},
	dark: {
		colors: {
			"logo-core-default-colour": "#ffffffff",
			"logo-core-inverted-colour": "#000000ff",
			"logo-core-brand-colour": "#004f71ff",
			"logo-core-on-image-colour-light": "#ffffffff",
			"logo-core-on-image-colour-dark": "#00344bff",
			"logo-play-default-colour": "#ffffffff",
			"logo-play-inverted-colour": "#000000ff",
			"logo-play-brand-colour": "#004f71ff",
			"logo-play-on-image-colour-light": "#ffffffff",
			"logo-play-on-image-colour-dark": "#00344bff",
			"logo-payment-default-colour": "#ffffffff",
			"logo-payment-opacity-colour": "#ffffff52",
			"logo-payment-opacity-inverse-colour": "#00344b52",
			"container-bg-colour-full": "#101315ff",
			"container-bg-colour-subtle": "#00344bff",
			"container-bg-colour-dim": "#184a63ff",
			"container-bg-colour-brand": "#367190ff",
			"container-bg-colour-full-inverse": "#ffffffff",
			"container-bg-colour-subtle-inverse": "#f4f8faff",
			"container-bg-colour-dim-inverse": "#ebeff1ff",
			"accessible-focus-border-container-border-colour": "#367190ff",
			"avatar-container-colour": "#ffffffa3",
			"avatar-label-text-colour": "#00344bcc",
			"avatar-icon-colour": "#00344bcc",
			"accordion-button-label-text-colour": "#ffffffff",
			"accordion-button-icon-colour": "#ffffffff",
			"accordion-button-container-border-colour": "#ffffff29",
			"accordion-button-hovered-label-text-colour": "#ffffffff",
			"accordion-button-hovered-container-colour": "#ffffff14",
			"accordion-button-focused-label-text-colour": "#ffffffff",
			"accordion-button-focused-container-colour": "#ffffff14",
			"accordion-button-pressed-container-colour": "#ffffff29",
			"accordion-button-disabled-label-text-colour": "#d9d9d9ff",
			"accordion-button-disabled-icon-colour": "#7b7b7bff",
			"accordion-container-border-colour": "#ffffff14",
			"accordion-button-active-label-text-colour": "#ffffffff",
			"accordion-button-active-container-colour": "#ffffff14",
			"accordion-button-active-hovered-container-colour": "#ffffff14",
			"accordion-button-active-pressed-container-colour": "#ffffff29",
			"accordion-button-active-focused-container-colour": "#ffffff14",
			"badge-label-text-colour": "#000000ff",
			"badge-container-colour": "#ffffffff",
			"badge-alert-label-text-colour": "#b20010ff",
			"badge-alert-container-colour": "#ffbec4ff",
			"badge-warning-label-text-colour": "#000000ff",
			"badge-warning-container-colour": "#ffb18aff",
			"badge-positive-label-text-colour": "#000000ff",
			"badge-positive-container-colour": "#d5e9bfff",
			"badge-informative-label-text-colour": "#004a71ff",
			"badge-informative-container-colour": "#c7ebffff",
			"badge-brand-core-label-text-colour": "#ffffffff",
			"badge-brand-core-container-colour": "#367190ff",
			"button-action-transparent-icon-colour": "#000000ff",
			"button-action-transparent-container-colour": "#ffffffa3",
			"button-action-transparent-hovered-icon-colour": "#434343ff",
			"button-action-transparent-hovered-container-colour": "#ffffffcc",
			"button-action-transparent-focused-icon-colour": "#434343ff",
			"button-action-transparent-focused-container-colour": "#ffffffcc",
			"button-action-transparent-pressed-icon-colour": "#434343ff",
			"button-action-transparent-pressed-container-colour": "#ffffff52",
			"button-action-transparent-disabled-icon-colour": "#555555ff",
			"button-action-transparent-disabled-container-colour": "#ffffff29",
			"button-action-filled-container-border-colour": "#ffffff52",
			"button-action-filled-icon-colour": "#ffffffff",
			"button-action-filled-container-colour": "#101315ff",
			"button-action-filled-hovered-container-border-colour": "#ffffff14",
			"button-action-filled-hovered-icon-colour": "#f5f5f5ff",
			"button-action-filled-hovered-container-colour": "#434343ff",
			"button-action-filled-focused-icon-colour": "#f5f5f5ff",
			"button-action-filled-focused-container-colour": "#434343ff",
			"button-action-filled-pressed-icon-colour": "#f5f5f5ff",
			"button-action-filled-disabled-container-colour": "#00344bff",
			"button-action-filled-disabled-icon-colour": "#7b7b7bff",
			"button-action-filled-disabled-container-border-colour": "#ffffff29",
			"button-action-filled-pressed-container-colour": "#555555ff",
			"button-action-filled-pressed-container-border-colour": "#ffffff14",
			"button-app-standard-hovered-container-colour": "#00344bff",
			"button-app-standard-hovered-label-text-colour": "#ffffffff",
			"button-app-standard-hovered-symbol-colour": "#ffffffff",
			"button-app-standard-focused-container-colour": "#101315ff",
			"button-app-standard-focused-label-text-colour": "#ffffffff",
			"button-app-standard-focused-symbol-colour": "#ffffffff",
			"button-app-standard-container-colour": "#101315ff",
			"button-app-standard-container-border-colour": "#ffffff29",
			"button-app-standard-label-text-colour": "#ffffffff",
			"button-app-standard-symbol-colour": "#ffffffff",
			"button-app-inverted-container-colour": "#ffffffff",
			"button-app-inverted-container-border-colour": "#00344b29",
			"button-app-inverted-label-text-colour": "#000000ff",
			"button-app-inverted-symbol-colour": "#000000ff",
			"button-app-inverted-hovered-container-colour": "#f4f8faff",
			"button-app-inverted-hovered-label-text-colour": "#000000ff",
			"button-app-inverted-hovered-symbol-colour": "#000000ff",
			"button-app-inverted-focused-container-colour": "#ffffffff",
			"button-app-inverted-focused-label-text-colour": "#000000ff",
			"button-app-inverted-focused-symbol-colour": "#000000ff",
			"button-primary-container-colour": "#367190ff",
			"button-primary-icon-colour": "#ffffffff",
			"button-primary-label-text-colour": "#ffffffff",
			"button-secondary-icon-colour": "#ffffffff",
			"button-secondary-label-text-colour": "#ffffffff",
			"button-secondary-container-border-colour": "#ffffffa3",
			"button-secondary-hovered-icon-colour": "#d9d9d9ff",
			"button-secondary-hovered-label-text-colour": "#d9d9d9ff",
			"button-secondary-hovered-container-colour": "#ffffff14",
			"button-secondary-hovered-container-border-colour": "#e9e9e9ff",
			"button-secondary-focused-icon-colour": "#d9d9d9ff",
			"button-secondary-focused-label-text-colour": "#d9d9d9ff",
			"button-secondary-focused-container-colour": "#ffffff14",
			"button-secondary-pressed-icon-colour": "#d9d9d9ff",
			"button-secondary-pressed-label-text-colour": "#d9d9d9ff",
			"button-secondary-pressed-container-colour": "#ffffff14",
			"button-secondary-pressed-container-border-colour": "#c4c4c4ff",
			"button-secondary-disabled-icon-colour": "#d9d9d9ff",
			"button-secondary-disabled-label-text-colour": "#d9d9d9ff",
			"button-secondary-disabled-container-border-colour": "#7b7b7bff",
			"button-primary-hovered-container-colour": "#447fa2ff",
			"button-primary-focused-container-colour": "#447fa2ff",
			"button-primary-pressed-container-colour": "#447fa2ff",
			"button-primary-pressed-icon-colour": "#434343ff",
			"button-primary-pressed-label-text-colour": "#434343ff",
			"button-primary-disabled-container-colour": "#7b7b7bff",
			"button-primary-disabled-icon-colour": "#d9d9d9ff",
			"button-primary-disabled-label-text-colour": "#d9d9d9ff",
			"button-call-out-container-colour": "#ffffffff",
			"button-call-out-icon-colour": "#000000ff",
			"button-call-out-lable-text-colour": "#000000ff",
			"button-call-out-hovered-container-colour": "#d9d9d9ff",
			"button-call-out-focused-container-colour": "#d9d9d9ff",
			"button-call-out-pressed-container-colour": "#d9d9d9ff",
			"button-call-out-pressed-icon-colour": "#434343ff",
			"button-call-out-pressed-label-text-colour": "#434343ff",
			"button-call-out-disabled-container-colour": "#7b7b7bff",
			"button-call-out-disabled-icon-colour": "#d9d9d9ff",
			"button-call-out-disabled-label-text-colour": "#d9d9d9ff",
			"button-text-icon-colour": "#ffffffff",
			"button-text-label-text-colour": "#ffffffff",
			"button-text-hovered-icon-colour": "#d9d9d9ff",
			"button-text-hovered-label-text-colour": "#d9d9d9ff",
			"button-text-hovered-container-border-colour": "#ffffffff",
			"button-text-focused-icon-colour": "#d9d9d9ff",
			"button-text-focused-label-text-colour": "#d9d9d9ff",
			"button-text-pressed-icon-colour": "#d9d9d9ff",
			"button-text-pressed-label-text-colour": "#d9d9d9ff",
			"button-text-pressed-container-border-colour": "#447fa2ff",
			"button-text-disabled-icon-colour": "#7b7b7bff",
			"button-text-disabled-label-text-colour": "#7b7b7bff",
			"button-icon-icon-primary-colour": "#367190ff",
			"button-icon-icon-colour": "#ffffffff",
			"button-icon-label-text-colour": "#ffffffff",
			"button-icon-outline-container-border-colour": "#ffffff29",
			"button-icon-filled-container-colour": "#ffffff14",
			"button-icon-hovered-container-colour": "#ffffff29",
			"button-icon-focused-icon-colour": "#d9d9d9ff",
			"button-icon-focused-label-text-colour": "#d9d9d9ff",
			"button-icon-focused-container-colour": "#ffffff29",
			"button-icon-pressed-icon-colour": "#d9d9d9ff",
			"button-icon-pressed-label-text-colour": "#d9d9d9ff",
			"button-icon-pressed-container-colour": "#ffffff52",
			"button-icon-disabled-icon-colour": "#7b7b7bff",
			"button-icon-disabled-label-text-colour": "#7b7b7bff",
			"button-icon-disabled-container-colour": "#ffffff0a",
			"button-icon-outline-disabled-container-border-colour": "#ffffff14",
			"button-fab-primary-icon-colour": "#ffffffff",
			"button-fab-primary-label-text-colour": "#ffffffff",
			"button-fab-primary-container-colour": "#367190ff",
			"button-fab-primary-hovered-container-colour": "#367190ff",
			"button-fab-primary-focused-container-colour": "#447fa2ff",
			"button-fab-primary-pressed-icon-colour": "#434343ff",
			"button-fab-primary-pressed-label-text-colour": "#434343ff",
			"button-fab-primary-pressed-container-colour": "#447fa2ff",
			"button-fab-primary-disabled-icon-colour": "#d9d9d9ff",
			"button-fab-primary-disabled-label-text-colour": "#d9d9d9ff",
			"button-fab-primary-disabled-container-colour": "#7b7b7bff",
			"button-fab-secondary-icon-colour": "#000000ff",
			"button-fab-secondary-label-text-colour": "#000000ff",
			"button-fab-secondary-container-colour": "#ffffffff",
			"button-fab-secondary-hovered-container-colour": "#d9d9d9ff",
			"button-fab-secondary-focused-container-colour": "#d9d9d9ff",
			"button-fab-secondary-pressed-icon-colour": "#434343ff",
			"button-fab-secondary-pressed-label-text-colour": "#434343ff",
			"button-fab-secondary-pressed-container-colour": "#d9d9d9ff",
			"button-fab-secondary-disabled-icon-colour": "#d9d9d9ff",
			"button-fab-secondary-disabled-label-text-colour": "#d9d9d9ff",
			"button-fab-secondary-disabled-container-colour": "#7b7b7bff",
			"button-select-container-border-colour": "#ffffffa3",
			"button-select-label-text-colour": "#ffffffff",
			"button-select-hovered-container-colour": "#ffffff29",
			"button-select-focused-label-text-colour": "#ffffffff",
			"button-select-focused-container-colour": "#367190ff",
			"button-select-pressed-container-border-colour": "#d9d9d9ff",
			"button-select-active-label-text-colour": "#ffffffff",
			"button-select-active-container-colour": "#367190ff",
			"button-select-pressed-container-colour": "#ffffff29",
			"button-select-pressed-label-text-colour": "#d9d9d9ff",
			"button-select-disabled-container-border-colour": "#7b7b7bff",
			"button-select-disabled-label-text-colour": "#7b7b7bff",
			"button-payment-logo-colour": "#000000ff",
			"button-payment-container-colour": "#ffffffff",
			"button-payment-hovered-container-colour": "#d9d9d9ff",
			"button-payment-focused-container-colour": "#d9d9d9ff",
			"button-payment-pressed-logo-colour": "#434343ff",
			"button-payment-pressed-container-colour": "#d9d9d9ff",
			"button-payment-disabled-logo-colour": "#d9d9d9ff",
			"button-payment-disabled-container-colour": "#7b7b7bff",
			"card-base-elevated-container-colour": "#101315ff",
			"card-base-elevated-hovered-container-border-colour": "#ffffff52",
			"card-base-elevated-pressed-container-colour": "#00344bff",
			"card-base-outlined-container-colour": "#101315ff",
			"card-base-outlined-container-border-colour": "#ffffff52",
			"card-base-outlined-hovered-container-border-colour": "#ffffffa3",
			"card-base-outlined-pressed-container-colour": "#00344bff",
			"card-base-primary-container-colour": "#367190ff",
			"card-base-primary-hovered-container-border-colour": "#ffffffa3",
			"card-base-primary-hovered-container-colour": "#447fa2ff",
			"card-base-primary-pressed-container-colour": "#447fa2ff",
			"card-base-inverted-container-colour": "#ffffffff",
			"card-base-inverted-hovered-container-colour": "#f4f8faff",
			"card-base-inverted-hovered-container-border-colour": "#00344ba3",
			"card-base-inverted-pressed-container-colour": "#ebeff1ff",
			"card-base-glass-container-colour": "#00344bcc",
			"card-base-glass-hovered-container-colour": "#00344bb8",
			"card-base-glass-hovered-container-border-colour": "#00344ba3",
			"card-base-glass-pressed-container-colour": "#00344ba3",
			"card-base-glass-inverted-container-colour": "#ffffffcc",
			"card-base-glass-inverted-hovered-container-colour": "#ffffffb8",
			"card-base-glass-inverted-hovered-container-border-colour": "#ffffffa3",
			"card-base-glass-inverted-pressed-container-colour": "#ffffffa3",
			"carousel-title-text-colour": "#ffffffff",
			"checkbox-label-text-colour": "#f5f5f5ff",
			"checkbox-hovered-label-text-colour": "#ffffffff",
			"checkbox-hovered-box-container-colour": "#367190ff",
			"checkbox-box-border-colour": "#ffffffff",
			"checkbox-focused-label-text-colour": "#ffffffff",
			"date-picker-week-day-label-text-colour": "#ffffffa3",
			"date-picker-date-label-text-colour": "#ffffffcc",
			"date-picker-container-colour": "#101315ff",
			"date-picker-container-border-colour": "#ffffff29",
			"date-picker-date-current-container-border-colour": "#367190ff",
			"date-picker-month-selection-icon-colour": "#ffffffff",
			"date-picker-month-selection-label-text-colour": "#ffffffff",
			"date-picker-date-hovered-label-text-colour": "#ffffffff",
			"date-picker-date-hovered-container-colour": "#ffffff29",
			"date-picker-date-focused-label-text-colour": "#ffffffff",
			"date-picker-date-focused-container-colour": "#ffffff29",
			"date-picker-date-active-label-text-colour": "#ffffffff",
			"date-picker-date-active-start-label-text-colour": "#ffffffff",
			"date-picker-date-active-start-container-colour": "#367190ff",
			"date-picker-date-active-middle-label-text-colour": "#ffffffff",
			"date-picker-date-active-end-label-text-colour": "#ffffffff",
			"date-picker-date-active-end-container-colour": "#367190ff",
			"date-picker-date-active-middle-container-colour": "#447fa2ff",
			"date-picker-date-disabled-label-text-colour": "#ffffffa3",
			"date-picker-date-active-container-colour": "#367190ff",
			"dialog-title-text-colour": "#ffffffff",
			"dialog-text-colour": "#ffffffff",
			"dialog-container-colour": "#000000ff",
			"dialog-contianer-border-colour": "#ffffff29",
			"dismissible-hovered-icon-colour": "#ffffffb8",
			"dismissible-pressed-icon-colour": "#ffffffa3",
			"divider-on-primary-container-colour": "#ffffff52",
			"divider-on-secondary-container-colour": "#ffffff52",
			"divider-on-tertiary-container-colour": "#ffffff52",
			"divider-on-primary-inverse-container-colour": "#00344b14",
			"divider-on-secondary-inverse-container-colour": "#00344b14",
			"divider-on-tertiary-inverse-container-colour": "#00344b14",
			"divider-on-brand-container-colour": "#00344b29",
			"dot-indicator-container-colour": "#ffffff52",
			"dot-indicator-standard-hovered-container-colour": "#ffffffa3",
			"dot-indicator-standard-active-container-colour": "#ffffffb8",
			"dot-indicator-inverted-container-colour": "#00344b52",
			"dot-indicator-inverted-hovered-container-colour": "#00344ba3",
			"dropdown-hovered-input-container-colour": "#ffffff29",
			"dot-indicator-inverted-active-container-colour": "#00344bb8",
			"dropdown-hovered-input-container-border-colour": "#d9d9d9ff",
			"dropdown-focused-label-text-colour": "#d9d9d9ff",
			"dropdown-focused-input-container-border-colour": "#367190ff",
			"dropdown-completed-input-text-colour": "#ffffffff",
			"dropdown-error-input-text-colour": "#ffffffff",
			"dropdown-error-input-container-colour": "#ffffff29",
			"dropdown-error-helper-icon-colour": "#ffbec4ff",
			"dropdown-error-input-container-border-colour": "#ffbec4ff",
			"dropdown-disabled-input-label-text-colour": "#ffffff52",
			"dropdown-disabled-icon-colour": "#ffffff52",
			"dropdown-input-container-colour": "#ffffff14",
			"dropdown-disabled-input-container-border-colour": "#7b7b7bff",
			"dropdown-input-label-text-colour": "#f5f5f5ff",
			"dropdown-icon-colour": "#f5f5f5ff",
			"dropdown-helper-text-colour": "#d9d9d9ff",
			"dropdown-helper-icon-colour": "#d9d9d9ff",
			"dropdown-input-container-border-colour": "#ffffffff",
			"list-icon-label-text-colour": "#ffffffff",
			"list-icon-icon-primary-colour": "#367190ff",
			"list-icon-icon-secondary-colour": "#ffffffff",
			"list-unordered-label-text-colour": "#ffffffff",
			"list-unordered-symbol-primary-colour": "#367190ff",
			"list-unordered-symbol-secondary-colour": "#ffffffff",
			"list-ordered-label-text-colour": "#ffffffff",
			"list-ordered-number-primary-colour": "#367190ff",
			"list-ordered-number-secondary-colour": "#ffffffff",
			"menu-container-colour": "#101315ff",
			"menu-container-border-colour": "#555555ff",
			"menu-item-label-text-colour": "#f5f5f5ff",
			"menu-item-leading-icon-colour": "#f5f5f5ff",
			"menu-item-trailing-icon-colour": "#d9d9d9ff",
			"menu-item-container-colour": "#101315ff",
			"menu-item-hovered-label-text-colour": "#ffffffff",
			"menu-item-hovered-leading-icon-colour": "#ffffffff",
			"menu-item-hovered-container-colour": "#00344bff",
			"menu-item-focused-container-colour": "#00344bff",
			"menu-item-active-label-text-colour": "#ffffffff",
			"menu-item-active-leading-icon-colour": "#ffffffff",
			"menu-item-active-trailing-icon-colour": "#ffffffff",
			"menu-item-active-container-colour": "#00344bff",
			"menu-search-label-text-colour": "#d9d9d9ff",
			"menu-search-icon-colour": "#ffffffa3",
			"menu-search-container-colour": "#101315ff",
			"menu-search-container-border-colour": "#ffffff52",
			"menu-search-focused-container-colour": "#00344bff",
			"menu-search-hovered-container-colour": "#00344bff",
			"menu-search-completed-label-text-colour": "#ffffffff",
			"menu-search-completed-leading-icon-colour": "#d9d9d9ff",
			"menu-search-completed-trailing-icon-colour": "#ffffffa3",
			"menu-search-completed-container-colour": "#00344bff",
			"mobile-number-input-input-container-colour": "#ffffff14",
			"mobile-number-input-input-label-text-colour": "#f5f5f5ff",
			"mobile-number-input-input-text-colour": "#d9d9d9ff",
			"mobile-number-input-input-icon-colour": "#f5f5f5ff",
			"mobile-number-input-input-dropdown-icon-colour": "#ffffff52",
			"mobile-number-input-helper-text-colour": "#d9d9d9ff",
			"mobile-number-input-helper-icon-colour": "#d9d9d9ff",
			"mobile-number-input-input-container-border-colour": "#ffffffff",
			"mobile-number-input-input-country-border colour": "#ffffff52",
			"mobile-number-input-hovered-input-text-colour": "#f5f5f5ff",
			"mobile-number-input-hovered-input-container-colour": "#ffffff29",
			"mobile-number-input-hovered-input-container-border-colour": "#d9d9d9ff",
			"mobile-number-input-focused-input-container-border-colour": "#367190ff",
			"mobile-number-input-completed-input-text-colour": "#ffffffff",
			"mobile-number-input-error-input-text-colour": "#ffffffff",
			"mobile-number-input-error-input-container-colour": "#ffffff29",
			"mobile-number-input-error-helper-icon-colour": "#ffbec4ff",
			"mobile-number-input-error-input-container-border-colour": "#ffbec4ff",
			"mobile-number-input-disabled-input-label-text-colour": "#ffffff52",
			"mobile-number-input-disabled-input-text-colour": "#ffffff52",
			"mobile-number-input-disabled-input-icon-colour": "#ffffff52",
			"mobile-number-input-disabled-input-container-border-colour": "#7b7b7bff",
			"mobile-number-input-disabled-input-dropdown-icon-colour": "#ffffff29",
			"navigation-bar-transparent-container-background-colour": "#00344bcc",
			"navigation-bar-filled-container-background-colour": "#101315ff",
			"navigation-bar-brand-container-background-colour": "#004f71ff",
			"navigation-bar-container-border-colour": "#ffffff14",
			"navigation-bar-item-icon-colour": "#ffffffa3",
			"navigation-bar-item-label-text-colour": "#ffffffa3",
			"navigation-bar-item-hovered-label-text-colour": "#ffffffcc",
			"navigation-bar-item-hovered-icon-colour": "#ffffffcc",
			"navigation-bar-item-hovered-container-background": "#ffffff14",
			"navigation-bar-item-focused-label-text-colour": "#ffffffcc",
			"navigation-bar-item-focused-icon-colour": "#ffffffcc",
			"navigation-bar-item-focused-container-background": "#ffffff14",
			"navigation-bar-item-active-label-text-colour": "#ffffffff",
			"navigation-bar-item-active-icon-colour": "#367190ff",
			"notification-toast-container-colour": "#00344bb8",
			"notification-toast-container-border-colour": "#ffffff29",
			"notification-toast-title-text-colour": "#ffffffff",
			"notification-toast-body-text-colour": "#f5f5f5ff",
			"notification-toast-button-border-colour": "#ffffff52",
			"notification-toast-button-label-text-colour": "#ffffffff",
			"notification-toast-hovered-button-container-colour": "#ffffff0a",
			"notification-toast-pressed-button-label-text-colour": "#d9d9d9ff",
			"notification-alert-container-border-colour": "#ffffff29",
			"notification-alert-icon-colour": "#ffffffff",
			"notification-alert-text-colour": "#ffffffff",
			"notification-alert-brand-container-colour": "#00344bff",
			"notification-alert-brand-inner-container-border-colour": "#367190ff",
			"notification-alert-informative-container-colour": "#002f48ff",
			"notification-alert-informative-inner-container-border-colour": "#c7ebffff",
			"notification-alert-success-container-colour": "#085f00ff",
			"notification-alert-success-inner-container-border-colour": "#d5e9bfff",
			"notification-alert-warning-container-colour": "#4d1a00ff",
			"notification-alert-warning-inner-container-border-colour": "#ffb18aff",
			"notification-alert-error-container-colour": "#610009ff",
			"notification-alert-error-inner-container-border-colour": "#ffbec4ff",
			"notification-inline-container-border-colour": "#ffffff29",
			"notification-inline-icon-colour": "#ffffffff",
			"notification-inline-text-colour": "#ffffffff",
			"notification-inline-brand-container-colour": "#00344bff",
			"notification-inline-brand-inner-container-border-colour": "#367190ff",
			"notification-inline-informative-container-colour": "#002f48ff",
			"notification-inline-informative-inner-container-border-colour": "#c7ebffff",
			"notification-inline-success-container-colour": "#085f00ff",
			"notification-inline-success-inner-container-border-colour": "#d5e9bfff",
			"notification-inline-warning-container-colour": "#4d1a00ff",
			"notification-inline-warning-inner-container-border-colour": "#ffb18aff",
			"notification-inline-error-container-colour": "#610009ff",
			"notification-inline-error-inner-container-border-colour": "#ffbec4ff",
			"number-input-input-container-colour": "#ffffff14",
			"number-input-input-label-text-colour": "#f5f5f5ff",
			"number-input-input-text-colour": "#d9d9d9ff",
			"number-input-input-plus-icon-colour": "#f5f5f5ff",
			"number-input-icon-divider-border-colour": "#ffffff29",
			"number-input-input-minus-icon-colour": "#ffffffa3",
			"number-input-helper-text-colour": "#d9d9d9ff",
			"number-input-helper-icon-colour": "#d9d9d9ff",
			"number-input-input-container-border-colour": "#ffffffff",
			"number-input-hovered-input-container-colour": "#ffffff29",
			"number-input-hovered-input-container-border-colour": "#d9d9d9ff",
			"number-input-focused-input-container-border-colour": "#367190ff",
			"number-input-completed-input-text-colour": "#ffffffff",
			"number-input-completed-input-minus-icon-colour": "#f5f5f5ff",
			"number-input-error-input-text-colour": "#ffffffff",
			"number-input-disabled-input-label-text-colour": "#ffffff52",
			"number-input-disabled-input-text-colour": "#ffffff52",
			"number-input-disabled-input-container-border-colour": "#7b7b7bff",
			"number-input-disabled-input-plus-icon-colour": "#ffffff52",
			"number-input-disabled-input-minus-icon-colour": "#ffffff52",
			"number-input-error-input-container-colour": "#ffffff29",
			"number-input-error-helper-icon-colour": "#ffbec4ff",
			"number-input-error-input-container-border-colour": "#ffbec4ff",
			"pagination-item-label-text-colour": "#ffffffcc",
			"pagination-item-hovered-label-text-colour": "#ffffffff",
			"pagination-item-hovered-container-colour": "#ffffff29",
			"pagination-item-focused-label-text-colour": "#ffffffff",
			"pagination-item-focused-container-colour": "#ffffff29",
			"pagination-item-active-label-text-colour": "#000000ff",
			"pagination-item-active-container-colour": "#ffffffcc",
			"pagination-arrow-icon-colour": "#ffffffcc",
			"pagination-arrow-hovered-container-colour": "#ffffff29",
			"pagination-arrow-focused-container-colour": "#ffffff29",
			"pagination-arrow-disabled-icon-colour": "#ffffff52",
			"pin-input-helper-text-colour": "#d9d9d9ff",
			"pin-input-helper-icon-colour": "#d9d9d9ff",
			"pin-input-error-helper-icon-colour": "#ffbec4ff",
			"pin-input-field-container-colour": "#ffffff14",
			"pin-input-field-container-border-colour": "#ffffffff",
			"pin-input-field-hovered-container-colour": "#ffffff29",
			"pin-input-field-hovered-container-border-colour": "#d9d9d9ff",
			"pin-input-field-focused-input-text-colour": "#d9d9d9ff",
			"pin-input-field-focused-container-border-colour": "#367190ff",
			"pin-input-field-completed-input-text-colour": "#ffffffff",
			"pin-input-field-error-input-text-colour": "#ffffffff",
			"pin-input-field-error-container-colour": "#ffffff29",
			"pin-input-field-error-container-border-colour": "#ffbec4ff",
			"pin-input-field-disabled-container-border-colour": "#7b7b7bff",
			"progress-indicator-linear-track-colour": "#ffffff52",
			"progress-indicator-linear-indicator-colour": "#367190ff",
			"progress-indicator-circular-indicator-colour": "#367190ff",
			"progress-indicator-circular-track-colour": "#ffffff29",
			"radio-button-label-text-colour": "#f5f5f5ff",
			"radio-button-radio-container-border-colour": "#ffffffff",
			"radio-button-hovered-label-text-colour": "#ffffffff",
			"radio-button-focused-label-text-colour": "#ffffffff",
			"radio-button-focused-radio-container-border-colour": "#367190ff",
			"radio-button-completed-radio-dot-colour": "#367190ff",
			"radio-button-completed-radio-container-border-colour": "#367190ff",
			"radio-button-error-radio-border-colour": "#ffbec4ff",
			"radio-button-disabled-label-text-colour": "#d9d9d9ff",
			"radio-button-disabled-radio-border-colour": "#7b7b7bff",
			"rating-star-icon-colour": "#ffffffa3",
			"rating-star-hovered-icon-colour": "#ffffff52",
			"rating-star-active-icon-colour": "#367190ff",
			"rating-star-focused-icon-colour": "#367190ff",
			"rating-experience-label-text-colour": "#ffffffa3",
			"rating-experience-hovered-label-text-colour": "#ffffff52",
			"rating-experience-active-label-text-colour": "#ffffffff",
			"rating-experience-focused-label-text-colour": "#ffffffff",
			"scrollbar-track-colour": "#ffffff52",
			"scrollbar-indicator-colour": "#ffffffa3",
			"scrollbar-hovered-indicator-colour": "#367190ff",
			"scrollbar-focused-indicator-border-colour": "#367190ff",
			"search-bar-label-text-colour": "#d9d9d9ff",
			"search-bar-leading-icon-colour": "#ffffffa3",
			"search-bar-container-colour": "#101315ff",
			"search-container-colour": "#101315ff",
			"search-bar-container-border-colour": "#ffffff29",
			"search-bar-focused-container-colour": "#00344bff",
			"search-bar-active-container-border-colour": "#ffffff29",
			"search-bar-active-label-text-colour": "#ffffffff",
			"search-bar-completed-label-text-colour": "#ffffffff",
			"search-bar-completed-leading-icon-colour": "#d9d9d9ff",
			"search-bar-completed-trailing-icon-colour": "#ffffffa3",
			"search-bar-completed-container-colour": "#00344bff",
			"search-suggestion-label-text-colour": "#ffffffff",
			"search-suggestion-description-text-colour": "#ffffffcc",
			"search-suggestion-icon-colour": "#ffffffff",
			"search-no-results-label-text-colour": "#ffffffff",
			"search-no-results-description-text-colour": "#ffffffcc",
			"search-no-results-icon-colour": "#ffffffff",
			"search-suggestion-container-colour": "#000000ff",
			"search-suggestion-hovered-container-colour": "#00344bff",
			"search-suggestion-focused-container-colour": "#00344bff",
			"sheet-bottom-elevated-container-colour": "#101315ff",
			"sheet-bottom-drag-line-colour": "#ffffff29",
			"sheet-bottom-glass-container-colour": "#00344bcc",
			"sheet-side-elevated-container-colour": "#101315ff",
			"sheet-side-glass-container-colour": "#00344bcc",
			"sheet-side-content-colour": "#ffffffff",
			"switch-label-text-colour": "#f5f5f5ff",
			"switch-toggle-container-colour": "#ffffff52",
			"switch-toggle-circle-colour": "#000000ff",
			"switch-hovered-label-text-colour": "#ffffffff",
			"switch-hovered-toggle-container-colour": "#ffffffa3",
			"switch-focused-label-text-colour": "#ffffffff",
			"switch-active-label-text-colour": "#ffffffff",
			"switch-active-toggle-container-colour": "#367190ff",
			"switch-disabled-label-text-colour": "#d9d9d9ff",
			"switch-disabled-toggle-container-colour": "#ffffff29",
			"tabs-label-text-colour": "#ffffffcc",
			"tabs-hovered-label-text-colour": "#ffffffa3",
			"tabs-active-label-text-colour": "#ffffffff",
			"tabs-active-label-underline-colour": "#367190ff",
			"tag-label-text-colour": "#ffffffff",
			"tag-icon-colour": "#ffffffff",
			"tag-outlined-container-border-colour": "#ffffffff",
			"tag-outlined-hovered-container-colour": "#ffffff0a",
			"tag-outlined-pressed-container-colour": "#ffffff0a",
			"tag-outlined-pressed-container-border-colour": "#d9d9d9ff",
			"tag-outlined-pressed-label-text-colour": "#d9d9d9ff",
			"tag-outlined-pressed-icon-colour": "#d9d9d9ff",
			"tag-outlined-focused-container-colour": "#ffffff0a",
			"tag-filled-container-colour": "#ffffff29",
			"tag-filled-pressed-container-colour": "#ffffff52",
			"tag-filled-pressed-label-text-colour": "#d9d9d9ff",
			"tag-filled-pressed-icon-colour": "#d9d9d9ff",
			"tag-filled-hovered-container-colour": "#ffffff52",
			"text-area-input-container-colour": "#ffffff14",
			"text-area-input-label-text-colour": "#f5f5f5ff",
			"text-area-input-text-colour": "#d9d9d9ff",
			"text-area-input-icon-colour": "#f5f5f5ff",
			"text-area-input-container-border-colour": "#ffffffff",
			"text-area-character-count-label-text-colour": "#f5f5f5ff",
			"text-area-character-count-container-colour": "#ffffff29",
			"text-area-helper-text-colour": "#d9d9d9ff",
			"text-area-helper-icon-colour": "#d9d9d9ff",
			"text-area-hovered-input-container-colour": "#ffffff29",
			"text-area-hovered-input-container-border-colour": "#d9d9d9ff",
			"text-area-focused-input-container-border-colour": "#367190ff",
			"text-area-completed-input-text-colour": "#ffffffff",
			"text-area-disabled-input-label-text-colour": "#ffffff52",
			"text-area-disabled-character-count-container-colour": "#ffffff29",
			"text-area-disabled-character-count-label-text-colour": "#ffffff29",
			"text-area-disabled-input-text-colour": "#ffffff52",
			"text-area-disabled-input-icon-colour": "#ffffff52",
			"text-area-disabled-input-container-border-colour": "#7b7b7bff",
			"text-area-error-input-text-colour": "#ffffffff",
			"text-area-error-input-container-colour": "#ffffff29",
			"text-area-error-helper-icon-colour": "#ffbec4ff",
			"text-area-error-input-container-border-colour": "#ffbec4ff",
			"text-embed-secondary-colour": "#ffffffff",
			"text-embed-tertiary-colour": "#d9d9d9ff",
			"text-embed-secondary-colour-inverse": "#000000ff",
			"text-embed-tertiary-colour-inverse": "#555555ff",
			"text-embed-on-image-colour-light": "#ffffffff",
			"text-embed-on-image-colour-dark": "#000000ff",
			"text-embed-on-primary": "#ffffffff",
			"text-embed-on-secondary": "#000000ff",
			"text-input-input-container-colour": "#ffffff14",
			"text-input-input-label-text-colour": "#f5f5f5ff",
			"text-input-input-icon-colour": "#f5f5f5ff",
			"text-input-helper-text-colour": "#d9d9d9ff",
			"text-input-helper-icon-colour": "#d9d9d9ff",
			"text-input-input-container-border-colour": "#ffffffff",
			"text-input-hovered-input-container-colour": "#ffffff29",
			"text-input-hovered-input-container-border-colour": "#d9d9d9ff",
			"text-link-label-text-colour": "#ffffffff",
			"text-link-container-border-colour": "#ffffffff",
			"text-link-hovered-label-text-colour": "#f5f5f5ff",
			"text-link-hovered-container-border-colour": "#367190ff",
			"text-link-pressed-label-text-colour": "#d9d9d9ff",
			"text-link-pressed-container-border-colour": "#447fa2ff",
			"text-link-disabled-label-text-colour": "#7b7b7bff",
			"text-link-disabled-container-border-colour": "#7b7b7bff",
			"tooltip-container-colour": "#f4f8faff",
			"tooltip-caret-tip-colour": "#f4f8faff",
			"tooltip-text-colour": "#000000ff",
			"tooltip-dismissible-icon-colour": "#000000ff",
			"tooltip-trigger-icon-colour": "#ffffffff",
			"tooltip-trigger-text-colour": "#ffffffff",
			"tooltip-trigger-text-underline-colour": "#c7ebffff",
			"tooltip-trigger-hovered-icon-colour": "#d9d9d9ff",
			"tooltip-trigger-hovered-text-colour": "#d9d9d9ff",
			"icon-colour": "#ffffffff",
			"*Cursor-initial-colour": "#ffffffff",
			"*Cursor-brand-colour": "#367190ff",
			"*Documentation-code-snippet-container-colour": "#000000ff",
			"*Documentation-code-snippet-border-colour": "#d9d9d9ff",
			"*Documentation-code-snippet-text-colour": "#ffffffff",
			"*Native-bg-primary": "#1a1a1aff",
			"*Demo-fg-colour-secondary": "#ffffffff",
			"*Demo-fg-colour-tertiary": "#f5f5f5ff",
			"*Demo-bg-primary": "#00344bff",
			"*Demo-border": "#ffffff29",
			"*Demo-bg-overlay-level2": "#00344ba3",
			"*Demo-bg-overlay-level3": "#00344bcc",
			"*Demo-bg-indicator": "#ffffff29",
			"*Demo-fg-indicator": "#d9d9d9ff",
			"text-input-focused-input-text-colour": "#d9d9d9ff",
			"text-input-focused-input-container-border-colour": "#367190ff",
			"text-input-completed-input-text-colour": "#ffffffff",
			"text-input-error-input-text-colour": "#ffffffff",
			"text-input-error-input-container-colour": "#ffffff29",
			"text-input-error-input-container-border-colour": "#ffbec4ff",
			"text-input-error-helper-icon-colour": "#ffbec4ff",
			"text-input-disabled-label-text-colour": "#ffffff52",
			"text-input-disabled-input-icon-colour": "#ffffff52",
			"text-input-disabled-container-border-colour": "#7b7b7bff",
			"checkbox-completed-icon-colour": "#ffffffff",
			"checkbox-completed-box-container-colour": "#367190ff",
			"checkbox-error-box-border-colour": "#ffbec4ff",
			"checkbox-disabled-label-text-colour": "#d9d9d9ff",
			"checkbox-disabled-box-border-colour": "#7b7b7bff",
			"*Graveyard-drawer-container-colour": "#367190ff",
			"*Graveyard-drawer-icon-colour": "#ffffffff",
			"*Graveyard-drawer-hovered-container-colour": "#447fa2ff",
			"*Graveyard-drawer-focused-container-colour": "#447fa2ff",
			"*Graveyard-drawer-pressed-icon-colour": "#434343ff",
			"*Graveyard-drawer-pressed-container-colour": "#447fa2ff",
			"*Graveyard-drawer-disabled-icon-colour": "#d9d9d9ff",
			"*Graveyard-drawer-disabled-container-colour": "#7b7b7bff",
			"*Graveyard-toggletip-plain-container-colour": "#ffffffcc",
			"*Graveyard-toggletip-plain-caret-tip-colour": "#ffffffcc",
			"*Graveyard-toggletip-plain-trigger-icon-colour": "#ffffffff",
			"*Graveyard-toggletip-plain-text-colour": "#000000ff",
			"*Graveyard-toggletip-plain-close-icon-colour": "#000000ff",
			"*Graveyard-toggletip-plain-hovered-trigger-icon-colour": "#d9d9d9ff",
			"*Graveyard-toggletip-plain-hovered-close-icon-colour": "#434343ff",
			"*Graveyard-toggletip-plain-focused-trigger-icon-border-colour": "#367190ff",
			"*Graveyard-toggletip-plain-focused-close-icon-border-colour": "#367190ff",
			"accessible-focus-border-container-outer-shadow-colour": "#101315ff",
			"navigation-bar-item-brand-icon-colour": "#ffffffff",
			"navigation-bar-item-brand-label-text-colour": "#ffffffff",
			"navigation-bar-item-brand-hovered-container-background": "#00344b14",
			"navigation-bar-item-brand-focused-container-background": "#00344b0a",
			"navigation-bar-item-brand-active-label-text-colour": "#ffffffff",
			"navigation-bar-item-brand-active-icon-colour": "#ffffffff",
			"colour-primary": "#004f71ff",
			"colour-on-primary": "#ffffffff",
			"colour-primary-inverse": "#367190ff",
			"colour-on-primary-inverse": "#ffffffff",
			"colour-primary-interaction": "#447fa2ff",
			"colour-primary-interaction-inverse": "#447fa2ff",
			"colour-secondary": "#000000ff",
			"colour-on-secondary": "#ffffffff",
			"colour-secondary-inverse": "#ffffffff",
			"colour-on-secondary-inverse": "#000000ff",
			"colour-secondary-interaction": "#434343ff",
			"colour-secondary-interaction-inverse": "#d9d9d9ff",
			"colour-tertiary": "#434343ff",
			"colour-on-tertiary": "#f5f5f5ff",
			"colour-tertiary-inverse": "#f5f5f5ff",
			"colour-on-tertiary-inverse": "#434343ff",
			"colour-tertiary-interaction": "#555555ff",
			"colour-tertiary-interaction-inverse": "#d9d9d9ff",
			"colour-disabled": "#d9d9d9ff",
			"colour-on-disabled": "#7b7b7bff",
			"colour-disabled-inverse": "#7b7b7bff",
			"colour-on-disabled-inverse": "#d9d9d9ff",
			"colour-error": "#b20010ff",
			"colour-on-error": "#ffbec4ff",
			"colour-error-inverse": "#ffbec4ff",
			"colour-on-error-inverse": "#b20010ff",
			"colour-success": "#398004ff",
			"colour-on-success": "#ffffffff",
			"colour-success-inverse": "#d5e9bfff",
			"colour-on-success-inverse": "#000000ff",
			"colour-warning": "#ff732eff",
			"colour-on-warning-inverse": "#000000ff",
			"colour-on-warning": "#000000ff",
			"colour-warning-inverse": "#ffb18aff",
			"colour-informative": "#004a71ff",
			"colour-on-informative": "#c7ebffff",
			"colour-informative-inverse": "#c7ebffff",
			"colour-on-informative-inverse": "#004a71ff",
			"colour-surface": "#f4f8faff",
			"colour-on-surface": "#000000ff",
			"colour-surface-inverse": "#00344bff",
			"colour-on-surface-inverse": "#ffffffff",
			"colour-surface-full": "#ffffffff",
			"colour-on-surface-full": "#000000ff",
			"colour-surface-full-inverse": "#101315ff",
			"colour-on-surface-full-inverse": "#ffffffff",
			"colour-surface-dim": "#ebeff1ff",
			"colour-on-surface-dim": "#000000ff",
			"colour-surface-dim-inverse": "#184a63ff",
			"colour-on-surface-dim-inverse": "#ffffffff",
			"colour-surface-subtle-primary": "#d9f2ffff",
			"colour-surface-subtle-primary-inverse": "#00344bff",
			"colour-surface-subtle-success": "#eef6e5ff",
			"colour-surface-subtle-success-inverse": "#085f00ff",
			"colour-surface-subtle-error": "#ffe8eaff",
			"colour-surface-subtle-error-inverse": "#610009ff",
			"colour-surface-subtle-warning": "#ffeee5ff",
			"colour-surface-subtle-warning-inverse": "#4d1a00ff",
			"colour-surface-subtle-informative": "#ebf8ffff",
			"colour-surface-subtle-informative-inverse": "#002f48ff",
			"colour-opacity-highest": "#ffffffcc",
			"colour-opacity-higher": "#ffffffb8",
			"colour-opacity-high": "#ffffffa3",
			"colour-opacity-medium": "#ffffff52",
			"colour-opacity-low": "#ffffff29",
			"colour-opacity-lower": "#ffffff14",
			"colour-opacity-lowest": "#ffffff0a",
			"colour-opacity-highest-inverse": "#00344bcc",
			"colour-opacity-higher-inverse": "#00344bb8",
			"colour-opacity-high-inverse": "#00344ba3",
			"colour-opacity-medium-inverse": "#00344b52",
			"colour-opacity-low-inverse": "#00344b29",
			"colour-opacity-lower-inverse": "#00344b14",
			"colour-opacity-lowest-inverse": "#00344b0a",
			"border-colour-primary": "#004f71ff",
			"border-colour-primary-inverse": "#367190ff",
			"border-colour-primary-interaction": "#447fa2ff",
			"border-colour-primary-interaction-inverse": "#447fa2ff",
			"border-colour-secondary": "#000000ff",
			"border-colour-secondary-inverse": "#ffffffff",
			"border-colour-secondary-interaction": "#434343ff",
			"border-colour-secondary-interaction-inverse": "#d9d9d9ff",
			"border-colour-opacity-inverse-64": "#00344ba3",
			"border-colour-opacity-64": "#ffffffa3",
			"border-colour-opacity-inverse-32": "#00344b52",
			"border-colour-opacity-32": "#ffffff52",
			"border-colour-opacity-inverse-16": "#00344b29",
			"border-colour-opacity-16": "#ffffff29",
			"border-colour-opacity-inverse-8": "#00344b14",
			"border-colour-opacity-8": "#ffffff14",
			"border-colour-tertiary": "#555555ff",
			"border-colour-tertiary-inverse": "#e9e9e9ff",
			"border-colour-disabled": "#c4c4c4ff",
			"border-colour-disabled-inverse": "#7b7b7bff",
			"border-colour-error": "#b20010ff",
			"border-colour-error-inverse": "#ffbec4ff",
			"border-colour-success": "#398004ff",
			"border-colour-success-inverse": "#d5e9bfff",
			"border-colour-warning": "#ff732eff",
			"border-colour-warning-inverse": "#ffb18aff",
			"border-colour-informative": "#004a71ff",
			"border-colour-informative-inverse": "#c7ebffff",
			"border-colour-accessible": "#004f71ff",
			"border-colour-accessible-inverse": "#367190ff",
			"shadow-accessible-light-colour": "#ffffffff",
			"shadow-accessible-dark-colour": "#000000ff",
			"shadow-level-1-colour": "#00000029",
			"shadow-level-2-colour": "#00000029",
			"shadow-level-3-colour": "#00000029",
			"shadow-inverted-colour": "#00000014",
			"shadow-left-colour": "#00000014",
			"shadow-right-colour": "#00000014",
			"shadow-top-colour": "#00000014"
		},
		floats: {
			"accordion-button-scale-m-l-container-padding-left-right": "1.5rem",
			"accordion-button-container-height": "80px",
			"accordion-button-container-border-bottom": "1px",
			"accordion-button-hovered-container-border": "0px",
			"accordion-button-hovered-container-corner-radius-all-round": "8px",
			"accordion-button-focused-container-corner-radius-all-round": "8px",
			"accordion-button-pressed-container-border": "0px",
			"accordion-button-pressed-container-corner-radius-all-round": "8px",
			"accordion-container-border-bottom-left-right": "1px",
			"accordion-opened-container-corner-radius-all-round": "8px",
			"accordion-closed-container-corner-radius": "0px",
			"accordion-button-active-container-border": "0px",
			"accordion-button-active-container-corner-radius-top": "8px",
			"accordion-content-margin": "24px",
			"accordion-scale-m-l-container-padding-scale": "1.5rem",
			"aspect-ratio-container-corner-radius-all-round": "24px",
			"badge-container-padding-small": "8px",
			"badge-scale-m-l-container-padding": "0.5rem",
			"badge-scale-m-l-container-height": "1.5rem",
			"badge-scale-m-l-container-corner-radius-all-round": "0.25rem",
			"badge-scale-large-container-corner-radius-all-round": "8px",
			"badge-container-rounded-corner-radius": "56px",
			"button-action-filled-container-border": "1px",
			"button-action-scale-m-l-small-icon": "1.5rem",
			"button-action-scale-m-l-large-icon": "2rem",
			"button-action-container-corner-radius-all-round": "100px",
			"button-action-scale-m-l-small-container-padding": "1rem",
			"button-action-scale-m-l-large-container-padding": "1.5rem",
			"button-app-standard-container-corner-radius": "8px",
			"button-app-scale-m-l-container-height": "3.5rem",
			"button-app-scale-m-l-container-width": "190px",
			"button-app-scale-large-container-width": "200px",
			"button-app-standard-container-border": "1px",
			"button-app-inverted-container-border": "1px",
			"button-primary-container-padding-left-right": "24px",
			"button-primary-container-corner-radius-all-round": "100px",
			"button-primary-scale-m-l-icon-margin-right": "0.5rem",
			"button-secondary-container-border": "1px",
			"button-secondary-scale-m-l-icon-margin-right": "0.5rem",
			"button-secondary-container-padding-left-right": "24px",
			"button-secondary-corner-radius-all-round": "100px",
			"button-secondary-scale-m-l-container-height": "3.5rem",
			"button-secondary-scale-m-l-icon": "1.5rem",
			"button-primary-scale-m-l-container-height": "3.5rem",
			"button-primary-scale-m-l-icon": "1.5rem",
			"button-call-out-container-padding-left-right": "24px",
			"button-call-out-container-padding-top-bottom": "12px",
			"button-call-out-container-corner-radius-all-round": "100px",
			"button-call-out-scale-m-l-icon-margin-right": "0.5rem",
			"button-call-out-scale-m-l-container-height": "3.5rem",
			"button-text-hovered-container-border-bottom": "2px",
			"button-text-pressed-container-border-bottom": "2px",
			"button-combo-scale-m-l-button-margin": "0.75rem",
			"button-icon-scale-m-l-icon-margin": "0.75rem",
			"button-icon-scale-m-l-icon-margin 2": "1rem",
			"button-icon-outline-container-border": "2px",
			"button-icon-scale-m-l-container-corner-radius": "1rem",
			"button-icon-scale-m-l-container-padding-left-right": "0.75rem",
			"button-icon-scale-m-l-container-padding-top-bottom": "0.75rem",
			"button-fab-primary-scale-m-l-container-padding": "0.75rem",
			"button-fab-primary-scale-m-l-container-corner-radius": "1rem",
			"button-fab-primary-scale-m-l-icon-margin-right": "0.75rem",
			"button-fab-primary-scale-m-l-icon-size": "2rem",
			"button-fab-secondary-scale-m-l-container-padding": "0.75rem",
			"button-fab-secondary-scale-m-l-container-corner-radius": "1rem",
			"button-fab-secondary-scale-m-l-container-margin": "0.5rem",
			"button-fab-secondary-scale-m-l-icon-margin-right": "0.75rem",
			"button-fab-secondary-scale-m-l-icon-size": "2rem",
			"button-select-active-container-border": "0px",
			"button-select-container-border": "1px",
			"button-select-hovered-container-border": "0px",
			"button-select-pressed-container-border": "0px",
			"button-select-container-padding-left-right": "24px",
			"button-select-container-padding-top-bottom": "12px",
			"button-select-container-corner-radius": "8px",
			"button-select-scale-m-l-container-height": "3rem",
			"button-group-scale-m-l-button-margin": "0.75rem",
			"button-payment-container-padding-left-right": "0px",
			"button-payment-container-padding-top-bottom": "12px",
			"button-payment-container-corner-radius-all-round": "100px",
			"button-payment-scale-m-l-container-height": "3.5rem",
			"button-payment-scale-m-l-container-width": "168px",
			"button-call-out-scale-m-l-icon": "1.5rem",
			"card-base-elevated-hovered-container-border": "1px",
			"card-base-outlined-container-border": "1px",
			"card-base-primary-hovered-container-border": "1px",
			"card-base-inverted-hovered-container-border": "1px",
			"card-base-glass-hovered-container-border": "1px",
			"card-base-glass-inverted-hovered-container-border": "1px",
			"card-base-container-corner-radius-all-round": "16px",
			"carousel-scale-m-l-card-margin": "1rem",
			"carousel-scale-m-l-container-padding-top-bottom": "2.5rem",
			"carousel-scale-m-l-content-margin": "1.5rem",
			"checkbox-hovered-box-container-border": "0px",
			"checkbox-box-container-border": "2px",
			"checkbox-scale-m-l-label-margin-left": "0.75rem",
			"checkbox-box-container-corner-radius-all-round": "4px",
			"date-picker-date-container-corner-radius": "100px",
			"date-picker-floating-container-corner-radius": "8px",
			"date-picker-fixed-container-corner-radius-bottom-left-right": "8px",
			"date-picker-container-padding": "24px",
			"date-picker-scale-m-l-row-margin": "0.25rem",
			"date-picker-date-scale-m-l-container-size": "3rem",
			"date-picker-date-scale-large-container-size": "52px",
			"date-picker-week-day-scale-m-l-container-size": "3rem",
			"date-picker-date-current-container-border": "1px",
			"date-picker-container-min-width": "328px",
			"date-picker-fixed-container-border-bottom-left-right": "1px",
			"date-picker-floating-container-border": "1px",
			"date-picker-flat-container-border": "0px",
			"date-picker-month-selection-container-padding-bottom": "16px",
			"date-picker-date-active-start-container-corner-radius-top-left": "24px",
			"date-picker-date-active-start-container-corner-radius-bottom-left": "24px",
			"date-picker-date-active-end-container-corner-radius-top-right": "24px",
			"date-picker-date-active-end-container-corner-radius-bottom-right": "24px",
			"date-picker-date-active-middle-container-corner-radius": "0px",
			"dialog-container-corner-radius-all-round": "16px",
			"dialog-container-padding": "24px",
			"dialog-content-margin": "24px",
			"dialog-container-border": "1px",
			"divider-container-border": "1px",
			"dot-indicator-container-padding": "24px",
			"dropdown-completed-input-label-margin-bottom": "8px",
			"dropdown-error-input-label-margin-bottom": "8px",
			"dot-indicator-dot-margin": "12px",
			"dropdown-input-container-padding-left-right": "16px",
			"dropdown-input-corner-radius-top": "8px",
			"dropdown-input-container-border-bottom": "2px",
			"dropdown-input-text-margin-right": "16px",
			"dropdown-helper-text-margin-left": "8px",
			"list-icon-icon-margin-right": "8px",
			"list-icon-padding-bottom": "12px",
			"list-unordered-symbol-margin-right": "16px",
			"list-unordered-indent-padding-left": "32px",
			"list-unordered-padding-bottom": "12px",
			"list-ordered-number-margin-right": "8px",
			"list-ordered-indent-padding-left": "32px",
			"list-ordered-padding-bottom": "12px",
			"menu-attached-container-corner-radius-bottom": "16px",
			"menu-attached-container-padding-bottom": "8px",
			"menu-floating-container-padding-top-bottom": "8px",
			"menu-floating-container-corner-radius-all-round": "16px",
			"menu-container-border": "1px",
			"menu-item-container-padding": "16px",
			"menu-item-content-margin": "16px",
			"menu-search-container-padding": "16px",
			"menu-search-content-margin": "16px",
			"menu-search-container-border-bottom": "1px",
			"menu-search-scale-m-l-container-height": "3.25rem",
			"menu-search-scale-m-l-icon-size": "1.5rem",
			"mobile-number-input-input-container-padding-top-left-right": "16px",
			"mobile-number-input-input-container-corner-radius-top": "8px",
			"mobile-number-input-input-container-border-bottom": "2px",
			"mobile-number-input-input-content-margin-right": "16px",
			"mobile-number-input-helper-text-margin-left": "8px",
			"mobile-number-input-input-country-border": "1px",
			"mobile-number-input-input-country-margin-right": "4px",
			"mobile-number-input-disabled-input-country-opacity": "56px",
			"navigation-bar-container-border-top": "1px",
			"navigation-bar-scale-small-container-height": "88px",
			"navigation-bar-scale-medium-container-height": "104px",
			"navigation-bar-item-scale-m-l-icon-container-padding-top": "1.5rem",
			"navigation-bar-item-scale-m-l-container-height": "6.5rem",
			"navigation-bar-item-scale-m-l-content-margin": "0.75rem",
			"navigation-bar-item-container-min-padding-left-right": "8px",
			"notification-toast-container-border-weight": "1px",
			"notification-toast-container-padding-all-round": "8px",
			"notification-toast-text-wrapper-padding-all-round": "8px",
			"notification-toast-container-corner-radius-all-round": "8px",
			"notification-toast-scale-m-l-title-margin-bottom": "0.5rem",
			"notification-toast-button-border-weight": "1px",
			"notification-toast-small-button-padding-left-right": "12px",
			"notification-toast-large-button-padding-left-right": "16px",
			"notification-toast-button-margin-left": "16px",
			"notification-toast-button-margin-right": "8px",
			"notification-toast-scale-m-l-button-margin-right": "0.5rem",
			"notification-toast-small-button-height": "32px",
			"notification-toast-large-button-height": "36px",
			"notification-alert-container-padding-top-bottom": "12px",
			"notification-alert-container-padding-left": "24px",
			"notification-alert-container-padding-right": "16px",
			"notification-alert-scale-m-l-container-height": "4.25rem",
			"notification-alert-container-corner-radius-all-round": "8px",
			"notification-alert-container-border-weight": "1px",
			"notification-alert-inner-container-border-weight": "12px",
			"notification-alert-icon-margin-right": "8px",
			"notification-alert-icon-margin-top": "4px",
			"notification-alert-title-margin-right": "8px",
			"notification-alert-text-container-margin": "12px",
			"notification-alert-dismissible-icon-margin-top-mobile": "4px",
			"notification-alert-dismissible-icon-margin-left-mobile": "8px",
			"notification-alert-dismissible-icon-margin-left-tablet": "12px",
			"notification-alert-dismissible-icon-margin-left-desktop": "16px",
			"notification-inline-container-padding-top-bottom": "12px",
			"notification-inline-container-padding-left": "24px",
			"notification-inline-container-padding-right": "16px",
			"notification-inline-container-height-tablet": "56px",
			"notification-inline-container-height-desktop": "60px",
			"notification-inline-container-corner-radius-all-round": "0px",
			"notification-inline-container-border-weight": "1px",
			"notification-inline-inner-container-border-weight": "12px",
			"notification-inline-icon-margin-right": "8px",
			"notification-inline-icon-margin-top-mobile": "4px",
			"notification-inline-title-margin-right": "8px",
			"notification-inline-text-container-margin": "12px",
			"notification-inline-dismissible-icon-margin-top-mobile": "4px",
			"notification-inline-dismissible-icon-margin-left-mobile": "8px",
			"notification-inline-dismissible-icon-margin-left-tablet": "12px",
			"notification-inline-dismissible-icon-margin-left-desktop": "16px",
			"number-input-input-container-padding-top-left-right": "16px",
			"number-input-input-container-corner-radius-top": "8px",
			"number-input-input-container-border-bottom": "2px",
			"number-input-input-icon-divider-border": "1px",
			"number-input-input-text-margin-right": "16px",
			"number-input-helper-text-margin-left": "8px",
			"pagination-number-margin": "12px",
			"pagination-arrow-margin": "16px",
			"pagination-item-container-corner-radius": "100px",
			"pagination-item-scale-m-l-container-size": "2.25rem",
			"pagination-arrow-container-corner-radius": "24px",
			"pagination-arrow-scale-m-l-icon-size": "1.5rem",
			"pagination-arrow-scale-m-l-container-size": "2.25rem",
			"pin-input-scale-m-l-helper-margin-top": "0.75rem",
			"pin-input-helper-text-margin-left": "8px",
			"pin-input-container-input-margin": "8px",
			"pin-input-container-max-width": "508px",
			"pin-input-field-container-padding-left-right": "16px",
			"pin-input-field-container-corner-radius-top": "8px",
			"pin-input-field-container-border-bottom": "2px",
			"menu-item-scale-m-l-container-height": "3.25rem",
			"menu-item-scale-m-l-icon-size": "1.5rem",
			"menu-item-scale-m-l-flag-size": "1.5rem",
			"progress-indicator-linear-container-padding": "0px",
			"progress-indicator-linear-track-corner-radius": "4px",
			"progress-indicator-linear-indeterminate-track-corner-radius": "4px",
			"progress-indicator-linear-indicator-corner-radius": "0px",
			"progress-indicator-circular-container-padding": "0px",
			"progress-indicator-circular-indicator-corner-radius-top": "2px",
			"radio-button-radio-container-border": "2px",
			"radio-button-scale-m-l-label-margin-left": "0.75rem",
			"radio-button-radio-container-corner-radius-all-round": "100px",
			"radio-button-hovered-radio-container-border": "0px",
			"radio-button-completed-radio-container-border": "0px",
			"rating-star-container-width-min": "40px",
			"rating-star-container-height-min": "40px",
			"rating-star-icon-margin-right": "12px",
			"rating-experience-container-margin-right-compact": "12px",
			"rating-experience-container-margin-right-comfortable": "24px",
			"rating-experience-icon-opacity": "80px",
			"rating-experience-icon-margin-bottom": "8px",
			"rating-experience-active-icon-opacity": "100px",
			"scrollbar-container-padding": "0px",
			"scrollbar-track-corner-radius": "16px",
			"scrollbar-indicator-corner-radius": "16px",
			"scrollbar-indicator-height": "4px",
			"scrollbar-hovered-indicator-height-hover": "8px",
			"scrollbar-focused-indicator-border": "1px",
			"search-bar-container-padding": "16px",
			"search-bar-scale-m-l-container-height": "4rem",
			"search-bar-scale-m-l-icon-size": "1.5rem",
			"search-bar-content-margin": "16px",
			"search-bar-container-border": "1px",
			"search-bar-container-corner-radius-all-round": "16px",
			"search-bar-hovered-container-border": "0px",
			"search-bar-focused-container-border": "0px",
			"search-bar-active-container-border-bottom": "1px",
			"search-bar-active-container-corner-radius-top": "16px",
			"search-suggestion-container-padding": "16px",
			"search-suggestion-content-margin": "16px",
			"search-suggestion-scale-m-l-container-height": "3.75rem",
			"search-suggestion-scale-m-l-icon-size": "1.5rem",
			"search-suggestion-scale-m-l-label-margin-bottom": "0.5rem",
			"search-container-corner-radius-all-round": "16px",
			"search-scale-m-l-active-container-padding-bottom": "0.75rem",
			"sheet-bottom-container-corner-radius-top": "24px",
			"sheet-side-container-corner-radius-top-left": "24px",
			"sheet-side-container-corner-radius-top-right": "24px",
			"sheet-side-container-padding-left-right": "24px",
			"sheet-side-container-padding-top": "40px",
			"switch-scale-m-l-label-margin-right": "0.75rem",
			"switch-scale-m-l-label-margin-left": "0.75rem",
			"switch-toggle-container-corner-radius-all-round": "24px",
			"switch-toggle-padding-all-round": "2px",
			"tabs-label-padding-left-right": "24px",
			"tabs-label-padding-top-bottom": "24px",
			"tabs-active-label-underline-border-weight": "4px",
			"tag-container-padding-left-right": "12px",
			"tag-content-margins": "8px",
			"tag-container-corner-radius": "56px",
			"tag-scale-m-l-icon-size": "1rem",
			"tag-scale-m-l-container-height": "2.25rem",
			"tag-outlined-container-border-weight": "1px",
			"text-area-input-container-padding": "16px",
			"text-area-input-container-corner-radius-top": "8px",
			"text-area-input-container-border-bottom": "2px",
			"text-area-input-text-margin-right": "16px",
			"text-area-character-count-container-corner-radius": "16px",
			"text-area-character-count-container-padding-top-bottom": "4px",
			"text-area-character-count-container-padding-left-right": "8px",
			"text-area-helper-text-margin-left": "8px",
			"text-input-input-container-padding-top-left-right": "16px",
			"text-input-input-container-corner-radius-top": "8px",
			"text-input-input-container-border-bottom": "2px",
			"text-input-input-text-margin-right": "16px",
			"text-input-helper-text-margin-left": "8px",
			"text-input-scale-m-l-input-container-height": "4rem",
			"text-input-scale-m-l-input-margin-bottom": "0.75rem",
			"text-input-scale-m-l-input-icon-size": "1.5rem",
			"text-input-scale-m-l-input-label-margin-bottom": "0.5rem",
			"mobile-number-input-scale-m-l-input-container-height": "4rem",
			"mobile-number-input-scale-m-l-input-margin-bottom": "0.75rem",
			"mobile-number-input-scale-m-l-input-icon-size": "1.5rem",
			"mobile-number-input-scale-m-l-input-label-margin-bottom": "0.5rem",
			"number-input-scale-m-l-input-container-height": "4rem",
			"number-input-scale-m-l-input-margin-bottom": "0.75rem",
			"number-input-scale-m-l-input-icon-size": "1.5rem",
			"number-input-scale-m-l-input-label-margin-bottom": "0.5rem",
			"dropdown-scale-m-l-input-container-height": "4rem",
			"pin-input-field-scale-m-l-input-container-height": "4rem",
			"dropdown-scale-m-l-input-margin-bottom": "0.75rem",
			"dropdown-scale-m-l-input-icon-size": "1.5rem",
			"dropdown-scale-m-l-input-label-margin-bottom": "0.5rem",
			"text-area-scale-m-l-input-margin-bottom": "0.75rem",
			"text-area-scale-m-l-input-icon-size": "1.5rem",
			"text-area-scale-m-l-input-label-margin-bottom": "0.5rem",
			"text-link-container-border-bottom": "1px",
			"text-link-container-padding-all-round": "4px",
			"tooltip-container-padding-left-right": "12px",
			"tooltip-container-padding-top-bottom": "12px",
			"tooltip-container-margin": "8px",
			"tooltip-container-width-max": "300px",
			"tooltip-dismissible-icon-margin-left": "8px",
			"tooltip-scale-m-l-icon-size": "1rem",
			"tooltip-trigger-icon-corner-radius": "100px",
			"button-text-scale-m-l-icon-margin-right": "0.5rem",
			"*Demo-corner-radius-large": "32px",
			"*Demo-corner-radius-medium": "24px",
			"*Demo-corner-radius-small": "16px",
			"*Demo-gap": "0px",
			"*Demo-padding": "24px",
			"checkbox-completed-box-container-border": "0px",
			"*Graveyard-drawer-container-padding-left-right": "8px",
			"*Graveyard-drawer-container-padding-top-bottom": "16px",
			"*Graveyard-drawer-container-corner-radius": "8px",
			"*Graveyard-toggletip-plain-container-corner-radius": "4px",
			"*Graveyard-toggletip-plain-container-padding-left-right": "8px",
			"*Graveyard-toggletip-plain-container-padding-top-bottom": "4px",
			"*Graveyard-toggletip-plain-container-margin": "4px",
			"*Graveyard-toggletip-plain-container-width-max": "140px",
			"*Graveyard-toggletip-plain-trigger-corner-radius": "100px",
			"*Graveyard-toggletip-plain-text-margin-right": "16px",
			"*Graveyard-toggletip-plain-close-icon-margin-top": "2px",
			"*Graveyard-toggletip-plain-focused-trigger-icon-border-weight": "2px",
			"*Graveyard-toggletip-plain-focused-close-icon-border-weight": "1px",
			"accessible-focus-border-container-border": "4px",
			"accessible-focus-border-container-outer-border": "2px",
			"navigation-bar-item-brand-scale-m-l-icon-container-padding-top": "1.5rem",
			"navigation-bar-item-brand-scale-m-l-container-height": "6.5rem",
			"navigation-bar-item-brand-scale-m-l-content-margin": "0.75rem",
			"navigation-bar-item-brand-container-min-padding-left-right": "8px",
			"navigation-bar-item-brand-label-text-opacity": "48px",
			"navigation-bar-item-brand-icon-opacity": "48px",
			"navigation-bar-item-brand-active-label-text-opacity": "100px",
			"navigation-bar-item-brand-active-icon-opacity": "100px",
			"button-text-scale-m-l-icon": "1.5rem",
			"button-text-scale-m-l-container-height": "3.5rem",
			"button-text-scale-large-container-height": "60px",
			"button-icon-scale-m-l-icon-size": "1.5rem",
			"border-weight-none": "0px",
			"border-weight-small": "1px",
			"border-weight-medium": "2px",
			"border-weight-large": "4px",
			"padding-none": "0px",
			"padding-3xsmall": "2px",
			"padding-2xsmall": "4px",
			"padding-xsmall": "8px",
			"padding-small": "12px",
			"padding-medium": "16px",
			"padding-large": "24px",
			"padding-xlarge": "32px",
			"padding-2xlarge": "40px",
			"padding-3xlarge": "48px",
			"margin-none": "0px",
			"margin-3xsmall": "2px",
			"margin-2xsmall": "4px",
			"margin-xsmall": "8px",
			"margin-small": "12px",
			"margin-medium": "16px",
			"margin-large": "24px",
			"margin-xlarge": "32px",
			"margin-2xlarge": "40px",
			"margin-section-vertical-large": "72px",
			"margin-section-vertical-medium": "64px",
			"margin-section-vertical-small": "56px",
			"corner-radius-none": "0px",
			"corner-radius-3xsmall": "2px",
			"corner-radius-2xsmall": "4px",
			"corner-radius-xsmall": "8px",
			"corner-radius-small": "16px",
			"corner-radius-medium": "24px",
			"corner-radius-large": "32px",
			"corner-radius-xlarge": "40px",
			"corner-radius-2xlarge": "48px",
			"corner-radius-3xlarge": "56px",
			"corner-radius-full": "100px",
			"shadow-accessible": "3px",
			"shadow-level-1-blur": "4px",
			"shadow-level-1-y": "1px",
			"shadow-level-1-spread": "0px",
			"shadow-level-2-blur": "16px",
			"shadow-level-2-y": "8px",
			"shadow-level-2-spread": "2px",
			"shadow-level-3-blur": "24px",
			"shadow-level-3-y": "16px",
			"shadow-level-3-spread": "4px",
			"shadow-inverted-blur": "8px",
			"shadow-inverted-y": "-4px",
			"shadow-inverted-spread": "2px",
			"shadow-left-blur": "8px",
			"shadow-left-x": "-4px",
			"shadow-left-spread": "2px",
			"shadow-right-blur": "8px",
			"shadow-right-x": "4px",
			"shadow-right-spread": "2px",
			"shadow-top-blur": "8px",
			"shadow-top-y": "-2px",
			"shadow-top-spread": "1px",
			"blur-background-level-1": "4px",
			"blur-background-level-2": "8px",
			"blur-background-level-3": "16px",
			"blur-layer-level-1": "24px",
			"blur-layer-level-2": "48px",
			"blur-layer-level-3": "96px"
		}
	}
};
var designTokensJson = {
	core: core,
	play: play,
	momo: momo
};

var typographyJson = {
	"caption-uppercase": {
	"font-family": "WorkSans-Medium",
	"font-size": "0.875rem",
	"line-height": "120.00000762939453%",
	"text-transform": "uppercase"
},
	"title-large-bold": {
	"font-family": "MTNBrighterSans-Bold",
	"font-size": "1.75rem",
	"line-height": "110%"
},
	"label-small-number-input": {
	"font-family": "MTNBrighterSans-Regular",
	"font-size": "1rem",
	"line-height": "100%"
},
	"label-small-semibold-uppercase": {
	"font-family": "MTNBrighterSans-Bold",
	"font-size": "1rem",
	"line-height": "100%",
	"text-transform": "uppercase"
},
	"label-large-number-input": {
	"font-family": "MTNBrighterSans-Regular",
	"font-size": "1.125rem",
	"line-height": "100%",
	"text-transform": "capitalize"
},
	"label-large-semibold-title-case": {
	"font-family": "MTNBrighterSans-Bold",
	"font-size": "1.125rem",
	"line-height": "100%",
	"text-transform": "capitalize"
},
	"title-small-regular": {
	"font-family": "MTNBrighterSans-Regular",
	"font-size": "1.5rem",
	"line-height": "110%"
},
	"body-large-italics": {
	"font-family": "WorkSansItalic-Regular",
	"font-size": "1.125rem",
	"line-height": "140%"
},
	"body-small-uppercase": {
	"font-family": "WorkSans-SemiBold",
	"font-size": "1rem",
	"line-height": "140%",
	"text-transform": "uppercase"
},
	"body-small-italics": {
	"font-family": "WorkSansItalic-Regular",
	"font-size": "1rem",
	"line-height": "140%"
},
	"label-large-semibold": {
	"font-family": "MTNBrighterSans-Bold",
	"font-size": "1.125rem",
	"line-height": "100%"
},
	"label-large-regular-title-case": {
	"font-family": "MTNBrighterSans-Regular",
	"font-size": "1.125rem",
	"line-height": "100%",
	"text-transform": "capitalize"
},
	"label-small-semibold-title-case": {
	"font-family": "MTNBrighterSans-Bold",
	"font-size": "1rem",
	"line-height": "100%",
	"text-transform": "capitalize"
},
	"body-small-regular": {
	"font-family": "WorkSans-Regular",
	"font-size": "1rem",
	"line-height": "140%"
},
	"caption-regular": {
	"font-family": "WorkSans-Regular",
	"font-size": "0.875rem",
	"line-height": "110%"
},
	"label-large-regular": {
	"font-family": "MTNBrighterSans-Regular",
	"font-size": "1.125rem",
	"line-height": "100%"
},
	"label-small-regular-uppercase": {
	"font-family": "MTNBrighterSans-Regular",
	"font-size": "1rem",
	"line-height": "100%",
	"text-transform": "uppercase"
},
	"body-large-semibold": {
	"font-family": "WorkSans-SemiBold",
	"font-size": "1.125rem",
	"line-height": "140%"
},
	"title-small-bold": {
	"font-family": "MTNBrighterSans-Bold",
	"font-size": "1.5rem",
	"line-height": "110%"
},
	"display-large": {
	"font-family": "MTNBrighterSans-ExtraBold",
	"font-size": "3.625rem",
	"line-height": "100%"
},
	"body-large-uppercase": {
	"font-family": "WorkSans-SemiBold",
	"font-size": "1.125rem",
	"line-height": "140%",
	"text-transform": "uppercase"
},
	"headline-large": {
	"font-family": "MTNBrighterSans-Bold",
	"font-size": "2.375rem",
	"line-height": "100%"
},
	"label-small-regular": {
	"font-family": "MTNBrighterSans-Regular",
	"font-size": "1rem",
	"line-height": "100%"
},
	"headline-small": {
	"font-family": "MTNBrighterSans-Bold",
	"font-size": "2.125rem",
	"line-height": "100%"
},
	"label-small-regular-title-case": {
	"font-family": "MTNBrighterSans-Regular",
	"font-size": "1rem",
	"line-height": "100%",
	"text-transform": "capitalize"
},
	"title-large-regular": {
	"font-family": "MTNBrighterSans-Regular",
	"font-size": "1.75rem",
	"line-height": "110%"
},
	"caption-semibold": {
	"font-family": "WorkSans-SemiBold",
	"font-size": "0.875rem",
	"line-height": "110%"
},
	"body-small-semibold": {
	"font-family": "WorkSans-SemiBold",
	"font-size": "1rem",
	"line-height": "140%"
},
	"display-small": {
	"font-family": "MTNBrighterSans-ExtraBold",
	"font-size": "3rem",
	"line-height": "100%"
},
	"label-small-semibold": {
	"font-family": "MTNBrighterSans-Bold",
	"font-size": "1rem",
	"line-height": "100%"
},
	"body-large-regular": {
	"font-family": "WorkSans-Regular",
	"font-size": "1.125rem",
	"line-height": "140%"
}
};

const allDesignTokens = {
    core: {
        light: Object.assign(Object.assign({}, designTokensJson.core.light), { typography: typographyJson }),
        dark: Object.assign(Object.assign({}, designTokensJson.core.dark), { typography: typographyJson }),
    },
    play: {
        light: Object.assign(Object.assign({}, designTokensJson.play.light), { typography: typographyJson }),
        dark: Object.assign(Object.assign({}, designTokensJson.play.dark), { typography: typographyJson }),
    },
    momo: {
        light: Object.assign(Object.assign({}, designTokensJson.momo.light), { typography: typographyJson }),
        dark: Object.assign(Object.assign({}, designTokensJson.momo.dark), { typography: typographyJson }),
    },
};

exports.allDesignTokens = allDesignTokens;


/***/ }),

/***/ "./public-fa/fa-banner/app/App.tsx":
/*!*****************************************!*\
  !*** ./public-fa/fa-banner/app/App.tsx ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   App: () => (/* binding */ App)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react?e042");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _mtnkente_paragon_foundation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mtnkente/paragon-foundation */ "./node_modules/@mtnkente/paragon-foundation/dist/index.esm.js");
/* harmony import */ var _mtnkente_paragon_buttons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @mtnkente/paragon-buttons */ "./node_modules/@mtnkente/paragon-buttons/dist/index.esm.js");




const App = () => {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(styled_components__WEBPACK_IMPORTED_MODULE_3__.ThemeProvider, {
    theme: (0,_mtnkente_paragon_foundation__WEBPACK_IMPORTED_MODULE_1__.designTokens)(_mtnkente_paragon_foundation__WEBPACK_IMPORTED_MODULE_1__.Platform.MOMO)[_mtnkente_paragon_foundation__WEBPACK_IMPORTED_MODULE_1__.Variant.LIGHT]
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_mtnkente_paragon_buttons__WEBPACK_IMPORTED_MODULE_2__.StandardButton, {
    $variant: "primary",
    label: "Click me"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_mtnkente_paragon_foundation__WEBPACK_IMPORTED_MODULE_1__.MTNBrighterSans, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_mtnkente_paragon_foundation__WEBPACK_IMPORTED_MODULE_1__.WorkSans, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_mtnkente_paragon_foundation__WEBPACK_IMPORTED_MODULE_1__.Reset, null)));
};

/***/ }),

/***/ "./public-fa/fa-banner/app/AppDefinition.tsx":
/*!***************************************************!*\
  !*** ./public-fa/fa-banner/app/AppDefinition.tsx ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react?e042");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _services_feature_app_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./services/feature-app-service */ "./public-fa/fa-banner/app/services/feature-app-service.tsx");
/* harmony import */ var _App__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./App */ "./public-fa/fa-banner/app/App.tsx");
// DO not chnage anything (rename)




const FeatureHubAppDefinition = {
  dependencies: {
    featureServices: {
      'test:hello-world-service': '1.0.0'
    }
  },
  ownFeatureServiceDefinitions: [_services_feature_app_service__WEBPACK_IMPORTED_MODULE_1__.helloWorldServiceDefinition],
  create: _ref => {
    let {
      featureServices
    } = _ref;
    const helloService = featureServices['test:hello-world-service'];
    return {
      render: () => {
        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_App__WEBPACK_IMPORTED_MODULE_2__.App, null);
      }
    };
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FeatureHubAppDefinition);

/***/ }),

/***/ "./public-fa/fa-banner/app/services/feature-app-service.tsx":
/*!******************************************************************!*\
  !*** ./public-fa/fa-banner/app/services/feature-app-service.tsx ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   helloWorldServiceDefinition: () => (/* binding */ helloWorldServiceDefinition)
/* harmony export */ });
const helloWorldServiceDefinition = {
  id: 'test:hello-world-service',
  create: () => {
    return {
      '1.0.0': () => ({
        featureService: {
          get name() {
            return 'Hello World from Service';
          }
        }
      })
    };
  }
};

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-runtime.development.js":
/*!*****************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-runtime.development.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/**
 * @license React
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



if (true) {
  (function() {
'use strict';

var React = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react?e43f");

// ATTENTION
// When adding new symbols to this file,
// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
// The Symbol used to tag the ReactElement-like types.
var REACT_ELEMENT_TYPE = Symbol.for('react.element');
var REACT_PORTAL_TYPE = Symbol.for('react.portal');
var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
var REACT_CONTEXT_TYPE = Symbol.for('react.context');
var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
var REACT_MEMO_TYPE = Symbol.for('react.memo');
var REACT_LAZY_TYPE = Symbol.for('react.lazy');
var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');
var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';
function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable !== 'object') {
    return null;
  }

  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }

  return null;
}

var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

function error(format) {
  {
    {
      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }

      printWarning('error', format, args);
    }
  }
}

function printWarning(level, format, args) {
  // When changing this logic, you might want to also
  // update consoleWithStackDev.www.js as well.
  {
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var stack = ReactDebugCurrentFrame.getStackAddendum();

    if (stack !== '') {
      format += '%s';
      args = args.concat([stack]);
    } // eslint-disable-next-line react-internal/safe-string-coercion


    var argsWithFormat = args.map(function (item) {
      return String(item);
    }); // Careful: RN currently depends on this prefix

    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
    // breaks IE9: https://github.com/facebook/react/issues/13610
    // eslint-disable-next-line react-internal/no-production-logging

    Function.prototype.apply.call(console[level], console, argsWithFormat);
  }
}

// -----------------------------------------------------------------------------

var enableScopeAPI = false; // Experimental Create Event Handle API.
var enableCacheElement = false;
var enableTransitionTracing = false; // No known bugs, but needs performance testing

var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
// stuff. Intended to enable React core members to more easily debug scheduling
// issues in DEV builds.

var enableDebugTracing = false; // Track which Fiber(s) schedule render work.

var REACT_MODULE_REFERENCE;

{
  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');
}

function isValidElementType(type) {
  if (typeof type === 'string' || typeof type === 'function') {
    return true;
  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).


  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {
    return true;
  }

  if (typeof type === 'object' && type !== null) {
    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
    // types supported by any Flight configuration anywhere since
    // we don't know which Flight build this will end up being used
    // with.
    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {
      return true;
    }
  }

  return false;
}

function getWrappedName(outerType, innerType, wrapperName) {
  var displayName = outerType.displayName;

  if (displayName) {
    return displayName;
  }

  var functionName = innerType.displayName || innerType.name || '';
  return functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName;
} // Keep in sync with react-reconciler/getComponentNameFromFiber


function getContextName(type) {
  return type.displayName || 'Context';
} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.


function getComponentNameFromType(type) {
  if (type == null) {
    // Host root, text node or just invalid type.
    return null;
  }

  {
    if (typeof type.tag === 'number') {
      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');
    }
  }

  if (typeof type === 'function') {
    return type.displayName || type.name || null;
  }

  if (typeof type === 'string') {
    return type;
  }

  switch (type) {
    case REACT_FRAGMENT_TYPE:
      return 'Fragment';

    case REACT_PORTAL_TYPE:
      return 'Portal';

    case REACT_PROFILER_TYPE:
      return 'Profiler';

    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';

    case REACT_SUSPENSE_TYPE:
      return 'Suspense';

    case REACT_SUSPENSE_LIST_TYPE:
      return 'SuspenseList';

  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        var context = type;
        return getContextName(context) + '.Consumer';

      case REACT_PROVIDER_TYPE:
        var provider = type;
        return getContextName(provider._context) + '.Provider';

      case REACT_FORWARD_REF_TYPE:
        return getWrappedName(type, type.render, 'ForwardRef');

      case REACT_MEMO_TYPE:
        var outerName = type.displayName || null;

        if (outerName !== null) {
          return outerName;
        }

        return getComponentNameFromType(type.type) || 'Memo';

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            return getComponentNameFromType(init(payload));
          } catch (x) {
            return null;
          }
        }

      // eslint-disable-next-line no-fallthrough
    }
  }

  return null;
}

var assign = Object.assign;

// Helpers to patch console.logs to avoid logging during side-effect free
// replaying on render function. This currently only patches the object
// lazily which won't cover if the log function was extracted eagerly.
// We could also eagerly patch the method.
var disabledDepth = 0;
var prevLog;
var prevInfo;
var prevWarn;
var prevError;
var prevGroup;
var prevGroupCollapsed;
var prevGroupEnd;

function disabledLog() {}

disabledLog.__reactDisabledLog = true;
function disableLogs() {
  {
    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      prevLog = console.log;
      prevInfo = console.info;
      prevWarn = console.warn;
      prevError = console.error;
      prevGroup = console.group;
      prevGroupCollapsed = console.groupCollapsed;
      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099

      var props = {
        configurable: true,
        enumerable: true,
        value: disabledLog,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        info: props,
        log: props,
        warn: props,
        error: props,
        group: props,
        groupCollapsed: props,
        groupEnd: props
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    disabledDepth++;
  }
}
function reenableLogs() {
  {
    disabledDepth--;

    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      var props = {
        configurable: true,
        enumerable: true,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        log: assign({}, props, {
          value: prevLog
        }),
        info: assign({}, props, {
          value: prevInfo
        }),
        warn: assign({}, props, {
          value: prevWarn
        }),
        error: assign({}, props, {
          value: prevError
        }),
        group: assign({}, props, {
          value: prevGroup
        }),
        groupCollapsed: assign({}, props, {
          value: prevGroupCollapsed
        }),
        groupEnd: assign({}, props, {
          value: prevGroupEnd
        })
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    if (disabledDepth < 0) {
      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');
    }
  }
}

var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
var prefix;
function describeBuiltInComponentFrame(name, source, ownerFn) {
  {
    if (prefix === undefined) {
      // Extract the VM specific prefix used by each line.
      try {
        throw Error();
      } catch (x) {
        var match = x.stack.trim().match(/\n( *(at )?)/);
        prefix = match && match[1] || '';
      }
    } // We use the prefix to ensure our stacks line up with native stack frames.


    return '\n' + prefix + name;
  }
}
var reentry = false;
var componentFrameCache;

{
  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
  componentFrameCache = new PossiblyWeakMap();
}

function describeNativeComponentFrame(fn, construct) {
  // If something asked for a stack inside a fake render, it should get ignored.
  if ( !fn || reentry) {
    return '';
  }

  {
    var frame = componentFrameCache.get(fn);

    if (frame !== undefined) {
      return frame;
    }
  }

  var control;
  reentry = true;
  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.

  Error.prepareStackTrace = undefined;
  var previousDispatcher;

  {
    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function
    // for warnings.

    ReactCurrentDispatcher.current = null;
    disableLogs();
  }

  try {
    // This should throw.
    if (construct) {
      // Something should be setting the props in the constructor.
      var Fake = function () {
        throw Error();
      }; // $FlowFixMe


      Object.defineProperty(Fake.prototype, 'props', {
        set: function () {
          // We use a throwing setter instead of frozen or non-writable props
          // because that won't throw in a non-strict mode function.
          throw Error();
        }
      });

      if (typeof Reflect === 'object' && Reflect.construct) {
        // We construct a different control for this case to include any extra
        // frames added by the construct call.
        try {
          Reflect.construct(Fake, []);
        } catch (x) {
          control = x;
        }

        Reflect.construct(fn, [], Fake);
      } else {
        try {
          Fake.call();
        } catch (x) {
          control = x;
        }

        fn.call(Fake.prototype);
      }
    } else {
      try {
        throw Error();
      } catch (x) {
        control = x;
      }

      fn();
    }
  } catch (sample) {
    // This is inlined manually because closure doesn't do it for us.
    if (sample && control && typeof sample.stack === 'string') {
      // This extracts the first frame from the sample that isn't also in the control.
      // Skipping one frame that we assume is the frame that calls the two.
      var sampleLines = sample.stack.split('\n');
      var controlLines = control.stack.split('\n');
      var s = sampleLines.length - 1;
      var c = controlLines.length - 1;

      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
        // We expect at least one stack frame to be shared.
        // Typically this will be the root most one. However, stack frames may be
        // cut off due to maximum stack limits. In this case, one maybe cut off
        // earlier than the other. We assume that the sample is longer or the same
        // and there for cut off earlier. So we should find the root most frame in
        // the sample somewhere in the control.
        c--;
      }

      for (; s >= 1 && c >= 0; s--, c--) {
        // Next we find the first one that isn't the same which should be the
        // frame that called our sample function and the control.
        if (sampleLines[s] !== controlLines[c]) {
          // In V8, the first line is describing the message but other VMs don't.
          // If we're about to return the first line, and the control is also on the same
          // line, that's a pretty good indicator that our sample threw at same line as
          // the control. I.e. before we entered the sample frame. So we ignore this result.
          // This can happen if you passed a class to function component, or non-function.
          if (s !== 1 || c !== 1) {
            do {
              s--;
              c--; // We may still have similar intermediate frames from the construct call.
              // The next one that isn't the same should be our match though.

              if (c < 0 || sampleLines[s] !== controlLines[c]) {
                // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                var _frame = '\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled "<anonymous>"
                // but we have a user-provided "displayName"
                // splice it in to make the stack more readable.


                if (fn.displayName && _frame.includes('<anonymous>')) {
                  _frame = _frame.replace('<anonymous>', fn.displayName);
                }

                {
                  if (typeof fn === 'function') {
                    componentFrameCache.set(fn, _frame);
                  }
                } // Return the line we found.


                return _frame;
              }
            } while (s >= 1 && c >= 0);
          }

          break;
        }
      }
    }
  } finally {
    reentry = false;

    {
      ReactCurrentDispatcher.current = previousDispatcher;
      reenableLogs();
    }

    Error.prepareStackTrace = previousPrepareStackTrace;
  } // Fallback to just using the name if we couldn't make it throw.


  var name = fn ? fn.displayName || fn.name : '';
  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';

  {
    if (typeof fn === 'function') {
      componentFrameCache.set(fn, syntheticFrame);
    }
  }

  return syntheticFrame;
}
function describeFunctionComponentFrame(fn, source, ownerFn) {
  {
    return describeNativeComponentFrame(fn, false);
  }
}

function shouldConstruct(Component) {
  var prototype = Component.prototype;
  return !!(prototype && prototype.isReactComponent);
}

function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {

  if (type == null) {
    return '';
  }

  if (typeof type === 'function') {
    {
      return describeNativeComponentFrame(type, shouldConstruct(type));
    }
  }

  if (typeof type === 'string') {
    return describeBuiltInComponentFrame(type);
  }

  switch (type) {
    case REACT_SUSPENSE_TYPE:
      return describeBuiltInComponentFrame('Suspense');

    case REACT_SUSPENSE_LIST_TYPE:
      return describeBuiltInComponentFrame('SuspenseList');
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_FORWARD_REF_TYPE:
        return describeFunctionComponentFrame(type.render);

      case REACT_MEMO_TYPE:
        // Memo may contain any component type so we recursively resolve it.
        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            // Lazy may contain any component type so we recursively resolve it.
            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
          } catch (x) {}
        }
    }
  }

  return '';
}

var hasOwnProperty = Object.prototype.hasOwnProperty;

var loggedTypeFailures = {};
var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;

function setCurrentlyValidatingElement(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      ReactDebugCurrentFrame.setExtraStackFrame(stack);
    } else {
      ReactDebugCurrentFrame.setExtraStackFrame(null);
    }
  }
}

function checkPropTypes(typeSpecs, values, location, componentName, element) {
  {
    // $FlowFixMe This is okay but Flow doesn't know it.
    var has = Function.call.bind(hasOwnProperty);

    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.

        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            // eslint-disable-next-line react-internal/prod-error-codes
            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
            err.name = 'Invariant Violation';
            throw err;
          }

          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
        } catch (ex) {
          error$1 = ex;
        }

        if (error$1 && !(error$1 instanceof Error)) {
          setCurrentlyValidatingElement(element);

          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);

          setCurrentlyValidatingElement(null);
        }

        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error$1.message] = true;
          setCurrentlyValidatingElement(element);

          error('Failed %s type: %s', location, error$1.message);

          setCurrentlyValidatingElement(null);
        }
      }
    }
  }
}

var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare

function isArray(a) {
  return isArrayImpl(a);
}

/*
 * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
 * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
 *
 * The functions in this module will throw an easier-to-understand,
 * easier-to-debug exception with a clear errors message message explaining the
 * problem. (Instead of a confusing exception thrown inside the implementation
 * of the `value` object).
 */
// $FlowFixMe only called in DEV, so void return is not possible.
function typeName(value) {
  {
    // toStringTag is needed for namespaced types like Temporal.Instant
    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;
    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';
    return type;
  }
} // $FlowFixMe only called in DEV, so void return is not possible.


function willCoercionThrow(value) {
  {
    try {
      testStringCoercion(value);
      return false;
    } catch (e) {
      return true;
    }
  }
}

function testStringCoercion(value) {
  // If you ended up here by following an exception call stack, here's what's
  // happened: you supplied an object or symbol value to React (as a prop, key,
  // DOM attribute, CSS property, string ref, etc.) and when React tried to
  // coerce it to a string using `'' + value`, an exception was thrown.
  //
  // The most common types that will cause this exception are `Symbol` instances
  // and Temporal objects like `Temporal.Instant`. But any object that has a
  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
  // exception. (Library authors do this to prevent users from using built-in
  // numeric operators like `+` or comparison operators like `>=` because custom
  // methods are needed to perform accurate arithmetic or comparison.)
  //
  // To fix the problem, coerce this object or symbol value to a string before
  // passing it to React. The most reliable way is usually `String(value)`.
  //
  // To find which value is throwing, check the browser or debugger console.
  // Before this exception was thrown, there should be `console.error` output
  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
  // problem and how that type was used: key, atrribute, input value prop, etc.
  // In most cases, this console output also shows the component and its
  // ancestor components where the exception happened.
  //
  // eslint-disable-next-line react-internal/safe-string-coercion
  return '' + value;
}
function checkKeyStringCoercion(value) {
  {
    if (willCoercionThrow(value)) {
      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));

      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
    }
  }
}

var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};
var specialPropKeyWarningShown;
var specialPropRefWarningShown;
var didWarnAboutStringRefs;

{
  didWarnAboutStringRefs = {};
}

function hasValidRef(config) {
  {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.ref !== undefined;
}

function hasValidKey(config) {
  {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.key !== undefined;
}

function warnIfStringRefCannotBeAutoConverted(config, self) {
  {
    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {
      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);

      if (!didWarnAboutStringRefs[componentName]) {
        error('Component "%s" contains the string ref "%s". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);

        didWarnAboutStringRefs[componentName] = true;
      }
    }
  }
}

function defineKeyPropWarningGetter(props, displayName) {
  {
    var warnAboutAccessingKey = function () {
      if (!specialPropKeyWarningShown) {
        specialPropKeyWarningShown = true;

        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
      }
    };

    warnAboutAccessingKey.isReactWarning = true;
    Object.defineProperty(props, 'key', {
      get: warnAboutAccessingKey,
      configurable: true
    });
  }
}

function defineRefPropWarningGetter(props, displayName) {
  {
    var warnAboutAccessingRef = function () {
      if (!specialPropRefWarningShown) {
        specialPropRefWarningShown = true;

        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
      }
    };

    warnAboutAccessingRef.isReactWarning = true;
    Object.defineProperty(props, 'ref', {
      get: warnAboutAccessingRef,
      configurable: true
    });
  }
}
/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */


var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allows us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,
    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,
    // Record the component responsible for creating this element.
    _owner: owner
  };

  {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.

    Object.defineProperty(element._store, 'validated', {
      configurable: false,
      enumerable: false,
      writable: true,
      value: false
    }); // self and source are DEV only properties.

    Object.defineProperty(element, '_self', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: self
    }); // Two elements created in two different places should be considered
    // equal for testing purposes and therefore we hide it from enumeration.

    Object.defineProperty(element, '_source', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: source
    });

    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};
/**
 * https://github.com/reactjs/rfcs/pull/107
 * @param {*} type
 * @param {object} props
 * @param {string} key
 */

function jsxDEV(type, config, maybeKey, source, self) {
  {
    var propName; // Reserved names are extracted

    var props = {};
    var key = null;
    var ref = null; // Currently, key can be spread in as a prop. This causes a potential
    // issue if key is also explicitly declared (ie. <div {...props} key="Hi" />
    // or <div key="Hi" {...props} /> ). We want to deprecate key spread,
    // but as an intermediary step, we will use jsxDEV for everything except
    // <div {...props} key="Hi" />, because we aren't currently able to tell if
    // key is explicitly declared to be undefined or not.

    if (maybeKey !== undefined) {
      {
        checkKeyStringCoercion(maybeKey);
      }

      key = '' + maybeKey;
    }

    if (hasValidKey(config)) {
      {
        checkKeyStringCoercion(config.key);
      }

      key = '' + config.key;
    }

    if (hasValidRef(config)) {
      ref = config.ref;
      warnIfStringRefCannotBeAutoConverted(config, self);
    } // Remaining properties are added to a new props object


    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    } // Resolve default props


    if (type && type.defaultProps) {
      var defaultProps = type.defaultProps;

      for (propName in defaultProps) {
        if (props[propName] === undefined) {
          props[propName] = defaultProps[propName];
        }
      }
    }

    if (key || ref) {
      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

      if (key) {
        defineKeyPropWarningGetter(props, displayName);
      }

      if (ref) {
        defineRefPropWarningGetter(props, displayName);
      }
    }

    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
  }
}

var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;

function setCurrentlyValidatingElement$1(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
    } else {
      ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
  }
}

var propTypesMisspellWarningShown;

{
  propTypesMisspellWarningShown = false;
}
/**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */


function isValidElement(object) {
  {
    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
  }
}

function getDeclarationErrorAddendum() {
  {
    if (ReactCurrentOwner$1.current) {
      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);

      if (name) {
        return '\n\nCheck the render method of `' + name + '`.';
      }
    }

    return '';
  }
}

function getSourceInfoErrorAddendum(source) {
  {
    if (source !== undefined) {
      var fileName = source.fileName.replace(/^.*[\\\/]/, '');
      var lineNumber = source.lineNumber;
      return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
    }

    return '';
  }
}
/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */


var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  {
    var info = getDeclarationErrorAddendum();

    if (!info) {
      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;

      if (parentName) {
        info = "\n\nCheck the top-level render call using <" + parentName + ">.";
      }
    }

    return info;
  }
}
/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */


function validateExplicitKey(element, parentType) {
  {
    if (!element._store || element._store.validated || element.key != null) {
      return;
    }

    element._store.validated = true;
    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);

    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
      return;
    }

    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
    // property, it may be the creator of the child that's responsible for
    // assigning it a key.

    var childOwner = '';

    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {
      // Give the component that originally created this child.
      childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
    }

    setCurrentlyValidatingElement$1(element);

    error('Each child in a list should have a unique "key" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);

    setCurrentlyValidatingElement$1(null);
  }
}
/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */


function validateChildKeys(node, parentType) {
  {
    if (typeof node !== 'object') {
      return;
    }

    if (isArray(node)) {
      for (var i = 0; i < node.length; i++) {
        var child = node[i];

        if (isValidElement(child)) {
          validateExplicitKey(child, parentType);
        }
      }
    } else if (isValidElement(node)) {
      // This element was passed in a valid location.
      if (node._store) {
        node._store.validated = true;
      }
    } else if (node) {
      var iteratorFn = getIteratorFn(node);

      if (typeof iteratorFn === 'function') {
        // Entry iterators used to provide implicit keys,
        // but now we print a separate warning for them later.
        if (iteratorFn !== node.entries) {
          var iterator = iteratorFn.call(node);
          var step;

          while (!(step = iterator.next()).done) {
            if (isValidElement(step.value)) {
              validateExplicitKey(step.value, parentType);
            }
          }
        }
      }
    }
  }
}
/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */


function validatePropTypes(element) {
  {
    var type = element.type;

    if (type === null || type === undefined || typeof type === 'string') {
      return;
    }

    var propTypes;

    if (typeof type === 'function') {
      propTypes = type.propTypes;
    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
    // Inner props are checked in the reconciler.
    type.$$typeof === REACT_MEMO_TYPE)) {
      propTypes = type.propTypes;
    } else {
      return;
    }

    if (propTypes) {
      // Intentionally inside to avoid triggering lazy initializers:
      var name = getComponentNameFromType(type);
      checkPropTypes(propTypes, element.props, 'prop', name, element);
    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:

      var _name = getComponentNameFromType(type);

      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
    }

    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {
      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
    }
  }
}
/**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */


function validateFragmentProps(fragment) {
  {
    var keys = Object.keys(fragment.props);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];

      if (key !== 'children' && key !== 'key') {
        setCurrentlyValidatingElement$1(fragment);

        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);

        setCurrentlyValidatingElement$1(null);
        break;
      }
    }

    if (fragment.ref !== null) {
      setCurrentlyValidatingElement$1(fragment);

      error('Invalid attribute `ref` supplied to `React.Fragment`.');

      setCurrentlyValidatingElement$1(null);
    }
  }
}

function jsxWithValidation(type, props, key, isStaticChildren, source, self) {
  {
    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
    // succeed and there will likely be errors in render.

    if (!validType) {
      var info = '';

      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
        info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
      }

      var sourceInfo = getSourceInfoErrorAddendum(source);

      if (sourceInfo) {
        info += sourceInfo;
      } else {
        info += getDeclarationErrorAddendum();
      }

      var typeString;

      if (type === null) {
        typeString = 'null';
      } else if (isArray(type)) {
        typeString = 'array';
      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
        typeString = "<" + (getComponentNameFromType(type.type) || 'Unknown') + " />";
        info = ' Did you accidentally export a JSX literal instead of a component?';
      } else {
        typeString = typeof type;
      }

      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
    }

    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.
    // TODO: Drop this when these are no longer allowed as the type argument.

    if (element == null) {
      return element;
    } // Skip key warning if the type isn't valid since our key validation logic
    // doesn't expect a non-string/function type and can throw confusing errors.
    // We don't want exception behavior to differ between dev and prod.
    // (Rendering will throw with a helpful message and as soon as the type is
    // fixed, the key warnings will appear.)


    if (validType) {
      var children = props.children;

      if (children !== undefined) {
        if (isStaticChildren) {
          if (isArray(children)) {
            for (var i = 0; i < children.length; i++) {
              validateChildKeys(children[i], type);
            }

            if (Object.freeze) {
              Object.freeze(children);
            }
          } else {
            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');
          }
        } else {
          validateChildKeys(children, type);
        }
      }
    }

    if (type === REACT_FRAGMENT_TYPE) {
      validateFragmentProps(element);
    } else {
      validatePropTypes(element);
    }

    return element;
  }
} // These two functions exist to still get child warnings in dev
// even with the prod transform. This means that jsxDEV is purely
// opt-in behavior for better messages but that we won't stop
// giving you warnings if you use production apis.

function jsxWithValidationStatic(type, props, key) {
  {
    return jsxWithValidation(type, props, key, true);
  }
}
function jsxWithValidationDynamic(type, props, key) {
  {
    return jsxWithValidation(type, props, key, false);
  }
}

var jsx =  jsxWithValidationDynamic ; // we may want to special case jsxs internally to take advantage of static children.
// for now we can ship identical prod functions

var jsxs =  jsxWithValidationStatic ;

exports.Fragment = REACT_FRAGMENT_TYPE;
exports.jsx = jsx;
exports.jsxs = jsxs;
  })();
}


/***/ }),

/***/ "./node_modules/react/cjs/react.development.js":
/*!*****************************************************!*\
  !*** ./node_modules/react/cjs/react.development.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
/* module decorator */ module = __webpack_require__.nmd(module);
/**
 * @license React
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



if (true) {
  (function() {

          'use strict';

/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
if (
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===
    'function'
) {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
}
          var ReactVersion = '18.2.0';

// ATTENTION
// When adding new symbols to this file,
// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
// The Symbol used to tag the ReactElement-like types.
var REACT_ELEMENT_TYPE = Symbol.for('react.element');
var REACT_PORTAL_TYPE = Symbol.for('react.portal');
var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
var REACT_CONTEXT_TYPE = Symbol.for('react.context');
var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
var REACT_MEMO_TYPE = Symbol.for('react.memo');
var REACT_LAZY_TYPE = Symbol.for('react.lazy');
var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');
var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';
function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable !== 'object') {
    return null;
  }

  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }

  return null;
}

/**
 * Keeps track of the current dispatcher.
 */
var ReactCurrentDispatcher = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

/**
 * Keeps track of the current batch's configuration such as how long an update
 * should suspend for if it needs to.
 */
var ReactCurrentBatchConfig = {
  transition: null
};

var ReactCurrentActQueue = {
  current: null,
  // Used to reproduce behavior of `batchedUpdates` in legacy mode.
  isBatchingLegacy: false,
  didScheduleLegacyUpdate: false
};

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */
var ReactCurrentOwner = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

var ReactDebugCurrentFrame = {};
var currentExtraStackFrame = null;
function setExtraStackFrame(stack) {
  {
    currentExtraStackFrame = stack;
  }
}

{
  ReactDebugCurrentFrame.setExtraStackFrame = function (stack) {
    {
      currentExtraStackFrame = stack;
    }
  }; // Stack implementation injected by the current renderer.


  ReactDebugCurrentFrame.getCurrentStack = null;

  ReactDebugCurrentFrame.getStackAddendum = function () {
    var stack = ''; // Add an extra top frame while an element is being validated

    if (currentExtraStackFrame) {
      stack += currentExtraStackFrame;
    } // Delegate to the injected renderer-specific implementation


    var impl = ReactDebugCurrentFrame.getCurrentStack;

    if (impl) {
      stack += impl() || '';
    }

    return stack;
  };
}

// -----------------------------------------------------------------------------

var enableScopeAPI = false; // Experimental Create Event Handle API.
var enableCacheElement = false;
var enableTransitionTracing = false; // No known bugs, but needs performance testing

var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
// stuff. Intended to enable React core members to more easily debug scheduling
// issues in DEV builds.

var enableDebugTracing = false; // Track which Fiber(s) schedule render work.

var ReactSharedInternals = {
  ReactCurrentDispatcher: ReactCurrentDispatcher,
  ReactCurrentBatchConfig: ReactCurrentBatchConfig,
  ReactCurrentOwner: ReactCurrentOwner
};

{
  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;
  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;
}

// by calls to these methods by a Babel plugin.
//
// In PROD (or in packages without access to React internals),
// they are left as they are instead.

function warn(format) {
  {
    {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      printWarning('warn', format, args);
    }
  }
}
function error(format) {
  {
    {
      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }

      printWarning('error', format, args);
    }
  }
}

function printWarning(level, format, args) {
  // When changing this logic, you might want to also
  // update consoleWithStackDev.www.js as well.
  {
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var stack = ReactDebugCurrentFrame.getStackAddendum();

    if (stack !== '') {
      format += '%s';
      args = args.concat([stack]);
    } // eslint-disable-next-line react-internal/safe-string-coercion


    var argsWithFormat = args.map(function (item) {
      return String(item);
    }); // Careful: RN currently depends on this prefix

    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
    // breaks IE9: https://github.com/facebook/react/issues/13610
    // eslint-disable-next-line react-internal/no-production-logging

    Function.prototype.apply.call(console[level], console, argsWithFormat);
  }
}

var didWarnStateUpdateForUnmountedComponent = {};

function warnNoop(publicInstance, callerName) {
  {
    var _constructor = publicInstance.constructor;
    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
    var warningKey = componentName + "." + callerName;

    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
      return;
    }

    error("Can't call %s on a component that is not yet mounted. " + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);

    didWarnStateUpdateForUnmountedComponent[warningKey] = true;
  }
}
/**
 * This is the abstract API for an update queue.
 */


var ReactNoopUpdateQueue = {
  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance, callback, callerName) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
    warnNoop(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} Name of the calling function in the public API.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState, callback, callerName) {
    warnNoop(publicInstance, 'setState');
  }
};

var assign = Object.assign;

var emptyObject = {};

{
  Object.freeze(emptyObject);
}
/**
 * Base class helpers for the updating state of a component.
 */


function Component(props, context, updater) {
  this.props = props;
  this.context = context; // If a component has string refs, we will assign a different object later.

  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the
  // renderer.

  this.updater = updater || ReactNoopUpdateQueue;
}

Component.prototype.isReactComponent = {};
/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */

Component.prototype.setState = function (partialState, callback) {
  if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) {
    throw new Error('setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.');
  }

  this.updater.enqueueSetState(this, partialState, callback, 'setState');
};
/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */


Component.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
};
/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */


{
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };

  var defineDeprecationWarning = function (methodName, info) {
    Object.defineProperty(Component.prototype, methodName, {
      get: function () {
        warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);

        return undefined;
      }
    });
  };

  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

function ComponentDummy() {}

ComponentDummy.prototype = Component.prototype;
/**
 * Convenience component with default shallow equality check for sCU.
 */

function PureComponent(props, context, updater) {
  this.props = props;
  this.context = context; // If a component has string refs, we will assign a different object later.

  this.refs = emptyObject;
  this.updater = updater || ReactNoopUpdateQueue;
}

var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.

assign(pureComponentPrototype, Component.prototype);
pureComponentPrototype.isPureReactComponent = true;

// an immutable object with a single mutable value
function createRef() {
  var refObject = {
    current: null
  };

  {
    Object.seal(refObject);
  }

  return refObject;
}

var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare

function isArray(a) {
  return isArrayImpl(a);
}

/*
 * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
 * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
 *
 * The functions in this module will throw an easier-to-understand,
 * easier-to-debug exception with a clear errors message message explaining the
 * problem. (Instead of a confusing exception thrown inside the implementation
 * of the `value` object).
 */
// $FlowFixMe only called in DEV, so void return is not possible.
function typeName(value) {
  {
    // toStringTag is needed for namespaced types like Temporal.Instant
    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;
    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';
    return type;
  }
} // $FlowFixMe only called in DEV, so void return is not possible.


function willCoercionThrow(value) {
  {
    try {
      testStringCoercion(value);
      return false;
    } catch (e) {
      return true;
    }
  }
}

function testStringCoercion(value) {
  // If you ended up here by following an exception call stack, here's what's
  // happened: you supplied an object or symbol value to React (as a prop, key,
  // DOM attribute, CSS property, string ref, etc.) and when React tried to
  // coerce it to a string using `'' + value`, an exception was thrown.
  //
  // The most common types that will cause this exception are `Symbol` instances
  // and Temporal objects like `Temporal.Instant`. But any object that has a
  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
  // exception. (Library authors do this to prevent users from using built-in
  // numeric operators like `+` or comparison operators like `>=` because custom
  // methods are needed to perform accurate arithmetic or comparison.)
  //
  // To fix the problem, coerce this object or symbol value to a string before
  // passing it to React. The most reliable way is usually `String(value)`.
  //
  // To find which value is throwing, check the browser or debugger console.
  // Before this exception was thrown, there should be `console.error` output
  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
  // problem and how that type was used: key, atrribute, input value prop, etc.
  // In most cases, this console output also shows the component and its
  // ancestor components where the exception happened.
  //
  // eslint-disable-next-line react-internal/safe-string-coercion
  return '' + value;
}
function checkKeyStringCoercion(value) {
  {
    if (willCoercionThrow(value)) {
      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));

      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
    }
  }
}

function getWrappedName(outerType, innerType, wrapperName) {
  var displayName = outerType.displayName;

  if (displayName) {
    return displayName;
  }

  var functionName = innerType.displayName || innerType.name || '';
  return functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName;
} // Keep in sync with react-reconciler/getComponentNameFromFiber


function getContextName(type) {
  return type.displayName || 'Context';
} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.


function getComponentNameFromType(type) {
  if (type == null) {
    // Host root, text node or just invalid type.
    return null;
  }

  {
    if (typeof type.tag === 'number') {
      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');
    }
  }

  if (typeof type === 'function') {
    return type.displayName || type.name || null;
  }

  if (typeof type === 'string') {
    return type;
  }

  switch (type) {
    case REACT_FRAGMENT_TYPE:
      return 'Fragment';

    case REACT_PORTAL_TYPE:
      return 'Portal';

    case REACT_PROFILER_TYPE:
      return 'Profiler';

    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';

    case REACT_SUSPENSE_TYPE:
      return 'Suspense';

    case REACT_SUSPENSE_LIST_TYPE:
      return 'SuspenseList';

  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        var context = type;
        return getContextName(context) + '.Consumer';

      case REACT_PROVIDER_TYPE:
        var provider = type;
        return getContextName(provider._context) + '.Provider';

      case REACT_FORWARD_REF_TYPE:
        return getWrappedName(type, type.render, 'ForwardRef');

      case REACT_MEMO_TYPE:
        var outerName = type.displayName || null;

        if (outerName !== null) {
          return outerName;
        }

        return getComponentNameFromType(type.type) || 'Memo';

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            return getComponentNameFromType(init(payload));
          } catch (x) {
            return null;
          }
        }

      // eslint-disable-next-line no-fallthrough
    }
  }

  return null;
}

var hasOwnProperty = Object.prototype.hasOwnProperty;

var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};
var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;

{
  didWarnAboutStringRefs = {};
}

function hasValidRef(config) {
  {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.ref !== undefined;
}

function hasValidKey(config) {
  {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function () {
    {
      if (!specialPropKeyWarningShown) {
        specialPropKeyWarningShown = true;

        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
      }
    }
  };

  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function () {
    {
      if (!specialPropRefWarningShown) {
        specialPropRefWarningShown = true;

        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
      }
    }
  };

  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}

function warnIfStringRefCannotBeAutoConverted(config) {
  {
    if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);

      if (!didWarnAboutStringRefs[componentName]) {
        error('Component "%s" contains the string ref "%s". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);

        didWarnAboutStringRefs[componentName] = true;
      }
    }
  }
}
/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */


var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allows us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,
    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,
    // Record the component responsible for creating this element.
    _owner: owner
  };

  {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.

    Object.defineProperty(element._store, 'validated', {
      configurable: false,
      enumerable: false,
      writable: true,
      value: false
    }); // self and source are DEV only properties.

    Object.defineProperty(element, '_self', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: self
    }); // Two elements created in two different places should be considered
    // equal for testing purposes and therefore we hide it from enumeration.

    Object.defineProperty(element, '_source', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: source
    });

    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};
/**
 * Create and return a new ReactElement of the given type.
 * See https://reactjs.org/docs/react-api.html#createelement
 */

function createElement(type, config, children) {
  var propName; // Reserved names are extracted

  var props = {};
  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;

      {
        warnIfStringRefCannotBeAutoConverted(config);
      }
    }

    if (hasValidKey(config)) {
      {
        checkKeyStringCoercion(config.key);
      }

      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object

    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  } // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.


  var childrenLength = arguments.length - 2;

  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);

    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }

    {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }

    props.children = childArray;
  } // Resolve default props


  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;

    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }

  {
    if (key || ref) {
      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

      if (key) {
        defineKeyPropWarningGetter(props, displayName);
      }

      if (ref) {
        defineRefPropWarningGetter(props, displayName);
      }
    }
  }

  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
}
function cloneAndReplaceKey(oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
  return newElement;
}
/**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://reactjs.org/docs/react-api.html#cloneelement
 */

function cloneElement(element, config, children) {
  if (element === null || element === undefined) {
    throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
  }

  var propName; // Original props are copied

  var props = assign({}, element.props); // Reserved names are extracted

  var key = element.key;
  var ref = element.ref; // Self is preserved since the owner is preserved.

  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.

  var source = element._source; // Owner will be preserved, unless ref is overridden

  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }

    if (hasValidKey(config)) {
      {
        checkKeyStringCoercion(config.key);
      }

      key = '' + config.key;
    } // Remaining properties override existing props


    var defaultProps;

    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }

    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  } // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.


  var childrenLength = arguments.length - 2;

  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);

    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }

    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
}
/**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */

function isValidElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}

var SEPARATOR = '.';
var SUBSEPARATOR = ':';
/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = key.replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });
  return '$' + escapedString;
}
/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */


var didWarnAboutMaps = false;
var userProvidedKeyEscapeRegex = /\/+/g;

function escapeUserProvidedKey(text) {
  return text.replace(userProvidedKeyEscapeRegex, '$&/');
}
/**
 * Generate a key string that identifies a element within a set.
 *
 * @param {*} element A element that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */


function getElementKey(element, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (typeof element === 'object' && element !== null && element.key != null) {
    // Explicit key
    {
      checkKeyStringCoercion(element.key);
    }

    return escape('' + element.key);
  } // Implicit key determined by the index in the set


  return index.toString(36);
}

function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  var invokeCallback = false;

  if (children === null) {
    invokeCallback = true;
  } else {
    switch (type) {
      case 'string':
      case 'number':
        invokeCallback = true;
        break;

      case 'object':
        switch (children.$$typeof) {
          case REACT_ELEMENT_TYPE:
          case REACT_PORTAL_TYPE:
            invokeCallback = true;
        }

    }
  }

  if (invokeCallback) {
    var _child = children;
    var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows:

    var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;

    if (isArray(mappedChild)) {
      var escapedChildKey = '';

      if (childKey != null) {
        escapedChildKey = escapeUserProvidedKey(childKey) + '/';
      }

      mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {
        return c;
      });
    } else if (mappedChild != null) {
      if (isValidElement(mappedChild)) {
        {
          // The `if` statement here prevents auto-disabling of the safe
          // coercion ESLint rule, so we must manually disable it below.
          // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
          if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {
            checkKeyStringCoercion(mappedChild.key);
          }
        }

        mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as
        // traverseAllChildren used to do for objects as children
        escapedPrefix + ( // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
        mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
        // eslint-disable-next-line react-internal/safe-string-coercion
        escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);
      }

      array.push(mappedChild);
    }

    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.

  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getElementKey(child, i);
      subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
    }
  } else {
    var iteratorFn = getIteratorFn(children);

    if (typeof iteratorFn === 'function') {
      var iterableChildren = children;

      {
        // Warn about using Maps as children
        if (iteratorFn === iterableChildren.entries) {
          if (!didWarnAboutMaps) {
            warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');
          }

          didWarnAboutMaps = true;
        }
      }

      var iterator = iteratorFn.call(iterableChildren);
      var step;
      var ii = 0;

      while (!(step = iterator.next()).done) {
        child = step.value;
        nextName = nextNamePrefix + getElementKey(child, ii++);
        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
      }
    } else if (type === 'object') {
      // eslint-disable-next-line react-internal/safe-string-coercion
      var childrenString = String(children);
      throw new Error("Objects are not valid as a React child (found: " + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + "). " + 'If you meant to render a collection of children, use an array ' + 'instead.');
    }
  }

  return subtreeCount;
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenmap
 *
 * The provided mapFunction(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }

  var result = [];
  var count = 0;
  mapIntoArray(children, result, '', '', function (child) {
    return func.call(context, child, count++);
  });
  return result;
}
/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrencount
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */


function countChildren(children) {
  var n = 0;
  mapChildren(children, function () {
    n++; // Don't return anything
  });
  return n;
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  mapChildren(children, function () {
    forEachFunc.apply(this, arguments); // Don't return anything.
  }, forEachContext);
}
/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
 */


function toArray(children) {
  return mapChildren(children, function (child) {
    return child;
  }) || [];
}
/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenonly
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */


function onlyChild(children) {
  if (!isValidElement(children)) {
    throw new Error('React.Children.only expected to receive a single React element child.');
  }

  return children;
}

function createContext(defaultValue) {
  // TODO: Second argument used to be an optional `calculateChangedBits`
  // function. Warn to reserve for future use?
  var context = {
    $$typeof: REACT_CONTEXT_TYPE,
    // As a workaround to support multiple concurrent renderers, we categorize
    // some renderers as primary and others as secondary. We only expect
    // there to be two concurrent renderers at most: React Native (primary) and
    // Fabric (secondary); React DOM (primary) and React ART (secondary).
    // Secondary renderers store their context values on separate fields.
    _currentValue: defaultValue,
    _currentValue2: defaultValue,
    // Used to track how many concurrent renderers this context currently
    // supports within in a single renderer. Such as parallel server rendering.
    _threadCount: 0,
    // These are circular
    Provider: null,
    Consumer: null,
    // Add these to use same hidden class in VM as ServerContext
    _defaultValue: null,
    _globalName: null
  };
  context.Provider = {
    $$typeof: REACT_PROVIDER_TYPE,
    _context: context
  };
  var hasWarnedAboutUsingNestedContextConsumers = false;
  var hasWarnedAboutUsingConsumerProvider = false;
  var hasWarnedAboutDisplayNameOnConsumer = false;

  {
    // A separate object, but proxies back to the original context object for
    // backwards compatibility. It has a different $$typeof, so we can properly
    // warn for the incorrect usage of Context as a Consumer.
    var Consumer = {
      $$typeof: REACT_CONTEXT_TYPE,
      _context: context
    }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here

    Object.defineProperties(Consumer, {
      Provider: {
        get: function () {
          if (!hasWarnedAboutUsingConsumerProvider) {
            hasWarnedAboutUsingConsumerProvider = true;

            error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');
          }

          return context.Provider;
        },
        set: function (_Provider) {
          context.Provider = _Provider;
        }
      },
      _currentValue: {
        get: function () {
          return context._currentValue;
        },
        set: function (_currentValue) {
          context._currentValue = _currentValue;
        }
      },
      _currentValue2: {
        get: function () {
          return context._currentValue2;
        },
        set: function (_currentValue2) {
          context._currentValue2 = _currentValue2;
        }
      },
      _threadCount: {
        get: function () {
          return context._threadCount;
        },
        set: function (_threadCount) {
          context._threadCount = _threadCount;
        }
      },
      Consumer: {
        get: function () {
          if (!hasWarnedAboutUsingNestedContextConsumers) {
            hasWarnedAboutUsingNestedContextConsumers = true;

            error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
          }

          return context.Consumer;
        }
      },
      displayName: {
        get: function () {
          return context.displayName;
        },
        set: function (displayName) {
          if (!hasWarnedAboutDisplayNameOnConsumer) {
            warn('Setting `displayName` on Context.Consumer has no effect. ' + "You should set it directly on the context with Context.displayName = '%s'.", displayName);

            hasWarnedAboutDisplayNameOnConsumer = true;
          }
        }
      }
    }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty

    context.Consumer = Consumer;
  }

  {
    context._currentRenderer = null;
    context._currentRenderer2 = null;
  }

  return context;
}

var Uninitialized = -1;
var Pending = 0;
var Resolved = 1;
var Rejected = 2;

function lazyInitializer(payload) {
  if (payload._status === Uninitialized) {
    var ctor = payload._result;
    var thenable = ctor(); // Transition to the next state.
    // This might throw either because it's missing or throws. If so, we treat it
    // as still uninitialized and try again next time. Which is the same as what
    // happens if the ctor or any wrappers processing the ctor throws. This might
    // end up fixing it if the resolution was a concurrency bug.

    thenable.then(function (moduleObject) {
      if (payload._status === Pending || payload._status === Uninitialized) {
        // Transition to the next state.
        var resolved = payload;
        resolved._status = Resolved;
        resolved._result = moduleObject;
      }
    }, function (error) {
      if (payload._status === Pending || payload._status === Uninitialized) {
        // Transition to the next state.
        var rejected = payload;
        rejected._status = Rejected;
        rejected._result = error;
      }
    });

    if (payload._status === Uninitialized) {
      // In case, we're still uninitialized, then we're waiting for the thenable
      // to resolve. Set it as pending in the meantime.
      var pending = payload;
      pending._status = Pending;
      pending._result = thenable;
    }
  }

  if (payload._status === Resolved) {
    var moduleObject = payload._result;

    {
      if (moduleObject === undefined) {
        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\n\nYour code should look like: \n  ' + // Break up imports to avoid accidentally parsing them as dependencies.
        'const MyComponent = lazy(() => imp' + "ort('./MyComponent'))\n\n" + 'Did you accidentally put curly braces around the import?', moduleObject);
      }
    }

    {
      if (!('default' in moduleObject)) {
        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\n\nYour code should look like: \n  ' + // Break up imports to avoid accidentally parsing them as dependencies.
        'const MyComponent = lazy(() => imp' + "ort('./MyComponent'))", moduleObject);
      }
    }

    return moduleObject.default;
  } else {
    throw payload._result;
  }
}

function lazy(ctor) {
  var payload = {
    // We use these fields to store the result.
    _status: Uninitialized,
    _result: ctor
  };
  var lazyType = {
    $$typeof: REACT_LAZY_TYPE,
    _payload: payload,
    _init: lazyInitializer
  };

  {
    // In production, this would just set it on the object.
    var defaultProps;
    var propTypes; // $FlowFixMe

    Object.defineProperties(lazyType, {
      defaultProps: {
        configurable: true,
        get: function () {
          return defaultProps;
        },
        set: function (newDefaultProps) {
          error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');

          defaultProps = newDefaultProps; // Match production behavior more closely:
          // $FlowFixMe

          Object.defineProperty(lazyType, 'defaultProps', {
            enumerable: true
          });
        }
      },
      propTypes: {
        configurable: true,
        get: function () {
          return propTypes;
        },
        set: function (newPropTypes) {
          error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');

          propTypes = newPropTypes; // Match production behavior more closely:
          // $FlowFixMe

          Object.defineProperty(lazyType, 'propTypes', {
            enumerable: true
          });
        }
      }
    });
  }

  return lazyType;
}

function forwardRef(render) {
  {
    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
      error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');
    } else if (typeof render !== 'function') {
      error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);
    } else {
      if (render.length !== 0 && render.length !== 2) {
        error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');
      }
    }

    if (render != null) {
      if (render.defaultProps != null || render.propTypes != null) {
        error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');
      }
    }
  }

  var elementType = {
    $$typeof: REACT_FORWARD_REF_TYPE,
    render: render
  };

  {
    var ownName;
    Object.defineProperty(elementType, 'displayName', {
      enumerable: false,
      configurable: true,
      get: function () {
        return ownName;
      },
      set: function (name) {
        ownName = name; // The inner component shouldn't inherit this display name in most cases,
        // because the component may be used elsewhere.
        // But it's nice for anonymous functions to inherit the name,
        // so that our component-stack generation logic will display their frames.
        // An anonymous function generally suggests a pattern like:
        //   React.forwardRef((props, ref) => {...});
        // This kind of inner function is not used elsewhere so the side effect is okay.

        if (!render.name && !render.displayName) {
          render.displayName = name;
        }
      }
    });
  }

  return elementType;
}

var REACT_MODULE_REFERENCE;

{
  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');
}

function isValidElementType(type) {
  if (typeof type === 'string' || typeof type === 'function') {
    return true;
  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).


  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {
    return true;
  }

  if (typeof type === 'object' && type !== null) {
    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
    // types supported by any Flight configuration anywhere since
    // we don't know which Flight build this will end up being used
    // with.
    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {
      return true;
    }
  }

  return false;
}

function memo(type, compare) {
  {
    if (!isValidElementType(type)) {
      error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);
    }
  }

  var elementType = {
    $$typeof: REACT_MEMO_TYPE,
    type: type,
    compare: compare === undefined ? null : compare
  };

  {
    var ownName;
    Object.defineProperty(elementType, 'displayName', {
      enumerable: false,
      configurable: true,
      get: function () {
        return ownName;
      },
      set: function (name) {
        ownName = name; // The inner component shouldn't inherit this display name in most cases,
        // because the component may be used elsewhere.
        // But it's nice for anonymous functions to inherit the name,
        // so that our component-stack generation logic will display their frames.
        // An anonymous function generally suggests a pattern like:
        //   React.memo((props) => {...});
        // This kind of inner function is not used elsewhere so the side effect is okay.

        if (!type.name && !type.displayName) {
          type.displayName = name;
        }
      }
    });
  }

  return elementType;
}

function resolveDispatcher() {
  var dispatcher = ReactCurrentDispatcher.current;

  {
    if (dispatcher === null) {
      error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\n' + '2. You might be breaking the Rules of Hooks\n' + '3. You might have more than one copy of React in the same app\n' + 'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');
    }
  } // Will result in a null access error if accessed outside render phase. We
  // intentionally don't throw our own error because this is in a hot path.
  // Also helps ensure this is inlined.


  return dispatcher;
}
function useContext(Context) {
  var dispatcher = resolveDispatcher();

  {
    // TODO: add a more generic warning for invalid values.
    if (Context._context !== undefined) {
      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs
      // and nobody should be using this in existing code.

      if (realContext.Consumer === Context) {
        error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');
      } else if (realContext.Provider === Context) {
        error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');
      }
    }
  }

  return dispatcher.useContext(Context);
}
function useState(initialState) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useState(initialState);
}
function useReducer(reducer, initialArg, init) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useReducer(reducer, initialArg, init);
}
function useRef(initialValue) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useRef(initialValue);
}
function useEffect(create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useEffect(create, deps);
}
function useInsertionEffect(create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useInsertionEffect(create, deps);
}
function useLayoutEffect(create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useLayoutEffect(create, deps);
}
function useCallback(callback, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useCallback(callback, deps);
}
function useMemo(create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useMemo(create, deps);
}
function useImperativeHandle(ref, create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useImperativeHandle(ref, create, deps);
}
function useDebugValue(value, formatterFn) {
  {
    var dispatcher = resolveDispatcher();
    return dispatcher.useDebugValue(value, formatterFn);
  }
}
function useTransition() {
  var dispatcher = resolveDispatcher();
  return dispatcher.useTransition();
}
function useDeferredValue(value) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useDeferredValue(value);
}
function useId() {
  var dispatcher = resolveDispatcher();
  return dispatcher.useId();
}
function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
}

// Helpers to patch console.logs to avoid logging during side-effect free
// replaying on render function. This currently only patches the object
// lazily which won't cover if the log function was extracted eagerly.
// We could also eagerly patch the method.
var disabledDepth = 0;
var prevLog;
var prevInfo;
var prevWarn;
var prevError;
var prevGroup;
var prevGroupCollapsed;
var prevGroupEnd;

function disabledLog() {}

disabledLog.__reactDisabledLog = true;
function disableLogs() {
  {
    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      prevLog = console.log;
      prevInfo = console.info;
      prevWarn = console.warn;
      prevError = console.error;
      prevGroup = console.group;
      prevGroupCollapsed = console.groupCollapsed;
      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099

      var props = {
        configurable: true,
        enumerable: true,
        value: disabledLog,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        info: props,
        log: props,
        warn: props,
        error: props,
        group: props,
        groupCollapsed: props,
        groupEnd: props
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    disabledDepth++;
  }
}
function reenableLogs() {
  {
    disabledDepth--;

    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      var props = {
        configurable: true,
        enumerable: true,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        log: assign({}, props, {
          value: prevLog
        }),
        info: assign({}, props, {
          value: prevInfo
        }),
        warn: assign({}, props, {
          value: prevWarn
        }),
        error: assign({}, props, {
          value: prevError
        }),
        group: assign({}, props, {
          value: prevGroup
        }),
        groupCollapsed: assign({}, props, {
          value: prevGroupCollapsed
        }),
        groupEnd: assign({}, props, {
          value: prevGroupEnd
        })
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    if (disabledDepth < 0) {
      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');
    }
  }
}

var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
var prefix;
function describeBuiltInComponentFrame(name, source, ownerFn) {
  {
    if (prefix === undefined) {
      // Extract the VM specific prefix used by each line.
      try {
        throw Error();
      } catch (x) {
        var match = x.stack.trim().match(/\n( *(at )?)/);
        prefix = match && match[1] || '';
      }
    } // We use the prefix to ensure our stacks line up with native stack frames.


    return '\n' + prefix + name;
  }
}
var reentry = false;
var componentFrameCache;

{
  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
  componentFrameCache = new PossiblyWeakMap();
}

function describeNativeComponentFrame(fn, construct) {
  // If something asked for a stack inside a fake render, it should get ignored.
  if ( !fn || reentry) {
    return '';
  }

  {
    var frame = componentFrameCache.get(fn);

    if (frame !== undefined) {
      return frame;
    }
  }

  var control;
  reentry = true;
  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.

  Error.prepareStackTrace = undefined;
  var previousDispatcher;

  {
    previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function
    // for warnings.

    ReactCurrentDispatcher$1.current = null;
    disableLogs();
  }

  try {
    // This should throw.
    if (construct) {
      // Something should be setting the props in the constructor.
      var Fake = function () {
        throw Error();
      }; // $FlowFixMe


      Object.defineProperty(Fake.prototype, 'props', {
        set: function () {
          // We use a throwing setter instead of frozen or non-writable props
          // because that won't throw in a non-strict mode function.
          throw Error();
        }
      });

      if (typeof Reflect === 'object' && Reflect.construct) {
        // We construct a different control for this case to include any extra
        // frames added by the construct call.
        try {
          Reflect.construct(Fake, []);
        } catch (x) {
          control = x;
        }

        Reflect.construct(fn, [], Fake);
      } else {
        try {
          Fake.call();
        } catch (x) {
          control = x;
        }

        fn.call(Fake.prototype);
      }
    } else {
      try {
        throw Error();
      } catch (x) {
        control = x;
      }

      fn();
    }
  } catch (sample) {
    // This is inlined manually because closure doesn't do it for us.
    if (sample && control && typeof sample.stack === 'string') {
      // This extracts the first frame from the sample that isn't also in the control.
      // Skipping one frame that we assume is the frame that calls the two.
      var sampleLines = sample.stack.split('\n');
      var controlLines = control.stack.split('\n');
      var s = sampleLines.length - 1;
      var c = controlLines.length - 1;

      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
        // We expect at least one stack frame to be shared.
        // Typically this will be the root most one. However, stack frames may be
        // cut off due to maximum stack limits. In this case, one maybe cut off
        // earlier than the other. We assume that the sample is longer or the same
        // and there for cut off earlier. So we should find the root most frame in
        // the sample somewhere in the control.
        c--;
      }

      for (; s >= 1 && c >= 0; s--, c--) {
        // Next we find the first one that isn't the same which should be the
        // frame that called our sample function and the control.
        if (sampleLines[s] !== controlLines[c]) {
          // In V8, the first line is describing the message but other VMs don't.
          // If we're about to return the first line, and the control is also on the same
          // line, that's a pretty good indicator that our sample threw at same line as
          // the control. I.e. before we entered the sample frame. So we ignore this result.
          // This can happen if you passed a class to function component, or non-function.
          if (s !== 1 || c !== 1) {
            do {
              s--;
              c--; // We may still have similar intermediate frames from the construct call.
              // The next one that isn't the same should be our match though.

              if (c < 0 || sampleLines[s] !== controlLines[c]) {
                // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                var _frame = '\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled "<anonymous>"
                // but we have a user-provided "displayName"
                // splice it in to make the stack more readable.


                if (fn.displayName && _frame.includes('<anonymous>')) {
                  _frame = _frame.replace('<anonymous>', fn.displayName);
                }

                {
                  if (typeof fn === 'function') {
                    componentFrameCache.set(fn, _frame);
                  }
                } // Return the line we found.


                return _frame;
              }
            } while (s >= 1 && c >= 0);
          }

          break;
        }
      }
    }
  } finally {
    reentry = false;

    {
      ReactCurrentDispatcher$1.current = previousDispatcher;
      reenableLogs();
    }

    Error.prepareStackTrace = previousPrepareStackTrace;
  } // Fallback to just using the name if we couldn't make it throw.


  var name = fn ? fn.displayName || fn.name : '';
  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';

  {
    if (typeof fn === 'function') {
      componentFrameCache.set(fn, syntheticFrame);
    }
  }

  return syntheticFrame;
}
function describeFunctionComponentFrame(fn, source, ownerFn) {
  {
    return describeNativeComponentFrame(fn, false);
  }
}

function shouldConstruct(Component) {
  var prototype = Component.prototype;
  return !!(prototype && prototype.isReactComponent);
}

function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {

  if (type == null) {
    return '';
  }

  if (typeof type === 'function') {
    {
      return describeNativeComponentFrame(type, shouldConstruct(type));
    }
  }

  if (typeof type === 'string') {
    return describeBuiltInComponentFrame(type);
  }

  switch (type) {
    case REACT_SUSPENSE_TYPE:
      return describeBuiltInComponentFrame('Suspense');

    case REACT_SUSPENSE_LIST_TYPE:
      return describeBuiltInComponentFrame('SuspenseList');
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_FORWARD_REF_TYPE:
        return describeFunctionComponentFrame(type.render);

      case REACT_MEMO_TYPE:
        // Memo may contain any component type so we recursively resolve it.
        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            // Lazy may contain any component type so we recursively resolve it.
            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
          } catch (x) {}
        }
    }
  }

  return '';
}

var loggedTypeFailures = {};
var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;

function setCurrentlyValidatingElement(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
    } else {
      ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
  }
}

function checkPropTypes(typeSpecs, values, location, componentName, element) {
  {
    // $FlowFixMe This is okay but Flow doesn't know it.
    var has = Function.call.bind(hasOwnProperty);

    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.

        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            // eslint-disable-next-line react-internal/prod-error-codes
            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
            err.name = 'Invariant Violation';
            throw err;
          }

          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
        } catch (ex) {
          error$1 = ex;
        }

        if (error$1 && !(error$1 instanceof Error)) {
          setCurrentlyValidatingElement(element);

          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);

          setCurrentlyValidatingElement(null);
        }

        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error$1.message] = true;
          setCurrentlyValidatingElement(element);

          error('Failed %s type: %s', location, error$1.message);

          setCurrentlyValidatingElement(null);
        }
      }
    }
  }
}

function setCurrentlyValidatingElement$1(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      setExtraStackFrame(stack);
    } else {
      setExtraStackFrame(null);
    }
  }
}

var propTypesMisspellWarningShown;

{
  propTypesMisspellWarningShown = false;
}

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = getComponentNameFromType(ReactCurrentOwner.current.type);

    if (name) {
      return '\n\nCheck the render method of `' + name + '`.';
    }
  }

  return '';
}

function getSourceInfoErrorAddendum(source) {
  if (source !== undefined) {
    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
    var lineNumber = source.lineNumber;
    return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
  }

  return '';
}

function getSourceInfoErrorAddendumForProps(elementProps) {
  if (elementProps !== null && elementProps !== undefined) {
    return getSourceInfoErrorAddendum(elementProps.__source);
  }

  return '';
}
/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */


var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;

    if (parentName) {
      info = "\n\nCheck the top-level render call using <" + parentName + ">.";
    }
  }

  return info;
}
/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */


function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }

  element._store.validated = true;
  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);

  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
    return;
  }

  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.

  var childOwner = '';

  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    // Give the component that originally created this child.
    childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
  }

  {
    setCurrentlyValidatingElement$1(element);

    error('Each child in a list should have a unique "key" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);

    setCurrentlyValidatingElement$1(null);
  }
}
/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */


function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }

  if (isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];

      if (isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (isValidElement(node)) {
    // This element was passed in a valid location.
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);

    if (typeof iteratorFn === 'function') {
      // Entry iterators used to provide implicit keys,
      // but now we print a separate warning for them later.
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step;

        while (!(step = iterator.next()).done) {
          if (isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}
/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */


function validatePropTypes(element) {
  {
    var type = element.type;

    if (type === null || type === undefined || typeof type === 'string') {
      return;
    }

    var propTypes;

    if (typeof type === 'function') {
      propTypes = type.propTypes;
    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
    // Inner props are checked in the reconciler.
    type.$$typeof === REACT_MEMO_TYPE)) {
      propTypes = type.propTypes;
    } else {
      return;
    }

    if (propTypes) {
      // Intentionally inside to avoid triggering lazy initializers:
      var name = getComponentNameFromType(type);
      checkPropTypes(propTypes, element.props, 'prop', name, element);
    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:

      var _name = getComponentNameFromType(type);

      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
    }

    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {
      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
    }
  }
}
/**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */


function validateFragmentProps(fragment) {
  {
    var keys = Object.keys(fragment.props);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];

      if (key !== 'children' && key !== 'key') {
        setCurrentlyValidatingElement$1(fragment);

        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);

        setCurrentlyValidatingElement$1(null);
        break;
      }
    }

    if (fragment.ref !== null) {
      setCurrentlyValidatingElement$1(fragment);

      error('Invalid attribute `ref` supplied to `React.Fragment`.');

      setCurrentlyValidatingElement$1(null);
    }
  }
}
function createElementWithValidation(type, props, children) {
  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
  // succeed and there will likely be errors in render.

  if (!validType) {
    var info = '';

    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
      info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
    }

    var sourceInfo = getSourceInfoErrorAddendumForProps(props);

    if (sourceInfo) {
      info += sourceInfo;
    } else {
      info += getDeclarationErrorAddendum();
    }

    var typeString;

    if (type === null) {
      typeString = 'null';
    } else if (isArray(type)) {
      typeString = 'array';
    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
      typeString = "<" + (getComponentNameFromType(type.type) || 'Unknown') + " />";
      info = ' Did you accidentally export a JSX literal instead of a component?';
    } else {
      typeString = typeof type;
    }

    {
      error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
    }
  }

  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.
  // TODO: Drop this when these are no longer allowed as the type argument.

  if (element == null) {
    return element;
  } // Skip key warning if the type isn't valid since our key validation logic
  // doesn't expect a non-string/function type and can throw confusing errors.
  // We don't want exception behavior to differ between dev and prod.
  // (Rendering will throw with a helpful message and as soon as the type is
  // fixed, the key warnings will appear.)


  if (validType) {
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], type);
    }
  }

  if (type === REACT_FRAGMENT_TYPE) {
    validateFragmentProps(element);
  } else {
    validatePropTypes(element);
  }

  return element;
}
var didWarnAboutDeprecatedCreateFactory = false;
function createFactoryWithValidation(type) {
  var validatedFactory = createElementWithValidation.bind(null, type);
  validatedFactory.type = type;

  {
    if (!didWarnAboutDeprecatedCreateFactory) {
      didWarnAboutDeprecatedCreateFactory = true;

      warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');
    } // Legacy hook: remove it


    Object.defineProperty(validatedFactory, 'type', {
      enumerable: false,
      get: function () {
        warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');

        Object.defineProperty(this, 'type', {
          value: type
        });
        return type;
      }
    });
  }

  return validatedFactory;
}
function cloneElementWithValidation(element, props, children) {
  var newElement = cloneElement.apply(this, arguments);

  for (var i = 2; i < arguments.length; i++) {
    validateChildKeys(arguments[i], newElement.type);
  }

  validatePropTypes(newElement);
  return newElement;
}

function startTransition(scope, options) {
  var prevTransition = ReactCurrentBatchConfig.transition;
  ReactCurrentBatchConfig.transition = {};
  var currentTransition = ReactCurrentBatchConfig.transition;

  {
    ReactCurrentBatchConfig.transition._updatedFibers = new Set();
  }

  try {
    scope();
  } finally {
    ReactCurrentBatchConfig.transition = prevTransition;

    {
      if (prevTransition === null && currentTransition._updatedFibers) {
        var updatedFibersCount = currentTransition._updatedFibers.size;

        if (updatedFibersCount > 10) {
          warn('Detected a large number of updates inside startTransition. ' + 'If this is due to a subscription please re-write it to use React provided hooks. ' + 'Otherwise concurrent mode guarantees are off the table.');
        }

        currentTransition._updatedFibers.clear();
      }
    }
  }
}

var didWarnAboutMessageChannel = false;
var enqueueTaskImpl = null;
function enqueueTask(task) {
  if (enqueueTaskImpl === null) {
    try {
      // read require off the module object to get around the bundlers.
      // we don't want them to detect a require and bundle a Node polyfill.
      var requireString = ('require' + Math.random()).slice(0, 7);
      var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's
      // version of setImmediate, bypassing fake timers if any.

      enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;
    } catch (_err) {
      // we're in a browser
      // we can't use regular timers because they may still be faked
      // so we try MessageChannel+postMessage instead
      enqueueTaskImpl = function (callback) {
        {
          if (didWarnAboutMessageChannel === false) {
            didWarnAboutMessageChannel = true;

            if (typeof MessageChannel === 'undefined') {
              error('This browser does not have a MessageChannel implementation, ' + 'so enqueuing tasks via await act(async () => ...) will fail. ' + 'Please file an issue at https://github.com/facebook/react/issues ' + 'if you encounter this warning.');
            }
          }
        }

        var channel = new MessageChannel();
        channel.port1.onmessage = callback;
        channel.port2.postMessage(undefined);
      };
    }
  }

  return enqueueTaskImpl(task);
}

var actScopeDepth = 0;
var didWarnNoAwaitAct = false;
function act(callback) {
  {
    // `act` calls can be nested, so we track the depth. This represents the
    // number of `act` scopes on the stack.
    var prevActScopeDepth = actScopeDepth;
    actScopeDepth++;

    if (ReactCurrentActQueue.current === null) {
      // This is the outermost `act` scope. Initialize the queue. The reconciler
      // will detect the queue and use it instead of Scheduler.
      ReactCurrentActQueue.current = [];
    }

    var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;
    var result;

    try {
      // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only
      // set to `true` while the given callback is executed, not for updates
      // triggered during an async event, because this is how the legacy
      // implementation of `act` behaved.
      ReactCurrentActQueue.isBatchingLegacy = true;
      result = callback(); // Replicate behavior of original `act` implementation in legacy mode,
      // which flushed updates immediately after the scope function exits, even
      // if it's an async function.

      if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {
        var queue = ReactCurrentActQueue.current;

        if (queue !== null) {
          ReactCurrentActQueue.didScheduleLegacyUpdate = false;
          flushActQueue(queue);
        }
      }
    } catch (error) {
      popActScope(prevActScopeDepth);
      throw error;
    } finally {
      ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;
    }

    if (result !== null && typeof result === 'object' && typeof result.then === 'function') {
      var thenableResult = result; // The callback is an async function (i.e. returned a promise). Wait
      // for it to resolve before exiting the current scope.

      var wasAwaited = false;
      var thenable = {
        then: function (resolve, reject) {
          wasAwaited = true;
          thenableResult.then(function (returnValue) {
            popActScope(prevActScopeDepth);

            if (actScopeDepth === 0) {
              // We've exited the outermost act scope. Recursively flush the
              // queue until there's no remaining work.
              recursivelyFlushAsyncActWork(returnValue, resolve, reject);
            } else {
              resolve(returnValue);
            }
          }, function (error) {
            // The callback threw an error.
            popActScope(prevActScopeDepth);
            reject(error);
          });
        }
      };

      {
        if (!didWarnNoAwaitAct && typeof Promise !== 'undefined') {
          // eslint-disable-next-line no-undef
          Promise.resolve().then(function () {}).then(function () {
            if (!wasAwaited) {
              didWarnNoAwaitAct = true;

              error('You called act(async () => ...) without await. ' + 'This could lead to unexpected testing behaviour, ' + 'interleaving multiple act calls and mixing their ' + 'scopes. ' + 'You should - await act(async () => ...);');
            }
          });
        }
      }

      return thenable;
    } else {
      var returnValue = result; // The callback is not an async function. Exit the current scope
      // immediately, without awaiting.

      popActScope(prevActScopeDepth);

      if (actScopeDepth === 0) {
        // Exiting the outermost act scope. Flush the queue.
        var _queue = ReactCurrentActQueue.current;

        if (_queue !== null) {
          flushActQueue(_queue);
          ReactCurrentActQueue.current = null;
        } // Return a thenable. If the user awaits it, we'll flush again in
        // case additional work was scheduled by a microtask.


        var _thenable = {
          then: function (resolve, reject) {
            // Confirm we haven't re-entered another `act` scope, in case
            // the user does something weird like await the thenable
            // multiple times.
            if (ReactCurrentActQueue.current === null) {
              // Recursively flush the queue until there's no remaining work.
              ReactCurrentActQueue.current = [];
              recursivelyFlushAsyncActWork(returnValue, resolve, reject);
            } else {
              resolve(returnValue);
            }
          }
        };
        return _thenable;
      } else {
        // Since we're inside a nested `act` scope, the returned thenable
        // immediately resolves. The outer scope will flush the queue.
        var _thenable2 = {
          then: function (resolve, reject) {
            resolve(returnValue);
          }
        };
        return _thenable2;
      }
    }
  }
}

function popActScope(prevActScopeDepth) {
  {
    if (prevActScopeDepth !== actScopeDepth - 1) {
      error('You seem to have overlapping act() calls, this is not supported. ' + 'Be sure to await previous act() calls before making a new one. ');
    }

    actScopeDepth = prevActScopeDepth;
  }
}

function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {
  {
    var queue = ReactCurrentActQueue.current;

    if (queue !== null) {
      try {
        flushActQueue(queue);
        enqueueTask(function () {
          if (queue.length === 0) {
            // No additional work was scheduled. Finish.
            ReactCurrentActQueue.current = null;
            resolve(returnValue);
          } else {
            // Keep flushing work until there's none left.
            recursivelyFlushAsyncActWork(returnValue, resolve, reject);
          }
        });
      } catch (error) {
        reject(error);
      }
    } else {
      resolve(returnValue);
    }
  }
}

var isFlushing = false;

function flushActQueue(queue) {
  {
    if (!isFlushing) {
      // Prevent re-entrance.
      isFlushing = true;
      var i = 0;

      try {
        for (; i < queue.length; i++) {
          var callback = queue[i];

          do {
            callback = callback(true);
          } while (callback !== null);
        }

        queue.length = 0;
      } catch (error) {
        // If something throws, leave the remaining callbacks on the queue.
        queue = queue.slice(i + 1);
        throw error;
      } finally {
        isFlushing = false;
      }
    }
  }
}

var createElement$1 =  createElementWithValidation ;
var cloneElement$1 =  cloneElementWithValidation ;
var createFactory =  createFactoryWithValidation ;
var Children = {
  map: mapChildren,
  forEach: forEachChildren,
  count: countChildren,
  toArray: toArray,
  only: onlyChild
};

exports.Children = Children;
exports.Component = Component;
exports.Fragment = REACT_FRAGMENT_TYPE;
exports.Profiler = REACT_PROFILER_TYPE;
exports.PureComponent = PureComponent;
exports.StrictMode = REACT_STRICT_MODE_TYPE;
exports.Suspense = REACT_SUSPENSE_TYPE;
exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
exports.cloneElement = cloneElement$1;
exports.createContext = createContext;
exports.createElement = createElement$1;
exports.createFactory = createFactory;
exports.createRef = createRef;
exports.forwardRef = forwardRef;
exports.isValidElement = isValidElement;
exports.lazy = lazy;
exports.memo = memo;
exports.startTransition = startTransition;
exports.unstable_act = act;
exports.useCallback = useCallback;
exports.useContext = useContext;
exports.useDebugValue = useDebugValue;
exports.useDeferredValue = useDeferredValue;
exports.useEffect = useEffect;
exports.useId = useId;
exports.useImperativeHandle = useImperativeHandle;
exports.useInsertionEffect = useInsertionEffect;
exports.useLayoutEffect = useLayoutEffect;
exports.useMemo = useMemo;
exports.useReducer = useReducer;
exports.useRef = useRef;
exports.useState = useState;
exports.useSyncExternalStore = useSyncExternalStore;
exports.useTransition = useTransition;
exports.version = ReactVersion;
          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
if (
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===
    'function'
) {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
}
        
  })();
}


/***/ }),

/***/ "./node_modules/react/index.js":
/*!*************************************!*\
  !*** ./node_modules/react/index.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react.development.js */ "./node_modules/react/cjs/react.development.js");
}


/***/ }),

/***/ "./node_modules/react/jsx-runtime.js":
/*!*******************************************!*\
  !*** ./node_modules/react/jsx-runtime.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react-jsx-runtime.development.js */ "./node_modules/react/cjs/react-jsx-runtime.development.js");
}


/***/ }),

/***/ "./node_modules/shallowequal/index.js":
/*!********************************************!*\
  !*** ./node_modules/shallowequal/index.js ***!
  \********************************************/
/***/ ((module) => {

//

module.exports = function shallowEqual(objA, objB, compare, compareContext) {
  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;

  if (ret !== void 0) {
    return !!ret;
  }

  if (objA === objB) {
    return true;
  }

  if (typeof objA !== "object" || !objA || typeof objB !== "object" || !objB) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);

  // Test for A's keys different from B.
  for (var idx = 0; idx < keysA.length; idx++) {
    var key = keysA[idx];

    if (!bHasOwnProperty(key)) {
      return false;
    }

    var valueA = objA[key];
    var valueB = objB[key];

    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;

    if (ret === false || (ret === void 0 && valueA !== valueB)) {
      return false;
    }
  }

  return true;
};


/***/ }),

/***/ "./node_modules/styled-components/dist/styled-components.browser.esm.js":
/*!******************************************************************************!*\
  !*** ./node_modules/styled-components/dist/styled-components.browser.esm.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ServerStyleSheet: () => (/* binding */ mt),
/* harmony export */   StyleSheetConsumer: () => (/* binding */ $e),
/* harmony export */   StyleSheetContext: () => (/* binding */ Me),
/* harmony export */   StyleSheetManager: () => (/* binding */ Le),
/* harmony export */   ThemeConsumer: () => (/* binding */ Qe),
/* harmony export */   ThemeContext: () => (/* binding */ Ke),
/* harmony export */   ThemeProvider: () => (/* binding */ tt),
/* harmony export */   __PRIVATE__: () => (/* binding */ yt),
/* harmony export */   createGlobalStyle: () => (/* binding */ dt),
/* harmony export */   css: () => (/* binding */ at),
/* harmony export */   "default": () => (/* binding */ ut),
/* harmony export */   isStyledComponent: () => (/* binding */ se),
/* harmony export */   keyframes: () => (/* binding */ ht),
/* harmony export */   styled: () => (/* binding */ ut),
/* harmony export */   useTheme: () => (/* binding */ et),
/* harmony export */   version: () => (/* binding */ v),
/* harmony export */   withTheme: () => (/* binding */ ft)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ "./node_modules/styled-components/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _emotion_is_prop_valid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/is-prop-valid */ "./node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react?7252");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var shallowequal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! shallowequal */ "./node_modules/shallowequal/index.js");
/* harmony import */ var shallowequal__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(shallowequal__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var stylis__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! stylis */ "./node_modules/stylis/src/Enum.js");
/* harmony import */ var stylis__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! stylis */ "./node_modules/stylis/src/Middleware.js");
/* harmony import */ var stylis__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! stylis */ "./node_modules/stylis/src/Serializer.js");
/* harmony import */ var stylis__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! stylis */ "./node_modules/stylis/src/Parser.js");
/* harmony import */ var _emotion_unitless__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/unitless */ "./node_modules/@emotion/unitless/dist/emotion-unitless.esm.js");
var f="undefined"!=typeof process&&void 0!==process.env&&(process.env.REACT_APP_SC_ATTR||process.env.SC_ATTR)||"data-styled",m="active",y="data-styled-version",v="6.1.8",g="/*!sc*/\n",S="undefined"!=typeof window&&"HTMLElement"in window,w=Boolean("boolean"==typeof SC_DISABLE_SPEEDY?SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!==process.env&&void 0!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&""!==process.env.REACT_APP_SC_DISABLE_SPEEDY?"false"!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&process.env.REACT_APP_SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!==process.env&&void 0!==process.env.SC_DISABLE_SPEEDY&&""!==process.env.SC_DISABLE_SPEEDY?"false"!==process.env.SC_DISABLE_SPEEDY&&process.env.SC_DISABLE_SPEEDY:"production"!=="development"),b={},E=/invalid hook call/i,N=new Set,P=function(t,n){if(true){var o=n?' with the id of "'.concat(n,'"'):"",s="The component ".concat(t).concat(o," has been created dynamically.\n")+"You may see this warning because you've called styled inside another component.\nTo resolve this only create new StyledComponents outside of any render method and function component.",i=console.error;try{var a=!0;console.error=function(t){for(var n=[],o=1;o<arguments.length;o++)n[o-1]=arguments[o];E.test(t)?(a=!1,N.delete(s)):i.apply(void 0,(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__spreadArray)([t],n,!1))},(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(),a&&!N.has(s)&&(console.warn(s),N.add(s))}catch(e){E.test(e.message)&&N.delete(s)}finally{console.error=i}}},_=Object.freeze([]),C=Object.freeze({});function I(e,t,n){return void 0===n&&(n=C),e.theme!==n.theme&&e.theme||t||n.theme}var A=new Set(["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","tr","track","u","ul","use","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","marker","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"]),O=/[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,D=/(^-|-$)/g;function R(e){return e.replace(O,"-").replace(D,"")}var T=/(a)(d)/gi,k=52,j=function(e){return String.fromCharCode(e+(e>25?39:97))};function x(e){var t,n="";for(t=Math.abs(e);t>k;t=t/k|0)n=j(t%k)+n;return(j(t%k)+n).replace(T,"$1-$2")}var V,F=5381,M=function(e,t){for(var n=t.length;n;)e=33*e^t.charCodeAt(--n);return e},$=function(e){return M(F,e)};function z(e){return x($(e)>>>0)}function B(e){return true&&"string"==typeof e&&e||e.displayName||e.name||"Component"}function L(e){return"string"==typeof e&&( false||e.charAt(0)===e.charAt(0).toLowerCase())}var G="function"==typeof Symbol&&Symbol.for,Y=G?Symbol.for("react.memo"):60115,W=G?Symbol.for("react.forward_ref"):60112,q={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},H={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},U={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},J=((V={})[W]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},V[Y]=U,V);function X(e){return("type"in(t=e)&&t.type.$$typeof)===Y?U:"$$typeof"in e?J[e.$$typeof]:q;var t}var Z=Object.defineProperty,K=Object.getOwnPropertyNames,Q=Object.getOwnPropertySymbols,ee=Object.getOwnPropertyDescriptor,te=Object.getPrototypeOf,ne=Object.prototype;function oe(e,t,n){if("string"!=typeof t){if(ne){var o=te(t);o&&o!==ne&&oe(e,o,n)}var r=K(t);Q&&(r=r.concat(Q(t)));for(var s=X(e),i=X(t),a=0;a<r.length;++a){var c=r[a];if(!(c in H||n&&n[c]||i&&c in i||s&&c in s)){var l=ee(t,c);try{Z(e,c,l)}catch(e){}}}}return e}function re(e){return"function"==typeof e}function se(e){return"object"==typeof e&&"styledComponentId"in e}function ie(e,t){return e&&t?"".concat(e," ").concat(t):e||t||""}function ae(e,t){if(0===e.length)return"";for(var n=e[0],o=1;o<e.length;o++)n+=t?t+e[o]:e[o];return n}function ce(e){return null!==e&&"object"==typeof e&&e.constructor.name===Object.name&&!("props"in e&&e.$$typeof)}function le(e,t,n){if(void 0===n&&(n=!1),!n&&!ce(e)&&!Array.isArray(e))return t;if(Array.isArray(t))for(var o=0;o<t.length;o++)e[o]=le(e[o],t[o]);else if(ce(t))for(var o in t)e[o]=le(e[o],t[o]);return e}function ue(e,t){Object.defineProperty(e,"toString",{value:t})}var pe= true?{1:"Cannot create styled-component for component: %s.\n\n",2:"Can't collect styles once you've consumed a `ServerStyleSheet`'s styles! `ServerStyleSheet` is a one off instance for each server-side render cycle.\n\n- Are you trying to reuse it across renders?\n- Are you accidentally calling collectStyles twice?\n\n",3:"Streaming SSR is only supported in a Node.js environment; Please do not try to call this method in the browser.\n\n",4:"The `StyleSheetManager` expects a valid target or sheet prop!\n\n- Does this error occur on the client and is your target falsy?\n- Does this error occur on the server and is the sheet falsy?\n\n",5:"The clone method cannot be used on the client!\n\n- Are you running in a client-like environment on the server?\n- Are you trying to run SSR on the client?\n\n",6:"Trying to insert a new style tag, but the given Node is unmounted!\n\n- Are you using a custom target that isn't mounted?\n- Does your document not have a valid head element?\n- Have you accidentally removed a style tag manually?\n\n",7:'ThemeProvider: Please return an object from your "theme" prop function, e.g.\n\n```js\ntheme={() => ({})}\n```\n\n',8:'ThemeProvider: Please make your "theme" prop an object.\n\n',9:"Missing document `<head>`\n\n",10:"Cannot find a StyleSheet instance. Usually this happens if there are multiple copies of styled-components loaded at once. Check out this issue for how to troubleshoot and fix the common cases where this situation can happen: https://github.com/styled-components/styled-components/issues/1941#issuecomment-417862021\n\n",11:"_This error was replaced with a dev-time warning, it will be deleted for v4 final._ [createGlobalStyle] received children which will not be rendered. Please use the component without passing children elements.\n\n",12:"It seems you are interpolating a keyframe declaration (%s) into an untagged string. This was supported in styled-components v3, but is not longer supported in v4 as keyframes are now injected on-demand. Please wrap your string in the css\\`\\` helper which ensures the styles are injected correctly. See https://www.styled-components.com/docs/api#css\n\n",13:"%s is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details.\n\n",14:'ThemeProvider: "theme" prop is required.\n\n',15:"A stylis plugin has been supplied that is not named. We need a name for each plugin to be able to prevent styling collisions between different stylis configurations within the same app. Before you pass your plugin to `<StyleSheetManager stylisPlugins={[]}>`, please make sure each plugin is uniquely-named, e.g.\n\n```js\nObject.defineProperty(importedPlugin, 'name', { value: 'some-unique-name' });\n```\n\n",16:"Reached the limit of how many styled components may be created at group %s.\nYou may only create up to 1,073,741,824 components. If you're creating components dynamically,\nas for instance in your render method then you may be running into this limitation.\n\n",17:"CSSStyleSheet could not be found on HTMLStyleElement.\nHas styled-components' style tag been unmounted or altered by another script?\n",18:"ThemeProvider: Please make sure your useTheme hook is within a `<ThemeProvider>`"}:0;function de(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];for(var n=e[0],o=[],r=1,s=e.length;r<s;r+=1)o.push(e[r]);return o.forEach(function(e){n=n.replace(/%[a-z]/,e)}),n}function he(t){for(var n=[],o=1;o<arguments.length;o++)n[o-1]=arguments[o];return false?0:new Error(de.apply(void 0,(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__spreadArray)([pe[t]],n,!1)).trim())}var fe=function(){function e(e){this.groupSizes=new Uint32Array(512),this.length=512,this.tag=e}return e.prototype.indexOfGroup=function(e){for(var t=0,n=0;n<e;n++)t+=this.groupSizes[n];return t},e.prototype.insertRules=function(e,t){if(e>=this.groupSizes.length){for(var n=this.groupSizes,o=n.length,r=o;e>=r;)if((r<<=1)<0)throw he(16,"".concat(e));this.groupSizes=new Uint32Array(r),this.groupSizes.set(n),this.length=r;for(var s=o;s<r;s++)this.groupSizes[s]=0}for(var i=this.indexOfGroup(e+1),a=(s=0,t.length);s<a;s++)this.tag.insertRule(i,t[s])&&(this.groupSizes[e]++,i++)},e.prototype.clearGroup=function(e){if(e<this.length){var t=this.groupSizes[e],n=this.indexOfGroup(e),o=n+t;this.groupSizes[e]=0;for(var r=n;r<o;r++)this.tag.deleteRule(n)}},e.prototype.getGroup=function(e){var t="";if(e>=this.length||0===this.groupSizes[e])return t;for(var n=this.groupSizes[e],o=this.indexOfGroup(e),r=o+n,s=o;s<r;s++)t+="".concat(this.tag.getRule(s)).concat(g);return t},e}(),me=new Map,ye=new Map,ve=1,ge=function(e){if(me.has(e))return me.get(e);for(;ye.has(ve);)ve++;var t=ve++;if( true&&((0|t)<0||t>1073741824))throw he(16,"".concat(t));return me.set(e,t),ye.set(t,e),t},Se=function(e,t){ve=t+1,me.set(e,t),ye.set(t,e)},we="style[".concat(f,"][").concat(y,'="').concat(v,'"]'),be=new RegExp("^".concat(f,'\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)')),Ee=function(e,t,n){for(var o,r=n.split(","),s=0,i=r.length;s<i;s++)(o=r[s])&&e.registerName(t,o)},Ne=function(e,t){for(var n,o=(null!==(n=t.textContent)&&void 0!==n?n:"").split(g),r=[],s=0,i=o.length;s<i;s++){var a=o[s].trim();if(a){var c=a.match(be);if(c){var l=0|parseInt(c[1],10),u=c[2];0!==l&&(Se(u,l),Ee(e,u,c[3]),e.getTag().insertRules(l,r)),r.length=0}else r.push(a)}}};function Pe(){return true?__webpack_require__.nc:0}var _e=function(e){var t=document.head,n=e||t,o=document.createElement("style"),r=function(e){var t=Array.from(e.querySelectorAll("style[".concat(f,"]")));return t[t.length-1]}(n),s=void 0!==r?r.nextSibling:null;o.setAttribute(f,m),o.setAttribute(y,v);var i=Pe();return i&&o.setAttribute("nonce",i),n.insertBefore(o,s),o},Ce=function(){function e(e){this.element=_e(e),this.element.appendChild(document.createTextNode("")),this.sheet=function(e){if(e.sheet)return e.sheet;for(var t=document.styleSheets,n=0,o=t.length;n<o;n++){var r=t[n];if(r.ownerNode===e)return r}throw he(17)}(this.element),this.length=0}return e.prototype.insertRule=function(e,t){try{return this.sheet.insertRule(t,e),this.length++,!0}catch(e){return!1}},e.prototype.deleteRule=function(e){this.sheet.deleteRule(e),this.length--},e.prototype.getRule=function(e){var t=this.sheet.cssRules[e];return t&&t.cssText?t.cssText:""},e}(),Ie=function(){function e(e){this.element=_e(e),this.nodes=this.element.childNodes,this.length=0}return e.prototype.insertRule=function(e,t){if(e<=this.length&&e>=0){var n=document.createTextNode(t);return this.element.insertBefore(n,this.nodes[e]||null),this.length++,!0}return!1},e.prototype.deleteRule=function(e){this.element.removeChild(this.nodes[e]),this.length--},e.prototype.getRule=function(e){return e<this.length?this.nodes[e].textContent:""},e}(),Ae=function(){function e(e){this.rules=[],this.length=0}return e.prototype.insertRule=function(e,t){return e<=this.length&&(this.rules.splice(e,0,t),this.length++,!0)},e.prototype.deleteRule=function(e){this.rules.splice(e,1),this.length--},e.prototype.getRule=function(e){return e<this.length?this.rules[e]:""},e}(),Oe=S,De={isServer:!S,useCSSOMInjection:!w},Re=function(){function e(e,n,o){void 0===e&&(e=C),void 0===n&&(n={});var r=this;this.options=(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({},De),e),this.gs=n,this.names=new Map(o),this.server=!!e.isServer,!this.server&&S&&Oe&&(Oe=!1,function(e){for(var t=document.querySelectorAll(we),n=0,o=t.length;n<o;n++){var r=t[n];r&&r.getAttribute(f)!==m&&(Ne(e,r),r.parentNode&&r.parentNode.removeChild(r))}}(this)),ue(this,function(){return function(e){for(var t=e.getTag(),n=t.length,o="",r=function(n){var r=function(e){return ye.get(e)}(n);if(void 0===r)return"continue";var s=e.names.get(r),i=t.getGroup(n);if(void 0===s||0===i.length)return"continue";var a="".concat(f,".g").concat(n,'[id="').concat(r,'"]'),c="";void 0!==s&&s.forEach(function(e){e.length>0&&(c+="".concat(e,","))}),o+="".concat(i).concat(a,'{content:"').concat(c,'"}').concat(g)},s=0;s<n;s++)r(s);return o}(r)})}return e.registerId=function(e){return ge(e)},e.prototype.reconstructWithOptions=function(n,o){return void 0===o&&(o=!0),new e((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({},this.options),n),this.gs,o&&this.names||void 0)},e.prototype.allocateGSInstance=function(e){return this.gs[e]=(this.gs[e]||0)+1},e.prototype.getTag=function(){return this.tag||(this.tag=(e=function(e){var t=e.useCSSOMInjection,n=e.target;return e.isServer?new Ae(n):t?new Ce(n):new Ie(n)}(this.options),new fe(e)));var e},e.prototype.hasNameForId=function(e,t){return this.names.has(e)&&this.names.get(e).has(t)},e.prototype.registerName=function(e,t){if(ge(e),this.names.has(e))this.names.get(e).add(t);else{var n=new Set;n.add(t),this.names.set(e,n)}},e.prototype.insertRules=function(e,t,n){this.registerName(e,t),this.getTag().insertRules(ge(e),n)},e.prototype.clearNames=function(e){this.names.has(e)&&this.names.get(e).clear()},e.prototype.clearRules=function(e){this.getTag().clearGroup(ge(e)),this.clearNames(e)},e.prototype.clearTag=function(){this.tag=void 0},e}(),Te=/&/g,ke=/^\s*\/\/.*$/gm;function je(e,t){return e.map(function(e){return"rule"===e.type&&(e.value="".concat(t," ").concat(e.value),e.value=e.value.replaceAll(",",",".concat(t," ")),e.props=e.props.map(function(e){return"".concat(t," ").concat(e)})),Array.isArray(e.children)&&"@keyframes"!==e.type&&(e.children=je(e.children,t)),e})}function xe(e){var t,n,o,r=void 0===e?C:e,s=r.options,i=void 0===s?C:s,a=r.plugins,c=void 0===a?_:a,l=function(e,o,r){return r.startsWith(n)&&r.endsWith(n)&&r.replaceAll(n,"").length>0?".".concat(t):e},u=c.slice();u.push(function(e){e.type===stylis__WEBPACK_IMPORTED_MODULE_5__.RULESET&&e.value.includes("&")&&(e.props[0]=e.props[0].replace(Te,n).replace(o,l))}),i.prefix&&u.push(stylis__WEBPACK_IMPORTED_MODULE_6__.prefixer),u.push(stylis__WEBPACK_IMPORTED_MODULE_7__.stringify);var p=function(e,r,s,a){void 0===r&&(r=""),void 0===s&&(s=""),void 0===a&&(a="&"),t=a,n=r,o=new RegExp("\\".concat(n,"\\b"),"g");var c=e.replace(ke,""),l=stylis__WEBPACK_IMPORTED_MODULE_8__.compile(s||r?"".concat(s," ").concat(r," { ").concat(c," }"):c);i.namespace&&(l=je(l,i.namespace));var p=[];return stylis__WEBPACK_IMPORTED_MODULE_7__.serialize(l,stylis__WEBPACK_IMPORTED_MODULE_6__.middleware(u.concat(stylis__WEBPACK_IMPORTED_MODULE_6__.rulesheet(function(e){return p.push(e)})))),p};return p.hash=c.length?c.reduce(function(e,t){return t.name||he(15),M(e,t.name)},F).toString():"",p}var Ve=new Re,Fe=xe(),Me=react__WEBPACK_IMPORTED_MODULE_1___default().createContext({shouldForwardProp:void 0,styleSheet:Ve,stylis:Fe}),$e=Me.Consumer,ze=react__WEBPACK_IMPORTED_MODULE_1___default().createContext(void 0);function Be(){return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Me)}function Le(e){var t=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(e.stylisPlugins),n=t[0],r=t[1],c=Be().styleSheet,l=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(function(){var t=c;return e.sheet?t=e.sheet:e.target&&(t=t.reconstructWithOptions({target:e.target},!1)),e.disableCSSOMInjection&&(t=t.reconstructWithOptions({useCSSOMInjection:!1})),t},[e.disableCSSOMInjection,e.sheet,e.target,c]),u=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(function(){return xe({options:{namespace:e.namespace,prefix:e.enableVendorPrefixes},plugins:n})},[e.enableVendorPrefixes,e.namespace,n]);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function(){shallowequal__WEBPACK_IMPORTED_MODULE_2___default()(n,e.stylisPlugins)||r(e.stylisPlugins)},[e.stylisPlugins]);var d=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(function(){return{shouldForwardProp:e.shouldForwardProp,styleSheet:l,stylis:u}},[e.shouldForwardProp,l,u]);return react__WEBPACK_IMPORTED_MODULE_1___default().createElement(Me.Provider,{value:d},react__WEBPACK_IMPORTED_MODULE_1___default().createElement(ze.Provider,{value:u},e.children))}var Ge=function(){function e(e,t){var n=this;this.inject=function(e,t){void 0===t&&(t=Fe);var o=n.name+t.hash;e.hasNameForId(n.id,o)||e.insertRules(n.id,o,t(n.rules,o,"@keyframes"))},this.name=e,this.id="sc-keyframes-".concat(e),this.rules=t,ue(this,function(){throw he(12,String(n.name))})}return e.prototype.getName=function(e){return void 0===e&&(e=Fe),this.name+e.hash},e}(),Ye=function(e){return e>="A"&&e<="Z"};function We(e){for(var t="",n=0;n<e.length;n++){var o=e[n];if(1===n&&"-"===o&&"-"===e[0])return e;Ye(o)?t+="-"+o.toLowerCase():t+=o}return t.startsWith("ms-")?"-"+t:t}var qe=function(e){return null==e||!1===e||""===e},He=function(t){var n,o,r=[];for(var s in t){var i=t[s];t.hasOwnProperty(s)&&!qe(i)&&(Array.isArray(i)&&i.isCss||re(i)?r.push("".concat(We(s),":"),i,";"):ce(i)?r.push.apply(r,(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__spreadArray)(["".concat(s," {")],He(i),!1),["}"],!1)):r.push("".concat(We(s),": ").concat((n=s,null==(o=i)||"boolean"==typeof o||""===o?"":"number"!=typeof o||0===o||n in _emotion_unitless__WEBPACK_IMPORTED_MODULE_3__["default"]||n.startsWith("--")?String(o).trim():"".concat(o,"px")),";")))}return r};function Ue(e,t,n,o){if(qe(e))return[];if(se(e))return[".".concat(e.styledComponentId)];if(re(e)){if(!re(s=e)||s.prototype&&s.prototype.isReactComponent||!t)return[e];var r=e(t);return false||"object"!=typeof r||Array.isArray(r)||r instanceof Ge||ce(r)||null===r||console.error("".concat(B(e)," is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details.")),Ue(r,t,n,o)}var s;return e instanceof Ge?n?(e.inject(n,o),[e.getName(o)]):[e]:ce(e)?He(e):Array.isArray(e)?Array.prototype.concat.apply(_,e.map(function(e){return Ue(e,t,n,o)})):[e.toString()]}function Je(e){for(var t=0;t<e.length;t+=1){var n=e[t];if(re(n)&&!se(n))return!1}return!0}var Xe=$(v),Ze=function(){function e(e,t,n){this.rules=e,this.staticRulesId="",this.isStatic= false&&0,this.componentId=t,this.baseHash=M(Xe,t),this.baseStyle=n,Re.registerId(t)}return e.prototype.generateAndInjectStyles=function(e,t,n){var o=this.baseStyle?this.baseStyle.generateAndInjectStyles(e,t,n):"";if(this.isStatic&&!n.hash)if(this.staticRulesId&&t.hasNameForId(this.componentId,this.staticRulesId))o=ie(o,this.staticRulesId);else{var r=ae(Ue(this.rules,e,t,n)),s=x(M(this.baseHash,r)>>>0);if(!t.hasNameForId(this.componentId,s)){var i=n(r,".".concat(s),void 0,this.componentId);t.insertRules(this.componentId,s,i)}o=ie(o,s),this.staticRulesId=s}else{for(var a=M(this.baseHash,n.hash),c="",l=0;l<this.rules.length;l++){var u=this.rules[l];if("string"==typeof u)c+=u, true&&(a=M(a,u));else if(u){var p=ae(Ue(u,e,t,n));a=M(a,p+l),c+=p}}if(c){var d=x(a>>>0);t.hasNameForId(this.componentId,d)||t.insertRules(this.componentId,d,n(c,".".concat(d),void 0,this.componentId)),o=ie(o,d)}}return o},e}(),Ke=react__WEBPACK_IMPORTED_MODULE_1___default().createContext(void 0),Qe=Ke.Consumer;function et(){var e=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Ke);if(!e)throw he(18);return e}function tt(e){var n=react__WEBPACK_IMPORTED_MODULE_1___default().useContext(Ke),r=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(function(){return function(e,n){if(!e)throw he(14);if(re(e)){var o=e(n);if( true&&(null===o||Array.isArray(o)||"object"!=typeof o))throw he(7);return o}if(Array.isArray(e)||"object"!=typeof e)throw he(8);return n?(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({},n),e):e}(e.theme,n)},[e.theme,n]);return e.children?react__WEBPACK_IMPORTED_MODULE_1___default().createElement(Ke.Provider,{value:r},e.children):null}var nt={},ot=new Set;function rt(e,r,s){var i=se(e),a=e,c=!L(e),p=r.attrs,d=void 0===p?_:p,h=r.componentId,f=void 0===h?function(e,t){var n="string"!=typeof e?"sc":R(e);nt[n]=(nt[n]||0)+1;var o="".concat(n,"-").concat(z(v+n+nt[n]));return t?"".concat(t,"-").concat(o):o}(r.displayName,r.parentComponentId):h,m=r.displayName,y=void 0===m?function(e){return L(e)?"styled.".concat(e):"Styled(".concat(B(e),")")}(e):m,g=r.displayName&&r.componentId?"".concat(R(r.displayName),"-").concat(r.componentId):r.componentId||f,S=i&&a.attrs?a.attrs.concat(d).filter(Boolean):d,w=r.shouldForwardProp;if(i&&a.shouldForwardProp){var b=a.shouldForwardProp;if(r.shouldForwardProp){var E=r.shouldForwardProp;w=function(e,t){return b(e,t)&&E(e,t)}}else w=b}var N=new Ze(s,g,i?a.componentStyle:void 0);function O(e,r){return function(e,r,s){var i=e.attrs,a=e.componentStyle,c=e.defaultProps,p=e.foldedComponentIds,d=e.styledComponentId,h=e.target,f=react__WEBPACK_IMPORTED_MODULE_1___default().useContext(Ke),m=Be(),y=e.shouldForwardProp||m.shouldForwardProp; true&&(0,react__WEBPACK_IMPORTED_MODULE_1__.useDebugValue)(d);var v=I(r,f,c)||C,g=function(e,n,o){for(var r,s=(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({},n),{className:void 0,theme:o}),i=0;i<e.length;i+=1){var a=re(r=e[i])?r(s):r;for(var c in a)s[c]="className"===c?ie(s[c],a[c]):"style"===c?(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({},s[c]),a[c]):a[c]}return n.className&&(s.className=ie(s.className,n.className)),s}(i,r,v),S=g.as||h,w={};for(var b in g)void 0===g[b]||"$"===b[0]||"as"===b||"theme"===b&&g.theme===v||("forwardedAs"===b?w.as=g.forwardedAs:y&&!y(b,S)||(w[b]=g[b],y||"development"!=="development"||(0,_emotion_is_prop_valid__WEBPACK_IMPORTED_MODULE_0__["default"])(b)||ot.has(b)||!A.has(S)||(ot.add(b),console.warn('styled-components: it looks like an unknown prop "'.concat(b,'" is being sent through to the DOM, which will likely trigger a React console error. If you would like automatic filtering of unknown props, you can opt-into that behavior via `<StyleSheetManager shouldForwardProp={...}>` (connect an API like `@emotion/is-prop-valid`) or consider using transient props (`$` prefix for automatic filtering.)')))));var E=function(e,t){var n=Be(),o=e.generateAndInjectStyles(t,n.styleSheet,n.stylis);return true&&(0,react__WEBPACK_IMPORTED_MODULE_1__.useDebugValue)(o),o}(a,g); true&&e.warnTooManyClasses&&e.warnTooManyClasses(E);var N=ie(p,d);return E&&(N+=" "+E),g.className&&(N+=" "+g.className),w[L(S)&&!A.has(S)?"class":"className"]=N,w.ref=s,(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(S,w)}(D,e,r)}O.displayName=y;var D=react__WEBPACK_IMPORTED_MODULE_1___default().forwardRef(O);return D.attrs=S,D.componentStyle=N,D.displayName=y,D.shouldForwardProp=w,D.foldedComponentIds=i?ie(a.foldedComponentIds,a.styledComponentId):"",D.styledComponentId=g,D.target=i?a.target:e,Object.defineProperty(D,"defaultProps",{get:function(){return this._foldedDefaultProps},set:function(e){this._foldedDefaultProps=i?function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];for(var o=0,r=t;o<r.length;o++)le(e,r[o],!0);return e}({},a.defaultProps,e):e}}), true&&(P(y,g),D.warnTooManyClasses=function(e,t){var n={},o=!1;return function(r){if(!o&&(n[r]=!0,Object.keys(n).length>=200)){var s=t?' with the id of "'.concat(t,'"'):"";console.warn("Over ".concat(200," classes were generated for component ").concat(e).concat(s,".\n")+"Consider using the attrs method, together with a style object for frequently changed styles.\nExample:\n  const Component = styled.div.attrs(props => ({\n    style: {\n      background: props.background,\n    },\n  }))`width: 100%;`\n\n  <Component />"),o=!0,n={}}}}(y,g)),ue(D,function(){return".".concat(D.styledComponentId)}),c&&oe(D,e,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,shouldForwardProp:!0,styledComponentId:!0,target:!0}),D}function st(e,t){for(var n=[e[0]],o=0,r=t.length;o<r;o+=1)n.push(t[o],e[o+1]);return n}var it=function(e){return Object.assign(e,{isCss:!0})};function at(t){for(var n=[],o=1;o<arguments.length;o++)n[o-1]=arguments[o];if(re(t)||ce(t))return it(Ue(st(_,(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__spreadArray)([t],n,!0))));var r=t;return 0===n.length&&1===r.length&&"string"==typeof r[0]?Ue(r):it(Ue(st(r,n)))}function ct(n,o,r){if(void 0===r&&(r=C),!o)throw he(1,o);var s=function(t){for(var s=[],i=1;i<arguments.length;i++)s[i-1]=arguments[i];return n(o,r,at.apply(void 0,(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__spreadArray)([t],s,!1)))};return s.attrs=function(e){return ct(n,o,(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({},r),{attrs:Array.prototype.concat(r.attrs,e).filter(Boolean)}))},s.withConfig=function(e){return ct(n,o,(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({},r),e))},s}var lt=function(e){return ct(rt,e)},ut=lt;A.forEach(function(e){ut[e]=lt(e)});var pt=function(){function e(e,t){this.rules=e,this.componentId=t,this.isStatic=Je(e),Re.registerId(this.componentId+1)}return e.prototype.createStyles=function(e,t,n,o){var r=o(ae(Ue(this.rules,t,n,o)),""),s=this.componentId+e;n.insertRules(s,s,r)},e.prototype.removeStyles=function(e,t){t.clearRules(this.componentId+e)},e.prototype.renderStyles=function(e,t,n,o){e>2&&Re.registerId(this.componentId+e),this.removeStyles(e,n),this.createStyles(e,t,n,o)},e}();function dt(n){for(var r=[],s=1;s<arguments.length;s++)r[s-1]=arguments[s];var i=at.apply(void 0,(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__spreadArray)([n],r,!1)),a="sc-global-".concat(z(JSON.stringify(i))),c=new pt(i,a); true&&P(a);var l=function(e){var t=Be(),n=react__WEBPACK_IMPORTED_MODULE_1___default().useContext(Ke),r=react__WEBPACK_IMPORTED_MODULE_1___default().useRef(t.styleSheet.allocateGSInstance(a)).current;return true&&react__WEBPACK_IMPORTED_MODULE_1___default().Children.count(e.children)&&console.warn("The global style component ".concat(a," was given child JSX. createGlobalStyle does not render children.")), true&&i.some(function(e){return"string"==typeof e&&-1!==e.indexOf("@import")})&&console.warn("Please do not use @import CSS syntax in createGlobalStyle at this time, as the CSSOM APIs we use in production do not handle it well. Instead, we recommend using a library such as react-helmet to inject a typical <link> meta tag to the stylesheet, or simply embedding it manually in your index.html <head> section for a simpler app."),t.styleSheet.server&&u(r,e,t.styleSheet,n,t.stylis),react__WEBPACK_IMPORTED_MODULE_1___default().useLayoutEffect(function(){if(!t.styleSheet.server)return u(r,e,t.styleSheet,n,t.stylis),function(){return c.removeStyles(r,t.styleSheet)}},[r,e,t.styleSheet,n,t.stylis]),null};function u(e,n,o,r,s){if(c.isStatic)c.renderStyles(e,b,o,s);else{var i=(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({},n),{theme:I(n,r,l.defaultProps)});c.renderStyles(e,i,o,s)}}return react__WEBPACK_IMPORTED_MODULE_1___default().memo(l)}function ht(t){for(var n=[],o=1;o<arguments.length;o++)n[o-1]=arguments[o]; true&&"undefined"!=typeof navigator&&"ReactNative"===navigator.product&&console.warn("`keyframes` cannot be used on ReactNative, only on the web. To do animation in ReactNative please use Animated.");var r=ae(at.apply(void 0,(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__spreadArray)([t],n,!1))),s=z(r);return new Ge(s,r)}function ft(e){var n=react__WEBPACK_IMPORTED_MODULE_1___default().forwardRef(function(n,r){var s=I(n,react__WEBPACK_IMPORTED_MODULE_1___default().useContext(Ke),e.defaultProps);return true&&void 0===s&&console.warn('[withTheme] You are not using a ThemeProvider nor passing a theme prop or a theme in defaultProps in component class "'.concat(B(e),'"')),react__WEBPACK_IMPORTED_MODULE_1___default().createElement(e,(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({},n,{theme:s,ref:r}))});return n.displayName="WithTheme(".concat(B(e),")"),oe(n,e)}var mt=function(){function e(){var e=this;this._emitSheetCSS=function(){var t=e.instance.toString(),n=Pe(),o=ae([n&&'nonce="'.concat(n,'"'),"".concat(f,'="true"'),"".concat(y,'="').concat(v,'"')].filter(Boolean)," ");return"<style ".concat(o,">").concat(t,"</style>")},this.getStyleTags=function(){if(e.sealed)throw he(2);return e._emitSheetCSS()},this.getStyleElement=function(){var n;if(e.sealed)throw he(2);var r=((n={})[f]="",n[y]=v,n.dangerouslySetInnerHTML={__html:e.instance.toString()},n),s=Pe();return s&&(r.nonce=s),[react__WEBPACK_IMPORTED_MODULE_1___default().createElement("style",(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({},r,{key:"sc-0-0"}))]},this.seal=function(){e.sealed=!0},this.instance=new Re({isServer:!0}),this.sealed=!1}return e.prototype.collectStyles=function(e){if(this.sealed)throw he(2);return react__WEBPACK_IMPORTED_MODULE_1___default().createElement(Le,{sheet:this.instance},e)},e.prototype.interleaveWithNodeStream=function(e){throw he(3)},e}(),yt={StyleSheet:Re,mainSheet:Ve}; true&&"undefined"!=typeof navigator&&"ReactNative"===navigator.product&&console.warn("It looks like you've imported 'styled-components' on React Native.\nPerhaps you're looking to import 'styled-components/native'?\nRead more about this at https://www.styled-components.com/docs/basics#react-native");var vt="__sc-".concat(f,"__"); true&&"undefined"!=typeof window&&(window[vt]||(window[vt]=0),1===window[vt]&&console.warn("It looks like there are several instances of 'styled-components' initialized in this application. This may cause dynamic styles to not render properly, errors during the rehydration process, a missing theme prop, and makes your application bigger without good reason.\n\nSee https://s-c.sh/2BAXzed for more info."),window[vt]+=1);
//# sourceMappingURL=styled-components.browser.esm.js.map


/***/ }),

/***/ "./node_modules/styled-components/node_modules/tslib/tslib.es6.js":
/*!************************************************************************!*\
  !*** ./node_modules/styled-components/node_modules/tslib/tslib.es6.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __assign: () => (/* binding */ __assign),
/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),
/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),
/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),
/* harmony export */   __await: () => (/* binding */ __await),
/* harmony export */   __awaiter: () => (/* binding */ __awaiter),
/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),
/* harmony export */   __classPrivateFieldIn: () => (/* binding */ __classPrivateFieldIn),
/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),
/* harmony export */   __createBinding: () => (/* binding */ __createBinding),
/* harmony export */   __decorate: () => (/* binding */ __decorate),
/* harmony export */   __esDecorate: () => (/* binding */ __esDecorate),
/* harmony export */   __exportStar: () => (/* binding */ __exportStar),
/* harmony export */   __extends: () => (/* binding */ __extends),
/* harmony export */   __generator: () => (/* binding */ __generator),
/* harmony export */   __importDefault: () => (/* binding */ __importDefault),
/* harmony export */   __importStar: () => (/* binding */ __importStar),
/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),
/* harmony export */   __metadata: () => (/* binding */ __metadata),
/* harmony export */   __param: () => (/* binding */ __param),
/* harmony export */   __propKey: () => (/* binding */ __propKey),
/* harmony export */   __read: () => (/* binding */ __read),
/* harmony export */   __rest: () => (/* binding */ __rest),
/* harmony export */   __runInitializers: () => (/* binding */ __runInitializers),
/* harmony export */   __setFunctionName: () => (/* binding */ __setFunctionName),
/* harmony export */   __spread: () => (/* binding */ __spread),
/* harmony export */   __spreadArray: () => (/* binding */ __spreadArray),
/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),
/* harmony export */   __values: () => (/* binding */ __values)
/* harmony export */ });
/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    if (typeof b !== "function" && b !== null)
        throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
    var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _, done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
        var context = {};
        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
        for (var p in contextIn.access) context.access[p] = contextIn.access[p];
        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
        var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
        if (kind === "accessor") {
            if (result === void 0) continue;
            if (result === null || typeof result !== "object") throw new TypeError("Object expected");
            if (_ = accept(result.get)) descriptor.get = _;
            if (_ = accept(result.set)) descriptor.set = _;
            if (_ = accept(result.init)) initializers.push(_);
        }
        else if (_ = accept(result)) {
            if (kind === "field") initializers.push(_);
            else descriptor[key] = _;
        }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
};

function __runInitializers(thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
};

function __propKey(x) {
    return typeof x === "symbol" ? x : "".concat(x);
};

function __setFunctionName(f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

var __createBinding = Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});

function __exportStar(m, o) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

/** @deprecated */
function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

/** @deprecated */
function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
}

function __spreadArray(to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
}

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

var __setModuleDefault = Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}

function __classPrivateFieldSet(receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
}

function __classPrivateFieldIn(state, receiver) {
    if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
    return typeof state === "function" ? receiver === state : state.has(receiver);
}


/***/ }),

/***/ "./node_modules/@mtnkente/paragon-buttons/dist/index.esm.js":
/*!******************************************************************!*\
  !*** ./node_modules/@mtnkente/paragon-buttons/dist/index.esm.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   StandardButton: () => (/* binding */ StandardButton),
/* harmony export */   TextButton: () => (/* binding */ TextButton)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react?e43f");
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _mtnkente_paragon_foundation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @mtnkente/paragon-foundation */ "./node_modules/@mtnkente/paragon-foundation/dist/index.esm.js");
/* harmony import */ var _mtnkente_paragon_icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @mtnkente/paragon-icons */ "./node_modules/@mtnkente/paragon-icons/dist/index.esm.js");






var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

var check = function (it) {
  return it && it.Math === Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global$a =
  // eslint-disable-next-line es/no-global-this -- safe
  check(typeof globalThis == 'object' && globalThis) ||
  check(typeof window == 'object' && window) ||
  // eslint-disable-next-line no-restricted-globals -- safe
  check(typeof self == 'object' && self) ||
  check(typeof commonjsGlobal == 'object' && commonjsGlobal) ||
  check(typeof commonjsGlobal == 'object' && commonjsGlobal) ||
  // eslint-disable-next-line no-new-func -- fallback
  (function () { return this; })() || Function('return this')();

var objectGetOwnPropertyDescriptor = {};

var fails$9 = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};

var fails$8 = fails$9;

// Detect IE8's incomplete defineProperty implementation
var descriptors = !fails$8(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] !== 7;
});

var fails$7 = fails$9;

var functionBindNative = !fails$7(function () {
  // eslint-disable-next-line es/no-function-prototype-bind -- safe
  var test = (function () { /* empty */ }).bind();
  // eslint-disable-next-line no-prototype-builtins -- safe
  return typeof test != 'function' || test.hasOwnProperty('prototype');
});

var NATIVE_BIND$1 = functionBindNative;

var call$5 = Function.prototype.call;

var functionCall = NATIVE_BIND$1 ? call$5.bind(call$5) : function () {
  return call$5.apply(call$5, arguments);
};

var objectPropertyIsEnumerable = {};

var $propertyIsEnumerable = {}.propertyIsEnumerable;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor$1 = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor$1 && !$propertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
objectPropertyIsEnumerable.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor$1(this, V);
  return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable;

var createPropertyDescriptor$2 = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

var NATIVE_BIND = functionBindNative;

var FunctionPrototype$1 = Function.prototype;
var call$4 = FunctionPrototype$1.call;
var uncurryThisWithBind = NATIVE_BIND && FunctionPrototype$1.bind.bind(call$4, call$4);

var functionUncurryThis = NATIVE_BIND ? uncurryThisWithBind : function (fn) {
  return function () {
    return call$4.apply(fn, arguments);
  };
};

var uncurryThis$9 = functionUncurryThis;

var toString$1 = uncurryThis$9({}.toString);
var stringSlice$1 = uncurryThis$9(''.slice);

var classofRaw = function (it) {
  return stringSlice$1(toString$1(it), 8, -1);
};

var uncurryThis$8 = functionUncurryThis;
var fails$6 = fails$9;
var classof = classofRaw;

var $Object$2 = Object;
var split = uncurryThis$8(''.split);

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var indexedObject = fails$6(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins -- safe
  return !$Object$2('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof(it) === 'String' ? split(it, '') : $Object$2(it);
} : $Object$2;

// we can't use just `it == null` since of `document.all` special case
// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec
var isNullOrUndefined$2 = function (it) {
  return it === null || it === undefined;
};

var isNullOrUndefined$1 = isNullOrUndefined$2;

var $TypeError$5 = TypeError;

// `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible
var requireObjectCoercible$2 = function (it) {
  if (isNullOrUndefined$1(it)) throw new $TypeError$5("Can't call method on " + it);
  return it;
};

// toObject with fallback for non-array-like ES3 strings
var IndexedObject$1 = indexedObject;
var requireObjectCoercible$1 = requireObjectCoercible$2;

var toIndexedObject$3 = function (it) {
  return IndexedObject$1(requireObjectCoercible$1(it));
};

// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot
var documentAll = typeof document == 'object' && document.all;

// `IsCallable` abstract operation
// https://tc39.es/ecma262/#sec-iscallable
// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing
var isCallable$a = typeof documentAll == 'undefined' && documentAll !== undefined ? function (argument) {
  return typeof argument == 'function' || argument === documentAll;
} : function (argument) {
  return typeof argument == 'function';
};

var isCallable$9 = isCallable$a;

var isObject$5 = function (it) {
  return typeof it == 'object' ? it !== null : isCallable$9(it);
};

var global$9 = global$a;
var isCallable$8 = isCallable$a;

var aFunction = function (argument) {
  return isCallable$8(argument) ? argument : undefined;
};

var getBuiltIn$2 = function (namespace, method) {
  return arguments.length < 2 ? aFunction(global$9[namespace]) : global$9[namespace] && global$9[namespace][method];
};

var uncurryThis$7 = functionUncurryThis;

var objectIsPrototypeOf = uncurryThis$7({}.isPrototypeOf);

var engineUserAgent = typeof navigator != 'undefined' && String(navigator.userAgent) || '';

var global$8 = global$a;
var userAgent = engineUserAgent;

var process = global$8.process;
var Deno = global$8.Deno;
var versions = process && process.versions || Deno && Deno.version;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.');
  // in old Chrome, versions of V8 isn't V8 = Chrome / 10
  // but their correct versions are not interesting for us
  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
}

// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
// so check `userAgent` even if `.v8` exists, but 0
if (!version && userAgent) {
  match = userAgent.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = userAgent.match(/Chrome\/(\d+)/);
    if (match) version = +match[1];
  }
}

var engineV8Version = version;

/* eslint-disable es/no-symbol -- required for testing */
var V8_VERSION = engineV8Version;
var fails$5 = fails$9;
var global$7 = global$a;

var $String$3 = global$7.String;

// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
var symbolConstructorDetection = !!Object.getOwnPropertySymbols && !fails$5(function () {
  var symbol = Symbol('symbol detection');
  // Chrome 38 Symbol has incorrect toString conversion
  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances
  // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,
  // of course, fail.
  return !$String$3(symbol) || !(Object(symbol) instanceof Symbol) ||
    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    !Symbol.sham && V8_VERSION && V8_VERSION < 41;
});

/* eslint-disable es/no-symbol -- required for testing */
var NATIVE_SYMBOL$1 = symbolConstructorDetection;

var useSymbolAsUid = NATIVE_SYMBOL$1
  && !Symbol.sham
  && typeof Symbol.iterator == 'symbol';

var getBuiltIn$1 = getBuiltIn$2;
var isCallable$7 = isCallable$a;
var isPrototypeOf = objectIsPrototypeOf;
var USE_SYMBOL_AS_UID$1 = useSymbolAsUid;

var $Object$1 = Object;

var isSymbol$2 = USE_SYMBOL_AS_UID$1 ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  var $Symbol = getBuiltIn$1('Symbol');
  return isCallable$7($Symbol) && isPrototypeOf($Symbol.prototype, $Object$1(it));
};

var $String$2 = String;

var tryToString$1 = function (argument) {
  try {
    return $String$2(argument);
  } catch (error) {
    return 'Object';
  }
};

var isCallable$6 = isCallable$a;
var tryToString = tryToString$1;

var $TypeError$4 = TypeError;

// `Assert: IsCallable(argument) is true`
var aCallable$1 = function (argument) {
  if (isCallable$6(argument)) return argument;
  throw new $TypeError$4(tryToString(argument) + ' is not a function');
};

var aCallable = aCallable$1;
var isNullOrUndefined = isNullOrUndefined$2;

// `GetMethod` abstract operation
// https://tc39.es/ecma262/#sec-getmethod
var getMethod$1 = function (V, P) {
  var func = V[P];
  return isNullOrUndefined(func) ? undefined : aCallable(func);
};

var call$3 = functionCall;
var isCallable$5 = isCallable$a;
var isObject$4 = isObject$5;

var $TypeError$3 = TypeError;

// `OrdinaryToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-ordinarytoprimitive
var ordinaryToPrimitive$1 = function (input, pref) {
  var fn, val;
  if (pref === 'string' && isCallable$5(fn = input.toString) && !isObject$4(val = call$3(fn, input))) return val;
  if (isCallable$5(fn = input.valueOf) && !isObject$4(val = call$3(fn, input))) return val;
  if (pref !== 'string' && isCallable$5(fn = input.toString) && !isObject$4(val = call$3(fn, input))) return val;
  throw new $TypeError$3("Can't convert object to primitive value");
};

var sharedStore = {exports: {}};

var global$6 = global$a;

// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty$2 = Object.defineProperty;

var defineGlobalProperty$3 = function (key, value) {
  try {
    defineProperty$2(global$6, key, { value: value, configurable: true, writable: true });
  } catch (error) {
    global$6[key] = value;
  } return value;
};

var globalThis$1 = global$a;
var defineGlobalProperty$2 = defineGlobalProperty$3;

var SHARED = '__core-js_shared__';
var store$3 = sharedStore.exports = globalThis$1[SHARED] || defineGlobalProperty$2(SHARED, {});

(store$3.versions || (store$3.versions = [])).push({
  version: '3.36.0',
  mode: 'global',
  copyright: '© 2014-2024 Denis Pushkarev (zloirock.ru)',
  license: 'https://github.com/zloirock/core-js/blob/v3.36.0/LICENSE',
  source: 'https://github.com/zloirock/core-js'
});

var store$2 = sharedStore.exports;

var shared$3 = function (key, value) {
  return store$2[key] || (store$2[key] = value || {});
};

var requireObjectCoercible = requireObjectCoercible$2;

var $Object = Object;

// `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject
var toObject$2 = function (argument) {
  return $Object(requireObjectCoercible(argument));
};

var uncurryThis$6 = functionUncurryThis;
var toObject$1 = toObject$2;

var hasOwnProperty = uncurryThis$6({}.hasOwnProperty);

// `HasOwnProperty` abstract operation
// https://tc39.es/ecma262/#sec-hasownproperty
// eslint-disable-next-line es/no-object-hasown -- safe
var hasOwnProperty_1 = Object.hasOwn || function hasOwn(it, key) {
  return hasOwnProperty(toObject$1(it), key);
};

var uncurryThis$5 = functionUncurryThis;

var id = 0;
var postfix = Math.random();
var toString = uncurryThis$5(1.0.toString);

var uid$2 = function (key) {
  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);
};

var global$5 = global$a;
var shared$2 = shared$3;
var hasOwn$6 = hasOwnProperty_1;
var uid$1 = uid$2;
var NATIVE_SYMBOL = symbolConstructorDetection;
var USE_SYMBOL_AS_UID = useSymbolAsUid;

var Symbol$1 = global$5.Symbol;
var WellKnownSymbolsStore = shared$2('wks');
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol$1['for'] || Symbol$1 : Symbol$1 && Symbol$1.withoutSetter || uid$1;

var wellKnownSymbol$1 = function (name) {
  if (!hasOwn$6(WellKnownSymbolsStore, name)) {
    WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn$6(Symbol$1, name)
      ? Symbol$1[name]
      : createWellKnownSymbol('Symbol.' + name);
  } return WellKnownSymbolsStore[name];
};

var call$2 = functionCall;
var isObject$3 = isObject$5;
var isSymbol$1 = isSymbol$2;
var getMethod = getMethod$1;
var ordinaryToPrimitive = ordinaryToPrimitive$1;
var wellKnownSymbol = wellKnownSymbol$1;

var $TypeError$2 = TypeError;
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');

// `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive
var toPrimitive$1 = function (input, pref) {
  if (!isObject$3(input) || isSymbol$1(input)) return input;
  var exoticToPrim = getMethod(input, TO_PRIMITIVE);
  var result;
  if (exoticToPrim) {
    if (pref === undefined) pref = 'default';
    result = call$2(exoticToPrim, input, pref);
    if (!isObject$3(result) || isSymbol$1(result)) return result;
    throw new $TypeError$2("Can't convert object to primitive value");
  }
  if (pref === undefined) pref = 'number';
  return ordinaryToPrimitive(input, pref);
};

var toPrimitive = toPrimitive$1;
var isSymbol = isSymbol$2;

// `ToPropertyKey` abstract operation
// https://tc39.es/ecma262/#sec-topropertykey
var toPropertyKey$2 = function (argument) {
  var key = toPrimitive(argument, 'string');
  return isSymbol(key) ? key : key + '';
};

var global$4 = global$a;
var isObject$2 = isObject$5;

var document$1 = global$4.document;
// typeof document.createElement is 'object' in old IE
var EXISTS$1 = isObject$2(document$1) && isObject$2(document$1.createElement);

var documentCreateElement = function (it) {
  return EXISTS$1 ? document$1.createElement(it) : {};
};

var DESCRIPTORS$7 = descriptors;
var fails$4 = fails$9;
var createElement = documentCreateElement;

// Thanks to IE8 for its funny defineProperty
var ie8DomDefine = !DESCRIPTORS$7 && !fails$4(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(createElement('div'), 'a', {
    get: function () { return 7; }
  }).a !== 7;
});

var DESCRIPTORS$6 = descriptors;
var call$1 = functionCall;
var propertyIsEnumerableModule$1 = objectPropertyIsEnumerable;
var createPropertyDescriptor$1 = createPropertyDescriptor$2;
var toIndexedObject$2 = toIndexedObject$3;
var toPropertyKey$1 = toPropertyKey$2;
var hasOwn$5 = hasOwnProperty_1;
var IE8_DOM_DEFINE$1 = ie8DomDefine;

// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor$1 = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
objectGetOwnPropertyDescriptor.f = DESCRIPTORS$6 ? $getOwnPropertyDescriptor$1 : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject$2(O);
  P = toPropertyKey$1(P);
  if (IE8_DOM_DEFINE$1) try {
    return $getOwnPropertyDescriptor$1(O, P);
  } catch (error) { /* empty */ }
  if (hasOwn$5(O, P)) return createPropertyDescriptor$1(!call$1(propertyIsEnumerableModule$1.f, O, P), O[P]);
};

var objectDefineProperty = {};

var DESCRIPTORS$5 = descriptors;
var fails$3 = fails$9;

// V8 ~ Chrome 36-
// https://bugs.chromium.org/p/v8/issues/detail?id=3334
var v8PrototypeDefineBug = DESCRIPTORS$5 && fails$3(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(function () { /* empty */ }, 'prototype', {
    value: 42,
    writable: false
  }).prototype !== 42;
});

var isObject$1 = isObject$5;

var $String$1 = String;
var $TypeError$1 = TypeError;

// `Assert: Type(argument) is Object`
var anObject$2 = function (argument) {
  if (isObject$1(argument)) return argument;
  throw new $TypeError$1($String$1(argument) + ' is not an object');
};

var DESCRIPTORS$4 = descriptors;
var IE8_DOM_DEFINE = ie8DomDefine;
var V8_PROTOTYPE_DEFINE_BUG = v8PrototypeDefineBug;
var anObject$1 = anObject$2;
var toPropertyKey = toPropertyKey$2;

var $TypeError = TypeError;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var $defineProperty = Object.defineProperty;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var ENUMERABLE = 'enumerable';
var CONFIGURABLE$1 = 'configurable';
var WRITABLE = 'writable';

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
objectDefineProperty.f = DESCRIPTORS$4 ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {
  anObject$1(O);
  P = toPropertyKey(P);
  anObject$1(Attributes);
  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
    var current = $getOwnPropertyDescriptor(O, P);
    if (current && current[WRITABLE]) {
      O[P] = Attributes.value;
      Attributes = {
        configurable: CONFIGURABLE$1 in Attributes ? Attributes[CONFIGURABLE$1] : current[CONFIGURABLE$1],
        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
        writable: false
      };
    }
  } return $defineProperty(O, P, Attributes);
} : $defineProperty : function defineProperty(O, P, Attributes) {
  anObject$1(O);
  P = toPropertyKey(P);
  anObject$1(Attributes);
  if (IE8_DOM_DEFINE) try {
    return $defineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw new $TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

var DESCRIPTORS$3 = descriptors;
var definePropertyModule$2 = objectDefineProperty;
var createPropertyDescriptor = createPropertyDescriptor$2;

var createNonEnumerableProperty$2 = DESCRIPTORS$3 ? function (object, key, value) {
  return definePropertyModule$2.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

var makeBuiltIn$2 = {exports: {}};

var DESCRIPTORS$2 = descriptors;
var hasOwn$4 = hasOwnProperty_1;

var FunctionPrototype = Function.prototype;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getDescriptor = DESCRIPTORS$2 && Object.getOwnPropertyDescriptor;

var EXISTS = hasOwn$4(FunctionPrototype, 'name');
// additional protection from minified / mangled / dropped function names
var PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';
var CONFIGURABLE = EXISTS && (!DESCRIPTORS$2 || (DESCRIPTORS$2 && getDescriptor(FunctionPrototype, 'name').configurable));

var functionName = {
  EXISTS: EXISTS,
  PROPER: PROPER,
  CONFIGURABLE: CONFIGURABLE
};

var uncurryThis$4 = functionUncurryThis;
var isCallable$4 = isCallable$a;
var store$1 = sharedStore.exports;

var functionToString = uncurryThis$4(Function.toString);

// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper
if (!isCallable$4(store$1.inspectSource)) {
  store$1.inspectSource = function (it) {
    return functionToString(it);
  };
}

var inspectSource$1 = store$1.inspectSource;

var global$3 = global$a;
var isCallable$3 = isCallable$a;

var WeakMap$1 = global$3.WeakMap;

var weakMapBasicDetection = isCallable$3(WeakMap$1) && /native code/.test(String(WeakMap$1));

var shared$1 = shared$3;
var uid = uid$2;

var keys = shared$1('keys');

var sharedKey$1 = function (key) {
  return keys[key] || (keys[key] = uid(key));
};

var hiddenKeys$3 = {};

var NATIVE_WEAK_MAP = weakMapBasicDetection;
var global$2 = global$a;
var isObject = isObject$5;
var createNonEnumerableProperty$1 = createNonEnumerableProperty$2;
var hasOwn$3 = hasOwnProperty_1;
var shared = sharedStore.exports;
var sharedKey = sharedKey$1;
var hiddenKeys$2 = hiddenKeys$3;

var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
var TypeError$1 = global$2.TypeError;
var WeakMap = global$2.WeakMap;
var set, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw new TypeError$1('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (NATIVE_WEAK_MAP || shared.state) {
  var store = shared.state || (shared.state = new WeakMap());
  /* eslint-disable no-self-assign -- prototype methods protection */
  store.get = store.get;
  store.has = store.has;
  store.set = store.set;
  /* eslint-enable no-self-assign -- prototype methods protection */
  set = function (it, metadata) {
    if (store.has(it)) throw new TypeError$1(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    store.set(it, metadata);
    return metadata;
  };
  get = function (it) {
    return store.get(it) || {};
  };
  has = function (it) {
    return store.has(it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys$2[STATE] = true;
  set = function (it, metadata) {
    if (hasOwn$3(it, STATE)) throw new TypeError$1(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    createNonEnumerableProperty$1(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return hasOwn$3(it, STATE) ? it[STATE] : {};
  };
  has = function (it) {
    return hasOwn$3(it, STATE);
  };
}

var internalState = {
  set: set,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};

var uncurryThis$3 = functionUncurryThis;
var fails$2 = fails$9;
var isCallable$2 = isCallable$a;
var hasOwn$2 = hasOwnProperty_1;
var DESCRIPTORS$1 = descriptors;
var CONFIGURABLE_FUNCTION_NAME = functionName.CONFIGURABLE;
var inspectSource = inspectSource$1;
var InternalStateModule = internalState;

var enforceInternalState = InternalStateModule.enforce;
var getInternalState = InternalStateModule.get;
var $String = String;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty$1 = Object.defineProperty;
var stringSlice = uncurryThis$3(''.slice);
var replace = uncurryThis$3(''.replace);
var join = uncurryThis$3([].join);

var CONFIGURABLE_LENGTH = DESCRIPTORS$1 && !fails$2(function () {
  return defineProperty$1(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;
});

var TEMPLATE = String(String).split('String');

var makeBuiltIn$1 = makeBuiltIn$2.exports = function (value, name, options) {
  if (stringSlice($String(name), 0, 7) === 'Symbol(') {
    name = '[' + replace($String(name), /^Symbol\(([^)]*)\).*$/, '$1') + ']';
  }
  if (options && options.getter) name = 'get ' + name;
  if (options && options.setter) name = 'set ' + name;
  if (!hasOwn$2(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {
    if (DESCRIPTORS$1) defineProperty$1(value, 'name', { value: name, configurable: true });
    else value.name = name;
  }
  if (CONFIGURABLE_LENGTH && options && hasOwn$2(options, 'arity') && value.length !== options.arity) {
    defineProperty$1(value, 'length', { value: options.arity });
  }
  try {
    if (options && hasOwn$2(options, 'constructor') && options.constructor) {
      if (DESCRIPTORS$1) defineProperty$1(value, 'prototype', { writable: false });
    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable
    } else if (value.prototype) value.prototype = undefined;
  } catch (error) { /* empty */ }
  var state = enforceInternalState(value);
  if (!hasOwn$2(state, 'source')) {
    state.source = join(TEMPLATE, typeof name == 'string' ? name : '');
  } return value;
};

// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
// eslint-disable-next-line no-extend-native -- required
Function.prototype.toString = makeBuiltIn$1(function toString() {
  return isCallable$2(this) && getInternalState(this).source || inspectSource(this);
}, 'toString');

var isCallable$1 = isCallable$a;
var definePropertyModule$1 = objectDefineProperty;
var makeBuiltIn = makeBuiltIn$2.exports;
var defineGlobalProperty$1 = defineGlobalProperty$3;

var defineBuiltIn$1 = function (O, key, value, options) {
  if (!options) options = {};
  var simple = options.enumerable;
  var name = options.name !== undefined ? options.name : key;
  if (isCallable$1(value)) makeBuiltIn(value, name, options);
  if (options.global) {
    if (simple) O[key] = value;
    else defineGlobalProperty$1(key, value);
  } else {
    try {
      if (!options.unsafe) delete O[key];
      else if (O[key]) simple = true;
    } catch (error) { /* empty */ }
    if (simple) O[key] = value;
    else definePropertyModule$1.f(O, key, {
      value: value,
      enumerable: false,
      configurable: !options.nonConfigurable,
      writable: !options.nonWritable
    });
  } return O;
};

var objectGetOwnPropertyNames = {};

var ceil = Math.ceil;
var floor = Math.floor;

// `Math.trunc` method
// https://tc39.es/ecma262/#sec-math.trunc
// eslint-disable-next-line es/no-math-trunc -- safe
var mathTrunc = Math.trunc || function trunc(x) {
  var n = +x;
  return (n > 0 ? floor : ceil)(n);
};

var trunc = mathTrunc;

// `ToIntegerOrInfinity` abstract operation
// https://tc39.es/ecma262/#sec-tointegerorinfinity
var toIntegerOrInfinity$2 = function (argument) {
  var number = +argument;
  // eslint-disable-next-line no-self-compare -- NaN check
  return number !== number || number === 0 ? 0 : trunc(number);
};

var toIntegerOrInfinity$1 = toIntegerOrInfinity$2;

var max = Math.max;
var min$1 = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
var toAbsoluteIndex$1 = function (index, length) {
  var integer = toIntegerOrInfinity$1(index);
  return integer < 0 ? max(integer + length, 0) : min$1(integer, length);
};

var toIntegerOrInfinity = toIntegerOrInfinity$2;

var min = Math.min;

// `ToLength` abstract operation
// https://tc39.es/ecma262/#sec-tolength
var toLength$1 = function (argument) {
  var len = toIntegerOrInfinity(argument);
  return len > 0 ? min(len, 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};

var toLength = toLength$1;

// `LengthOfArrayLike` abstract operation
// https://tc39.es/ecma262/#sec-lengthofarraylike
var lengthOfArrayLike$1 = function (obj) {
  return toLength(obj.length);
};

var toIndexedObject$1 = toIndexedObject$3;
var toAbsoluteIndex = toAbsoluteIndex$1;
var lengthOfArrayLike = lengthOfArrayLike$1;

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject$1($this);
    var length = lengthOfArrayLike(O);
    if (length === 0) return !IS_INCLUDES && -1;
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare -- NaN check
    if (IS_INCLUDES && el !== el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare -- NaN check
      if (value !== value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

var arrayIncludes = {
  // `Array.prototype.includes` method
  // https://tc39.es/ecma262/#sec-array.prototype.includes
  includes: createMethod(true),
  // `Array.prototype.indexOf` method
  // https://tc39.es/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod(false)
};

var uncurryThis$2 = functionUncurryThis;
var hasOwn$1 = hasOwnProperty_1;
var toIndexedObject = toIndexedObject$3;
var indexOf = arrayIncludes.indexOf;
var hiddenKeys$1 = hiddenKeys$3;

var push = uncurryThis$2([].push);

var objectKeysInternal = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !hasOwn$1(hiddenKeys$1, key) && hasOwn$1(O, key) && push(result, key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (hasOwn$1(O, key = names[i++])) {
    ~indexOf(result, key) || push(result, key);
  }
  return result;
};

// IE8- don't enum bug keys
var enumBugKeys$2 = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];

var internalObjectKeys$1 = objectKeysInternal;
var enumBugKeys$1 = enumBugKeys$2;

var hiddenKeys = enumBugKeys$1.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
// eslint-disable-next-line es/no-object-getownpropertynames -- safe
objectGetOwnPropertyNames.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys$1(O, hiddenKeys);
};

var objectGetOwnPropertySymbols = {};

// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
objectGetOwnPropertySymbols.f = Object.getOwnPropertySymbols;

var getBuiltIn = getBuiltIn$2;
var uncurryThis$1 = functionUncurryThis;
var getOwnPropertyNamesModule = objectGetOwnPropertyNames;
var getOwnPropertySymbolsModule$1 = objectGetOwnPropertySymbols;
var anObject = anObject$2;

var concat$1 = uncurryThis$1([].concat);

// all object keys, includes non-enumerable and symbols
var ownKeys$1 = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule.f(anObject(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule$1.f;
  return getOwnPropertySymbols ? concat$1(keys, getOwnPropertySymbols(it)) : keys;
};

var hasOwn = hasOwnProperty_1;
var ownKeys = ownKeys$1;
var getOwnPropertyDescriptorModule = objectGetOwnPropertyDescriptor;
var definePropertyModule = objectDefineProperty;

var copyConstructorProperties$1 = function (target, source, exceptions) {
  var keys = ownKeys(source);
  var defineProperty = definePropertyModule.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {
      defineProperty(target, key, getOwnPropertyDescriptor(source, key));
    }
  }
};

var fails$1 = fails$9;
var isCallable = isCallable$a;

var replacement = /#|\.prototype\./;

var isForced$1 = function (feature, detection) {
  var value = data[normalize(feature)];
  return value === POLYFILL ? true
    : value === NATIVE ? false
    : isCallable(detection) ? fails$1(detection)
    : !!detection;
};

var normalize = isForced$1.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced$1.data = {};
var NATIVE = isForced$1.NATIVE = 'N';
var POLYFILL = isForced$1.POLYFILL = 'P';

var isForced_1 = isForced$1;

var global$1 = global$a;
var getOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;
var createNonEnumerableProperty = createNonEnumerableProperty$2;
var defineBuiltIn = defineBuiltIn$1;
var defineGlobalProperty = defineGlobalProperty$3;
var copyConstructorProperties = copyConstructorProperties$1;
var isForced = isForced_1;

/*
  options.target         - name of the target object
  options.global         - target is the global object
  options.stat           - export as static methods of target
  options.proto          - export as prototype methods of target
  options.real           - real prototype method for the `pure` version
  options.forced         - export even if the native feature is available
  options.bind           - bind methods to the target, required for the `pure` version
  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe         - use the simple assignment of property instead of delete + defineProperty
  options.sham           - add a flag to not completely full polyfills
  options.enumerable     - export as enumerable property
  options.dontCallGetSet - prevent calling a getter on target
  options.name           - the .name of the function if it does not match the key
*/
var _export = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global$1;
  } else if (STATIC) {
    target = global$1[TARGET] || defineGlobalProperty(TARGET, {});
  } else {
    target = global$1[TARGET] && global$1[TARGET].prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.dontCallGetSet) {
      descriptor = getOwnPropertyDescriptor(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty == typeof targetProperty) continue;
      copyConstructorProperties(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty(sourceProperty, 'sham', true);
    }
    defineBuiltIn(target, key, sourceProperty, options);
  }
};

var internalObjectKeys = objectKeysInternal;
var enumBugKeys = enumBugKeys$2;

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
// eslint-disable-next-line es/no-object-keys -- safe
var objectKeys$1 = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys);
};

var DESCRIPTORS = descriptors;
var uncurryThis = functionUncurryThis;
var call = functionCall;
var fails = fails$9;
var objectKeys = objectKeys$1;
var getOwnPropertySymbolsModule = objectGetOwnPropertySymbols;
var propertyIsEnumerableModule = objectPropertyIsEnumerable;
var toObject = toObject$2;
var IndexedObject = indexedObject;

// eslint-disable-next-line es/no-object-assign -- safe
var $assign = Object.assign;
// eslint-disable-next-line es/no-object-defineproperty -- required for testing
var defineProperty = Object.defineProperty;
var concat = uncurryThis([].concat);

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
var objectAssign = !$assign || fails(function () {
  // should have correct order of operations (Edge bug)
  if (DESCRIPTORS && $assign({ b: 1 }, $assign(defineProperty({}, 'a', {
    enumerable: true,
    get: function () {
      defineProperty(this, 'b', {
        value: 3,
        enumerable: false
      });
    }
  }), { b: 2 })).b !== 1) return true;
  // should work with symbols and should have deterministic property order (V8 bug)
  var A = {};
  var B = {};
  // eslint-disable-next-line es/no-symbol -- safe
  var symbol = Symbol('assign detection');
  var alphabet = 'abcdefghijklmnopqrst';
  A[symbol] = 7;
  alphabet.split('').forEach(function (chr) { B[chr] = chr; });
  return $assign({}, A)[symbol] !== 7 || objectKeys($assign({}, B)).join('') !== alphabet;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars -- required for `.length`
  var T = toObject(target);
  var argumentsLength = arguments.length;
  var index = 1;
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  var propertyIsEnumerable = propertyIsEnumerableModule.f;
  while (argumentsLength > index) {
    var S = IndexedObject(arguments[index++]);
    var keys = getOwnPropertySymbols ? concat(objectKeys(S), getOwnPropertySymbols(S)) : objectKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS || call(propertyIsEnumerable, S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;

var $ = _export;
var assign = objectAssign;

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
// eslint-disable-next-line es/no-object-assign -- required for testing
$({ target: 'Object', stat: true, arity: 2, forced: Object.assign !== assign }, {
  assign: assign
});

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
    var e = new Error(message);
    return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
};

const callOut = ({
  colors,
  floats
}) => (0,styled_components__WEBPACK_IMPORTED_MODULE_4__.css)(["height:", ";padding:0rem ", ";gap:", ";border-radius:", ";background:", ";color:", ";&:hover{color:", ";background:", ";}&:focus-visible{outline:none;color:", ";background:", ";", ";}&:active{color:", ";background:", ";}&:disabled{color:", ";background:", ";}"], floats['button-call-out-scale-m-l-container-height'], floats['button-call-out-container-padding-left-right'], floats['button-primary-scale-m-l-icon-margin-right'], floats['button-call-out-container-corner-radius-all-round'], colors['button-call-out-container-colour'], colors['button-call-out-lable-text-colour'], colors['button-call-out-lable-text-colour'], colors['button-call-out-hovered-container-colour'], colors['button-call-out-lable-text-colour'], colors['button-call-out-focused-container-colour'], (0,_mtnkente_paragon_foundation__WEBPACK_IMPORTED_MODULE_2__.boxShadow)(colors, floats), colors['button-call-out-pressed-label-text-colour'], colors['button-call-out-pressed-container-colour'], colors['button-call-out-disabled-label-text-colour'], colors['button-call-out-disabled-container-colour']);

const primary = ({
  colors,
  floats
}) => (0,styled_components__WEBPACK_IMPORTED_MODULE_4__.css)(["height:", ";padding:0rem ", ";gap:", ";border-radius:", ";background:", ";color:", ";&:hover{color:var(--button-primary-label-text-colour,#000);background:", ";}&:focus-visible{outline:none;", ";}&:active{color:", ";background:", ";}&:disabled{color:", ";background:", ";}"], floats['button-primary-scale-m-l-container-height'], floats['button-primary-container-padding-left-right'], floats['button-primary-scale-m-l-icon-margin-right'], floats['button-primary-container-corner-radius-all-round'], colors['button-primary-container-colour'], colors['button-primary-label-text-colour'], colors['button-primary-hovered-container-colour'], (0,_mtnkente_paragon_foundation__WEBPACK_IMPORTED_MODULE_2__.boxShadow)(colors, floats), colors['button-primary-pressed-label-text-colour'], colors['button-primary-pressed-container-colour'], colors['button-primary-disabled-label-text-colour'], colors['button-primary-disabled-container-colour']);

const secondary = ({
  colors,
  floats
}) => (0,styled_components__WEBPACK_IMPORTED_MODULE_4__.css)(["background-color:transparent;height:", ";padding:0rem ", ";gap:", ";border-radius:", ";border:", " solid ", ";color:", ";&:hover{color:", ";border:", " solid ", ";background:", ";}&:focus-visible{border:none;outline:none;color:", ";background-color:", ";", ";}&:active{color:", ";border:", " solid ", ";background:", ";}&:disabled{background-color:transparent;color:", ";border:", " solid ", ";}"], floats['button-secondary-scale-m-l-container-height'], floats['button-secondary-container-padding-left-right'], floats['button-primary-scale-m-l-icon-margin-right'], floats['button-secondary-corner-radius-all-round'], floats['button-secondary-container-border'], colors['button-secondary-container-border-colour'], colors['button-secondary-label-text-colour'], colors['button-secondary-hovered-label-text-colour'], floats['button-secondary-container-border'], colors['button-secondary-hovered-container-border-colour'], colors['button-secondary-hovered-container-colour'], colors['button-secondary-focused-label-text-colour'], colors['button-secondary-focused-container-colour'], (0,_mtnkente_paragon_foundation__WEBPACK_IMPORTED_MODULE_2__.boxShadow)(colors, floats), colors['button-secondary-pressed-label-text-colour'], floats['button-secondary-container-border'], colors['button-secondary-pressed-container-border-colour'], colors['button-secondary-pressed-container-colour'], colors['button-secondary-disabled-label-text-colour'], floats['button-secondary-container-border'], colors['button-secondary-disabled-container-border-colour']);

const StyledButton = /*#__PURE__*/styled_components__WEBPACK_IMPORTED_MODULE_4__["default"].button.withConfig({
  displayName: "StandardButtonstyles__StyledButton",
  componentId: "sc-pezxl0-0"
})(["display:inline-flex;justify-content:center;align-items:center;flex-shrink:0;border:none;cursor:pointer;", ";", ";", ""], ({
  theme
}) => theme.typography['label-small-semibold-title-case'], ({
  $fullWidth
}) => $fullWidth && 'width: 100%;', ({
  theme,
  $variant
}) => ({
  primary: primary(theme),
  secondary: secondary(theme),
  'call-out': callOut(theme)
})[$variant]);
const StyledButtonIcon = /*#__PURE__*/styled_components__WEBPACK_IMPORTED_MODULE_4__["default"].div.withConfig({
  displayName: "StandardButtonstyles__StyledButtonIcon",
  componentId: "sc-pezxl0-1"
})(["@media (min-width:0) and (max-width:904px){width:1rem;height:1rem;}@media (min-width:904px) and (max-width:1919px){width:1.5rem;height:1.5rem;}@media (min-width:1920px){width:2rem;height:2rem;}& *{width:100%;height:100%;}"]);

const StandardButton = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((props, ref) => {
  var _a;
  const {
      label,
      icon
    } = props,
    rest = __rest(props, ["label", "icon"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(StyledButton, Object.assign({}, rest, {
    "aria-label": (_a = props['aria-label']) !== null && _a !== void 0 ? _a : `${label} Button`,
    ref: ref,
    label: label,
    children: [icon && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(StyledButtonIcon, {
      children: [" ", icon, " "]
    }), label]
  }));
});
// Note: This component does not support children. The content of the button is determined by the $label prop.
StandardButton.displayName = 'Button';

const text = ({
  colors,
  floats
}) => (0,styled_components__WEBPACK_IMPORTED_MODULE_4__.css)(["width:fit-content;display:inline-flex;height:", ";padding:0rem ", ";justify-content:center;align-items:center;gap:", ";flex-shrink:0;border-radius:", ";color:", ";border:2px solid rgba(0,0,0,0);&:hover{color:", ";border-bottom:2px solid ", ";}&:focus-visible{outline:none;border-radius:", ";background:", ";color:", ";box-shadow:", ";}&:active{color:", ";border-radius:", ";border-bottom:2px solid ", ";}&:disabled{color:", ";pointer-events:none;}"], floats['button-text-scale-m-l-container-height'], floats['button-secondary-container-padding-left-right'], floats['button-text-scale-m-l-icon-margin-right'], floats['button-text-corner-radius-none'], colors['button-text-label-text-colour'], colors['button-text-hovered-label-text-colour'], colors['button-text-hovered-container-border-colour'], floats['button-text-corner-radius-none'], colors['container-bg-colour-full'], colors['button-text-focused-label-text-colour'], (0,_mtnkente_paragon_foundation__WEBPACK_IMPORTED_MODULE_2__.boxShadow)(colors, floats), colors['button-text-pressed-label-text-colour'], floats['button-text-corner-radius-none'], colors['button-text-pressed-container-border-colour'], colors['button-text-disabled-label-text-colour']);
const icon = ({
  floats
}) => (0,styled_components__WEBPACK_IMPORTED_MODULE_4__.css)(["width:", ";height:", ";flex-shrink:0;"], floats['button-primary-scale-m-l-icon'], floats['button-primary-scale-m-l-icon']);

const Base = /*#__PURE__*/styled_components__WEBPACK_IMPORTED_MODULE_4__["default"].button.withConfig({
  displayName: "TextButton__Base",
  componentId: "sc-1n88mo1-0"
})(["background:none;border:none;", " ", ""], ({
  theme
}) => theme.typography['label-small-semibold-title-case'], ({
  theme
}) => text(theme));
const Icon = /*#__PURE__*/(0,styled_components__WEBPACK_IMPORTED_MODULE_4__["default"])(_mtnkente_paragon_icons__WEBPACK_IMPORTED_MODULE_3__.Placeholder).withConfig({
  displayName: "TextButton__Icon",
  componentId: "sc-1n88mo1-1"
})(["", ""], ({
  theme
}) => icon(theme));
const TextButton = props => {
  var _a;
  const {
      children
    } = props,
    rest = __rest(props, ["children"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Base, Object.assign({}, rest, {
    "aria-label": (_a = props['aria-label']) !== null && _a !== void 0 ? _a : 'Text Button',
    children: [props.showIcon && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Icon, {}), children]
  }));
};




/***/ }),

/***/ "./node_modules/@mtnkente/paragon-foundation/dist/index.esm.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@mtnkente/paragon-foundation/dist/index.esm.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Col: () => (/* binding */ Col),
/* harmony export */   Container: () => (/* binding */ Container),
/* harmony export */   MTNBrighterSans: () => (/* binding */ MTNBrighterSans),
/* harmony export */   Platform: () => (/* reexport safe */ _mtnkente_design_tokens__WEBPACK_IMPORTED_MODULE_2__.Platform),
/* harmony export */   Reset: () => (/* binding */ Reset),
/* harmony export */   Row: () => (/* binding */ Row),
/* harmony export */   Variant: () => (/* reexport safe */ _mtnkente_design_tokens__WEBPACK_IMPORTED_MODULE_2__.Variant),
/* harmony export */   WorkSans: () => (/* binding */ WorkSans),
/* harmony export */   boxShadow: () => (/* binding */ boxShadow),
/* harmony export */   breakpoints: () => (/* binding */ breakpoints),
/* harmony export */   colCount: () => (/* binding */ colCount),
/* harmony export */   columnGap: () => (/* binding */ columnGap),
/* harmony export */   containerPadding: () => (/* binding */ containerPadding),
/* harmony export */   designTokens: () => (/* binding */ designTokens),
/* harmony export */   useFontSize: () => (/* binding */ useFontSize)
/* harmony export */ });
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react?e43f");
/* harmony import */ var _mtnkente_design_tokens__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @mtnkente/design-tokens */ "./node_modules/@mtnkente/design-tokens/dist/index.cjs.js");






var MTNBrighterSansBold = "data:font/woff;base64,";

var MTNBrighterSansBoldItalic = "data:font/woff;base64,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";

var MTNBrighterSansExtraBold = "data:font/woff;base64,";

var MTNBrighterSansExtraBoldItalic = "data:font/woff;base64,";

var MTNBrighterSansExtraLight = "data:font/woff;base64,";

var MTNBrighterSansExtraLightItalic = "data:font/woff;base64,";

var MTNBrighterSansLight = "data:font/woff;base64,";

var MTNBrighterSansLightItalic = "data:font/woff;base64,";

var MTNBrighterSansMedium = "data:font/woff;base64,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";

var MTNBrighterSansMediumItalic = "data:font/woff;base64,";

var MTNBrighterSansRegular = "data:font/woff;base64,";

var MTNBrighterSansRegularItalic = "data:font/woff;base64,";

const MTNBrighterSans = /*#__PURE__*/(0,styled_components__WEBPACK_IMPORTED_MODULE_3__.createGlobalStyle)(["@font-face{font-family:'MTNBrighterSans-Bold';src:local('MTNBrighterSans-Bold'),url('", "') format('woff');}@font-face{font-family:'MTNBrighterSans-BoldItalic';src:local('MTNBrighterSans-BoldItalic'),url('", "') format('woff');}@font-face{font-family:'MTNBrighterSans-ExtraBold';src:local('MTNBrighterSans-ExtraBold'),url('", "') format('woff');}@font-face{font-family:'MTNBrighterSans-ExtraBoldItalic';src:local('MTNBrighterSans-ExtraBoldItalic'),url('", "') format('woff');}@font-face{font-family:'MTNBrighterSans-ExtraLight';src:local('MTNBrighterSans-ExtraLight'),url('", "') format('woff');}@font-face{font-family:'MTNBrighterSans-ExtraLightItalic';src:local('MTNBrighterSans-ExtraLightItalic'),url('", "') format('woff');}@font-face{font-family:'MTNBrighterSans-Light';src:local('MTNBrighterSans-Light'),url('", "') format('woff');}@font-face{font-family:'MTNBrighterSans-LightItalic';src:local('MTNBrighterSans-LightItalic'),url('", "') format('woff');}@font-face{font-family:'MTNBrighterSans-Medium';src:local('MTNBrighterSans-Medium'),url('", "') format('woff');}@font-face{font-family:'MTNBrighterSans-MediumItalic';src:local('MTNBrighterSans-MediumItalic'),url('", "') format('woff');}@font-face{font-family:'MTNBrighterSans-Regular';src:local('MTNBrighterSans-Regular'),url('", "') format('woff');}@font-face{font-family:'MTNBrighterSans-RegularItalic';src:local('MTNBrighterSans-RegularItalic'),url('", "') format('woff');}"], MTNBrighterSansBold, MTNBrighterSansBoldItalic, MTNBrighterSansExtraBold, MTNBrighterSansExtraBoldItalic, MTNBrighterSansExtraLight, MTNBrighterSansExtraLightItalic, MTNBrighterSansLight, MTNBrighterSansLightItalic, MTNBrighterSansMedium, MTNBrighterSansMediumItalic, MTNBrighterSansRegular, MTNBrighterSansRegularItalic);

var WorkSansBlack = "f42fe118dfa41dd2.ttf";

var WorkSansBlackItalic = "3a9f72a654c0d8a7.ttf";

var WorkSansBold = "29ee9214b2baa985.ttf";

var WorkSansBoldItalic = "425e8dfb20285870.ttf";

var WorkSansExtraBold = "26d9971e704d3a8e.ttf";

var WorkSansExtraBoldItalic = "1f46f1eee924b0ff.ttf";

var WorkSansExtraLight = "d7ca304d44396af5.ttf";

var WorkSansLightItalic = "a0915f739bd7fa83.ttf";

var WorkSansMedium = "b95c7b1d3a5130d2.ttf";

var WorkSansMediumItalic = "ba6fb126df89aa9f.ttf";

var WorkSansRegular = "943c38fa3c44e48a.ttf";

var WorkSansSemiBold = "d118e3c6fd7618bd.ttf";

var WorkSansSemiBoldItalic = "69d1a117c722fe36.ttf";

var WorkSansThin = "c2ff22018bcb4a78.ttf";

var WorkSansThinItalic = "a3f232e13320eed5.ttf";

const WorkSans = /*#__PURE__*/(0,styled_components__WEBPACK_IMPORTED_MODULE_3__.createGlobalStyle)(["@font-face{font-family:'WorkSans-Black';src:local('WorkSans-Black'),url('", "') format('truetype');}@font-face{font-family:'WorkSans-BlackItalic';src:local('WorkSans-BlackItalic'),url('", "') format('truetype');}@font-face{font-family:'WorkSans-Regular';src:local('WorkSans-Regular'),url('", "') format('truetype');}@font-face{font-family:'WorkSans-SemiBold';src:local('WorkSans-SemiBold'),url('", "') format('truetype');}@font-face{font-family:'WorkSans-Bold';src:local('WorkSans-Bold'),url('", "') format('truetype');}@font-face{font-family:'WorkSans-BoldItalic';src:local('WorkSans-BoldItalic'),url('", "') format('truetype');}@font-face{font-family:'WorkSans-ExtraBold';src:local('WorkSans-ExtraBold'),url('", "') format('truetype');}@font-face{font-family:'WorkSans-ExtraBoldItalic';src:local('WorkSans-ExtraBoldItalic'),url('", "') format('truetype');}@font-face{font-family:'WorkSans-ExtraLight';src:local('WorkSans-ExtraLight'),url('", "') format('truetype');}@font-face{font-family:'WorkSans-LightItalic';src:local('WorkSans-LightItalic'),url('", "') format('truetype');}@font-face{font-family:'WorkSans-Medium';src:local('WorkSans-Medium'),url('", "') format('truetype');}@font-face{font-family:'WorkSans-MediumItalic';src:local('WorkSans-MediumItalic'),url('", "') format('truetype');}@font-face{font-family:'WorkSans-SemiBoldItalic';src:local('WorkSans-SemiBoldItalic'),url('", "') format('truetype');}@font-face{font-family:'WorkSans-Thin';src:local('WorkSans-Thin'),url('", "') format('truetype');}@font-face{font-family:'WorkSans-ThinItalic';src:local('WorkSans-ThinItalic'),url('", "') format('truetype');}"], WorkSansBlack, WorkSansBlackItalic, WorkSansRegular, WorkSansSemiBold, WorkSansBold, WorkSansBoldItalic, WorkSansExtraBold, WorkSansExtraBoldItalic, WorkSansExtraLight, WorkSansLightItalic, WorkSansMedium, WorkSansMediumItalic, WorkSansSemiBoldItalic, WorkSansThin, WorkSansThinItalic);

const boxShadow = (colors, floats) => (0,styled_components__WEBPACK_IMPORTED_MODULE_3__.css)(["box-shadow:0px 0px 0px ", " ", ",inset 0px 0px 0px ", " ", ";"], floats['accessible-focus-border-container-border'], colors['accessible-focus-border-container-border-colour'], floats['accessible-focus-border-container-outer-border'], colors['accessible-focus-border-container-outer-shadow-colour']);

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

var check = function (it) {
  return it && it.Math === Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global$a =
  // eslint-disable-next-line es/no-global-this -- safe
  check(typeof globalThis == 'object' && globalThis) ||
  check(typeof window == 'object' && window) ||
  // eslint-disable-next-line no-restricted-globals -- safe
  check(typeof self == 'object' && self) ||
  check(typeof commonjsGlobal == 'object' && commonjsGlobal) ||
  check(typeof commonjsGlobal == 'object' && commonjsGlobal) ||
  // eslint-disable-next-line no-new-func -- fallback
  (function () { return this; })() || Function('return this')();

var objectGetOwnPropertyDescriptor = {};

var fails$9 = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};

var fails$8 = fails$9;

// Detect IE8's incomplete defineProperty implementation
var descriptors = !fails$8(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] !== 7;
});

var fails$7 = fails$9;

var functionBindNative = !fails$7(function () {
  // eslint-disable-next-line es/no-function-prototype-bind -- safe
  var test = (function () { /* empty */ }).bind();
  // eslint-disable-next-line no-prototype-builtins -- safe
  return typeof test != 'function' || test.hasOwnProperty('prototype');
});

var NATIVE_BIND$1 = functionBindNative;

var call$5 = Function.prototype.call;

var functionCall = NATIVE_BIND$1 ? call$5.bind(call$5) : function () {
  return call$5.apply(call$5, arguments);
};

var objectPropertyIsEnumerable = {};

var $propertyIsEnumerable = {}.propertyIsEnumerable;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor$1 = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor$1 && !$propertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
objectPropertyIsEnumerable.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor$1(this, V);
  return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable;

var createPropertyDescriptor$2 = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

var NATIVE_BIND = functionBindNative;

var FunctionPrototype$1 = Function.prototype;
var call$4 = FunctionPrototype$1.call;
var uncurryThisWithBind = NATIVE_BIND && FunctionPrototype$1.bind.bind(call$4, call$4);

var functionUncurryThis = NATIVE_BIND ? uncurryThisWithBind : function (fn) {
  return function () {
    return call$4.apply(fn, arguments);
  };
};

var uncurryThis$9 = functionUncurryThis;

var toString$1 = uncurryThis$9({}.toString);
var stringSlice$1 = uncurryThis$9(''.slice);

var classofRaw = function (it) {
  return stringSlice$1(toString$1(it), 8, -1);
};

var uncurryThis$8 = functionUncurryThis;
var fails$6 = fails$9;
var classof = classofRaw;

var $Object$2 = Object;
var split = uncurryThis$8(''.split);

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var indexedObject = fails$6(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins -- safe
  return !$Object$2('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof(it) === 'String' ? split(it, '') : $Object$2(it);
} : $Object$2;

// we can't use just `it == null` since of `document.all` special case
// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec
var isNullOrUndefined$2 = function (it) {
  return it === null || it === undefined;
};

var isNullOrUndefined$1 = isNullOrUndefined$2;

var $TypeError$5 = TypeError;

// `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible
var requireObjectCoercible$2 = function (it) {
  if (isNullOrUndefined$1(it)) throw new $TypeError$5("Can't call method on " + it);
  return it;
};

// toObject with fallback for non-array-like ES3 strings
var IndexedObject$1 = indexedObject;
var requireObjectCoercible$1 = requireObjectCoercible$2;

var toIndexedObject$3 = function (it) {
  return IndexedObject$1(requireObjectCoercible$1(it));
};

// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot
var documentAll = typeof document == 'object' && document.all;

// `IsCallable` abstract operation
// https://tc39.es/ecma262/#sec-iscallable
// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing
var isCallable$a = typeof documentAll == 'undefined' && documentAll !== undefined ? function (argument) {
  return typeof argument == 'function' || argument === documentAll;
} : function (argument) {
  return typeof argument == 'function';
};

var isCallable$9 = isCallable$a;

var isObject$5 = function (it) {
  return typeof it == 'object' ? it !== null : isCallable$9(it);
};

var global$9 = global$a;
var isCallable$8 = isCallable$a;

var aFunction = function (argument) {
  return isCallable$8(argument) ? argument : undefined;
};

var getBuiltIn$2 = function (namespace, method) {
  return arguments.length < 2 ? aFunction(global$9[namespace]) : global$9[namespace] && global$9[namespace][method];
};

var uncurryThis$7 = functionUncurryThis;

var objectIsPrototypeOf = uncurryThis$7({}.isPrototypeOf);

var engineUserAgent = typeof navigator != 'undefined' && String(navigator.userAgent) || '';

var global$8 = global$a;
var userAgent = engineUserAgent;

var process = global$8.process;
var Deno = global$8.Deno;
var versions = process && process.versions || Deno && Deno.version;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.');
  // in old Chrome, versions of V8 isn't V8 = Chrome / 10
  // but their correct versions are not interesting for us
  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
}

// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
// so check `userAgent` even if `.v8` exists, but 0
if (!version && userAgent) {
  match = userAgent.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = userAgent.match(/Chrome\/(\d+)/);
    if (match) version = +match[1];
  }
}

var engineV8Version = version;

/* eslint-disable es/no-symbol -- required for testing */
var V8_VERSION = engineV8Version;
var fails$5 = fails$9;
var global$7 = global$a;

var $String$3 = global$7.String;

// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
var symbolConstructorDetection = !!Object.getOwnPropertySymbols && !fails$5(function () {
  var symbol = Symbol('symbol detection');
  // Chrome 38 Symbol has incorrect toString conversion
  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances
  // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,
  // of course, fail.
  return !$String$3(symbol) || !(Object(symbol) instanceof Symbol) ||
    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    !Symbol.sham && V8_VERSION && V8_VERSION < 41;
});

/* eslint-disable es/no-symbol -- required for testing */
var NATIVE_SYMBOL$1 = symbolConstructorDetection;

var useSymbolAsUid = NATIVE_SYMBOL$1
  && !Symbol.sham
  && typeof Symbol.iterator == 'symbol';

var getBuiltIn$1 = getBuiltIn$2;
var isCallable$7 = isCallable$a;
var isPrototypeOf = objectIsPrototypeOf;
var USE_SYMBOL_AS_UID$1 = useSymbolAsUid;

var $Object$1 = Object;

var isSymbol$2 = USE_SYMBOL_AS_UID$1 ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  var $Symbol = getBuiltIn$1('Symbol');
  return isCallable$7($Symbol) && isPrototypeOf($Symbol.prototype, $Object$1(it));
};

var $String$2 = String;

var tryToString$1 = function (argument) {
  try {
    return $String$2(argument);
  } catch (error) {
    return 'Object';
  }
};

var isCallable$6 = isCallable$a;
var tryToString = tryToString$1;

var $TypeError$4 = TypeError;

// `Assert: IsCallable(argument) is true`
var aCallable$1 = function (argument) {
  if (isCallable$6(argument)) return argument;
  throw new $TypeError$4(tryToString(argument) + ' is not a function');
};

var aCallable = aCallable$1;
var isNullOrUndefined = isNullOrUndefined$2;

// `GetMethod` abstract operation
// https://tc39.es/ecma262/#sec-getmethod
var getMethod$1 = function (V, P) {
  var func = V[P];
  return isNullOrUndefined(func) ? undefined : aCallable(func);
};

var call$3 = functionCall;
var isCallable$5 = isCallable$a;
var isObject$4 = isObject$5;

var $TypeError$3 = TypeError;

// `OrdinaryToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-ordinarytoprimitive
var ordinaryToPrimitive$1 = function (input, pref) {
  var fn, val;
  if (pref === 'string' && isCallable$5(fn = input.toString) && !isObject$4(val = call$3(fn, input))) return val;
  if (isCallable$5(fn = input.valueOf) && !isObject$4(val = call$3(fn, input))) return val;
  if (pref !== 'string' && isCallable$5(fn = input.toString) && !isObject$4(val = call$3(fn, input))) return val;
  throw new $TypeError$3("Can't convert object to primitive value");
};

var sharedStore = {exports: {}};

var global$6 = global$a;

// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty$2 = Object.defineProperty;

var defineGlobalProperty$3 = function (key, value) {
  try {
    defineProperty$2(global$6, key, { value: value, configurable: true, writable: true });
  } catch (error) {
    global$6[key] = value;
  } return value;
};

var globalThis$1 = global$a;
var defineGlobalProperty$2 = defineGlobalProperty$3;

var SHARED = '__core-js_shared__';
var store$3 = sharedStore.exports = globalThis$1[SHARED] || defineGlobalProperty$2(SHARED, {});

(store$3.versions || (store$3.versions = [])).push({
  version: '3.36.0',
  mode: 'global',
  copyright: '© 2014-2024 Denis Pushkarev (zloirock.ru)',
  license: 'https://github.com/zloirock/core-js/blob/v3.36.0/LICENSE',
  source: 'https://github.com/zloirock/core-js'
});

var store$2 = sharedStore.exports;

var shared$3 = function (key, value) {
  return store$2[key] || (store$2[key] = value || {});
};

var requireObjectCoercible = requireObjectCoercible$2;

var $Object = Object;

// `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject
var toObject$2 = function (argument) {
  return $Object(requireObjectCoercible(argument));
};

var uncurryThis$6 = functionUncurryThis;
var toObject$1 = toObject$2;

var hasOwnProperty = uncurryThis$6({}.hasOwnProperty);

// `HasOwnProperty` abstract operation
// https://tc39.es/ecma262/#sec-hasownproperty
// eslint-disable-next-line es/no-object-hasown -- safe
var hasOwnProperty_1 = Object.hasOwn || function hasOwn(it, key) {
  return hasOwnProperty(toObject$1(it), key);
};

var uncurryThis$5 = functionUncurryThis;

var id = 0;
var postfix = Math.random();
var toString = uncurryThis$5(1.0.toString);

var uid$2 = function (key) {
  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);
};

var global$5 = global$a;
var shared$2 = shared$3;
var hasOwn$6 = hasOwnProperty_1;
var uid$1 = uid$2;
var NATIVE_SYMBOL = symbolConstructorDetection;
var USE_SYMBOL_AS_UID = useSymbolAsUid;

var Symbol$1 = global$5.Symbol;
var WellKnownSymbolsStore = shared$2('wks');
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol$1['for'] || Symbol$1 : Symbol$1 && Symbol$1.withoutSetter || uid$1;

var wellKnownSymbol$1 = function (name) {
  if (!hasOwn$6(WellKnownSymbolsStore, name)) {
    WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn$6(Symbol$1, name)
      ? Symbol$1[name]
      : createWellKnownSymbol('Symbol.' + name);
  } return WellKnownSymbolsStore[name];
};

var call$2 = functionCall;
var isObject$3 = isObject$5;
var isSymbol$1 = isSymbol$2;
var getMethod = getMethod$1;
var ordinaryToPrimitive = ordinaryToPrimitive$1;
var wellKnownSymbol = wellKnownSymbol$1;

var $TypeError$2 = TypeError;
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');

// `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive
var toPrimitive$1 = function (input, pref) {
  if (!isObject$3(input) || isSymbol$1(input)) return input;
  var exoticToPrim = getMethod(input, TO_PRIMITIVE);
  var result;
  if (exoticToPrim) {
    if (pref === undefined) pref = 'default';
    result = call$2(exoticToPrim, input, pref);
    if (!isObject$3(result) || isSymbol$1(result)) return result;
    throw new $TypeError$2("Can't convert object to primitive value");
  }
  if (pref === undefined) pref = 'number';
  return ordinaryToPrimitive(input, pref);
};

var toPrimitive = toPrimitive$1;
var isSymbol = isSymbol$2;

// `ToPropertyKey` abstract operation
// https://tc39.es/ecma262/#sec-topropertykey
var toPropertyKey$2 = function (argument) {
  var key = toPrimitive(argument, 'string');
  return isSymbol(key) ? key : key + '';
};

var global$4 = global$a;
var isObject$2 = isObject$5;

var document$1 = global$4.document;
// typeof document.createElement is 'object' in old IE
var EXISTS$1 = isObject$2(document$1) && isObject$2(document$1.createElement);

var documentCreateElement = function (it) {
  return EXISTS$1 ? document$1.createElement(it) : {};
};

var DESCRIPTORS$7 = descriptors;
var fails$4 = fails$9;
var createElement = documentCreateElement;

// Thanks to IE8 for its funny defineProperty
var ie8DomDefine = !DESCRIPTORS$7 && !fails$4(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(createElement('div'), 'a', {
    get: function () { return 7; }
  }).a !== 7;
});

var DESCRIPTORS$6 = descriptors;
var call$1 = functionCall;
var propertyIsEnumerableModule$1 = objectPropertyIsEnumerable;
var createPropertyDescriptor$1 = createPropertyDescriptor$2;
var toIndexedObject$2 = toIndexedObject$3;
var toPropertyKey$1 = toPropertyKey$2;
var hasOwn$5 = hasOwnProperty_1;
var IE8_DOM_DEFINE$1 = ie8DomDefine;

// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor$1 = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
objectGetOwnPropertyDescriptor.f = DESCRIPTORS$6 ? $getOwnPropertyDescriptor$1 : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject$2(O);
  P = toPropertyKey$1(P);
  if (IE8_DOM_DEFINE$1) try {
    return $getOwnPropertyDescriptor$1(O, P);
  } catch (error) { /* empty */ }
  if (hasOwn$5(O, P)) return createPropertyDescriptor$1(!call$1(propertyIsEnumerableModule$1.f, O, P), O[P]);
};

var objectDefineProperty = {};

var DESCRIPTORS$5 = descriptors;
var fails$3 = fails$9;

// V8 ~ Chrome 36-
// https://bugs.chromium.org/p/v8/issues/detail?id=3334
var v8PrototypeDefineBug = DESCRIPTORS$5 && fails$3(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(function () { /* empty */ }, 'prototype', {
    value: 42,
    writable: false
  }).prototype !== 42;
});

var isObject$1 = isObject$5;

var $String$1 = String;
var $TypeError$1 = TypeError;

// `Assert: Type(argument) is Object`
var anObject$2 = function (argument) {
  if (isObject$1(argument)) return argument;
  throw new $TypeError$1($String$1(argument) + ' is not an object');
};

var DESCRIPTORS$4 = descriptors;
var IE8_DOM_DEFINE = ie8DomDefine;
var V8_PROTOTYPE_DEFINE_BUG = v8PrototypeDefineBug;
var anObject$1 = anObject$2;
var toPropertyKey = toPropertyKey$2;

var $TypeError = TypeError;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var $defineProperty = Object.defineProperty;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var ENUMERABLE = 'enumerable';
var CONFIGURABLE$1 = 'configurable';
var WRITABLE = 'writable';

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
objectDefineProperty.f = DESCRIPTORS$4 ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {
  anObject$1(O);
  P = toPropertyKey(P);
  anObject$1(Attributes);
  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
    var current = $getOwnPropertyDescriptor(O, P);
    if (current && current[WRITABLE]) {
      O[P] = Attributes.value;
      Attributes = {
        configurable: CONFIGURABLE$1 in Attributes ? Attributes[CONFIGURABLE$1] : current[CONFIGURABLE$1],
        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
        writable: false
      };
    }
  } return $defineProperty(O, P, Attributes);
} : $defineProperty : function defineProperty(O, P, Attributes) {
  anObject$1(O);
  P = toPropertyKey(P);
  anObject$1(Attributes);
  if (IE8_DOM_DEFINE) try {
    return $defineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw new $TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

var DESCRIPTORS$3 = descriptors;
var definePropertyModule$2 = objectDefineProperty;
var createPropertyDescriptor = createPropertyDescriptor$2;

var createNonEnumerableProperty$2 = DESCRIPTORS$3 ? function (object, key, value) {
  return definePropertyModule$2.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

var makeBuiltIn$2 = {exports: {}};

var DESCRIPTORS$2 = descriptors;
var hasOwn$4 = hasOwnProperty_1;

var FunctionPrototype = Function.prototype;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getDescriptor = DESCRIPTORS$2 && Object.getOwnPropertyDescriptor;

var EXISTS = hasOwn$4(FunctionPrototype, 'name');
// additional protection from minified / mangled / dropped function names
var PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';
var CONFIGURABLE = EXISTS && (!DESCRIPTORS$2 || (DESCRIPTORS$2 && getDescriptor(FunctionPrototype, 'name').configurable));

var functionName = {
  EXISTS: EXISTS,
  PROPER: PROPER,
  CONFIGURABLE: CONFIGURABLE
};

var uncurryThis$4 = functionUncurryThis;
var isCallable$4 = isCallable$a;
var store$1 = sharedStore.exports;

var functionToString = uncurryThis$4(Function.toString);

// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper
if (!isCallable$4(store$1.inspectSource)) {
  store$1.inspectSource = function (it) {
    return functionToString(it);
  };
}

var inspectSource$1 = store$1.inspectSource;

var global$3 = global$a;
var isCallable$3 = isCallable$a;

var WeakMap$1 = global$3.WeakMap;

var weakMapBasicDetection = isCallable$3(WeakMap$1) && /native code/.test(String(WeakMap$1));

var shared$1 = shared$3;
var uid = uid$2;

var keys = shared$1('keys');

var sharedKey$1 = function (key) {
  return keys[key] || (keys[key] = uid(key));
};

var hiddenKeys$3 = {};

var NATIVE_WEAK_MAP = weakMapBasicDetection;
var global$2 = global$a;
var isObject = isObject$5;
var createNonEnumerableProperty$1 = createNonEnumerableProperty$2;
var hasOwn$3 = hasOwnProperty_1;
var shared = sharedStore.exports;
var sharedKey = sharedKey$1;
var hiddenKeys$2 = hiddenKeys$3;

var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
var TypeError$1 = global$2.TypeError;
var WeakMap = global$2.WeakMap;
var set, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw new TypeError$1('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (NATIVE_WEAK_MAP || shared.state) {
  var store = shared.state || (shared.state = new WeakMap());
  /* eslint-disable no-self-assign -- prototype methods protection */
  store.get = store.get;
  store.has = store.has;
  store.set = store.set;
  /* eslint-enable no-self-assign -- prototype methods protection */
  set = function (it, metadata) {
    if (store.has(it)) throw new TypeError$1(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    store.set(it, metadata);
    return metadata;
  };
  get = function (it) {
    return store.get(it) || {};
  };
  has = function (it) {
    return store.has(it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys$2[STATE] = true;
  set = function (it, metadata) {
    if (hasOwn$3(it, STATE)) throw new TypeError$1(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    createNonEnumerableProperty$1(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return hasOwn$3(it, STATE) ? it[STATE] : {};
  };
  has = function (it) {
    return hasOwn$3(it, STATE);
  };
}

var internalState = {
  set: set,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};

var uncurryThis$3 = functionUncurryThis;
var fails$2 = fails$9;
var isCallable$2 = isCallable$a;
var hasOwn$2 = hasOwnProperty_1;
var DESCRIPTORS$1 = descriptors;
var CONFIGURABLE_FUNCTION_NAME = functionName.CONFIGURABLE;
var inspectSource = inspectSource$1;
var InternalStateModule = internalState;

var enforceInternalState = InternalStateModule.enforce;
var getInternalState = InternalStateModule.get;
var $String = String;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty$1 = Object.defineProperty;
var stringSlice = uncurryThis$3(''.slice);
var replace = uncurryThis$3(''.replace);
var join = uncurryThis$3([].join);

var CONFIGURABLE_LENGTH = DESCRIPTORS$1 && !fails$2(function () {
  return defineProperty$1(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;
});

var TEMPLATE = String(String).split('String');

var makeBuiltIn$1 = makeBuiltIn$2.exports = function (value, name, options) {
  if (stringSlice($String(name), 0, 7) === 'Symbol(') {
    name = '[' + replace($String(name), /^Symbol\(([^)]*)\).*$/, '$1') + ']';
  }
  if (options && options.getter) name = 'get ' + name;
  if (options && options.setter) name = 'set ' + name;
  if (!hasOwn$2(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {
    if (DESCRIPTORS$1) defineProperty$1(value, 'name', { value: name, configurable: true });
    else value.name = name;
  }
  if (CONFIGURABLE_LENGTH && options && hasOwn$2(options, 'arity') && value.length !== options.arity) {
    defineProperty$1(value, 'length', { value: options.arity });
  }
  try {
    if (options && hasOwn$2(options, 'constructor') && options.constructor) {
      if (DESCRIPTORS$1) defineProperty$1(value, 'prototype', { writable: false });
    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable
    } else if (value.prototype) value.prototype = undefined;
  } catch (error) { /* empty */ }
  var state = enforceInternalState(value);
  if (!hasOwn$2(state, 'source')) {
    state.source = join(TEMPLATE, typeof name == 'string' ? name : '');
  } return value;
};

// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
// eslint-disable-next-line no-extend-native -- required
Function.prototype.toString = makeBuiltIn$1(function toString() {
  return isCallable$2(this) && getInternalState(this).source || inspectSource(this);
}, 'toString');

var isCallable$1 = isCallable$a;
var definePropertyModule$1 = objectDefineProperty;
var makeBuiltIn = makeBuiltIn$2.exports;
var defineGlobalProperty$1 = defineGlobalProperty$3;

var defineBuiltIn$1 = function (O, key, value, options) {
  if (!options) options = {};
  var simple = options.enumerable;
  var name = options.name !== undefined ? options.name : key;
  if (isCallable$1(value)) makeBuiltIn(value, name, options);
  if (options.global) {
    if (simple) O[key] = value;
    else defineGlobalProperty$1(key, value);
  } else {
    try {
      if (!options.unsafe) delete O[key];
      else if (O[key]) simple = true;
    } catch (error) { /* empty */ }
    if (simple) O[key] = value;
    else definePropertyModule$1.f(O, key, {
      value: value,
      enumerable: false,
      configurable: !options.nonConfigurable,
      writable: !options.nonWritable
    });
  } return O;
};

var objectGetOwnPropertyNames = {};

var ceil = Math.ceil;
var floor = Math.floor;

// `Math.trunc` method
// https://tc39.es/ecma262/#sec-math.trunc
// eslint-disable-next-line es/no-math-trunc -- safe
var mathTrunc = Math.trunc || function trunc(x) {
  var n = +x;
  return (n > 0 ? floor : ceil)(n);
};

var trunc = mathTrunc;

// `ToIntegerOrInfinity` abstract operation
// https://tc39.es/ecma262/#sec-tointegerorinfinity
var toIntegerOrInfinity$2 = function (argument) {
  var number = +argument;
  // eslint-disable-next-line no-self-compare -- NaN check
  return number !== number || number === 0 ? 0 : trunc(number);
};

var toIntegerOrInfinity$1 = toIntegerOrInfinity$2;

var max = Math.max;
var min$1 = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
var toAbsoluteIndex$1 = function (index, length) {
  var integer = toIntegerOrInfinity$1(index);
  return integer < 0 ? max(integer + length, 0) : min$1(integer, length);
};

var toIntegerOrInfinity = toIntegerOrInfinity$2;

var min = Math.min;

// `ToLength` abstract operation
// https://tc39.es/ecma262/#sec-tolength
var toLength$1 = function (argument) {
  var len = toIntegerOrInfinity(argument);
  return len > 0 ? min(len, 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};

var toLength = toLength$1;

// `LengthOfArrayLike` abstract operation
// https://tc39.es/ecma262/#sec-lengthofarraylike
var lengthOfArrayLike$1 = function (obj) {
  return toLength(obj.length);
};

var toIndexedObject$1 = toIndexedObject$3;
var toAbsoluteIndex = toAbsoluteIndex$1;
var lengthOfArrayLike = lengthOfArrayLike$1;

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject$1($this);
    var length = lengthOfArrayLike(O);
    if (length === 0) return !IS_INCLUDES && -1;
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare -- NaN check
    if (IS_INCLUDES && el !== el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare -- NaN check
      if (value !== value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

var arrayIncludes = {
  // `Array.prototype.includes` method
  // https://tc39.es/ecma262/#sec-array.prototype.includes
  includes: createMethod(true),
  // `Array.prototype.indexOf` method
  // https://tc39.es/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod(false)
};

var uncurryThis$2 = functionUncurryThis;
var hasOwn$1 = hasOwnProperty_1;
var toIndexedObject = toIndexedObject$3;
var indexOf = arrayIncludes.indexOf;
var hiddenKeys$1 = hiddenKeys$3;

var push = uncurryThis$2([].push);

var objectKeysInternal = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !hasOwn$1(hiddenKeys$1, key) && hasOwn$1(O, key) && push(result, key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (hasOwn$1(O, key = names[i++])) {
    ~indexOf(result, key) || push(result, key);
  }
  return result;
};

// IE8- don't enum bug keys
var enumBugKeys$2 = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];

var internalObjectKeys$1 = objectKeysInternal;
var enumBugKeys$1 = enumBugKeys$2;

var hiddenKeys = enumBugKeys$1.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
// eslint-disable-next-line es/no-object-getownpropertynames -- safe
objectGetOwnPropertyNames.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys$1(O, hiddenKeys);
};

var objectGetOwnPropertySymbols = {};

// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
objectGetOwnPropertySymbols.f = Object.getOwnPropertySymbols;

var getBuiltIn = getBuiltIn$2;
var uncurryThis$1 = functionUncurryThis;
var getOwnPropertyNamesModule = objectGetOwnPropertyNames;
var getOwnPropertySymbolsModule$1 = objectGetOwnPropertySymbols;
var anObject = anObject$2;

var concat$1 = uncurryThis$1([].concat);

// all object keys, includes non-enumerable and symbols
var ownKeys$1 = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule.f(anObject(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule$1.f;
  return getOwnPropertySymbols ? concat$1(keys, getOwnPropertySymbols(it)) : keys;
};

var hasOwn = hasOwnProperty_1;
var ownKeys = ownKeys$1;
var getOwnPropertyDescriptorModule = objectGetOwnPropertyDescriptor;
var definePropertyModule = objectDefineProperty;

var copyConstructorProperties$1 = function (target, source, exceptions) {
  var keys = ownKeys(source);
  var defineProperty = definePropertyModule.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {
      defineProperty(target, key, getOwnPropertyDescriptor(source, key));
    }
  }
};

var fails$1 = fails$9;
var isCallable = isCallable$a;

var replacement = /#|\.prototype\./;

var isForced$1 = function (feature, detection) {
  var value = data[normalize(feature)];
  return value === POLYFILL ? true
    : value === NATIVE ? false
    : isCallable(detection) ? fails$1(detection)
    : !!detection;
};

var normalize = isForced$1.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced$1.data = {};
var NATIVE = isForced$1.NATIVE = 'N';
var POLYFILL = isForced$1.POLYFILL = 'P';

var isForced_1 = isForced$1;

var global$1 = global$a;
var getOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;
var createNonEnumerableProperty = createNonEnumerableProperty$2;
var defineBuiltIn = defineBuiltIn$1;
var defineGlobalProperty = defineGlobalProperty$3;
var copyConstructorProperties = copyConstructorProperties$1;
var isForced = isForced_1;

/*
  options.target         - name of the target object
  options.global         - target is the global object
  options.stat           - export as static methods of target
  options.proto          - export as prototype methods of target
  options.real           - real prototype method for the `pure` version
  options.forced         - export even if the native feature is available
  options.bind           - bind methods to the target, required for the `pure` version
  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe         - use the simple assignment of property instead of delete + defineProperty
  options.sham           - add a flag to not completely full polyfills
  options.enumerable     - export as enumerable property
  options.dontCallGetSet - prevent calling a getter on target
  options.name           - the .name of the function if it does not match the key
*/
var _export = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global$1;
  } else if (STATIC) {
    target = global$1[TARGET] || defineGlobalProperty(TARGET, {});
  } else {
    target = global$1[TARGET] && global$1[TARGET].prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.dontCallGetSet) {
      descriptor = getOwnPropertyDescriptor(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty == typeof targetProperty) continue;
      copyConstructorProperties(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty(sourceProperty, 'sham', true);
    }
    defineBuiltIn(target, key, sourceProperty, options);
  }
};

var internalObjectKeys = objectKeysInternal;
var enumBugKeys = enumBugKeys$2;

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
// eslint-disable-next-line es/no-object-keys -- safe
var objectKeys$1 = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys);
};

var DESCRIPTORS = descriptors;
var uncurryThis = functionUncurryThis;
var call = functionCall;
var fails = fails$9;
var objectKeys = objectKeys$1;
var getOwnPropertySymbolsModule = objectGetOwnPropertySymbols;
var propertyIsEnumerableModule = objectPropertyIsEnumerable;
var toObject = toObject$2;
var IndexedObject = indexedObject;

// eslint-disable-next-line es/no-object-assign -- safe
var $assign = Object.assign;
// eslint-disable-next-line es/no-object-defineproperty -- required for testing
var defineProperty = Object.defineProperty;
var concat = uncurryThis([].concat);

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
var objectAssign = !$assign || fails(function () {
  // should have correct order of operations (Edge bug)
  if (DESCRIPTORS && $assign({ b: 1 }, $assign(defineProperty({}, 'a', {
    enumerable: true,
    get: function () {
      defineProperty(this, 'b', {
        value: 3,
        enumerable: false
      });
    }
  }), { b: 2 })).b !== 1) return true;
  // should work with symbols and should have deterministic property order (V8 bug)
  var A = {};
  var B = {};
  // eslint-disable-next-line es/no-symbol -- safe
  var symbol = Symbol('assign detection');
  var alphabet = 'abcdefghijklmnopqrst';
  A[symbol] = 7;
  alphabet.split('').forEach(function (chr) { B[chr] = chr; });
  return $assign({}, A)[symbol] !== 7 || objectKeys($assign({}, B)).join('') !== alphabet;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars -- required for `.length`
  var T = toObject(target);
  var argumentsLength = arguments.length;
  var index = 1;
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  var propertyIsEnumerable = propertyIsEnumerableModule.f;
  while (argumentsLength > index) {
    var S = IndexedObject(arguments[index++]);
    var keys = getOwnPropertySymbols ? concat(objectKeys(S), getOwnPropertySymbols(S)) : objectKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS || call(propertyIsEnumerable, S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;

var $ = _export;
var assign = objectAssign;

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
// eslint-disable-next-line es/no-object-assign -- required for testing
$({ target: 'Object', stat: true, arity: 2, forced: Object.assign !== assign }, {
  assign: assign
});

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
    var e = new Error(message);
    return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
};

const breakpoints = {
  $xs: 0,
  $s: 600,
  $m: 905,
  $ml: 1240,
  $l: 1400,
  $xl: 1920
};
const columnGap = 16;
const containerPadding = columnGap;
const colCount = 12;

const containerMedia = (breakpoints, isFullWidth) => {
  if (isFullWidth) {
    return;
  }
  const breakpointsMValues = Object.values(breakpoints);
  const media = breakpointsMValues.map((value, index) => {
    if (index === 0) {
      return;
    }
    return `
      @media (min-width: ${breakpointsMValues[index - 1]}px) and (max-width: ${value}px) {
        max-width: ${value - 40}px;
      }
    `;
  });
  return (0,styled_components__WEBPACK_IMPORTED_MODULE_3__.css)(["", ""], media.join(''));
};

const StyledContainer = /*#__PURE__*/styled_components__WEBPACK_IMPORTED_MODULE_3__["default"].div.withConfig({
  displayName: "Container__StyledContainer",
  componentId: "sc-1p6sq3x-0"
})(["padding-left:", "px;padding-right:", "px;margin-left:auto;margin-right:auto;width:100%;", ";", ""], containerPadding, containerPadding, ({
  $fullWidth
}) => $fullWidth ? 'max-width: 100%' : `max-width: ${breakpoints.$xl + 20}px`, ({
  $fullWidth
}) => containerMedia(breakpoints, $fullWidth));
const Container = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((props, ref) => {
  const {
      children
    } = props,
    rest = __rest(props, ["children"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledContainer, Object.assign({}, rest, {
    ref: ref,
    children: children
  }));
});

const StyledRow = /*#__PURE__*/styled_components__WEBPACK_IMPORTED_MODULE_3__["default"].div.withConfig({
  displayName: "Row__StyledRow",
  componentId: "sc-17a4spx-0"
})(["flex-direction:row;min-width:0;display:flex;flex-wrap:wrap;margin:", "px ", "px;"], columnGap / -2, columnGap / -2);
const Row = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((props, ref) => {
  const {
      children
    } = props,
    rest = __rest(props, ["children"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledRow, Object.assign({}, rest, {
    ref: ref,
    children: children
  }));
});

const colWidth = widths => {
  const widthsKeys = Object.keys(widths);
  const outputWidths = widthsKeys.map(item => {
    if (item === '$xs' && widths[item]) {
      return `width: calc(100% * ${widths[item]} / ${colCount});`;
    }
    if (widths[item]) {
      return `
        @media (min-width: ${breakpoints[item]}px) {
          width: calc(100%* ${widths[item]} / ${colCount});
        }
      `;
    }
    return;
  });
  return (0,styled_components__WEBPACK_IMPORTED_MODULE_3__.css)(["", ""], outputWidths.join(''));
};

const StyledCol = /*#__PURE__*/styled_components__WEBPACK_IMPORTED_MODULE_3__["default"].div.withConfig({
  displayName: "Col__StyledCol",
  componentId: "sc-155xl1i-0"
})(["flex-grow:0;min-width:0;flex-basis:auto;padding:", "px ", "px;", ""], columnGap / 2, columnGap / 2, ({
  $xs,
  $s,
  $m,
  $ml,
  $l,
  $xl
}) => colWidth({
  $xs,
  $s,
  $m,
  $ml,
  $l,
  $xl
}));
const Col = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((props, ref) => {
  const {
      children
    } = props,
    rest = __rest(props, ["children"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledCol, Object.assign({}, rest, {
    ref: ref,
    children: children
  }));
});

const Reset = /*#__PURE__*/(0,styled_components__WEBPACK_IMPORTED_MODULE_3__.createGlobalStyle)(["*,*::before,*::after{box-sizing:border-box;}body{margin:0;-webkit-text-size-adjust:100%;}abbr[title]{text-decoration:underline dotted;cursor:help;text-decoration-skip-ink:none;}address{margin-bottom:1rem;font-style:normal;line-height:inherit;}ol,ul{padding-left:2rem;}ol,ul,dl{margin-top:0;margin-bottom:1rem;}ol ol,ul ul,ol ul,ul ol{margin-bottom:0;}dd{margin-bottom:.5rem;margin-left:0;}blockquote{margin:0 0 1rem;}sub,sup{position:relative;line-height:0;vertical-align:baseline;}sub{bottom:-.25em;}sup{top:-.5em;}a:not([href]):not([class]){&,&:hover{color:inherit;text-decoration:none;}}pre{display:block;margin-top:0;margin-bottom:1rem;overflow:auto;code{color:inherit;word-break:normal;}}code{word-wrap:break-word;a > &{color:inherit;}}figure{margin:0 0 1rem;}img,svg{vertical-align:middle;}table{caption-side:bottom;border-collapse:collapse;}caption{text-align:left;}th{text-align:inherit;}thead,tbody,tfoot,tr,td,th{border-color:inherit;border-style:solid;border-width:0;}label{display:inline-block;}button{border-radius:0;}button:focus:not(:focus-visible){outline:0;}input,button,select,optgroup,textarea{margin:0;font-family:inherit;line-height:inherit;}button,select{text-transform:none;}[role=\"button\"]{cursor:pointer;}select{word-wrap:normal;&:disabled{opacity:1;}}[list]:not([type=\"date\"]):not([type=\"datetime-local\"]):not([type=\"month\"]):not([type=\"week\"]):not([type=\"time\"])::-webkit-calendar-picker-indicator{display:none !important;}button,[type=\"button\"],[type=\"reset\"],[type=\"submit\"]{-webkit-appearance:button;}::-moz-focus-inner{padding:0;border-style:none;}textarea{resize:vertical;}fieldset{min-width:0;padding:0;margin:0;border:0;}legend{float:left;width:100%;padding:0;line-height:inherit;+ *{clear:left;}}::-webkit-datetime-edit-fields-wrapper,::-webkit-datetime-edit-text,::-webkit-datetime-edit-minute,::-webkit-datetime-edit-hour-field,::-webkit-datetime-edit-day-field,::-webkit-datetime-edit-month-field,::-webkit-datetime-edit-year-field{padding:0;}::-webkit-inner-spin-button{height:auto;}[type=\"search\"]{-webkit-appearance:textfield;outline-offset:-2px;}::-webkit-search-decoration{-webkit-appearance:none;}::-webkit-color-swatch-wrapper{padding:0;}::file-selector-button{font:inherit;-webkit-appearance:button;}output{display:inline-block;}iframe{border:0;}summary{display:list-item;cursor:pointer;}progress{vertical-align:baseline;}[hidden]{display:none !important;}"]);

var styles = {"fontSize":"useFontSize-module_fontSize__JAtCC"};

const useFontSize = windowInnerWidth => {
  const handleWindowSizeChange = () => {
    if (window.innerWidth < (windowInnerWidth !== null && windowInnerWidth !== void 0 ? windowInnerWidth : 905)) {
      document.documentElement.classList.add(styles.fontSize);
    } else {
      document.documentElement.classList.remove(styles.fontSize);
    }
  };
  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
    handleWindowSizeChange();
    window.addEventListener('resize', handleWindowSizeChange);
    return () => {
      window.removeEventListener('resize', handleWindowSizeChange);
    };
  }, []);
};

const designTokens = platform => {
  switch (platform) {
    case _mtnkente_design_tokens__WEBPACK_IMPORTED_MODULE_2__.Platform.PLAY:
      return _mtnkente_design_tokens__WEBPACK_IMPORTED_MODULE_2__.allDesignTokens.play;
    case _mtnkente_design_tokens__WEBPACK_IMPORTED_MODULE_2__.Platform.MOMO:
      return _mtnkente_design_tokens__WEBPACK_IMPORTED_MODULE_2__.allDesignTokens.momo;
    case _mtnkente_design_tokens__WEBPACK_IMPORTED_MODULE_2__.Platform.CORE:
    default:
      return _mtnkente_design_tokens__WEBPACK_IMPORTED_MODULE_2__.allDesignTokens.core;
  }
};




/***/ }),

/***/ "./node_modules/@mtnkente/paragon-icons/dist/index.esm.js":
/*!****************************************************************!*\
  !*** ./node_modules/@mtnkente/paragon-icons/dist/index.esm.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Add: () => (/* binding */ SvgAdd),
/* harmony export */   AddApps: () => (/* binding */ SvgAddApps),
/* harmony export */   Airtime: () => (/* binding */ SvgAirtime),
/* harmony export */   Alert: () => (/* binding */ SvgAlert),
/* harmony export */   Analytics: () => (/* binding */ SvgAnalytics),
/* harmony export */   Anytime: () => (/* binding */ SvgAnytime),
/* harmony export */   ApnManagement: () => (/* binding */ SvgApnManagement),
/* harmony export */   Apps: () => (/* binding */ SvgApps),
/* harmony export */   Arrow: () => (/* binding */ SvgArrow),
/* harmony export */   Balances: () => (/* binding */ SvgBalances),
/* harmony export */   Basket: () => (/* binding */ SvgBasket),
/* harmony export */   Battery: () => (/* binding */ SvgBattery),
/* harmony export */   Bill: () => (/* binding */ SvgBill),
/* harmony export */   Biometrics: () => (/* binding */ SvgBiometrics),
/* harmony export */   Borrow: () => (/* binding */ SvgBorrow),
/* harmony export */   Bozzagigs: () => (/* binding */ SvgBozzagigs),
/* harmony export */   BozzagigsFilled: () => (/* binding */ SvgBozzagigsFilled),
/* harmony export */   Briefcase: () => (/* binding */ SvgBriefcase),
/* harmony export */   BrokenPhone: () => (/* binding */ SvgBrokenPhone),
/* harmony export */   BusinessSupport: () => (/* binding */ SvgBusinessSupport),
/* harmony export */   Calendar: () => (/* binding */ SvgCalendar),
/* harmony export */   Call: () => (/* binding */ SvgCall),
/* harmony export */   Camera: () => (/* binding */ SvgCamera),
/* harmony export */   CardCvv: () => (/* binding */ SvgCardCvv),
/* harmony export */   CardFront: () => (/* binding */ SvgCardFront),
/* harmony export */   ChargeBattery: () => (/* binding */ SvgChargeBattery),
/* harmony export */   Chat: () => (/* binding */ SvgChat),
/* harmony export */   Check: () => (/* binding */ SvgCheck),
/* harmony export */   ChevronDown: () => (/* binding */ SvgChevronDown),
/* harmony export */   ChevronLeft: () => (/* binding */ SvgChevronLeft),
/* harmony export */   ChevronRight: () => (/* binding */ SvgChevronRight),
/* harmony export */   ChevronUp: () => (/* binding */ SvgChevronUp),
/* harmony export */   ClearFilter: () => (/* binding */ SvgClearFilter),
/* harmony export */   ClearInput: () => (/* binding */ SvgClearInput),
/* harmony export */   Clock: () => (/* binding */ SvgClock),
/* harmony export */   Close: () => (/* binding */ SvgClose),
/* harmony export */   CloseWithCircle: () => (/* binding */ SvgCloseWithCircle),
/* harmony export */   Clothing: () => (/* binding */ SvgClothing),
/* harmony export */   Cloud: () => (/* binding */ SvgCloud),
/* harmony export */   Combo: () => (/* binding */ SvgCombo),
/* harmony export */   Consent: () => (/* binding */ SvgConsent),
/* harmony export */   ContactUs: () => (/* binding */ SvgContactUs),
/* harmony export */   Contract: () => (/* binding */ SvgContract),
/* harmony export */   CrossHair: () => (/* binding */ SvgCrossHair),
/* harmony export */   CustomerCare: () => (/* binding */ SvgCustomerCare),
/* harmony export */   Dark: () => (/* binding */ SvgDark),
/* harmony export */   Dashboard: () => (/* binding */ SvgDashboard),
/* harmony export */   Data: () => (/* binding */ SvgData),
/* harmony export */   DataBundles: () => (/* binding */ SvgDataBundles),
/* harmony export */   DebitOrder: () => (/* binding */ SvgDebitOrder),
/* harmony export */   Delivery: () => (/* binding */ SvgDelivery),
/* harmony export */   DeviceStorage: () => (/* binding */ SvgDeviceStorage),
/* harmony export */   Disability: () => (/* binding */ SvgDisability),
/* harmony export */   Discount: () => (/* binding */ SvgDiscount),
/* harmony export */   Docs: () => (/* binding */ SvgDocs),
/* harmony export */   Document: () => (/* binding */ SvgDocument),
/* harmony export */   DoubleArrowLeft: () => (/* binding */ SvgDoubleArrowLeft),
/* harmony export */   DoubleArrowRight: () => (/* binding */ SvgDoubleArrowRight),
/* harmony export */   Download: () => (/* binding */ SvgDownload),
/* harmony export */   Edit: () => (/* binding */ SvgEdit),
/* harmony export */   Email: () => (/* binding */ SvgEmail),
/* harmony export */   EnterpriseMobilityManagement: () => (/* binding */ SvgEnterpriseMobilityManagement),
/* harmony export */   Entertainment: () => (/* binding */ SvgEntertainment),
/* harmony export */   Exit: () => (/* binding */ SvgExit),
/* harmony export */   ExtraTime: () => (/* binding */ SvgExtraTime),
/* harmony export */   FaceId: () => (/* binding */ SvgFaceId),
/* harmony export */   Facebook: () => (/* binding */ SvgFacebook),
/* harmony export */   Fault: () => (/* binding */ SvgFault),
/* harmony export */   Favourites: () => (/* binding */ SvgFavourites),
/* harmony export */   FavouritesFilled: () => (/* binding */ SvgFavouritesFilled),
/* harmony export */   Feedback: () => (/* binding */ SvgFeedback),
/* harmony export */   Filter: () => (/* binding */ SvgFilter),
/* harmony export */   Fitness: () => (/* binding */ SvgFitness),
/* harmony export */   FlipArrow: () => (/* binding */ SvgFlipArrow),
/* harmony export */   FlipCamera: () => (/* binding */ SvgFlipCamera),
/* harmony export */   Folder: () => (/* binding */ SvgFolder),
/* harmony export */   Food: () => (/* binding */ SvgFood),
/* harmony export */   FraudHotline: () => (/* binding */ SvgFraudHotline),
/* harmony export */   FreedomPricePlan: () => (/* binding */ SvgFreedomPricePlan),
/* harmony export */   FuneralInsurance: () => (/* binding */ SvgFuneralInsurance),
/* harmony export */   Gallery: () => (/* binding */ SvgGallery),
/* harmony export */   Games: () => (/* binding */ SvgGames),
/* harmony export */   Gift: () => (/* binding */ SvgGift),
/* harmony export */   Grocery: () => (/* binding */ SvgGrocery),
/* harmony export */   Home: () => (/* binding */ SvgHome),
/* harmony export */   HomeInternet: () => (/* binding */ SvgHomeInternet),
/* harmony export */   HourGlass: () => (/* binding */ SvgHourGlass),
/* harmony export */   Ict: () => (/* binding */ SvgIct),
/* harmony export */   IdBook: () => (/* binding */ SvgIdBook),
/* harmony export */   Image: () => (/* binding */ SvgImage),
/* harmony export */   Info: () => (/* binding */ SvgInfo),
/* harmony export */   Instagram: () => (/* binding */ SvgInstagram),
/* harmony export */   Insurance: () => (/* binding */ SvgInsurance),
/* harmony export */   InternetOfThings: () => (/* binding */ SvgInternetOfThings),
/* harmony export */   Kids: () => (/* binding */ SvgKids),
/* harmony export */   Laptop: () => (/* binding */ SvgLaptop),
/* harmony export */   Learn: () => (/* binding */ SvgLearn),
/* harmony export */   LifeCover: () => (/* binding */ SvgLifeCover),
/* harmony export */   Light: () => (/* binding */ SvgLight),
/* harmony export */   Link: () => (/* binding */ SvgLink),
/* harmony export */   LiquidDamage: () => (/* binding */ SvgLiquidDamage),
/* harmony export */   List: () => (/* binding */ SvgList),
/* harmony export */   LocationPin: () => (/* binding */ SvgLocationPin),
/* harmony export */   Lock: () => (/* binding */ SvgLock),
/* harmony export */   LockOpen: () => (/* binding */ SvgLockOpen),
/* harmony export */   Logout: () => (/* binding */ SvgLogout),
/* harmony export */   Made4U: () => (/* binding */ SvgMade4U),
/* harmony export */   MadeToShare: () => (/* binding */ SvgMadeToShare),
/* harmony export */   ManagedSecurityServices: () => (/* binding */ SvgManagedSecurityServices),
/* harmony export */   Megaphone: () => (/* binding */ SvgMegaphone),
/* harmony export */   Menu: () => (/* binding */ SvgMenu),
/* harmony export */   MinusWithCircle: () => (/* binding */ SvgMinusWithCircle),
/* harmony export */   MobileDeviceManagement: () => (/* binding */ SvgMobileDeviceManagement),
/* harmony export */   MobileInternet: () => (/* binding */ SvgMobileInternet),
/* harmony export */   Modem: () => (/* binding */ SvgModem),
/* harmony export */   Momo: () => (/* binding */ SvgMomo),
/* harmony export */   More: () => (/* binding */ SvgMore),
/* harmony export */   Mouse: () => (/* binding */ SvgMouse),
/* harmony export */   MtnLogo: () => (/* binding */ SvgMtnLogo),
/* harmony export */   MtnPlay: () => (/* binding */ SvgMtnPlay),
/* harmony export */   MtnServices: () => (/* binding */ SvgMtnServices),
/* harmony export */   MtnSuperData: () => (/* binding */ SvgMtnSuperData),
/* harmony export */   Music: () => (/* binding */ SvgMusic),
/* harmony export */   MyLimits: () => (/* binding */ SvgMyLimits),
/* harmony export */   MyPlan: () => (/* binding */ SvgMyPlan),
/* harmony export */   MyProducts: () => (/* binding */ SvgMyProducts),
/* harmony export */   MymtnHome: () => (/* binding */ SvgMymtnHome),
/* harmony export */   NetworkServices: () => (/* binding */ SvgNetworkServices),
/* harmony export */   New: () => (/* binding */ SvgNew),
/* harmony export */   NewTab: () => (/* binding */ SvgNewTab),
/* harmony export */   Notifications: () => (/* binding */ SvgNotifications),
/* harmony export */   Offers: () => (/* binding */ SvgOffers),
/* harmony export */   Organisation: () => (/* binding */ SvgOrganisation),
/* harmony export */   Passport: () => (/* binding */ SvgPassport),
/* harmony export */   PasswordHidden: () => (/* binding */ SvgPasswordHidden),
/* harmony export */   PasswordVisible: () => (/* binding */ SvgPasswordVisible),
/* harmony export */   PauseFilled: () => (/* binding */ SvgPauseFilled),
/* harmony export */   PauseOutline: () => (/* binding */ SvgPauseOutline),
/* harmony export */   PayAsYouGo: () => (/* binding */ SvgPayAsYouGo),
/* harmony export */   PayPerSecond: () => (/* binding */ SvgPayPerSecond),
/* harmony export */   Payfast: () => (/* binding */ SvgPayfast),
/* harmony export */   Paypal: () => (/* binding */ SvgPaypal),
/* harmony export */   Phone: () => (/* binding */ SvgPhone),
/* harmony export */   Phonebook: () => (/* binding */ SvgPhonebook),
/* harmony export */   Placeholder: () => (/* binding */ SvgPlaceholder),
/* harmony export */   PlayFilled: () => (/* binding */ SvgPlayFilled),
/* harmony export */   PlayOutline: () => (/* binding */ SvgPlayOutline),
/* harmony export */   PlusWithCircle: () => (/* binding */ SvgPlusWithCircle),
/* harmony export */   PreOwnedPhone: () => (/* binding */ SvgPreOwnedPhone),
/* harmony export */   Promotions: () => (/* binding */ SvgPromotions),
/* harmony export */   Pulse: () => (/* binding */ SvgPulse),
/* harmony export */   PurchasesHistory: () => (/* binding */ SvgPurchasesHistory),
/* harmony export */   Question: () => (/* binding */ SvgQuestion),
/* harmony export */   Rand: () => (/* binding */ SvgRand),
/* harmony export */   RatingAverage: () => (/* binding */ SvgRatingAverage),
/* harmony export */   RatingAverageFilled: () => (/* binding */ SvgRatingAverageFilled),
/* harmony export */   RatingExcellent: () => (/* binding */ SvgRatingExcellent),
/* harmony export */   RatingExcellentFilled: () => (/* binding */ SvgRatingExcellentFilled),
/* harmony export */   RatingGood: () => (/* binding */ SvgRatingGood),
/* harmony export */   RatingGoodFilled: () => (/* binding */ SvgRatingGoodFilled),
/* harmony export */   RatingPoor: () => (/* binding */ SvgRatingPoor),
/* harmony export */   RatingPoorFilled: () => (/* binding */ SvgRatingPoorFilled),
/* harmony export */   RatingTerrible: () => (/* binding */ SvgRatingTerrible),
/* harmony export */   RatingTerribleFilled: () => (/* binding */ SvgRatingTerribleFilled),
/* harmony export */   Read: () => (/* binding */ SvgRead),
/* harmony export */   Recharge: () => (/* binding */ SvgRecharge),
/* harmony export */   Redeem: () => (/* binding */ SvgRedeem),
/* harmony export */   Refresh: () => (/* binding */ SvgRefresh),
/* harmony export */   Rewards: () => (/* binding */ SvgRewards),
/* harmony export */   Roaming: () => (/* binding */ SvgRoaming),
/* harmony export */   Rugby: () => (/* binding */ SvgRugby),
/* harmony export */   ScaleWeight: () => (/* binding */ SvgScaleWeight),
/* harmony export */   Scan: () => (/* binding */ SvgScan),
/* harmony export */   ScreenSize: () => (/* binding */ SvgScreenSize),
/* harmony export */   Search: () => (/* binding */ SvgSearch),
/* harmony export */   Send: () => (/* binding */ SvgSend),
/* harmony export */   ServiceRequestManagement: () => (/* binding */ SvgServiceRequestManagement),
/* harmony export */   Settings: () => (/* binding */ SvgSettings),
/* harmony export */   Share: () => (/* binding */ SvgShare),
/* harmony export */   Sim: () => (/* binding */ SvgSim),
/* harmony export */   SimSwap: () => (/* binding */ SvgSimSwap),
/* harmony export */   SkipBackOutline: () => (/* binding */ SvgSkipBackOutline),
/* harmony export */   SkipBackSolid: () => (/* binding */ SvgSkipBackSolid),
/* harmony export */   SkipForwardOutline: () => (/* binding */ SvgSkipForwardOutline),
/* harmony export */   SkipForwardSolid: () => (/* binding */ SvgSkipForwardSolid),
/* harmony export */   SmartId: () => (/* binding */ SvgSmartId),
/* harmony export */   Sms: () => (/* binding */ SvgSms),
/* harmony export */   Snapscan: () => (/* binding */ SvgSnapscan),
/* harmony export */   Soccer: () => (/* binding */ SvgSoccer),
/* harmony export */   Sortby: () => (/* binding */ SvgSortby),
/* harmony export */   SpeedFast: () => (/* binding */ SvgSpeedFast),
/* harmony export */   SpeedMax: () => (/* binding */ SvgSpeedMax),
/* harmony export */   SpeedMedium: () => (/* binding */ SvgSpeedMedium),
/* harmony export */   SpeedSlow: () => (/* binding */ SvgSpeedSlow),
/* harmony export */   SpeedSlowest: () => (/* binding */ SvgSpeedSlowest),
/* harmony export */   Star: () => (/* binding */ SvgStar),
/* harmony export */   StarFilled: () => (/* binding */ SvgStarFilled),
/* harmony export */   Streaming: () => (/* binding */ SvgStreaming),
/* harmony export */   Subscription: () => (/* binding */ SvgSubscription),
/* harmony export */   Subtract: () => (/* binding */ SvgSubtract),
/* harmony export */   Success: () => (/* binding */ SvgSuccess),
/* harmony export */   Svg4G: () => (/* binding */ Svg4G),
/* harmony export */   Svg5G: () => (/* binding */ Svg5G),
/* harmony export */   Tablet: () => (/* binding */ SvgTablet),
/* harmony export */   TabletHorizontal: () => (/* binding */ SvgTabletHorizontal),
/* harmony export */   TalkFree: () => (/* binding */ SvgTalkFree),
/* harmony export */   Theft: () => (/* binding */ SvgTheft),
/* harmony export */   Tick: () => (/* binding */ SvgTick),
/* harmony export */   Tiktok: () => (/* binding */ SvgTiktok),
/* harmony export */   Token: () => (/* binding */ SvgToken),
/* harmony export */   Touch: () => (/* binding */ SvgTouch),
/* harmony export */   Trash: () => (/* binding */ SvgTrash),
/* harmony export */   Undo: () => (/* binding */ SvgUndo),
/* harmony export */   UpAndDownArrows: () => (/* binding */ SvgUpAndDownArrows),
/* harmony export */   UpArrowWithCircle: () => (/* binding */ SvgUpArrowWithCircle),
/* harmony export */   Upgrade: () => (/* binding */ SvgUpgrade),
/* harmony export */   Upload: () => (/* binding */ SvgUpload),
/* harmony export */   UserProfile: () => (/* binding */ SvgUserProfile),
/* harmony export */   UserSymbol: () => (/* binding */ SvgUserSymbol),
/* harmony export */   ValueAddedService: () => (/* binding */ SvgValueAddedService),
/* harmony export */   VerticalMore: () => (/* binding */ SvgVerticalMore),
/* harmony export */   Video: () => (/* binding */ SvgVideo),
/* harmony export */   Voice: () => (/* binding */ SvgVoice),
/* harmony export */   Voucher: () => (/* binding */ SvgVoucher),
/* harmony export */   Wallet: () => (/* binding */ SvgWallet),
/* harmony export */   Wearables: () => (/* binding */ SvgWearables),
/* harmony export */   WebBrowsing: () => (/* binding */ SvgWebBrowsing),
/* harmony export */   Whatsapp: () => (/* binding */ SvgWhatsapp),
/* harmony export */   Wifi: () => (/* binding */ SvgWifi),
/* harmony export */   XTwitter: () => (/* binding */ SvgXTwitter),
/* harmony export */   Yellobucks: () => (/* binding */ SvgYellobucks),
/* harmony export */   Youtube: () => (/* binding */ SvgYoutube),
/* harmony export */   Zapper: () => (/* binding */ SvgZapper)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");


var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

var check = function (it) {
  return it && it.Math === Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global$a =
  // eslint-disable-next-line es/no-global-this -- safe
  check(typeof globalThis == 'object' && globalThis) ||
  check(typeof window == 'object' && window) ||
  // eslint-disable-next-line no-restricted-globals -- safe
  check(typeof self == 'object' && self) ||
  check(typeof commonjsGlobal == 'object' && commonjsGlobal) ||
  check(typeof commonjsGlobal == 'object' && commonjsGlobal) ||
  // eslint-disable-next-line no-new-func -- fallback
  (function () { return this; })() || Function('return this')();

var objectGetOwnPropertyDescriptor = {};

var fails$9 = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};

var fails$8 = fails$9;

// Detect IE8's incomplete defineProperty implementation
var descriptors = !fails$8(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] !== 7;
});

var fails$7 = fails$9;

var functionBindNative = !fails$7(function () {
  // eslint-disable-next-line es/no-function-prototype-bind -- safe
  var test = (function () { /* empty */ }).bind();
  // eslint-disable-next-line no-prototype-builtins -- safe
  return typeof test != 'function' || test.hasOwnProperty('prototype');
});

var NATIVE_BIND$1 = functionBindNative;

var call$5 = Function.prototype.call;

var functionCall = NATIVE_BIND$1 ? call$5.bind(call$5) : function () {
  return call$5.apply(call$5, arguments);
};

var objectPropertyIsEnumerable = {};

var $propertyIsEnumerable = {}.propertyIsEnumerable;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor$1 = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor$1 && !$propertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
objectPropertyIsEnumerable.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor$1(this, V);
  return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable;

var createPropertyDescriptor$2 = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

var NATIVE_BIND = functionBindNative;

var FunctionPrototype$1 = Function.prototype;
var call$4 = FunctionPrototype$1.call;
var uncurryThisWithBind = NATIVE_BIND && FunctionPrototype$1.bind.bind(call$4, call$4);

var functionUncurryThis = NATIVE_BIND ? uncurryThisWithBind : function (fn) {
  return function () {
    return call$4.apply(fn, arguments);
  };
};

var uncurryThis$9 = functionUncurryThis;

var toString$1 = uncurryThis$9({}.toString);
var stringSlice$1 = uncurryThis$9(''.slice);

var classofRaw = function (it) {
  return stringSlice$1(toString$1(it), 8, -1);
};

var uncurryThis$8 = functionUncurryThis;
var fails$6 = fails$9;
var classof = classofRaw;

var $Object$2 = Object;
var split = uncurryThis$8(''.split);

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var indexedObject = fails$6(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins -- safe
  return !$Object$2('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof(it) === 'String' ? split(it, '') : $Object$2(it);
} : $Object$2;

// we can't use just `it == null` since of `document.all` special case
// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec
var isNullOrUndefined$2 = function (it) {
  return it === null || it === undefined;
};

var isNullOrUndefined$1 = isNullOrUndefined$2;

var $TypeError$5 = TypeError;

// `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible
var requireObjectCoercible$2 = function (it) {
  if (isNullOrUndefined$1(it)) throw new $TypeError$5("Can't call method on " + it);
  return it;
};

// toObject with fallback for non-array-like ES3 strings
var IndexedObject$1 = indexedObject;
var requireObjectCoercible$1 = requireObjectCoercible$2;

var toIndexedObject$3 = function (it) {
  return IndexedObject$1(requireObjectCoercible$1(it));
};

// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot
var documentAll = typeof document == 'object' && document.all;

// `IsCallable` abstract operation
// https://tc39.es/ecma262/#sec-iscallable
// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing
var isCallable$a = typeof documentAll == 'undefined' && documentAll !== undefined ? function (argument) {
  return typeof argument == 'function' || argument === documentAll;
} : function (argument) {
  return typeof argument == 'function';
};

var isCallable$9 = isCallable$a;

var isObject$5 = function (it) {
  return typeof it == 'object' ? it !== null : isCallable$9(it);
};

var global$9 = global$a;
var isCallable$8 = isCallable$a;

var aFunction = function (argument) {
  return isCallable$8(argument) ? argument : undefined;
};

var getBuiltIn$2 = function (namespace, method) {
  return arguments.length < 2 ? aFunction(global$9[namespace]) : global$9[namespace] && global$9[namespace][method];
};

var uncurryThis$7 = functionUncurryThis;

var objectIsPrototypeOf = uncurryThis$7({}.isPrototypeOf);

var engineUserAgent = typeof navigator != 'undefined' && String(navigator.userAgent) || '';

var global$8 = global$a;
var userAgent = engineUserAgent;

var process = global$8.process;
var Deno = global$8.Deno;
var versions = process && process.versions || Deno && Deno.version;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.');
  // in old Chrome, versions of V8 isn't V8 = Chrome / 10
  // but their correct versions are not interesting for us
  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
}

// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
// so check `userAgent` even if `.v8` exists, but 0
if (!version && userAgent) {
  match = userAgent.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = userAgent.match(/Chrome\/(\d+)/);
    if (match) version = +match[1];
  }
}

var engineV8Version = version;

/* eslint-disable es/no-symbol -- required for testing */
var V8_VERSION = engineV8Version;
var fails$5 = fails$9;
var global$7 = global$a;

var $String$3 = global$7.String;

// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
var symbolConstructorDetection = !!Object.getOwnPropertySymbols && !fails$5(function () {
  var symbol = Symbol('symbol detection');
  // Chrome 38 Symbol has incorrect toString conversion
  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances
  // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,
  // of course, fail.
  return !$String$3(symbol) || !(Object(symbol) instanceof Symbol) ||
    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    !Symbol.sham && V8_VERSION && V8_VERSION < 41;
});

/* eslint-disable es/no-symbol -- required for testing */
var NATIVE_SYMBOL$1 = symbolConstructorDetection;

var useSymbolAsUid = NATIVE_SYMBOL$1
  && !Symbol.sham
  && typeof Symbol.iterator == 'symbol';

var getBuiltIn$1 = getBuiltIn$2;
var isCallable$7 = isCallable$a;
var isPrototypeOf = objectIsPrototypeOf;
var USE_SYMBOL_AS_UID$1 = useSymbolAsUid;

var $Object$1 = Object;

var isSymbol$2 = USE_SYMBOL_AS_UID$1 ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  var $Symbol = getBuiltIn$1('Symbol');
  return isCallable$7($Symbol) && isPrototypeOf($Symbol.prototype, $Object$1(it));
};

var $String$2 = String;

var tryToString$1 = function (argument) {
  try {
    return $String$2(argument);
  } catch (error) {
    return 'Object';
  }
};

var isCallable$6 = isCallable$a;
var tryToString = tryToString$1;

var $TypeError$4 = TypeError;

// `Assert: IsCallable(argument) is true`
var aCallable$1 = function (argument) {
  if (isCallable$6(argument)) return argument;
  throw new $TypeError$4(tryToString(argument) + ' is not a function');
};

var aCallable = aCallable$1;
var isNullOrUndefined = isNullOrUndefined$2;

// `GetMethod` abstract operation
// https://tc39.es/ecma262/#sec-getmethod
var getMethod$1 = function (V, P) {
  var func = V[P];
  return isNullOrUndefined(func) ? undefined : aCallable(func);
};

var call$3 = functionCall;
var isCallable$5 = isCallable$a;
var isObject$4 = isObject$5;

var $TypeError$3 = TypeError;

// `OrdinaryToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-ordinarytoprimitive
var ordinaryToPrimitive$1 = function (input, pref) {
  var fn, val;
  if (pref === 'string' && isCallable$5(fn = input.toString) && !isObject$4(val = call$3(fn, input))) return val;
  if (isCallable$5(fn = input.valueOf) && !isObject$4(val = call$3(fn, input))) return val;
  if (pref !== 'string' && isCallable$5(fn = input.toString) && !isObject$4(val = call$3(fn, input))) return val;
  throw new $TypeError$3("Can't convert object to primitive value");
};

var sharedStore = {exports: {}};

var global$6 = global$a;

// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty$2 = Object.defineProperty;

var defineGlobalProperty$3 = function (key, value) {
  try {
    defineProperty$2(global$6, key, { value: value, configurable: true, writable: true });
  } catch (error) {
    global$6[key] = value;
  } return value;
};

var globalThis$1 = global$a;
var defineGlobalProperty$2 = defineGlobalProperty$3;

var SHARED = '__core-js_shared__';
var store$3 = sharedStore.exports = globalThis$1[SHARED] || defineGlobalProperty$2(SHARED, {});

(store$3.versions || (store$3.versions = [])).push({
  version: '3.36.0',
  mode: 'global',
  copyright: '© 2014-2024 Denis Pushkarev (zloirock.ru)',
  license: 'https://github.com/zloirock/core-js/blob/v3.36.0/LICENSE',
  source: 'https://github.com/zloirock/core-js'
});

var store$2 = sharedStore.exports;

var shared$3 = function (key, value) {
  return store$2[key] || (store$2[key] = value || {});
};

var requireObjectCoercible = requireObjectCoercible$2;

var $Object = Object;

// `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject
var toObject$2 = function (argument) {
  return $Object(requireObjectCoercible(argument));
};

var uncurryThis$6 = functionUncurryThis;
var toObject$1 = toObject$2;

var hasOwnProperty = uncurryThis$6({}.hasOwnProperty);

// `HasOwnProperty` abstract operation
// https://tc39.es/ecma262/#sec-hasownproperty
// eslint-disable-next-line es/no-object-hasown -- safe
var hasOwnProperty_1 = Object.hasOwn || function hasOwn(it, key) {
  return hasOwnProperty(toObject$1(it), key);
};

var uncurryThis$5 = functionUncurryThis;

var id = 0;
var postfix = Math.random();
var toString = uncurryThis$5(1.0.toString);

var uid$2 = function (key) {
  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);
};

var global$5 = global$a;
var shared$2 = shared$3;
var hasOwn$6 = hasOwnProperty_1;
var uid$1 = uid$2;
var NATIVE_SYMBOL = symbolConstructorDetection;
var USE_SYMBOL_AS_UID = useSymbolAsUid;

var Symbol$1 = global$5.Symbol;
var WellKnownSymbolsStore = shared$2('wks');
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol$1['for'] || Symbol$1 : Symbol$1 && Symbol$1.withoutSetter || uid$1;

var wellKnownSymbol$1 = function (name) {
  if (!hasOwn$6(WellKnownSymbolsStore, name)) {
    WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn$6(Symbol$1, name)
      ? Symbol$1[name]
      : createWellKnownSymbol('Symbol.' + name);
  } return WellKnownSymbolsStore[name];
};

var call$2 = functionCall;
var isObject$3 = isObject$5;
var isSymbol$1 = isSymbol$2;
var getMethod = getMethod$1;
var ordinaryToPrimitive = ordinaryToPrimitive$1;
var wellKnownSymbol = wellKnownSymbol$1;

var $TypeError$2 = TypeError;
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');

// `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive
var toPrimitive$1 = function (input, pref) {
  if (!isObject$3(input) || isSymbol$1(input)) return input;
  var exoticToPrim = getMethod(input, TO_PRIMITIVE);
  var result;
  if (exoticToPrim) {
    if (pref === undefined) pref = 'default';
    result = call$2(exoticToPrim, input, pref);
    if (!isObject$3(result) || isSymbol$1(result)) return result;
    throw new $TypeError$2("Can't convert object to primitive value");
  }
  if (pref === undefined) pref = 'number';
  return ordinaryToPrimitive(input, pref);
};

var toPrimitive = toPrimitive$1;
var isSymbol = isSymbol$2;

// `ToPropertyKey` abstract operation
// https://tc39.es/ecma262/#sec-topropertykey
var toPropertyKey$2 = function (argument) {
  var key = toPrimitive(argument, 'string');
  return isSymbol(key) ? key : key + '';
};

var global$4 = global$a;
var isObject$2 = isObject$5;

var document$1 = global$4.document;
// typeof document.createElement is 'object' in old IE
var EXISTS$1 = isObject$2(document$1) && isObject$2(document$1.createElement);

var documentCreateElement = function (it) {
  return EXISTS$1 ? document$1.createElement(it) : {};
};

var DESCRIPTORS$7 = descriptors;
var fails$4 = fails$9;
var createElement = documentCreateElement;

// Thanks to IE8 for its funny defineProperty
var ie8DomDefine = !DESCRIPTORS$7 && !fails$4(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(createElement('div'), 'a', {
    get: function () { return 7; }
  }).a !== 7;
});

var DESCRIPTORS$6 = descriptors;
var call$1 = functionCall;
var propertyIsEnumerableModule$1 = objectPropertyIsEnumerable;
var createPropertyDescriptor$1 = createPropertyDescriptor$2;
var toIndexedObject$2 = toIndexedObject$3;
var toPropertyKey$1 = toPropertyKey$2;
var hasOwn$5 = hasOwnProperty_1;
var IE8_DOM_DEFINE$1 = ie8DomDefine;

// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor$1 = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
objectGetOwnPropertyDescriptor.f = DESCRIPTORS$6 ? $getOwnPropertyDescriptor$1 : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject$2(O);
  P = toPropertyKey$1(P);
  if (IE8_DOM_DEFINE$1) try {
    return $getOwnPropertyDescriptor$1(O, P);
  } catch (error) { /* empty */ }
  if (hasOwn$5(O, P)) return createPropertyDescriptor$1(!call$1(propertyIsEnumerableModule$1.f, O, P), O[P]);
};

var objectDefineProperty = {};

var DESCRIPTORS$5 = descriptors;
var fails$3 = fails$9;

// V8 ~ Chrome 36-
// https://bugs.chromium.org/p/v8/issues/detail?id=3334
var v8PrototypeDefineBug = DESCRIPTORS$5 && fails$3(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(function () { /* empty */ }, 'prototype', {
    value: 42,
    writable: false
  }).prototype !== 42;
});

var isObject$1 = isObject$5;

var $String$1 = String;
var $TypeError$1 = TypeError;

// `Assert: Type(argument) is Object`
var anObject$2 = function (argument) {
  if (isObject$1(argument)) return argument;
  throw new $TypeError$1($String$1(argument) + ' is not an object');
};

var DESCRIPTORS$4 = descriptors;
var IE8_DOM_DEFINE = ie8DomDefine;
var V8_PROTOTYPE_DEFINE_BUG = v8PrototypeDefineBug;
var anObject$1 = anObject$2;
var toPropertyKey = toPropertyKey$2;

var $TypeError = TypeError;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var $defineProperty = Object.defineProperty;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var ENUMERABLE = 'enumerable';
var CONFIGURABLE$1 = 'configurable';
var WRITABLE = 'writable';

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
objectDefineProperty.f = DESCRIPTORS$4 ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {
  anObject$1(O);
  P = toPropertyKey(P);
  anObject$1(Attributes);
  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
    var current = $getOwnPropertyDescriptor(O, P);
    if (current && current[WRITABLE]) {
      O[P] = Attributes.value;
      Attributes = {
        configurable: CONFIGURABLE$1 in Attributes ? Attributes[CONFIGURABLE$1] : current[CONFIGURABLE$1],
        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
        writable: false
      };
    }
  } return $defineProperty(O, P, Attributes);
} : $defineProperty : function defineProperty(O, P, Attributes) {
  anObject$1(O);
  P = toPropertyKey(P);
  anObject$1(Attributes);
  if (IE8_DOM_DEFINE) try {
    return $defineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw new $TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

var DESCRIPTORS$3 = descriptors;
var definePropertyModule$2 = objectDefineProperty;
var createPropertyDescriptor = createPropertyDescriptor$2;

var createNonEnumerableProperty$2 = DESCRIPTORS$3 ? function (object, key, value) {
  return definePropertyModule$2.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

var makeBuiltIn$2 = {exports: {}};

var DESCRIPTORS$2 = descriptors;
var hasOwn$4 = hasOwnProperty_1;

var FunctionPrototype = Function.prototype;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getDescriptor = DESCRIPTORS$2 && Object.getOwnPropertyDescriptor;

var EXISTS = hasOwn$4(FunctionPrototype, 'name');
// additional protection from minified / mangled / dropped function names
var PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';
var CONFIGURABLE = EXISTS && (!DESCRIPTORS$2 || (DESCRIPTORS$2 && getDescriptor(FunctionPrototype, 'name').configurable));

var functionName = {
  EXISTS: EXISTS,
  PROPER: PROPER,
  CONFIGURABLE: CONFIGURABLE
};

var uncurryThis$4 = functionUncurryThis;
var isCallable$4 = isCallable$a;
var store$1 = sharedStore.exports;

var functionToString = uncurryThis$4(Function.toString);

// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper
if (!isCallable$4(store$1.inspectSource)) {
  store$1.inspectSource = function (it) {
    return functionToString(it);
  };
}

var inspectSource$1 = store$1.inspectSource;

var global$3 = global$a;
var isCallable$3 = isCallable$a;

var WeakMap$1 = global$3.WeakMap;

var weakMapBasicDetection = isCallable$3(WeakMap$1) && /native code/.test(String(WeakMap$1));

var shared$1 = shared$3;
var uid = uid$2;

var keys = shared$1('keys');

var sharedKey$1 = function (key) {
  return keys[key] || (keys[key] = uid(key));
};

var hiddenKeys$3 = {};

var NATIVE_WEAK_MAP = weakMapBasicDetection;
var global$2 = global$a;
var isObject = isObject$5;
var createNonEnumerableProperty$1 = createNonEnumerableProperty$2;
var hasOwn$3 = hasOwnProperty_1;
var shared = sharedStore.exports;
var sharedKey = sharedKey$1;
var hiddenKeys$2 = hiddenKeys$3;

var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
var TypeError$1 = global$2.TypeError;
var WeakMap = global$2.WeakMap;
var set, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw new TypeError$1('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (NATIVE_WEAK_MAP || shared.state) {
  var store = shared.state || (shared.state = new WeakMap());
  /* eslint-disable no-self-assign -- prototype methods protection */
  store.get = store.get;
  store.has = store.has;
  store.set = store.set;
  /* eslint-enable no-self-assign -- prototype methods protection */
  set = function (it, metadata) {
    if (store.has(it)) throw new TypeError$1(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    store.set(it, metadata);
    return metadata;
  };
  get = function (it) {
    return store.get(it) || {};
  };
  has = function (it) {
    return store.has(it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys$2[STATE] = true;
  set = function (it, metadata) {
    if (hasOwn$3(it, STATE)) throw new TypeError$1(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    createNonEnumerableProperty$1(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return hasOwn$3(it, STATE) ? it[STATE] : {};
  };
  has = function (it) {
    return hasOwn$3(it, STATE);
  };
}

var internalState = {
  set: set,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};

var uncurryThis$3 = functionUncurryThis;
var fails$2 = fails$9;
var isCallable$2 = isCallable$a;
var hasOwn$2 = hasOwnProperty_1;
var DESCRIPTORS$1 = descriptors;
var CONFIGURABLE_FUNCTION_NAME = functionName.CONFIGURABLE;
var inspectSource = inspectSource$1;
var InternalStateModule = internalState;

var enforceInternalState = InternalStateModule.enforce;
var getInternalState = InternalStateModule.get;
var $String = String;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty$1 = Object.defineProperty;
var stringSlice = uncurryThis$3(''.slice);
var replace = uncurryThis$3(''.replace);
var join = uncurryThis$3([].join);

var CONFIGURABLE_LENGTH = DESCRIPTORS$1 && !fails$2(function () {
  return defineProperty$1(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;
});

var TEMPLATE = String(String).split('String');

var makeBuiltIn$1 = makeBuiltIn$2.exports = function (value, name, options) {
  if (stringSlice($String(name), 0, 7) === 'Symbol(') {
    name = '[' + replace($String(name), /^Symbol\(([^)]*)\).*$/, '$1') + ']';
  }
  if (options && options.getter) name = 'get ' + name;
  if (options && options.setter) name = 'set ' + name;
  if (!hasOwn$2(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {
    if (DESCRIPTORS$1) defineProperty$1(value, 'name', { value: name, configurable: true });
    else value.name = name;
  }
  if (CONFIGURABLE_LENGTH && options && hasOwn$2(options, 'arity') && value.length !== options.arity) {
    defineProperty$1(value, 'length', { value: options.arity });
  }
  try {
    if (options && hasOwn$2(options, 'constructor') && options.constructor) {
      if (DESCRIPTORS$1) defineProperty$1(value, 'prototype', { writable: false });
    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable
    } else if (value.prototype) value.prototype = undefined;
  } catch (error) { /* empty */ }
  var state = enforceInternalState(value);
  if (!hasOwn$2(state, 'source')) {
    state.source = join(TEMPLATE, typeof name == 'string' ? name : '');
  } return value;
};

// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
// eslint-disable-next-line no-extend-native -- required
Function.prototype.toString = makeBuiltIn$1(function toString() {
  return isCallable$2(this) && getInternalState(this).source || inspectSource(this);
}, 'toString');

var isCallable$1 = isCallable$a;
var definePropertyModule$1 = objectDefineProperty;
var makeBuiltIn = makeBuiltIn$2.exports;
var defineGlobalProperty$1 = defineGlobalProperty$3;

var defineBuiltIn$1 = function (O, key, value, options) {
  if (!options) options = {};
  var simple = options.enumerable;
  var name = options.name !== undefined ? options.name : key;
  if (isCallable$1(value)) makeBuiltIn(value, name, options);
  if (options.global) {
    if (simple) O[key] = value;
    else defineGlobalProperty$1(key, value);
  } else {
    try {
      if (!options.unsafe) delete O[key];
      else if (O[key]) simple = true;
    } catch (error) { /* empty */ }
    if (simple) O[key] = value;
    else definePropertyModule$1.f(O, key, {
      value: value,
      enumerable: false,
      configurable: !options.nonConfigurable,
      writable: !options.nonWritable
    });
  } return O;
};

var objectGetOwnPropertyNames = {};

var ceil = Math.ceil;
var floor = Math.floor;

// `Math.trunc` method
// https://tc39.es/ecma262/#sec-math.trunc
// eslint-disable-next-line es/no-math-trunc -- safe
var mathTrunc = Math.trunc || function trunc(x) {
  var n = +x;
  return (n > 0 ? floor : ceil)(n);
};

var trunc = mathTrunc;

// `ToIntegerOrInfinity` abstract operation
// https://tc39.es/ecma262/#sec-tointegerorinfinity
var toIntegerOrInfinity$2 = function (argument) {
  var number = +argument;
  // eslint-disable-next-line no-self-compare -- NaN check
  return number !== number || number === 0 ? 0 : trunc(number);
};

var toIntegerOrInfinity$1 = toIntegerOrInfinity$2;

var max = Math.max;
var min$1 = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
var toAbsoluteIndex$1 = function (index, length) {
  var integer = toIntegerOrInfinity$1(index);
  return integer < 0 ? max(integer + length, 0) : min$1(integer, length);
};

var toIntegerOrInfinity = toIntegerOrInfinity$2;

var min = Math.min;

// `ToLength` abstract operation
// https://tc39.es/ecma262/#sec-tolength
var toLength$1 = function (argument) {
  var len = toIntegerOrInfinity(argument);
  return len > 0 ? min(len, 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};

var toLength = toLength$1;

// `LengthOfArrayLike` abstract operation
// https://tc39.es/ecma262/#sec-lengthofarraylike
var lengthOfArrayLike$1 = function (obj) {
  return toLength(obj.length);
};

var toIndexedObject$1 = toIndexedObject$3;
var toAbsoluteIndex = toAbsoluteIndex$1;
var lengthOfArrayLike = lengthOfArrayLike$1;

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject$1($this);
    var length = lengthOfArrayLike(O);
    if (length === 0) return !IS_INCLUDES && -1;
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare -- NaN check
    if (IS_INCLUDES && el !== el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare -- NaN check
      if (value !== value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

var arrayIncludes = {
  // `Array.prototype.includes` method
  // https://tc39.es/ecma262/#sec-array.prototype.includes
  includes: createMethod(true),
  // `Array.prototype.indexOf` method
  // https://tc39.es/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod(false)
};

var uncurryThis$2 = functionUncurryThis;
var hasOwn$1 = hasOwnProperty_1;
var toIndexedObject = toIndexedObject$3;
var indexOf = arrayIncludes.indexOf;
var hiddenKeys$1 = hiddenKeys$3;

var push = uncurryThis$2([].push);

var objectKeysInternal = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !hasOwn$1(hiddenKeys$1, key) && hasOwn$1(O, key) && push(result, key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (hasOwn$1(O, key = names[i++])) {
    ~indexOf(result, key) || push(result, key);
  }
  return result;
};

// IE8- don't enum bug keys
var enumBugKeys$2 = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];

var internalObjectKeys$1 = objectKeysInternal;
var enumBugKeys$1 = enumBugKeys$2;

var hiddenKeys = enumBugKeys$1.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
// eslint-disable-next-line es/no-object-getownpropertynames -- safe
objectGetOwnPropertyNames.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys$1(O, hiddenKeys);
};

var objectGetOwnPropertySymbols = {};

// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
objectGetOwnPropertySymbols.f = Object.getOwnPropertySymbols;

var getBuiltIn = getBuiltIn$2;
var uncurryThis$1 = functionUncurryThis;
var getOwnPropertyNamesModule = objectGetOwnPropertyNames;
var getOwnPropertySymbolsModule$1 = objectGetOwnPropertySymbols;
var anObject = anObject$2;

var concat$1 = uncurryThis$1([].concat);

// all object keys, includes non-enumerable and symbols
var ownKeys$1 = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule.f(anObject(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule$1.f;
  return getOwnPropertySymbols ? concat$1(keys, getOwnPropertySymbols(it)) : keys;
};

var hasOwn = hasOwnProperty_1;
var ownKeys = ownKeys$1;
var getOwnPropertyDescriptorModule = objectGetOwnPropertyDescriptor;
var definePropertyModule = objectDefineProperty;

var copyConstructorProperties$1 = function (target, source, exceptions) {
  var keys = ownKeys(source);
  var defineProperty = definePropertyModule.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {
      defineProperty(target, key, getOwnPropertyDescriptor(source, key));
    }
  }
};

var fails$1 = fails$9;
var isCallable = isCallable$a;

var replacement = /#|\.prototype\./;

var isForced$1 = function (feature, detection) {
  var value = data[normalize(feature)];
  return value === POLYFILL ? true
    : value === NATIVE ? false
    : isCallable(detection) ? fails$1(detection)
    : !!detection;
};

var normalize = isForced$1.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced$1.data = {};
var NATIVE = isForced$1.NATIVE = 'N';
var POLYFILL = isForced$1.POLYFILL = 'P';

var isForced_1 = isForced$1;

var global$1 = global$a;
var getOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;
var createNonEnumerableProperty = createNonEnumerableProperty$2;
var defineBuiltIn = defineBuiltIn$1;
var defineGlobalProperty = defineGlobalProperty$3;
var copyConstructorProperties = copyConstructorProperties$1;
var isForced = isForced_1;

/*
  options.target         - name of the target object
  options.global         - target is the global object
  options.stat           - export as static methods of target
  options.proto          - export as prototype methods of target
  options.real           - real prototype method for the `pure` version
  options.forced         - export even if the native feature is available
  options.bind           - bind methods to the target, required for the `pure` version
  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe         - use the simple assignment of property instead of delete + defineProperty
  options.sham           - add a flag to not completely full polyfills
  options.enumerable     - export as enumerable property
  options.dontCallGetSet - prevent calling a getter on target
  options.name           - the .name of the function if it does not match the key
*/
var _export = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global$1;
  } else if (STATIC) {
    target = global$1[TARGET] || defineGlobalProperty(TARGET, {});
  } else {
    target = global$1[TARGET] && global$1[TARGET].prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.dontCallGetSet) {
      descriptor = getOwnPropertyDescriptor(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty == typeof targetProperty) continue;
      copyConstructorProperties(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty(sourceProperty, 'sham', true);
    }
    defineBuiltIn(target, key, sourceProperty, options);
  }
};

var internalObjectKeys = objectKeysInternal;
var enumBugKeys = enumBugKeys$2;

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
// eslint-disable-next-line es/no-object-keys -- safe
var objectKeys$1 = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys);
};

var DESCRIPTORS = descriptors;
var uncurryThis = functionUncurryThis;
var call = functionCall;
var fails = fails$9;
var objectKeys = objectKeys$1;
var getOwnPropertySymbolsModule = objectGetOwnPropertySymbols;
var propertyIsEnumerableModule = objectPropertyIsEnumerable;
var toObject = toObject$2;
var IndexedObject = indexedObject;

// eslint-disable-next-line es/no-object-assign -- safe
var $assign = Object.assign;
// eslint-disable-next-line es/no-object-defineproperty -- required for testing
var defineProperty = Object.defineProperty;
var concat = uncurryThis([].concat);

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
var objectAssign = !$assign || fails(function () {
  // should have correct order of operations (Edge bug)
  if (DESCRIPTORS && $assign({ b: 1 }, $assign(defineProperty({}, 'a', {
    enumerable: true,
    get: function () {
      defineProperty(this, 'b', {
        value: 3,
        enumerable: false
      });
    }
  }), { b: 2 })).b !== 1) return true;
  // should work with symbols and should have deterministic property order (V8 bug)
  var A = {};
  var B = {};
  // eslint-disable-next-line es/no-symbol -- safe
  var symbol = Symbol('assign detection');
  var alphabet = 'abcdefghijklmnopqrst';
  A[symbol] = 7;
  alphabet.split('').forEach(function (chr) { B[chr] = chr; });
  return $assign({}, A)[symbol] !== 7 || objectKeys($assign({}, B)).join('') !== alphabet;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars -- required for `.length`
  var T = toObject(target);
  var argumentsLength = arguments.length;
  var index = 1;
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  var propertyIsEnumerable = propertyIsEnumerableModule.f;
  while (argumentsLength > index) {
    var S = IndexedObject(arguments[index++]);
    var keys = getOwnPropertySymbols ? concat(objectKeys(S), getOwnPropertySymbols(S)) : objectKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS || call(propertyIsEnumerable, S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;

var $ = _export;
var assign = objectAssign;

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
// eslint-disable-next-line es/no-object-assign -- required for testing
$({ target: 'Object', stat: true, arity: 2, forced: Object.assign !== assign }, {
  assign: assign
});

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
    var e = new Error(message);
    return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
};

const SvgPlaceholder = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M24 12c0 6.627-5.373 12-12 12S0 18.627 0 12 5.373 0 12 0s12 5.373 12 12m-1.5 0c0 5.799-4.701 10.5-10.5 10.5S1.5 17.799 1.5 12 6.201 1.5 12 1.5 22.5 6.201 22.5 12",
      clipRule: "evenodd"
    })]
  }));
};

const Svg4G = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M5.042 4.901c-.181-.435-.714-.603-1.09-.318C1.525 6.413 0 9.058 0 12s1.525 5.588 3.952 7.418c.376.284.909.116 1.09-.32a.8.8 0 0 0-.262-.933C2.73 16.576 1.5 14.344 1.5 12s1.23-4.576 3.28-6.165a.8.8 0 0 0 .262-.934"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M6.15 7.559c-.2-.479-.804-.632-1.164-.26C3.744 8.587 3 10.22 3 12s.744 3.414 1.986 4.7c.36.373.964.22 1.163-.258a.84.84 0 0 0-.174-.886C5.035 14.528 4.5 13.276 4.5 12s.534-2.528 1.475-3.556a.84.84 0 0 0 .174-.885M17.85 7.559a.84.84 0 0 0 .175.885c.94 1.028 1.475 2.28 1.475 3.556s-.534 2.528-1.475 3.556a.84.84 0 0 0-.174.886c.199.478.803.63 1.163.258C20.256 15.414 21 13.78 21 12s-.744-3.414-1.986-4.7c-.36-.373-.964-.22-1.163.259"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M18.958 19.099a.8.8 0 0 1 .262-.934c2.05-1.589 3.28-3.821 3.28-6.165s-1.23-4.576-3.28-6.165a.8.8 0 0 1-.262-.934c.181-.435.714-.603 1.09-.318C22.475 6.413 24 9.058 24 12s-1.525 5.588-3.952 7.418c-.376.284-.909.116-1.09-.32"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M14.144 13.22c.198 0 .414-.048.588-.114V11.99h.948v1.662c-.354.246-.99.48-1.668.48-1.26 0-2.1-.792-2.1-2.016 0-1.272.894-2.196 2.136-2.196.51 0 1.068.15 1.392.318v1.05c-.294-.192-.756-.432-1.26-.432-.678 0-1.116.456-1.116 1.17 0 .69.414 1.194 1.08 1.194m.888-.3-.024.024q.013-.007.019-.017zM10.962 12.458h.594v.852h-.594V14H9.948v-.69H8.076v-.762l1.962-2.538h.924zm-1.836 0h.834l.036-1.116z",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const Svg5G = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M3.952 4.583c.376-.285.909-.117 1.09.318a.8.8 0 0 1-.262.934C2.73 7.424 1.5 9.656 1.5 12s1.23 4.576 3.28 6.165a.8.8 0 0 1 .262.934c-.181.435-.714.603-1.09.319C1.525 17.588 0 14.942 0 12s1.525-5.588 3.952-7.417"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M4.986 7.3c.36-.373.964-.22 1.163.259a.84.84 0 0 1-.174.885C5.035 9.472 4.5 10.724 4.5 12s.534 2.528 1.475 3.556c.22.24.3.585.174.886-.199.478-.803.63-1.163.258C3.744 15.414 3 13.78 3 12s.744-3.414 1.986-4.7M17.85 7.559a.84.84 0 0 0 .175.885c.94 1.028 1.475 2.28 1.475 3.556s-.534 2.528-1.475 3.556a.84.84 0 0 0-.174.886c.199.478.803.63 1.163.258C20.256 15.414 21 13.78 21 12s-.744-3.414-1.986-4.7c-.36-.373-.964-.22-1.163.259"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M19.22 18.165a.8.8 0 0 0-.262.934c.181.435.714.603 1.09.319C22.475 17.588 24 14.942 24 12s-1.525-5.588-3.952-7.417c-.376-.285-.909-.117-1.09.318a.8.8 0 0 0 .262.934C21.27 7.424 22.5 9.656 22.5 12s-1.23 4.576-3.28 6.165"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M14.74 13.106V11.99h.948v1.662c-.354.246-.99.48-1.668.48-1.26 0-2.1-.792-2.1-2.016 0-1.272.894-2.196 2.136-2.196.51 0 1.068.15 1.392.318v1.05c-.294-.192-.756-.432-1.26-.432-.678 0-1.116.456-1.116 1.17 0 .69.414 1.194 1.08 1.194.198 0 .414-.048.588-.114m.3-.186-.024.024q.013-.007.019-.017l.003-.004z",
        clipRule: "evenodd"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M9.356 11.588a2 2 0 0 1 .75-.162c.786 0 1.338.51 1.338 1.194 0 .942-.768 1.47-1.83 1.47-.456 0-.936-.102-1.284-.324v-.978c.384.27.828.366 1.2.366.474 0 .774-.156.774-.438 0-.258-.21-.432-.624-.432-.336 0-.63.102-.864.198l-.39-.306.234-2.124 2.61.012v.924l-1.83-.012z"
      })]
    })]
  }));
};

const SvgBriefcase = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M8.25 6V4.5c0-.69.56-1.25 1.25-1.25h5c.69 0 1.25.56 1.25 1.25V6H21a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1zm1.5 0V4.75h4.5V6zM3.5 7.8a.3.3 0 0 1 .3-.3h16.4a.3.3 0 0 1 .3.3v2.532l-.474.086c-.525.092-1.267.216-2.132.34-.876.125-1.872.249-2.894.341V11a.5.5 0 0 0-.5-.5h-5a.5.5 0 0 0-.5.5v.1a57 57 0 0 1-2.894-.342 67 67 0 0 1-2.606-.426zM9 12.605a58 58 0 0 1-3.106-.362 68 68 0 0 1-2.394-.386V18.2a.3.3 0 0 0 .3.3h16.4a.3.3 0 0 0 .3-.3v-6.343l-.213.038c-.538.095-1.296.221-2.18.348-.927.132-2 .265-3.107.362V14.5a.5.5 0 0 1-.5.5h-5a.5.5 0 0 1-.5-.5zm1.5.895V12h3v1.5z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgAddApps = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M10 2.5H2.5V10H10zM2.5 1A1.5 1.5 0 0 0 1 2.5V10a1.5 1.5 0 0 0 1.5 1.5H10a1.5 1.5 0 0 0 1.5-1.5V2.5A1.5 1.5 0 0 0 10 1zm19 1.5H14V10h7.5zM14 1a1.5 1.5 0 0 0-1.5 1.5V10a1.5 1.5 0 0 0 1.5 1.5h7.5A1.5 1.5 0 0 0 23 10V2.5A1.5 1.5 0 0 0 21.5 1zM2.5 14H10v7.5H2.5zM1 14a1.5 1.5 0 0 1 1.5-1.5H10a1.5 1.5 0 0 1 1.5 1.5v7.5A1.5 1.5 0 0 1 10 23H2.5A1.5 1.5 0 0 1 1 21.5zm16.5-1.25a.75.75 0 0 1 .75.75V17h3.5a.75.75 0 0 1 0 1.5h-3.5V22a.75.75 0 0 1-1.5 0v-3.5h-3.5a.75.75 0 0 1 0-1.5h3.5v-3.5a.75.75 0 0 1 .75-.75",
      clipRule: "evenodd"
    })]
  }));
};

const SvgAdd = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      d: "M12.75 2.5a.75.75 0 0 0-1.5 0v8.75H2.5a.75.75 0 0 0 0 1.5h8.75v8.75a.75.75 0 0 0 1.5 0v-8.75h8.75a.75.75 0 0 0 0-1.5h-8.75z"
    })]
  }));
};

const SvgAirtime = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M4.338 2.75c-1.112 0-1.834 1.006-1.506 1.976 1.032 3.06 2.964 7.689 5.858 10.584 2.896 2.894 7.525 4.826 10.585 5.858.97.328 1.975-.394 1.975-1.505V16.56a.48.48 0 0 0-.243-.414l-2.703-1.503a.48.48 0 0 0-.442-.01l-2.882 1.442a.75.75 0 0 1-.477.066l.141-.737-.141.737h-.002l-.003-.001-.009-.002-.026-.005a5 5 0 0 1-.388-.1 9 9 0 0 1-1.014-.363 9 9 0 0 1-2.836-1.894 9.1 9.1 0 0 1-1.898-2.84A9 9 0 0 1 7.88 9.62l-.02-.087-.005-.026-.002-.009v-.003l-.001-.002a.75.75 0 0 1 .065-.478L9.36 6.13a.47.47 0 0 0-.01-.442L7.855 2.994a.48.48 0 0 0-.414-.244zm5.045 6.688.019.065c.06.204.156.498.304.844a7.6 7.6 0 0 0 1.58 2.368 7.5 7.5 0 0 0 2.364 1.575 7 7 0 0 0 .905.32l2.636-1.318a1.97 1.97 0 0 1 1.842.04l2.703 1.503a1.98 1.98 0 0 1 1.014 1.725v3.103c0 2.049-1.93 3.61-3.955 2.927-3.092-1.043-8.009-3.064-11.165-6.22S2.454 8.297 1.41 5.206C.727 3.181 2.288 1.25 4.338 1.25H7.44a1.98 1.98 0 0 1 1.726 1.016l1.496 2.695a1.97 1.97 0 0 1 .04 1.841z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgAlert = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M12 5.75a.75.75 0 0 1 .75.75v7a.75.75 0 0 1-1.5 0v-7a.75.75 0 0 1 .75-.75M12 16a.75.75 0 0 0-.75.75v.617a.75.75 0 0 0 1.5 0v-.617A.75.75 0 0 0 12 16"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12m0-1.5c5.799 0 10.5-4.701 10.5-10.5S17.799 1.5 12 1.5 1.5 6.201 1.5 12 6.201 22.5 12 22.5",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgAnalytics = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M21.274 3.1c.176-.37.046-.82-.288-1.01a.674.674 0 0 0-.938.31l-4.782 9.72-3.873-3.51-.668-.61-.4.84-3.88 8.22c-.177.37-.038.82.306 1.01s.761.04.938-.33l3.49-7.37 3.864 3.5.66.6.408-.82zM4.179 2.75c0-.41-.316-.75-.697-.75s-.696.34-.696.75V22H20.66c.38 0 .696-.34.696-.75s-.316-.75-.696-.75H4.179z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgAnytime = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M12 22.5c5.799 0 10.5-4.7 10.5-10.5q0-.09-.002-.182c-.007-.44.335-.818.774-.818.388 0 .714.298.724.686q.003.156.004.314c0 6.628-5.373 12-12 12S0 18.628 0 12C0 5.373 5.373 0 12 0c4.016 0 7.572 1.973 9.75 5.003V3a.75.75 0 0 1 1.5 0v4a.75.75 0 0 1-.75.75h-4a.75.75 0 0 1 0-1.5h2.287A10.49 10.49 0 0 0 12 1.5C6.2 1.5 1.5 6.201 1.5 12S6.2 22.5 12 22.5"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M12.75 7a.75.75 0 0 0-1.5 0v5.834c0 .305.121.598.337.813l2.383 2.383a.75.75 0 0 0 1.06-1.06l-2.28-2.28z"
      })]
    })]
  }));
};

const SvgApnManagement = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      d: "M17.99 11.56c-.77-1.78-2.62-2.99-4.69-2.99h-.6V6.74c.97-.32 1.69-1.23 1.69-2.3C14.39 3.1 13.3 2 11.95 2S9.51 3.09 9.51 4.44c0 1.08.71 1.99 1.69 2.3v1.83h-.6c-2.07 0-3.92 1.21-4.69 2.99A2.43 2.43 0 0 0 4 13.93c0 1.34 1.09 2.44 2.44 2.44s2.44-1.09 2.44-2.44c0-.96-.57-1.79-1.38-2.19.62-1.01 1.8-1.68 3.11-1.68h.6v6.53c-.97.32-1.69 1.23-1.69 2.31 0 1.34 1.09 2.44 2.44 2.44s2.44-1.09 2.44-2.44c0-1.08-.71-1.99-1.69-2.31v-6.53h.6c1.31 0 2.48.67 3.11 1.68-.81.39-1.38 1.22-1.38 2.19 0 1.34 1.09 2.44 2.44 2.44s2.44-1.09 2.44-2.44c0-1.16-.82-2.13-1.91-2.37zM11.95 3.5a.939.939 0 1 1 0 1.88.939.939 0 1 1 0-1.88M6.44 14.87a.939.939 0 1 1 0-1.88.939.939 0 1 1 0 1.88m5.51 4.97a.939.939 0 1 1 0-1.88.939.939 0 1 1 0 1.88m5.51-4.97a.939.939 0 1 1 0-1.88.939.939 0 1 1 0 1.88"
    })]
  }));
};

const SvgApps = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M2.5 1A1.5 1.5 0 0 0 1 2.5V10a1.5 1.5 0 0 0 1.5 1.5H10a1.5 1.5 0 0 0 1.5-1.5V2.5A1.5 1.5 0 0 0 10 1z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M1 14a1.5 1.5 0 0 1 1.5-1.5H10a1.5 1.5 0 0 1 1.5 1.5v7.5A1.5 1.5 0 0 1 10 23H2.5A1.5 1.5 0 0 1 1 21.5zm1.5 0H10v7.5H2.5zM14 12.5a1.5 1.5 0 0 0-1.5 1.5v7.5A1.5 1.5 0 0 0 14 23h7.5a1.5 1.5 0 0 0 1.5-1.5V14a1.5 1.5 0 0 0-1.5-1.5zm7.5 1.5H14v7.5h7.5zM12.5 2.5A1.5 1.5 0 0 1 14 1h7.5A1.5 1.5 0 0 1 23 2.5V10a1.5 1.5 0 0 1-1.5 1.5H14a1.5 1.5 0 0 1-1.5-1.5zm1.5 0h7.5V10H14z",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgArrow = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      fillRule: "evenodd",
      clipRule: "evenodd",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M13.74 3.216a.773.773 0 0 1 1.072 0l7.966 7.761a.726.726 0 0 1 0 1.046l-7.966 7.76a.773.773 0 0 1-1.073 0 .726.726 0 0 1 0-1.045l7.43-7.238-7.43-7.238a.726.726 0 0 1 0-1.046"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M1 11.5c0-.408.34-.74.759-.74H22.24c.42 0 .759.332.759.74s-.34.74-.759.74H1.76A.75.75 0 0 1 1 11.5"
      })]
    })]
  }));
};

const SvgBalances = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      fillRule: "evenodd",
      clipRule: "evenodd",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M12 1c0-.552-.448-1.004-.999-.958a12 12 0 1 0 12.957 12.957c.046-.55-.406-.999-.958-.999H12.1a.1.1 0 0 1-.1-.1zM6.167 3.27A10.5 10.5 0 0 1 10.5 1.608V11.9a1.6 1.6 0 0 0 1.6 1.6h10.292A10.5 10.5 0 1 1 6.167 3.27"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M13.5 1c0-.552.447-.99.994-.914C15.99.296 18.872 1.018 21 3.5c2.023 2.36 2.682 4.721 2.896 6.008.091.545-.344.992-.896.992h-8.5a1 1 0 0 1-1-1zm6.361 3.476c1.446 1.687 2.1 3.363 2.396 4.524H15V1.699c1.385.298 3.36 1.026 4.861 2.777"
      })]
    })]
  }));
};

const SvgBasket = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M5.75 19.25a.75.75 0 0 1 .75-.75h11a.75.75 0 0 1 0 1.5h-11a.75.75 0 0 1-.75-.75"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M12 1c2.965 0 4.854 2.286 5.362 5h3.39a2 2 0 0 1 1.985 2.234l-1.529 13A2 2 0 0 1 19.222 23H4.779a2 2 0 0 1-1.987-1.766l-1.529-13A2 2 0 0 1 3.249 6h3.39C7.147 3.286 9.035 1 12 1M8.17 6h7.66c-.185-.791-.513-1.506-.953-2.074C14.195 3.046 13.242 2.5 12 2.5s-2.195.546-2.876 1.426c-.44.568-.768 1.283-.953 2.074M3.25 7.5a.5.5 0 0 0-.497.558l1.53 13a.5.5 0 0 0 .496.442h14.443a.5.5 0 0 0 .496-.442l1.53-13a.5.5 0 0 0-.497-.558z",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgBattery = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M5 8a.5.5 0 0 0-.5.5v7a.5.5 0 0 0 .5.5h16a.5.5 0 0 0 .5-.5v-7A.5.5 0 0 0 21 8z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M4.2 5.5A2.2 2.2 0 0 0 2 7.7v8.6a2.2 2.2 0 0 0 2.2 2.2h17.6a2.2 2.2 0 0 0 2.2-2.2V7.7a2.2 2.2 0 0 0-2.2-2.2zM21.8 7H4.2a.7.7 0 0 0-.7.7v8.6a.7.7 0 0 0 .7.7h17.6a.7.7 0 0 0 .7-.7V7.7a.7.7 0 0 0-.7-.7",
        clipRule: "evenodd"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M0 10.8a.8.8 0 0 1 .8-.8h.7v4H.8a.8.8 0 0 1-.8-.8z"
      })]
    })]
  }));
};

const SvgBill = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M8 5.25a.75.75 0 0 0 0 1.5h8a.75.75 0 0 0 0-1.5zM7.25 10A.75.75 0 0 1 8 9.25h8a.75.75 0 0 1 0 1.5H8a.75.75 0 0 1-.75-.75M8 13.25a.75.75 0 0 0 0 1.5h8a.75.75 0 0 0 0-1.5z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M20 24V2.5A2.5 2.5 0 0 0 17.5 0h-11A2.5 2.5 0 0 0 4 2.5V24l1.949-2 2.007 2 2.007-2 2.008 2 2.007-2 2.007 2 2.008-2zM18.5 2.5v17.888l-.507-.505-2.008 2-2.007-2-2.007 2-2.008-2-2.007 2-2.023-2.016-.433.444V2.5a1 1 0 0 1 1-1h11a1 1 0 0 1 1 1",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgBiometrics = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M21.231 2.5h-5.25a.75.75 0 0 1 0-1.5h5.25a2 2 0 0 1 2 2v5.25a.75.75 0 0 1-1.5 0V3a.5.5 0 0 0-.5-.5M1.981 9a.75.75 0 0 0 .75-.75V3a.5.5 0 0 1 .5-.5h5.25a.75.75 0 0 0 0-1.5h-5.25a2 2 0 0 0-2 2v5.25c0 .414.336.75.75.75M1.231 15.75a.75.75 0 0 1 1.5 0V21a.5.5 0 0 0 .5.5h5.25a.75.75 0 0 1 0 1.5h-5.25a2 2 0 0 1-2-2zM21.731 15.75a.75.75 0 0 1 1.5 0V21a2 2 0 0 1-2 2h-5.25a.75.75 0 0 1 0-1.5h5.25a.5.5 0 0 0 .5-.5zM7.714 10.734a.36.36 0 0 1-.284-.136.35.35 0 0 1-.026-.39c.452-.754 1.827-2.515 4.827-2.515 1.3 0 2.44.342 3.388 1.015a5.7 5.7 0 0 1 1.424 1.479.346.346 0 0 1-.094.487.364.364 0 0 1-.497-.094c-.377-.541-1.526-2.19-4.22-2.19-2.632 0-3.821 1.517-4.209 2.168a.35.35 0 0 1-.309.176"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M13.743 17.625a.4.4 0 0 1-.09-.01c-2.175-.54-2.988-2.715-3.02-2.805l-.006-.02c-.018-.063-.455-1.555.216-2.428.307-.399.774-.603 1.392-.603.573 0 .987.178 1.272.547.234.302.328.674.418 1.032.191.745.329 1.137 1.12 1.177.348.018.577-.186.707-.359.35-.472.41-1.242.147-1.922-.34-.877-1.544-2.53-3.668-2.53-.906 0-1.74.29-2.407.838a3.86 3.86 0 0 0-1.202 1.752c-.391 1.225.122 3.151.127 3.169a.347.347 0 0 1-.255.428.36.36 0 0 1-.44-.249c-.023-.088-.57-2.142-.119-3.558a4.475 4.475 0 0 1 4.297-3.081 4.53 4.53 0 0 1 2.887 1.037c.645.527 1.172 1.235 1.448 1.943.35.904.256 1.919-.24 2.582-.33.442-.8.673-1.32.648-1.356-.068-1.6-1.015-1.777-1.705-.183-.708-.3-1.05-.998-1.05-.383 0-.653.105-.82.324-.229.299-.247.766-.221 1.105q.024.355.12.698c.055.14.781 1.922 2.52 2.353a.35.35 0 0 1 .259.424.36.36 0 0 1-.347.263"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M10.95 17.464a.36.36 0 0 1-.262-.11c-.871-.914-1.364-1.936-1.55-3.214v-.007c-.103-.846.05-2.044.796-2.868.55-.607 1.325-.916 2.298-.916 1.15 0 2.054.534 2.618 1.544.409.733.49 1.464.492 1.494a.354.354 0 0 1-.32.384.36.36 0 0 1-.393-.311 3.6 3.6 0 0 0-.419-1.25c-.437-.77-1.102-1.162-1.98-1.162-.76 0-1.354.229-1.763.68-.59.65-.703 1.652-.622 2.315.162 1.13.596 2.03 1.363 2.833a.345.345 0 0 1-.017.494.36.36 0 0 1-.242.094"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M14.962 16.457c-.762 0-1.41-.21-1.928-.63-1.04-.839-1.158-2.205-1.163-2.262a.358.358 0 0 1 .714-.056c.002.02.106 1.138.909 1.781.475.38 1.11.53 1.892.442a.356.356 0 0 1 .396.31.35.35 0 0 1-.315.386q-.252.03-.505.03M15.564 7.144c-.298-.194-1.351-.769-3.333-.769-2.08 0-3.136.635-3.37.797a.3.3 0 0 0-.043.033l-.005.002a.35.35 0 0 0-.12.261.353.353 0 0 0 .36.348.37.37 0 0 0 .208-.065c.01-.007.919-.675 2.97-.675 2.053 0 2.967.665 2.977.67a.36.36 0 0 0 .216.07.353.353 0 0 0 .358-.349.35.35 0 0 0-.219-.323"
      })]
    })]
  }));
};

const SvgBorrow = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M17 7.5a5 5 0 1 1-10 0 5 5 0 0 1 10 0m1.5 0a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0m-4.787 1.82c.198-.185.447-.32.718-.32.61 0 1.014.623.618 1.089A4 4 0 0 1 12 11.5a4 4 0 0 1-3.048-1.411C8.555 9.623 8.958 9 9.569 9c.271 0 .52.135.717.32.448.422 1.05.68 1.714.68s1.266-.258 1.713-.68m-3.427-3.64c-.197.185-.446.32-.717.32-.611 0-1.014-.623-.618-1.089A4 4 0 0 1 12 3.5c1.222 0 2.316.548 3.05 1.411.395.466-.008 1.089-.62 1.089-.27 0-.52-.135-.717-.32A2.5 2.5 0 0 0 12 5c-.663 0-1.266.258-1.714.68m10.227 9.376c.756-.27 1.599.01 2.044.678l.042.063a1.75 1.75 0 0 1-.406 2.37l-5.17 3.877a1.3 1.3 0 0 1-.406.202l-3.344.956a1.3 1.3 0 0 1-.343.048H2a.75.75 0 0 1-.75-.75v-4c0-.69.56-1.25 1.25-1.25h2.65a.25.25 0 0 0 .155-.055l1.953-1.562a1.75 1.75 0 0 1 1.093-.383H12.5c.69 0 1.25.56 1.25 1.25v.75h.62zm-7.524 3.694h1.641l6.387-2.281a.25.25 0 0 1 .292.097l.042.063a.25.25 0 0 1-.058.338l-5.132 3.85-3.266.933H2.75v-3h2.4a1.75 1.75 0 0 0 1.092-.384l1.953-1.561a.25.25 0 0 1 .156-.055h3.899v.5H10.5a.75.75 0 0 0 0 1.5z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgBozzagigsFilled = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M12.25 8.5H10.5V11h1.75a1.25 1.25 0 1 0 0-2.5M10.5 13h2.25a1.25 1.25 0 0 1 0 2.5H10.5z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M12 21c-2.045 0-3.946-.552-5.53-1.5H4a.5.5 0 0 1-.5-.5v-2.257C2.55 15.366 2 13.741 2 12c0-4.97 4.477-9 10-9s10 4.03 10 9-4.477 9-10 9M8.5 6.5h4.75a2.75 2.75 0 0 1 1.284 5.183A3.001 3.001 0 0 1 13.5 17.5h-5z",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgBozzagigs = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      fillRule: "evenodd",
      clipRule: "evenodd",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M8.5 7v10l3.868.001a3 3 0 0 0 1.556-5.567A2.75 2.75 0 0 0 11.75 7zm3.869 8.501H10V12.5h2.369a1.5 1.5 0 1 1 0 3.001M10 11h1.75a1.25 1.25 0 1 0 0-2.5H10z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M12 22c6.627 0 12-4.477 12-10S18.627 2 12 2 0 6.477 0 12c0 1.82.583 3.525 1.602 4.995V19.5c0 .613.537 1.111 1.2 1.111h3.093C7.684 21.494 9.771 22 12 22m-8.598-5.337a.5.5 0 0 0-.09-.285l-.195-.283C2.273 14.878 1.8 13.482 1.8 12c0-4.442 4.384-8.333 10.2-8.333S22.2 7.558 22.2 12s-4.384 8.333-10.2 8.333c-1.934 0-3.73-.439-5.258-1.193l-.293-.144a.5.5 0 0 0-.221-.052H3.402z"
      })]
    })]
  }));
};

const SvgBrokenPhone = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M13 20.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M5 2a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v20a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2zm10.5-.5H17a.5.5 0 0 1 .5.5v8.852l-4.296 1.074L14 9l-4 .5-3.47-3.03-.03-.029V2a.5.5 0 0 1 .5-.5h1.5c.173.299.63.5 1 .5h5c.37 0 .827-.201 1-.5m-9 7.06v4.23l1.974-2.256zm0 6.5V22a.5.5 0 0 0 .5.5h10a.5.5 0 0 0 .5-.5v-5.903l-5.25-2.387-1.454.364.925-3.222-1.78.284-3.377 3.858a1 1 0 0 1-.064.065m11-.611v-2.05l-2.91.727z",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgBusinessSupport = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M14 3.5h-4A1.5 1.5 0 0 0 8.5 5v1.5h7V5A1.5 1.5 0 0 0 14 3.5M7 5v1.5H2a2 2 0 0 0-2 2V19a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V8.5a2 2 0 0 0-2-2h-5V5a3 3 0 0 0-3-3h-4a3 3 0 0 0-3 3m0 3h15a.5.5 0 0 1 .5.5V19a.5.5 0 0 1-.5.5H2a.5.5 0 0 1-.5-.5V8.5A.5.5 0 0 1 2 8zm.75 7a1 1 0 1 0 0-2 1 1 0 0 0 0 2m5.5-1a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3.5 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2",
      clipRule: "evenodd"
    })]
  }));
};

const SvgCalendar = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M5.25 14a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5M6 16.25a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0M5.25 20a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5M9.375 13.25a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0M8.625 17a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5M9.375 19.25a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0M12 14a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5M12.75 16.25a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0M12 20a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5M16.125 13.25a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0M15.375 17a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5M16.125 19.25a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0M18.75 14a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5M19.5 16.25a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0M18.75 20a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M3 4V1.75a.75.75 0 0 1 1.5 0V4h15V1.75a.75.75 0 0 1 1.5 0V4h1.5A1.5 1.5 0 0 1 24 5.5v16a1.5 1.5 0 0 1-1.5 1.5h-21A1.5 1.5 0 0 1 0 21.5v-16A1.5 1.5 0 0 1 1.5 4zm1.5 1.5h15v1.75a.75.75 0 0 0 1.5 0V5.5h1.5v4h-21v-4H3v1.75a.75.75 0 0 0 1.5 0zm-3 16V11h21v10.5z",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgCall = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M19.843 22H4.157c-.588 0-1.098-.235-1.53-.628A2.17 2.17 0 0 1 2 19.844V4.157c0-.588.235-1.098.627-1.53A2.17 2.17 0 0 1 4.157 2h15.686c.588 0 1.098.235 1.53.627.392.393.627.942.627 1.53v15.686c0 .588-.235 1.098-.628 1.53-.392.43-.94.627-1.529.627M4.462 3.481c-.275 0-.51.118-.706.275-.157.196-.275.431-.275.706v15.076c0 .275.118.51.275.706.196.196.431.274.706.274h15.076c.275 0 .51-.117.706-.274s.274-.431.274-.706V4.462c0-.275-.117-.51-.274-.706-.196-.196-.562-.275-.837-.275z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M6.026 8.632c.628 1.804 1.686 4.274 3.294 5.921 1.647 1.608 4.118 2.667 5.922 3.294.196.04.392.079.588.079.353 0 .706-.078.98-.314.471-.353.746-.902.746-1.49v-1.608c0-.431-.236-.823-.628-1.059l-1.412-.784a1.29 1.29 0 0 0-1.137-.04l-1.137.471c-.314-.078-1.02-.274-1.608-.862-.568-.568-.77-1.282-.854-1.578l-.009-.03.47-1.137c.158-.393.158-.785-.038-1.138l-.785-1.411c-.196-.393-.627-.628-1.058-.628H7.752c-.589 0-1.138.275-1.49.745-.314.47-.432 1.02-.236 1.569m1.293-.817a.6.6 0 0 0-.088.216.3.3 0 0 0 .016.165l.004.01c.614 1.767 1.594 3.999 2.986 5.43 1.409 1.37 3.592 2.341 5.346 2.957.152.03.208.037.247.037.084 0 .133-.01.154-.016l.049-.039a.56.56 0 0 0 .226-.453v-1.555l-1.351-.751h-.002l-.031.014-1.137.47c-.257.106-.541.127-.81.06-.37-.092-1.364-.357-2.21-1.204-.813-.812-1.093-1.81-1.181-2.127l-.012-.041a1.3 1.3 0 0 1 .048-.852l.467-1.128.015-.047-.748-1.347H7.752a.56.56 0 0 0-.433.201",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgCamera = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M12 17.5a4.5 4.5 0 1 0 0-9 4.5 4.5 0 0 0 0 9m0-1.5a3 3 0 1 0 0-6 3 3 0 0 0 0 6",
        clipRule: "evenodd"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M19.5 10.5a1 1 0 1 0 0-2 1 1 0 0 0 0 2"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "m7 5 .658-1.974A1.5 1.5 0 0 1 9.081 2h5.838a1.5 1.5 0 0 1 1.423 1.026L17 5h5a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2zm2.081-1.5h5.838l.5 1.5H8.58zM2 6.5a.5.5 0 0 0-.5.5v12a.5.5 0 0 0 .5.5h20a.5.5 0 0 0 .5-.5V7a.5.5 0 0 0-.5-.5z",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgCardCvv = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M22 5.5H2a.5.5 0 0 0-.5.5v2h21V6a.5.5 0 0 0-.5-.5M1.5 18v-7h21v7a.5.5 0 0 1-.5.5H2a.5.5 0 0 1-.5-.5M2 4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2zm11 13a1 1 0 1 0 0-2 1 1 0 0 0 0 2m4-1a1 1 0 1 1-2 0 1 1 0 0 1 2 0m2 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2",
      clipRule: "evenodd"
    })]
  }));
};

const SvgCardFront = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M5 13a1 1 0 0 0-1 1v.5a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V14a1 1 0 0 0-1-1z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M2 4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2zm20 1.5H2a.5.5 0 0 0-.5.5v2h21V6a.5.5 0 0 0-.5-.5M1.5 18v-7h21v7a.5.5 0 0 1-.5.5H2a.5.5 0 0 1-.5-.5",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgChargeBattery = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
      fill: "currentColor",
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M14.965 6.23a.75.75 0 1 0-1.311-.73l-2.727 5.996a.85.85 0 0 0 .743 1.265h3.055l-2.242 5.237a.75.75 0 1 0 1.311.73l2.78-6.205a.85.85 0 0 0-.744-1.264h-3.055zM9.167 6.001a.834.834 0 0 1 0 1.67H5.143a.846.846 0 0 0-.857.834v7.01c0 .46.383.834.857.834h4.024a.834.834 0 0 1 0 1.67H5.143c-1.42 0-2.572-1.122-2.572-2.504v-7.01C2.571 7.122 3.723 6 5.143 6zM17.833 16.35a.834.834 0 0 0 0 1.668h3.596c1.42 0 2.571-1.12 2.571-2.503v-7.01C24 7.122 22.849 6 21.429 6h-3.596a.834.834 0 0 0 0 1.67h3.596c.473 0 .857.373.857.834v7.01c0 .46-.384.834-.857.834zM.857 14.013h.797v-4.006H.857A.846.846 0 0 0 0 10.84v2.337c0 .46.384.834.857.834"
      })
    })]
  }));
};

const SvgChat = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M16 14a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2H2a2 2 0 0 0-2 2v13.669a.5.5 0 0 0 .877.329L3.501 14zm-14.5.007L2.82 12.5H16a.5.5 0 0 0 .5-.5V3a.5.5 0 0 0-.5-.5H2a.5.5 0 0 0-.5.5zM6.75 15a.75.75 0 0 0-.75.75V17a2 2 0 0 0 2 2h12.5l2 2.286.624.713a.5.5 0 0 0 .876-.33V8a2 2 0 0 0-2-2h-2.252a.75.75 0 1 0 0 1.5H22a.5.5 0 0 1 .5.5v11.007l-.871-.995-.448-.512H8a.5.5 0 0 1-.5-.5v-1.25a.75.75 0 0 0-.75-.75M5.5 8.5a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5m4.25-.75a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0m2.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5",
      clipRule: "evenodd"
    })]
  }));
};

const SvgCheck = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      d: "M19.74 6.53a.9.9 0 0 0 0-1.267.884.884 0 0 0-1.257 0l-9.15 11.573-3.816-3.165a.884.884 0 0 0-1.257 0 .9.9 0 0 0 0 1.268l4.445 3.798a.885.885 0 0 0 1.257 0z"
    })]
  }));
};

const SvgChevronDown = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M21.78 8.22a.75.75 0 0 1 0 1.06l-9.288 9.288a1.05 1.05 0 0 1-1.485 0L1.72 9.28a.75.75 0 0 1 1.06-1.06l8.97 8.97 8.97-8.97a.75.75 0 0 1 1.06 0",
      clipRule: "evenodd"
    })]
  }));
};

const SvgChevronLeft = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M17.28 1.97a.75.75 0 0 0-1.06 0l-9.288 9.288a1.05 1.05 0 0 0 0 1.485l9.288 9.287a.75.75 0 1 0 1.06-1.06L8.31 12l8.97-8.97a.75.75 0 0 0 0-1.06",
      clipRule: "evenodd"
    })]
  }));
};

const SvgChevronRight = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M6.72 1.97a.75.75 0 0 1 1.06 0l9.288 9.288c.41.41.41 1.074 0 1.485L7.78 22.03a.75.75 0 0 1-1.06-1.06L15.69 12 6.72 3.03a.75.75 0 0 1 0-1.06",
      clipRule: "evenodd"
    })]
  }));
};

const SvgChevronUp = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M21.78 15.78a.75.75 0 0 0 0-1.06l-9.288-9.288a1.05 1.05 0 0 0-1.485 0L1.72 14.72a.75.75 0 1 0 1.06 1.06l8.97-8.97 8.97 8.97a.75.75 0 0 0 1.06 0",
      clipRule: "evenodd"
    })]
  }));
};

const SvgClearFilter = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
      fill: "currentColor",
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M19.651 1.872a.75.75 0 0 0-1.302-.744l-12 21a.75.75 0 0 0 1.302.744zM12.147 20.5H9.53l.866-1.5h1.75V17.74a.75.75 0 0 1 1.5 0v4a.75.75 0 0 1-1.5 0zM22.146 12.75h-8.141l.866-1.5h7.275a.75.75 0 0 1 0 1.5M11.118 12.75l.866-1.5H9.5V10A.75.75 0 0 0 8 10v4.061999999999999a.75.75 0 0 0 1.5 0V12.75zM22.152 4.75h-3.528l.866-1.5h2.662a.75.75 0 1 1 0 1.5M15.76 4.71l.843-1.46H16a.75.75 0 0 0-.24 1.46M1.75 20.5h4.894L7.51 19H1.75a.75.75 0 0 0 0 1.5M13 1.25a.75.75 0 0 1 .75.75v4a.75.75 0 0 1-1.5 0V4.75H1.854a.75.75 0 1 1 0-1.5H12.25V2a.75.75 0 0 1 .75-.75M1.848 11.25a.75.75 0 0 0 0 1.5H6a.75.75 0 0 0 0-1.5zM16 19.25a.75.75 0 0 0 0 1.5h6.152a.75.75 0 1 0 0-1.5z"
      })
    })]
  }));
};

const SvgClearInput = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M9.937 7.387a.757.757 0 0 1 1.06 0l3.713 3.666 3.713-3.666a.757.757 0 0 1 1.06 0 .734.734 0 0 1 0 1.047l-3.712 3.667 3.712 3.666a.734.734 0 0 1 0 1.048.757.757 0 0 1-1.06 0l-3.713-3.667-3.712 3.667a.757.757 0 0 1-1.06 0 .734.734 0 0 1 0-1.048l3.712-3.666-3.713-3.667a.734.734 0 0 1 0-1.047"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M21 3.481H8.627c-.472 0-.916.22-1.2.593L1.8 11.11c-.4.527-.4 1.251 0 1.778l5.627 7.037c.284.373.728.593 1.2.593H21c.828 0 1.5-.664 1.5-1.482V4.963A1.49 1.49 0 0 0 21 3.481M8.627 2c-.944 0-1.833.439-2.4 1.185L.6 10.222a2.934 2.934 0 0 0 0 3.556l5.627 7.037A3.01 3.01 0 0 0 8.627 22H21c1.657 0 3-1.327 3-2.963V4.963C24 3.327 22.657 2 21 2z",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgClock = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M12.75 5.5a.75.75 0 0 0-1.5 0v6.81l3.22 3.22a.75.75 0 1 0 1.06-1.06l-2.78-2.78z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M24 12c0 6.627-5.373 12-12 12S0 18.627 0 12 5.373 0 12 0s12 5.373 12 12m-1.5 0c0 5.799-4.701 10.5-10.5 10.5S1.5 17.799 1.5 12 6.201 1.5 12 1.5 22.5 6.201 22.5 12",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgCloseWithCircle = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M7.47 7.47a.75.75 0 0 1 1.06 0L12 10.94l3.47-3.47a.75.75 0 1 1 1.06 1.06L13.06 12l3.47 3.47a.75.75 0 1 1-1.06 1.06L12 13.06l-3.47 3.47a.75.75 0 0 1-1.06-1.06L10.94 12 7.47 8.53a.75.75 0 0 1 0-1.06"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M24 12c0 6.627-5.373 12-12 12S0 18.627 0 12 5.373 0 12 0s12 5.373 12 12m-1.5 0c0 5.799-4.701 10.5-10.5 10.5S1.5 17.799 1.5 12 6.201 1.5 12 1.5 22.5 6.201 22.5 12",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgClose = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      d: "M4.124 3.193a.659.659 0 0 0-.931.931L11.069 12l-7.876 7.876a.659.659 0 1 0 .931.931L12 12.931l7.876 7.876a.658.658 0 1 0 .931-.931L12.931 12l7.876-7.876a.658.658 0 1 0-.931-.931L12 11.069z"
    })]
  }));
};

const SvgClothing = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M12 0C2 0 2 7 2 7v10a2 2 0 0 0 2 2h2v4a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1v-4h2a2 2 0 0 0 2-2V7s0-7-10-7M3.5 6.993V17a.5.5 0 0 0 .5.5h2V8.25a.75.75 0 0 1 1.5 0V22.5h9V8.25a.75.75 0 0 1 1.5 0v9.25h2a.5.5 0 0 0 .5-.5V6.993l-.012-.142a5 5 0 0 0-.104-.597 5.4 5.4 0 0 0-.855-1.882c-.642-.9-1.813-1.943-4.029-2.491V2A2.5 2.5 0 0 1 13 4.5h-2A2.5 2.5 0 0 1 8.5 2v-.119c-2.216.548-3.387 1.592-4.03 2.49a5.4 5.4 0 0 0-.855 1.883 4.7 4.7 0 0 0-.114.739M12 1.5c-.81 0-1.49.081-2 .172V2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-.328a11.4 11.4 0 0 0-2-.172",
      clipRule: "evenodd"
    })]
  }));
};

const SvgCloud = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M18.627 18.333h.04a3.333 3.333 0 0 0 1.54-6.29q.125-.586.126-1.21A5.833 5.833 0 0 0 9.175 8.448a3.75 3.75 0 0 0-4.662 3.32 3.335 3.335 0 0 0 .82 6.565h13.294m.214-5.31a.5.5 0 0 1-.258-.547l.157-.742q.092-.435.093-.9a4.333 4.333 0 0 0-8.29-1.772l-.343.767a.5.5 0 0 1-.58.28l-.814-.207a2.25 2.25 0 0 0-2.798 1.99l-.06.712a.5.5 0 0 1-.375.444l-.692.175a1.835 1.835 0 0 0 .452 3.61h13.334a1.833 1.833 0 0 0 .846-3.46z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgCombo = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
      fill: "currentColor",
      fillRule: "evenodd",
      clipRule: "evenodd",
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M16 0H8a1.5 1.5 0 0 0-1.5 1.5v8A1.5 1.5 0 0 0 8 11h8a1.5 1.5 0 0 0 1.5-1.5v-8A1.5 1.5 0 0 0 16 0m0 1.5h-1.5v3a1 1 0 0 1-1 1h-3a1 1 0 0 1-1-1v-3H8v8h8zm-5 0h2V4h-2zM9.5 13a1.5 1.5 0 0 1 1.5 1.5v8A1.5 1.5 0 0 1 9.5 24h-8A1.5 1.5 0 0 1 0 22.5v-8A1.5 1.5 0 0 1 1.5 13zM8 14.5h1.5v8h-8v-8H3v3a1 1 0 0 0 1 1h3a1 1 0 0 0 1-1zm-1.5 0h-2V17h2zM22.5 13a1.5 1.5 0 0 1 1.5 1.5v8a1.5 1.5 0 0 1-1.5 1.5h-8a1.5 1.5 0 0 1-1.5-1.5v-8a1.5 1.5 0 0 1 1.5-1.5zM21 14.5h1.5v8h-8v-8H16v3a1 1 0 0 0 1 1h3a1 1 0 0 0 1-1zm-1.5 0h-2V17h2z"
      })
    })]
  }));
};

const SvgConsent = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M20 2.375H4c-.276 0-.5.205-.5.458v18.334c0 .253.224.458.5.458h16c.276 0 .5-.205.5-.458V12.75a.75.75 0 0 1 1.5 0v8.417C22 22.179 21.105 23 20 23H4c-1.105 0-2-.82-2-1.833V2.833C2 1.821 2.895 1 4 1h16c1.105 0 2 .82 2 1.833v1.084a.75.75 0 0 1-1.5 0V2.833c0-.253-.224-.458-.5-.458"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M21.014 7.046a.75.75 0 1 0-1.028-1.092l-7.97 7.501L9.03 10.47a.75.75 0 0 0-1.06 1.06l3.294 3.295a1.05 1.05 0 0 0 1.462.022z"
      })]
    })]
  }));
};

const SvgContactUs = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M21 4.5H3A1.5 1.5 0 0 0 1.5 6v14.119l2.382-1.667A2.5 2.5 0 0 1 5.315 18H21a1.5 1.5 0 0 0 1.5-1.5V6A1.5 1.5 0 0 0 21 4.5M4.742 19.68a1 1 0 0 1 .573-.18H21a3 3 0 0 0 3-3V6a3 3 0 0 0-3-3H3a3 3 0 0 0-3 3v16.04a.5.5 0 0 0 .787.41zM12 7.25a.75.75 0 0 1 .75.75v2.25H15a.75.75 0 0 1 0 1.5h-2.25V14a.75.75 0 0 1-1.5 0v-2.25H9a.75.75 0 0 1 0-1.5h2.25V8a.75.75 0 0 1 .75-.75",
      clipRule: "evenodd"
    })]
  }));
};

const SvgContract = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M6.73 14.25c0 .428.347.75.775.75h9.01c.428 0 .775-.322.775-.75s-.347-.702-.775-.702h-9.01c-.428 0-.775.274-.775.702"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M4.55 0A1.55 1.55 0 0 0 3 1.548v20.904A1.55 1.55 0 0 0 4.55 24h14.9A1.55 1.55 0 0 0 21 22.452V6.467c0-.422-.172-.826-.478-1.118L15.384.43A1.55 1.55 0 0 0 14.312 0zm14.9 22.452V6.75h-5.188a.775.775 0 0 1-.775-.774l.024-4.428h-8.96L4.55 22.452zM15.013 2.25l3.003 3h-3.003z",
        clipRule: "evenodd"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M6.754 10.5c0 .428.323.75.75.75h9.01c.429 0 .751-.322.751-.75a.734.734 0 0 0-.75-.75h-9.01a.734.734 0 0 0-.751.75M6.73 6.726c0 .427.347.774.775.774l2.228.024a.775.775 0 1 0 0-1.548l-2.228-.024a.775.775 0 0 0-.775.774"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M9.007 20.563a.88.88 0 0 1-.686.335h-.008c-.122 0-.39 0-.69-.158-.303-.16-.57-.442-.801-.874a.58.58 0 1 1 1.025-.547c.152.283.27.367.314.392l.01-.028c.07-.214.119-.523.174-.899l.01-.068c.047-.329.103-.708.191-1.009.047-.159.119-.35.238-.51a.85.85 0 0 1 .682-.358.83.83 0 0 1 .686.372c.115.164.178.357.22.513.062.237.107.54.147.813l.036.24c.058.366.12.651.21.838a.4.4 0 0 0 .075.121c.424 0 .653-.125.839-.256.049-.034.094-.069.146-.108l.016-.013c.055-.041.123-.093.194-.14a1.15 1.15 0 0 1 .637-.207.83.83 0 0 1 .434.115c.15.091.279.218.332.33a1 1 0 0 1 .083.28h3.163a.58.58 0 1 1 0 1.16h-3.288c-.274 0-.594.034-.8-.197-.068-.075-.118-.264-.152-.34l-.096.07c-.33.23-.787.468-1.508.468-.606 0-.95-.414-1.127-.785a3.7 3.7 0 0 1-.26-.882c-.043.277-.098.57-.178.814a1.6 1.6 0 0 1-.268.517",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgCrossHair = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M12.786 1.786v2a8.25 8.25 0 0 1 7.427 7.428h2.001a.786.786 0 0 1 0 1.572h-2.001a8.25 8.25 0 0 1-7.428 7.427v2.002a.786.786 0 0 1-1.571 0v-2.002a8.254 8.254 0 0 1-7.38-7.034H1.785a.786.786 0 0 1 0-1.572h1.973a8.25 8.25 0 0 1 7.455-7.82V1.786a.786.786 0 0 1 1.572 0M5.32 12.074v-.148a6.68 6.68 0 0 1 6.636-6.605h.086a6.68 6.68 0 0 1 6.635 6.653v.052a6.679 6.679 0 0 1-13.357.048M12 16.322a4.321 4.321 0 1 0 0-8.643 4.321 4.321 0 0 0 0 8.643",
      clipRule: "evenodd"
    })]
  }));
};

const SvgCustomerCare = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M12 2.5a7.5 7.5 0 0 1 7.5 7.5v6h3a1.5 1.5 0 0 0 1.5-1.5v-5A1.5 1.5 0 0 0 22.5 8h-1.723A9.003 9.003 0 0 0 3.223 8H1.5A1.5 1.5 0 0 0 0 9.5v5A1.5 1.5 0 0 0 1.5 16h1.724c.788 3.26 3.572 5.313 7.078 5.903.274.363.709.597 1.198.597h.5a1.5 1.5 0 0 0 0-3h-.5a1.5 1.5 0 0 0-1.349.843c-3.248-.69-5.651-2.784-5.651-6.288V10A7.5 7.5 0 0 1 12 2.5M3 10v4.5H1.5v-5H3zm18 4.033v.467h1.5v-5H21v4.533",
      clipRule: "evenodd"
    })]
  }));
};

const SvgDark = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M21.117 17.213c-.843.188-1.719.287-2.617.287-6.627 0-12-5.373-12-12 0-.898.099-1.774.286-2.617A10.5 10.5 0 0 0 1.5 12c0 5.799 4.701 10.5 10.5 10.5 3.9 0 7.306-2.128 9.117-5.287m.811-1.786c-1.074.371-2.227.573-3.428.573C12.701 16 8 11.299 8 5.5a10.5 10.5 0 0 1 .703-3.784c.219-.568-.268-1.194-.84-.984q-.228.084-.453.177C3.06 2.711 0 7 0 12c0 6.628 5.373 12 12 12 5.002 0 9.289-3.059 11.09-7.409q.094-.225.178-.454c.21-.57-.417-1.058-.984-.839q-.176.07-.356.13",
      clipRule: "evenodd"
    })]
  }));
};

const SvgDashboard = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M3 2.5h6.5a.5.5 0 0 1 .5.5v6.5a.5.5 0 0 1-.5.5H3a.5.5 0 0 1-.5-.5V3a.5.5 0 0 1 .5-.5M1 3a2 2 0 0 1 2-2h6.5a2 2 0 0 1 2 2v6.5a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2zm13.5-.5H21a.5.5 0 0 1 .5.5v6.5a.5.5 0 0 1-.5.5h-6.5a.5.5 0 0 1-.5-.5V3a.5.5 0 0 1 .5-.5m-2 .5a2 2 0 0 1 2-2H21a2 2 0 0 1 2 2v6.5a2 2 0 0 1-2 2h-6.5a2 2 0 0 1-2-2zM21 14h-6.5a.5.5 0 0 0-.5.5V21a.5.5 0 0 0 .5.5H21a.5.5 0 0 0 .5-.5v-6.5a.5.5 0 0 0-.5-.5m-6.5-1.5a2 2 0 0 0-2 2V21a2 2 0 0 0 2 2H21a2 2 0 0 0 2-2v-6.5a2 2 0 0 0-2-2zM3 14h6.5a.5.5 0 0 1 .5.5V21a.5.5 0 0 1-.5.5H3a.5.5 0 0 1-.5-.5v-6.5A.5.5 0 0 1 3 14m-2 .5a2 2 0 0 1 2-2h6.5a2 2 0 0 1 2 2V21a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgDataBundles = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
      fill: "currentColor",
      fillRule: "evenodd",
      clipRule: "evenodd",
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M1 2.5A1.5 1.5 0 0 1 2.5 1h7A1.5 1.5 0 0 1 11 2.5v5A1.5 1.5 0 0 1 9.5 9h-7A1.5 1.5 0 0 1 1 7.5zm1.5 0h7v5h-7zM13 16.5a1.5 1.5 0 0 1 1.5-1.5h7a1.5 1.5 0 0 1 1.5 1.5v5a1.5 1.5 0 0 1-1.5 1.5h-7a1.5 1.5 0 0 1-1.5-1.5zm1.5 0h7v5h-7zM2.5 11A1.5 1.5 0 0 0 1 12.5v9A1.5 1.5 0 0 0 2.5 23h7a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 9.5 11zm7 1.5h-7v9h7zM13 2.5A1.5 1.5 0 0 1 14.5 1h7A1.5 1.5 0 0 1 23 2.5v9a1.5 1.5 0 0 1-1.5 1.5h-7a1.5 1.5 0 0 1-1.5-1.5zm1.5 0h7v9h-7z"
      })
    })]
  }));
};

const SvgData = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      fillRule: "evenodd",
      clipRule: "evenodd",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "m5.398 2.386.001-.001-.003.002-.023.015-.105.074a7 7 0 0 0-.406.32 8.8 8.8 0 0 0-1.265 1.346C2.676 5.351 1.75 7.195 1.75 9.75s.926 4.4 1.847 5.608a8.8 8.8 0 0 0 1.265 1.345 7 7 0 0 0 .51.395l.024.015.002.001m0 0a.75.75 0 0 1-.795 1.272L5 17.75l-.397.636-.004-.002-.004-.003-.014-.009a3 3 0 0 1-.192-.132 8 8 0 0 1-.501-.396c-.408-.349-.947-.871-1.485-1.577C1.324 14.851.25 12.695.25 9.75s1.074-5.1 2.153-6.517a10.3 10.3 0 0 1 1.485-1.577 8 8 0 0 1 .693-.528l.014-.009.004-.003.002-.001.388.618-.386-.619a.75.75 0 0 1 .796 1.271m12.965-1.032a.75.75 0 0 1 1.034-.239L19 1.75l.398-.636v.001l.003.001.004.003.014.009a3 3 0 0 1 .192.133c.125.09.297.221.501.395.408.349.947.871 1.485 1.577C22.676 4.65 23.75 6.805 23.75 9.75s-1.074 5.1-2.153 6.517a10.3 10.3 0 0 1-1.485 1.577 8 8 0 0 1-.693.528l-.014.01-.004.002-.002.001s-.002.001-.399-.635l.398.636a.75.75 0 0 1-.797-1.27v-.001h.002l.001-.002.023-.015.105-.074a7 7 0 0 0 .406-.32 8.8 8.8 0 0 0 1.265-1.346c.921-1.209 1.847-3.053 1.847-5.608s-.926-4.4-1.847-5.608a8.8 8.8 0 0 0-1.265-1.345 7 7 0 0 0-.51-.395l-.024-.015h-.002m-.238-1.034a.75.75 0 0 0 .238 1.033zM7.5 4.25l-.469-.585-.002.001-.003.003-.01.008a3 3 0 0 0-.125.108c-.08.072-.19.176-.32.31-.26.27-.603.664-.945 1.177A8.03 8.03 0 0 0 4.25 9.75c0 1.935.692 3.453 1.376 4.479.342.513.684.907.944 1.176a7 7 0 0 0 .446.418l.01.008.003.003h.001s.001.002.47-.584l-.469.586a.75.75 0 0 0 .938-1.171l-.012-.01-.063-.055a5 5 0 0 1-.246-.239 7 7 0 0 1-.774-.964A6.53 6.53 0 0 1 5.75 9.75c0-1.565.558-2.797 1.124-3.646.283-.425.566-.75.774-.965a5 5 0 0 1 .309-.293l.012-.01.002-.002-.002.001a.75.75 0 0 0-.938-1.17zm8.414-.468a.75.75 0 0 1 1.054-.118l-.468.586.468-.586.002.001v.001l.004.003.01.008a3 3 0 0 1 .125.108c.08.072.19.176.32.31.26.27.603.664.945 1.177A8.03 8.03 0 0 1 19.75 9.75a8.03 8.03 0 0 1-1.376 4.479 8.4 8.4 0 0 1-.944 1.176 7 7 0 0 1-.446.418l-.01.008-.003.003h-.001s-.002.002-.47-.584l.468.586a.75.75 0 0 1-.937-1.17l.012-.012.063-.054c.056-.051.141-.131.246-.239.209-.215.49-.54.774-.964A6.53 6.53 0 0 0 18.25 9.75a6.53 6.53 0 0 0-1.124-3.646 7 7 0 0 0-.774-.965 5 5 0 0 0-.309-.293l-.012-.01a.75.75 0 0 1-.117-1.054m.115 10.884h.002z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M12.75 13.17A3.501 3.501 0 0 0 12 6.25a3.5 3.5 0 0 0-.75 6.92v9.08a.75.75 0 0 0 1.5 0zM14 9.75a2 2 0 1 1-4 0 2 2 0 0 1 4 0"
      })]
    })]
  }));
};

const SvgDebitOrder = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M7.75 9a.75.75 0 0 0 .75-.75V3.5h14v9h-3.75a.75.75 0 0 0 0 1.5H23a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1H8a1 1 0 0 0-1 1v5.25c0 .414.336.75.75.75M1.5 16v4.5h14V16zm0-3h14v-1.5h-14zM1 10a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h15a1 1 0 0 0 1-1V11a1 1 0 0 0-1-1z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgDelivery = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M1.021 17h3.115c.237 1.141 1.267 2 2.502 2 1.236 0 2.266-.859 2.502-2h6.23c.237 1.141 1.267 2 2.502 2 1.236 0 2.266-.859 2.503-2h2.604A1.01 1.01 0 0 0 24 16v-3.167a1 1 0 0 0-.204-.6L21.243 8.4a1.03 1.03 0 0 0-.817-.4H16.85V6c0-.552-.457-1-1.021-1H1.02A1.01 1.01 0 0 0 0 6v10c0 .552.457 1 1.021 1m.51-10.5v9h2.767a2.56 2.56 0 0 1 2.34-1.5c1.047 0 1.947.617 2.341 1.5h6.34v-9zm18.682 9h2.255V13L20.17 9.5h-3.319v4.708A2.6 2.6 0 0 1 17.872 14c1.047 0 1.947.617 2.341 1.5m-13.575 2a1.01 1.01 0 0 0 1.022-1c0-.552-.458-1-1.022-1a1.01 1.01 0 0 0-1.021 1c0 .552.457 1 1.021 1m12.256-1c0 .552-.458 1-1.022 1a1.01 1.01 0 0 1-1.02-1c0-.552.456-1 1.02-1a1.01 1.01 0 0 1 1.022 1",
      clipRule: "evenodd"
    })]
  }));
};

const SvgDeviceStorage = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M4.5 15.456V19.5h15v-4.044zm14.836-1.5H4.664L6.409 4.5h11.183zM6.06 3c-.52 0-.968.372-1.062.884l-1.98 10.725a1 1 0 0 0-.017.196v5.115c0 .596.484 1.08 1.08 1.08h15.84A1.08 1.08 0 0 0 21 19.92v-5.115q0-.1-.018-.196L19.003 3.884A1.08 1.08 0 0 0 17.941 3zM18.44 17.72a.72.72 0 1 1-1.44 0 .72.72 0 0 1 1.44 0M12.628 5.28c-.871 0-1.656.372-2.203.963a2.2 2.2 0 0 0-2.046 1.824 2.622 2.622 0 0 0 1.601 4.877h3.917q.143.015.29.016a2.622 2.622 0 0 0 1.438-4.815 3 3 0 0 0-2.997-2.865m-1.445 1.926a1.8 1.8 0 0 1 3.238 1.236l-.038.424.388.175a1.422 1.422 0 0 1-.764 2.708l-.037-.005H9.907l-.037.005a1.422 1.422 0 0 1-.702-2.734l.384-.151-.004-.413V8.44a1 1 0 0 1 1.097-.995l.336.032z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgDisability = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M11 2.5c0 .9-.476 1.69-1.19 2.13l.82 3.12h5.87a.75.75 0 0 1 0 1.5h-5.475l1.053 4h5.032c.573 0 1.073.39 1.212.947l1.764 7.053H21a.75.75 0 1 1 0 1.5h-1.11a1.25 1.25 0 0 1-1.212-.947l-1.764-7.053h-5.029a1.25 1.25 0 0 1-1.208-.932L8.355 4.996A2.5 2.5 0 1 1 11 2.5m-3.863 7.75c.448-.123.863.237.863.703 0 .37-.266.68-.619.789a5.5 5.5 0 1 0 7.069 6.006c.055-.41.386-.748.8-.748s.754.337.71.749a7.001 7.001 0 1 1-8.824-7.498",
      clipRule: "evenodd"
    })]
  }));
};

const SvgDiscount = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M11 7.5a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0m-1.5 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0M13.5 17a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5m0-1.5a1 1 0 1 0 0-2 1 1 0 0 0 0 2",
        clipRule: "evenodd"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M15.05 8.01a.75.75 0 0 0-1.1-1.02l-6.5 7a.75.75 0 1 0 1.1 1.02z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "m12.325 2.63 8.463 8.503c.44.464.606.925.58 1.377-.028.466-.207.914-.604 1.372l-7.153 7.116-.047.037c-.515.32-.914.38-1.228.307h-.001c-.334-.076-.756-.299-1.334-.798l-8.256-8.316-.115-8.911c.006-.285.082-.426.162-.507.066-.066.212-.159.659-.18zm.05-1.63a1.5 1.5 0 0 1 1.07.445l8.511 8.551.006.007c.693.727 1.091 1.614 1.032 2.604-.053.88-.407 1.67-1.023 2.37l-.018.02-7.255 7.218-.186.15-.038.023c-.767.488-1.624.745-2.504.542-.711-.163-1.38-.584-2.06-1.175l-.023-.02-8.33-8.39v-.001a1.5 1.5 0 0 1-.44-1.04V12.3L1 3.313V3.3c.01-.58.175-1.175.636-1.64.492-.494 1.136-.633 1.761-.66L3.415 1z",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgDocs = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M9.25 7a.75.75 0 0 1 .75-.75h2.5a.75.75 0 0 1 0 1.5H10A.75.75 0 0 1 9.25 7M10 10.25a.75.75 0 0 0 0 1.5h9a.75.75 0 0 0 0-1.5zM9.25 15a.75.75 0 0 1 .75-.75h9a.75.75 0 0 1 0 1.5h-9a.75.75 0 0 1-.75-.75M10 18.25a.75.75 0 1 0 0 1.5h9a.75.75 0 1 0 0-1.5z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M8 0a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h13a2 2 0 0 0 2-2V6.329a2 2 0 0 0-.586-1.415L17.586.586A2 2 0 0 0 16.17 0zm13.5 22V6.75h-5a.75.75 0 0 1-.75-.75V1.5H8a.5.5 0 0 0-.5.5v20a.5.5 0 0 0 .5.5h13a.5.5 0 0 0 .5-.5M17.25 2.372V5.25h3.378z",
        clipRule: "evenodd"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M4 2.75c-.69 0-1.25.56-1.25 1.25v17.25c0 .69.56 1.25 1.25 1.25h3L8.5 24H4a2.75 2.75 0 0 1-2.75-2.75V4A2.75 2.75 0 0 1 4 1.25h3v1.5z",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgDocument = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M6.75 7a.75.75 0 0 1 .75-.75H10a.75.75 0 1 1 0 1.5H7.5A.75.75 0 0 1 6.75 7M7.5 10.25a.75.75 0 0 0 0 1.5h9a.75.75 0 0 0 0-1.5zM6.75 15a.75.75 0 0 1 .75-.75h9a.75.75 0 0 1 0 1.5h-9a.75.75 0 0 1-.75-.75M7.5 18.25a.75.75 0 1 0 0 1.5h9a.75.75 0 1 0 0-1.5z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M5.5 0a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h13a2 2 0 0 0 2-2V6.329a2 2 0 0 0-.586-1.415L15.086.586A2 2 0 0 0 13.67 0zM19 22V6.75h-5a.75.75 0 0 1-.75-.75V1.5H5.5A.5.5 0 0 0 5 2v20a.5.5 0 0 0 .5.5h13a.5.5 0 0 0 .5-.5M14.75 2.372V5.25h3.378z",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgDoubleArrowLeft = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M19.848 3.953a.75.75 0 1 1 1.026 1.094L13.458 12l7.416 6.953a.75.75 0 1 1-1.026 1.094l-7.766-7.281a1.05 1.05 0 0 1 0-1.532z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M10.848 3.953a.75.75 0 1 1 1.026 1.094L4.458 12l7.416 6.953a.75.75 0 1 1-1.026 1.094l-7.766-7.281a1.05 1.05 0 0 1 0-1.532z"
      })]
    })]
  }));
};

const SvgDoubleArrowRight = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M4.013 3.953a.75.75 0 1 0-1.026 1.094L10.403 12l-7.416 6.953a.75.75 0 1 0 1.026 1.094l7.767-7.281a1.05 1.05 0 0 0 0-1.532z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M13.013 3.953a.75.75 0 0 0-1.026 1.094L19.403 12l-7.416 6.953a.75.75 0 0 0 1.026 1.094l7.766-7.281a1.05 1.05 0 0 0 0-1.532z"
      })]
    })]
  }));
};

const SvgDownload = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M12 .984a.75.75 0 0 1 .75.75v12.955l2.72-2.72a.75.75 0 1 1 1.06 1.061l-3.858 3.859a.95.95 0 0 1-1.344 0L7.47 13.03a.75.75 0 0 1 1.06-1.06l2.72 2.72V1.733a.75.75 0 0 1 .75-.75"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M0 14.25a.75.75 0 0 1 1.5 0V21a.5.5 0 0 0 .5.5h20a.5.5 0 0 0 .5-.5v-6.75a.75.75 0 0 1 1.5 0V21a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2z"
      })]
    })]
  }));
};

const SvgEdit = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M16.669 1.611 3.62 14.66a.5.5 0 0 0-.147.354v4.242a.5.5 0 0 0 .5.5h4.243a.5.5 0 0 0 .353-.146L21.618 6.561s.695-.694.335-1.749c-.36-1.054-2.481-3.175-3.536-3.535a1.74 1.74 0 0 0-1.748.334M4.974 15.427v2.828h2.829L17.999 8.06 17 7.061l-2.47 2.47a.75.75 0 0 1-1.06-1.061L15.94 6l-.77-.77zm15.542-9.885L19.06 6.999 16.23 4.17l1.457-1.457.042-.021c.034-.015.088-.035.203.004q.001 0 .04.019.045.02.12.065.152.09.368.25c.287.217.61.501.924.815s.598.636.814.924q.162.216.251.368a2 2 0 0 1 .084.16c.039.115.019.169.004.203z",
        clipRule: "evenodd"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M2 21.25a.75.75 0 0 0 0 1.5h20a.75.75 0 1 0 0-1.5z"
      })]
    })]
  }));
};

const SvgEmail = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M2.618 4.5 12 12.989 21.382 4.5zM1.5 5.511v12.892l6.54-6.975zM21.94 19.5H2.529l6.624-7.065 2.01 1.818a1.25 1.25 0 0 0 1.677 0l2.28-2.063zm.56-1.6V5.512l-6.27 5.673zM0 5a2 2 0 0 1 2-2h20a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgEnterpriseMobilityManagement = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M8.33 9.57H6.71a.2.2 0 0 0-.2.2v1.62c0 .11.09.2.2.2h1.62a.2.2 0 0 0 .2-.2V9.77a.2.2 0 0 0-.2-.2M6.71 13.61h1.62c.11 0 .2.09.2.2v1.62a.2.2 0 0 1-.2.2H6.71a.2.2 0 0 1-.2-.2v-1.62c0-.11.09-.2.2-.2M14.89 5.53h-1.62a.2.2 0 0 0-.2.2v1.62c0 .11.09.2.2.2h1.62a.2.2 0 0 0 .2-.2V5.73a.2.2 0 0 0-.2-.2M18.43 5.53h-1.62a.2.2 0 0 0-.2.2v1.62c0 .11.09.2.2.2h1.62a.2.2 0 0 0 .2-.2V5.73a.2.2 0 0 0-.2-.2M13.27 9.57h1.62c.11 0 .2.09.2.2v1.62a.2.2 0 0 1-.2.2h-1.62a.2.2 0 0 1-.2-.2V9.77c0-.11.09-.2.2-.2M16.81 9.57h1.62c.11 0 .2.09.2.2v1.62a.2.2 0 0 1-.2.2h-1.62a.2.2 0 0 1-.2-.2V9.77c0-.11.09-.2.2-.2M14.89 13.61h-1.62a.2.2 0 0 0-.2.2v1.62c0 .11.09.2.2.2h1.62a.2.2 0 0 0 .2-.2v-1.62a.2.2 0 0 0-.2-.2M18.43 13.61h-1.62a.2.2 0 0 0-.2.2v1.62c0 .11.09.2.2.2h1.62a.2.2 0 0 0 .2-.2v-1.62a.2.2 0 0 0-.2-.2"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M12.81 2h6.09c1.24 0 2.25 1.01 2.25 2.25v17.43H3V7.53c0-1.24 1.01-2.25 2.25-2.25h5.31V4.25c0-1.24 1.01-2.25 2.25-2.25M4.5 7.53v12.65h6.06V6.78H5.25c-.41 0-.75.34-.75.75m7.56 12.66h7.59V4.25c0-.41-.34-.75-.75-.75h-6.09c-.41 0-.75.34-.75.75z",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgEntertainment = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      fillRule: "evenodd",
      clipRule: "evenodd",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M15 7a3 3 0 1 1-6 0 3 3 0 0 1 6 0m-1.5 0a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0M7 15a3 3 0 1 0 0-6 3 3 0 0 0 0 6m0-1.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3M20 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0m-1.5 0a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0M12 20a3 3 0 1 0 0-6 3 3 0 0 0 0 6m0-1.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M17.814 22.5A12 12 0 0 0 24 12c0-6.627-5.373-12-12-12S0 5.373 0 12s5.373 12 12 12h10.363a.75.75 0 0 0 0-1.5zM22.5 12c0 5.799-4.701 10.5-10.5 10.5S1.5 17.799 1.5 12 6.201 1.5 12 1.5 22.5 6.201 22.5 12"
      })]
    })]
  }));
};

const SvgExit = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M3.5.994a2.25 2.25 0 0 0-2.25 2.25V20.76c0 1.239.999 2.25 2.245 2.25h15.462a.75.75 0 0 0 0-1.5H3.495a.746.746 0 0 1-.745-.75V3.244a.75.75 0 0 1 .75-.75H19a.75.75 0 1 0 0-1.5z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M18.47 7.97a.75.75 0 0 1 1.06 0l3.359 3.358a.95.95 0 0 1 0 1.344L19.53 16.03a.75.75 0 1 1-1.06-1.06l2.22-2.22H8.75a.75.75 0 0 1 0-1.5h11.94l-2.22-2.22a.75.75 0 0 1 0-1.06"
      })]
    })]
  }));
};

const SvgExtraTime = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M14.94.363c.552.139.706.82.303 1.223-.2.2-.494.274-.77.207A10.5 10.5 0 0 0 12 1.5C6.201 1.5 1.5 6.201 1.5 12S6.201 22.5 12 22.5 22.5 17.799 22.5 12c0-.919-.118-1.81-.34-2.66a.81.81 0 0 1 .203-.782c.399-.398 1.072-.252 1.22.292.272 1.004.417 2.06.417 3.15 0 6.627-5.373 12-12 12S0 18.627 0 12 5.373 0 12 0c1.014 0 1.999.126 2.94.363"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M20.75 1a.75.75 0 0 0-1.5 0v2.25H17a.75.75 0 0 0 0 1.5h2.25V7a.75.75 0 0 0 1.5 0V4.75H23a.75.75 0 0 0 0-1.5h-2.25zM12 4.75a.75.75 0 0 1 .75.75v6.19l2.78 2.78a.75.75 0 1 1-1.06 1.06l-2.942-2.941a.95.95 0 0 1-.278-.672V5.5a.75.75 0 0 1 .75-.75"
      })]
    })]
  }));
};

const SvgFaceId = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M19 4.5a.5.5 0 0 1 .5.5v2.25a.75.75 0 0 0 1.5 0V4.5A1.5 1.5 0 0 0 19.5 3h-2.75a.75.75 0 0 0 0 1.5zM19.5 16.75a.75.75 0 0 1 1.5 0v2.75a1.5 1.5 0 0 1-1.5 1.5h-2.75a.75.75 0 0 1 0-1.5H19a.5.5 0 0 0 .5-.5zM8 20.25a.75.75 0 0 0-.75-.75H5a.5.5 0 0 1-.5-.5v-2.25a.75.75 0 0 0-1.5 0v2.75A1.5 1.5 0 0 0 4.5 21h2.75a.75.75 0 0 0 .75-.75M4.5 5a.5.5 0 0 1 .5-.5h2.25a.75.75 0 0 0 0-1.5H4.5A1.5 1.5 0 0 0 3 4.5v2.75a.75.75 0 0 0 1.5 0zM8 7.75a.75.75 0 0 1 .75.75v1a.75.75 0 0 1-1.5 0v-1A.75.75 0 0 1 8 7.75M12.75 8.5a.75.75 0 0 0-1.5 0v3.75H11a.75.75 0 0 0 0 1.5h.5c.69 0 1.25-.56 1.25-1.25zM16.75 8.5a.75.75 0 0 0-1.5 0v1a.75.75 0 0 0 1.5 0z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M8.916 15.376a.75.75 0 0 0-.832 1.248L8.5 16l-.416.624.002.001.002.002.006.004.02.012.064.04q.082.052.228.132c.194.105.471.244.815.381A7.6 7.6 0 0 0 12 17.75c1.122 0 2.094-.28 2.778-.554a8 8 0 0 0 1.044-.512l.064-.04.02-.013.006-.004.002-.002h.001s.001-.001-.415-.625l.415.625a.75.75 0 0 0-.83-1.25l-.006.004-.037.023a6.116 6.116 0 0 1-.82.401A6 6 0 0 1 12 16.25a6 6 0 0 1-2.221-.446 6 6 0 0 1-.82-.402l-.038-.023-.006-.004m0 0L8.5 16z",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgFacebook = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12m1.32-13.68H16l-.349 3.038h-2.33v6.844h-3.04V13.36L8 13.361v-3.04h2.28V8.57C10.28 6.26 11.785 5 13.847 5q1.044-.002 2.082.105v2.417h-1.42c-1.125 0-1.188.494-1.188 1.279z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgFault = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M12 10.75a.75.75 0 0 1 .75.75v5a.75.75 0 0 1-1.5 0v-5a.75.75 0 0 1 .75-.75M12 19.5a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M13.471 2.74c-.654-1.036-2.288-1.036-2.942 0L1.23 20.167c-.654 1.038.164 2.334 1.471 2.334H21.3c1.308 0 2.125-1.296 1.47-2.334zm7.487 18.428a.5.5 0 0 0 .44-.738L12.44 3.816a.5.5 0 0 0-.88 0L2.585 20.43a.5.5 0 0 0 .44.738z",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgFavouritesFilled = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M11.797 2.901A6.94 6.94 0 0 0 7.019 1C3.168 1-.45 4 .046 9.5.544 15 10.506 23 12 23s11.456-8 11.954-13.5S20.832 1 16.98 1A6.94 6.94 0 0 0 12 3.101a7 7 0 0 0-.203-.2",
      clipRule: "evenodd"
    })]
  }));
};

const SvgFavourites = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M12.356 4.88c-.196.2-.517.2-.712 0l-.711-.73A5.45 5.45 0 0 0 7.019 2.5c-1.543 0-3.001.6-4.02 1.706-1.003 1.088-1.68 2.778-1.465 5.158.09 1.002.643 2.28 1.617 3.725.954 1.415 2.22 2.853 3.543 4.15 1.32 1.296 2.665 2.42 3.753 3.21.547.396 1.006.692 1.35.882q.117.064.203.106.086-.042.203-.106c.344-.19.804-.486 1.35-.883 1.088-.79 2.432-1.913 3.753-3.208 1.323-1.298 2.589-2.736 3.543-4.151.974-1.444 1.526-2.723 1.617-3.725.215-2.38-.462-4.07-1.465-5.158C19.983 3.1 18.524 2.5 16.981 2.5c-1.534 0-2.918.63-3.914 1.65zm-.56-1.979A6.94 6.94 0 0 0 7.02 1C3.168 1-.45 4 .046 9.5.544 15 10.506 23 12 23s11.456-8 11.954-13.5S20.832 1 16.98 1A6.94 6.94 0 0 0 12 3.101a7 7 0 0 0-.203-.2",
      clipRule: "evenodd"
    })]
  }));
};

const SvgFeedback = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M3 4.5h18A1.5 1.5 0 0 1 22.5 6v10.5A1.5 1.5 0 0 1 21 18H5.315a2.5 2.5 0 0 0-1.433.452L1.5 20.119V6A1.5 1.5 0 0 1 3 4.5m2.315 15a1 1 0 0 0-.573.18L.787 22.45A.5.5 0 0 1 0 22.04V6a3 3 0 0 1 3-3h18a3 3 0 0 1 3 3v10.5a3 3 0 0 1-3 3zM6.19 9.138a.2.2 0 0 0-.38 0l-.326 1.004a.2.2 0 0 1-.19.138H4.237a.2.2 0 0 0-.118.362l.854.62a.2.2 0 0 1 .073.224l-.326 1.004a.2.2 0 0 0 .308.223l.854-.62a.2.2 0 0 1 .235 0l.854.62a.2.2 0 0 0 .307-.223l-.326-1.004a.2.2 0 0 1 .073-.224l.854-.62a.2.2 0 0 0-.118-.362H6.707a.2.2 0 0 1-.19-.138zm6 0a.2.2 0 0 0-.38 0l-.326 1.004a.2.2 0 0 1-.19.138h-1.056a.2.2 0 0 0-.118.362l.854.62a.2.2 0 0 1 .073.224l-.326 1.004a.2.2 0 0 0 .308.223l.854-.62a.2.2 0 0 1 .235 0l.854.62a.2.2 0 0 0 .307-.223l-.326-1.004a.2.2 0 0 1 .073-.224l.854-.62a.2.2 0 0 0-.118-.362h-1.055a.2.2 0 0 1-.19-.138zm5.62 0a.2.2 0 0 1 .38 0l.326 1.004a.2.2 0 0 0 .19.138h1.056a.2.2 0 0 1 .118.362l-.854.62a.2.2 0 0 0-.073.224l.326 1.004a.2.2 0 0 1-.307.223l-.854-.62a.2.2 0 0 0-.235 0l-.854.62a.2.2 0 0 1-.308-.223l.326-1.004a.2.2 0 0 0-.073-.224l-.854-.62a.2.2 0 0 1 .118-.362h1.056a.2.2 0 0 0 .19-.138z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgFilter = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
      fill: "currentColor",
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M12 1.25a.75.75 0 0 1 .75.75v4a.75.75 0 0 1-1.5 0V4.75H1.854a.75.75 0 1 1 0-1.5h9.396V2a.75.75 0 0 1 .75-.75M11.897 16.989a.75.75 0 0 1 .75.75v4a.75.75 0 0 1-1.5 0V20.5H1.75a.75.75 0 0 1 0-1.5h9.397v-1.262a.75.75 0 0 1 .75-.75M9 10a.75.75 0 0 1 1.5 0v1.25h11.646a.75.75 0 0 1 0 1.5H10.5v1.312a.75.75 0 1 1-1.5 0V10M16 3.25a.75.75 0 0 0 0 1.5h6.152a.75.75 0 1 0 0-1.5zM1.098 12a.75.75 0 0 1 .75-.75H6a.75.75 0 0 1 0 1.5H1.848a.75.75 0 0 1-.75-.75M16 19.25a.75.75 0 0 0 0 1.5h6.152a.75.75 0 1 0 0-1.5z"
      })
    })]
  }));
};

const SvgFitness = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M7.75 6a.75.75 0 0 0-1.5 0v12a.75.75 0 0 0 1.5 0v-5.25H16a.8.8 0 0 0 .25-.043V18a.75.75 0 0 0 1.5 0V6a.75.75 0 0 0-1.5 0v5.293a.8.8 0 0 0-.25-.043H7.75zM4.5 7.25a.75.75 0 0 1 .75.75v8a.75.75 0 0 1-1.5 0V8a.75.75 0 0 1 .75-.75m-2.5 2a.75.75 0 0 1 .75.75v4a.75.75 0 0 1-1.5 0v-4A.75.75 0 0 1 2 9.25m17.5-1.5a.75.75 0 0 1 .75.75V16a.75.75 0 0 1-1.5 0V8.5a.75.75 0 0 1 .75-.75M22.75 10a.75.75 0 0 0-1.5 0v4a.75.75 0 0 0 1.5 0z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgFlipArrow = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M5.791 14.126a.827.827 0 1 0 1.17-1.17L3.824 9.82h12.56c2.74 0 4.962 1.94 4.962 4.68s-2.222 4.846-4.962 4.846H13A.827.827 0 1 0 13 21h3.384C20.038 21 23 18.154 23 14.5s-2.962-6.334-6.616-6.334H3.824L6.96 5.029a.827.827 0 1 0-1.17-1.17L1.242 8.408a.827.827 0 0 0 0 1.17z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgFlipCamera = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
      fill: "currentColor",
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M20.904 16.733a.81.81 0 0 0-.883.36A9.5 9.5 0 0 1 12 21.5c-5.247 0-9.5-3.753-9.5-9v-.277a.775.775 0 0 0-.721-.77.72.72 0 0 0-.777.7L.136 17.64a.744.744 0 0 0 1.468.239l.214-1.284C3.46 20.464 7.4 23 12 23c3.948 0 7.41-2.08 9.35-5.204.257-.412.022-.938-.447-1.063M2.814 7.745a.804.804 0 0 0 .901-.397A9.5 9.5 0 0 1 21.5 12.114a.82.82 0 0 0 .347.684c.377.322 1.055.162 1.148-.427l.87-5.512a.743.743 0 0 0-1.468-.238l-.205 1.231C20.554 3.833 16.608 1 12 1 7.84 1 4.22 3.31 2.35 6.716c-.225.41.013.908.464 1.029"
      })
    })]
  }));
};

const SvgFolder = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M3.5 15.375V5.5h4.375L9.03 7.04c.217.29.558.46.92.46h7.55v.778a.75.75 0 0 0 1.5 0V7.15A1.15 1.15 0 0 0 17.85 6h-7.725L8.97 4.46A1.15 1.15 0 0 0 8.05 4h-4.9A1.15 1.15 0 0 0 2 5.15v12.978c0 .133.023.927.064 1.05a.65.65 0 0 0 .646.572h14.863a1 1 0 0 0 .928-.629l3.2-8a1 1 0 0 0-.928-1.371H6.427a1 1 0 0 0-.928.629zm.466 2.875 2.8-7h13.268l-2.8 7z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgFood = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M21.712.763a.75.75 0 0 1-.475.948l-2.56.854a.25.25 0 0 0-.153.144L18.008 4h5.242a.75.75 0 0 1 0 1.5h-.4l-1.67 16.699A2 2 0 0 1 19.19 24h-5.38c-.253 0-.495-.047-.719-.133q-.526.132-1.091.133H6a4.5 4.5 0 0 1-4.441-3.77 2.75 2.75 0 0 1-.975-4.175 1.75 1.75 0 0 1 .942-3.04L1.527 13A4.5 4.5 0 0 1 6 9h4.5l-.35-3.5h-.4a.75.75 0 0 1 0-1.5h6.642l.74-1.848a1.75 1.75 0 0 1 1.07-1.01l2.56-.854a.75.75 0 0 1 .95.475M12 9a4.5 4.5 0 0 1 4.473 4l.001.014a1.75 1.75 0 0 1 .942 3.041 2.75 2.75 0 0 1-.975 4.174 4.489 4.489 0 0 1-1.087 2.27h3.836a.5.5 0 0 0 .497-.45L21.344 5.5h-9.685l.35 3.5zm2.959 4A3 3 0 0 0 12 10.5H6A3 3 0 0 0 3.041 13zM1.5 14.75a.25.25 0 0 1 .25-.25h14.5a.25.25 0 1 1 0 .5H8.74a2 2 0 0 0-1.561.75L6.5 16.6l-.679-.848A2 2 0 0 0 4.26 15H1.75a.25.25 0 0 1-.25-.25m6.171 2.786L8.5 16.5h6.75a1.25 1.25 0 1 1 0 2.5H2.75a1.25 1.25 0 0 1 0-2.5H4.5l.829 1.036a1.5 1.5 0 0 0 2.342 0m-4.5 2.964A3 3 0 0 0 6 22.5h6a3 3 0 0 0 2.83-2z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgFraudHotline = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M7 0a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zm10 1.5h-1c-.173.299-.45.5-.82.5H9c-.5 0-.827-.201-1-.5H7a.5.5 0 0 0-.5.5v20a.5.5 0 0 0 .5.5h10a.5.5 0 0 0 .5-.5V2a.5.5 0 0 0-.5-.5m-5 4.75a.75.75 0 0 1 .75.75v7a.75.75 0 0 1-1.5 0V7a.75.75 0 0 1 .75-.75m0 11.25a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5",
      clipRule: "evenodd"
    })]
  }));
};

const SvgFreedomPricePlan = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      fillRule: "evenodd",
      clipRule: "evenodd",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M13.633 9.565a3.225 3.225 0 1 1 0 4.82L12 12.934l-1.633 1.451a3.225 3.225 0 1 1 0-4.82L12 11.016zm-.454 2.41 1.45-1.29a1.725 1.725 0 1 1 0 2.579zm-2.358 0-1.45-1.29a1.725 1.725 0 1 0 0 2.579z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M24 12c0 6.627-5.373 12-12 12S0 18.627 0 12 5.373 0 12 0s12 5.373 12 12m-1.5 0c0 5.799-4.701 10.5-10.5 10.5S1.5 17.799 1.5 12 6.201 1.5 12 1.5 22.5 6.201 22.5 12"
      })]
    })]
  }));
};

const SvgFuneralInsurance = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      d: "M21.5 15.12c-.2-.4-.6-.7-1.1-.6-.2 0-.4 0-.7.1-1.4.2-4 .4-5.7-.3.4-.2.7-.4 1-.7.8-.7 1.2-1.4 1.4-2.2.7-.8 1.1-1.8 1.1-2.9.3-.6.6-1.2.7-1.8s.1-1.2 0-1.7-.5-.8-1-.7c-.4 0-.8.4-.8.9q0 .3-.3.6c-.2.3-.5.5-.9.7.3-.4.4-.9.5-1.4s.1-.9 0-1.4-.5-.8-1-.7c-.5-.1-.9.2-.9.7 0 .1 0 .2-.2.4q-.3.45-.9.6c-.7.3-1.4.4-2.5.5-.5 0-1.1.1-1.7.3q-1.35.45-2.1 1.5l-.4-.4c-.4-.4-1.3-.7-2.2-.3-.7.3-1.8 1.1-1.8 3.6v.8h1.6c-.2 1.3-.3 3.6 1.5 5.4 2.1 2.1 4.9 1.9 5.8 1.8l3.3 2.3c.3.2.7.3 1.1.3s.9-.2 1.2-.5l4.8-3.7c.3-.3.4-.8.2-1.2M9 6.92c.4-.1.9-.2 1.4-.2 1.2-.1 2.1-.3 2.9-.7.1 0 .2-.1.3-.1v.2l-.1.8q-.9.3-2.1.3c-.7.1-1.4.1-2.1.3-.7.3-1.2.6-1.6.9l-.3-.3c.4-.6.9-.9 1.6-1.2m6.5 12.1c-.1.1-.3.1-.4 0l-3.8-2.7-.3.1c-.1 0-2.8.7-4.8-1.3-1.9-1.9-.9-4.7-.9-4.8l.4-1H3.5c.1-.9.4-1.4.8-1.6.3-.1.6-.1.7 0l1.6 1.7c-.3.3-.5.6-.7 1s0 .8.3 1c.4.2.8 0 1-.3.5-1 1.3-1.6 2.5-2 .6-.2 1.2-.2 1.9-.3 1.5-.1 2.7-.4 3.7-.8.4-.2.7-.4 1-.6-.1.1-.1.3-.2.4-.1.2-.2.4-.2.6 0 .8-.2 1.5-.7 2.1-.2.2-.3.4-.3.7-.1.5-.3.9-.9 1.4-.5.4-1.1.7-1.9 1h-1c-.4 0-.8.3-.8.8s.3.8.8.8h1.1c1.9 1.5 5 1.4 6.9 1.2z"
    })]
  }));
};

const SvgGallery = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M3 2.5h18a.5.5 0 0 1 .5.5v8.793l-4.259-2.71a1.25 1.25 0 0 0-1.555.17l-5.232 5.232-2.157-1.797a1.25 1.25 0 0 0-1.591-.007L2.5 16.121V3a.5.5 0 0 1 .5-.5m-.5 15.56V21a.5.5 0 0 0 .5.5h10.75a.75.75 0 0 1 0 1.5H3a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h18a2 2 0 0 1 2 2v10.17a.75.75 0 0 1-.75.75c-.212 0-.653-.287-.653-.287l-4.992-3.177-5.252 5.252a1.25 1.25 0 0 1-1.684.076l-2.173-1.811zM8 9.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3M8 11a3 3 0 1 0 0-6 3 3 0 0 0 0 6m8.97 5.97a.75.75 0 0 1 1.06 0l1.72 1.72 1.72-1.72a.75.75 0 1 1 1.06 1.06l-1.72 1.72 1.72 1.72a.75.75 0 1 1-1.06 1.06l-1.72-1.72-1.72 1.72a.75.75 0 1 1-1.06-1.06l1.72-1.72-1.72-1.72a.75.75 0 0 1 0-1.06",
      clipRule: "evenodd"
    })]
  }));
};

const SvgGames = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      fillRule: "evenodd",
      clipRule: "evenodd",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M7.665 7.851c.427 0 .774.362.774.809v1.617h1.47c.428 0 .775.362.775.808s-.347.809-.774.809H8.439v1.617c0 .446-.347.808-.774.808s-.775-.362-.775-.808v-1.617H5.42c-.428 0-.775-.362-.775-.809 0-.446.347-.808.774-.808H6.89V8.66c0-.447.347-.809.775-.809m10.451 2.021c0-.446.347-.808.774-.808h.011c.428 0 .775.362.775.808s-.347.809-.774.809h-.012c-.427 0-.774-.362-.774-.809m-3.368 2.426c0-.447.347-.809.775-.809h.01c.428 0 .775.362.775.809 0 .446-.347.808-.774.808h-.011c-.428 0-.775-.362-.775-.808"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M6.44 3h11.12c1.433 0 2.806.573 3.856 1.595C22.462 5.612 23.113 7 23.258 8.49l.005.05.004.043.007.061.001.014c.084.753.725 6.497.725 8.347 0 1.308-.482 2.573-1.355 3.514-.874.942-2.07 1.481-3.329 1.481-1.703 0-2.626-.996-3.163-1.576l-.039-.042-1.478-1.592a.5.5 0 0 0-.366-.168H9.73a.5.5 0 0 0-.366.168l-1.478 1.592-.039.042C7.31 21.004 6.387 22 4.684 22c-1.258 0-2.455-.539-3.33-1.481C.483 19.579 0 18.313 0 17.005c0-1.85.641-7.6.725-8.348l.001-.013.007-.061.001-.013.008-.08C.887 7 1.538 5.612 2.585 4.594L3.64 5.777a4.63 4.63 0 0 0-1.364 2.948l-.012.106c-.084.76-.716 6.435-.716 8.174 0 .896.33 1.755.919 2.389.588.633 1.385.989 2.217.989 1.045 0 1.568-.563 2.09-1.126l1.478-1.593c.392-.422.924-.66 1.478-.66h4.54c.554 0 1.086.238 1.478.66l1.478 1.593c.522.563 1.045 1.126 2.09 1.126.832 0 1.63-.356 2.217-.99a3.52 3.52 0 0 0 .919-2.388c0-1.74-.632-7.415-.716-8.174a3 3 0 0 1-.018-.17 4.63 4.63 0 0 0-1.358-2.883 4.02 4.02 0 0 0-2.8-1.161H6.44a4.02 4.02 0 0 0-2.8 1.16L2.585 4.594C3.635 3.574 5.008 3 6.44 3"
      })]
    })]
  }));
};

const SvgGift = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M12 1c1.928 0 3.262 1.363 3.77 3H22a1 1 0 0 1 1 1v3.5a1 1 0 0 1-1 1V21a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V9.5a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h6.23c.508-1.637 1.842-3 3.77-3M2.5 5.5V8h19V5.5zM9.825 4h4.35c-.428-.906-1.237-1.5-2.175-1.5s-1.747.594-2.175 1.5M20.5 9.5h-7.75V16a.75.75 0 0 1-1.5 0V9.5H3.5V21a.5.5 0 0 0 .5.5h16a.5.5 0 0 0 .5-.5z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgGrocery = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M2.75 0a.75.75 0 0 0 0 1.5h1.907l.807 5.378h-.012l1.383 9.192h.008l.655 4.365a1.75 1.75 0 0 0 1.73 1.49h7.799a.75.75 0 0 0 0-1.5H9.228a.25.25 0 0 1-.247-.212L8.36 16.07h10.26a1 1 0 0 0 .987-.836l1.199-7.192a1 1 0 0 0-.986-1.164H6.98L6.11 1.065A1.25 1.25 0 0 0 4.873 0zm5.385 14.57-.93-6.192H19.23l-1.032 6.192zm3.275 8.393a1.021 1.021 0 1 1-2.043 0 1.021 1.021 0 0 1 2.043 0m5.106 1.021a1.021 1.021 0 1 0 0-2.042 1.021 1.021 0 0 0 0 2.042",
      clipRule: "evenodd"
    })]
  }));
};

const SvgHomeInternet = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M16.45 17.6a.75.75 0 0 0 .15-1.05v-.001l-.002-.001-.002-.003-.006-.008-.02-.025-.065-.08a6.698 6.698 0 0 0-1.126-1.038c-.77-.56-1.922-1.144-3.379-1.144s-2.608.583-3.379 1.143a6.7 6.7 0 0 0-1.126 1.039l-.066.08-.019.025-.006.008-.002.003-.001.001S7.4 16.55 8 17l-.6-.45a.75.75 0 0 0 1.198.902l.001-.001.006-.008.039-.047a5.206 5.206 0 0 1 .86-.79c.604-.44 1.453-.856 2.496-.856s1.892.417 2.496.857a5.2 5.2 0 0 1 .86.79l.039.046.005.007.577-.433c-.573.43-.576.434-.576.434v.001a.75.75 0 0 0 1.049.148M13.5 19.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "m6.578 14.478-.002.002a.75.75 0 0 1-1.152-.96L6 14l-.576-.48v-.001l.002-.001.002-.003.008-.01.028-.032.097-.109a11.146 11.146 0 0 1 1.694-1.477c1.13-.798 2.782-1.637 4.745-1.637s3.614.84 4.745 1.637a11 11 0 0 1 1.694 1.477q.063.07.097.11l.028.03.008.01.002.004h.001s.001.002-.575.482l.576-.48a.75.75 0 0 1-1.151.961h-.001l-.002-.003-.016-.019-.073-.081a9.648 9.648 0 0 0-1.453-1.265c-.994-.702-2.343-1.363-3.88-1.363s-2.886.66-3.88 1.363a9.7 9.7 0 0 0-1.453 1.265l-.073.081z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "m1.441 9.607.809-.589V22c0 .966.784 1.75 1.75 1.75h16A1.75 1.75 0 0 0 21.75 22V9.018l.809.589a.75.75 0 0 0 .882-1.214L13.06.5A1.75 1.75 0 0 0 11 .5L.559 8.393a.75.75 0 1 0 .882 1.214m10.735-7.894a.25.25 0 0 0-.294 0L3.747 7.93 3.75 8v14c0 .138.112.25.25.25h16a.25.25 0 0 0 .25-.25V8q0-.036.003-.07z",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgHome = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M22.542 10.093 22 9.675V22a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V9.675l-.541.418A.75.75 0 1 1 .54 8.906l9.546-7.376 1.6-1.28a.5.5 0 0 1 .625 0l1.601 1.28 9.546 7.376a.75.75 0 1 1-.918 1.187M12 1.948l-.986.761L3.5 8.721V22a.5.5 0 0 0 .5.5h4.75v-6c0-.967.784-1.75 1.75-1.75H14c.966 0 1.75.783 1.75 1.75v6H20a.5.5 0 0 0 .5-.5V8.72l-7.514-6.01zM14.25 22.5v-6a.25.25 0 0 0-.25-.25h-3.5a.25.25 0 0 0-.25.25v6z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgHourGlass = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M6.25 1.75A.75.75 0 0 1 7 1h10a.75.75 0 0 1 0 1.5h-.25v5.25c0 1.68-.872 3.155-2.187 4a4.75 4.75 0 0 1 2.187 4V21H17a.75.75 0 0 1 0 1.5H7A.75.75 0 0 1 7 21h.25v-5.25c0-1.68.872-3.155 2.187-4a4.75 4.75 0 0 1-2.187-4V2.5H7a.75.75 0 0 1-.75-.75M12 11a3.25 3.25 0 0 0 3.25-3.25V2.5h-6.5v5.25A3.25 3.25 0 0 0 12 11m0 1.5a3.25 3.25 0 0 0-3.25 3.25V21h6.5v-5.25A3.25 3.25 0 0 0 12 12.5",
      clipRule: "evenodd"
    })]
  }));
};

const SvgIct = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      fillRule: "evenodd",
      clipRule: "evenodd",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M5.243 8.6a2.6 2.6 0 1 1 5.2 0 2.6 2.6 0 0 1-5.2 0m2.6-1.4a1.4 1.4 0 1 0 0 2.8 1.4 1.4 0 0 0 0-2.8"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M6.243 3.7a.7.7 0 0 1 .7-.7h1.8a.7.7 0 0 1 .7.7v.586q.163.06.32.132l.585-.586a.7.7 0 0 1 .99 0l1.273 1.273a.7.7 0 0 1 0 .99l-.586.586q.072.156.132.319h.586a.7.7 0 0 1 .7.7v1.8a.7.7 0 0 1-.7.7h-.586q-.06.163-.132.319l.586.586a.7.7 0 0 1 0 .99l-1.273 1.273a.7.7 0 0 1-.99 0l-.586-.586q-.156.072-.319.132v.586a.7.7 0 0 1-.7.7h-1.8a.7.7 0 0 1-.7-.7v-.586a5 5 0 0 1-.319-.132l-.586.586a.7.7 0 0 1-.99 0l-1.272-1.273a.7.7 0 0 1 0-.99l.586-.586a5 5 0 0 1-.133-.319h-.586a.7.7 0 0 1-.7-.7V7.7a.7.7 0 0 1 .7-.7h.586q.06-.162.133-.319l-.586-.586a.7.7 0 0 1 0-.99l1.272-1.273a.7.7 0 0 1 .99 0l.586.586q.157-.072.32-.132zm1.4.5a.2.2 0 0 0-.2.2v.636a.2.2 0 0 1-.15.194l-.3.077c-.312.08-.606.204-.876.363l-.267.158a.2.2 0 0 1-.244-.03l-.621-.622a.2.2 0 0 0-.283 0l-.283.283a.2.2 0 0 0 0 .282l.622.622a.2.2 0 0 1 .03.243l-.157.267c-.16.27-.283.565-.364.877l-.077.3a.2.2 0 0 1-.194.15h-.636a.2.2 0 0 0-.2.2v.4c0 .11.09.2.2.2h.636a.2.2 0 0 1 .194.15l.077.3q.122.47.364.877l.158.267a.2.2 0 0 1-.031.243l-.622.622a.2.2 0 0 0 0 .282l.283.283a.2.2 0 0 0 .283 0l.621-.621a.2.2 0 0 1 .244-.031l.267.158q.407.241.876.363l.3.077a.2.2 0 0 1 .15.194v.636c0 .11.09.2.2.2h.4a.2.2 0 0 0 .2-.2v-.636a.2.2 0 0 1 .15-.194l.3-.077c.312-.08.607-.203.877-.363l.267-.158a.2.2 0 0 1 .243.03l.622.622a.2.2 0 0 0 .283 0l.283-.283a.2.2 0 0 0 0-.282l-.622-.622a.2.2 0 0 1-.03-.243l.157-.267q.242-.407.363-.877l.078-.3a.2.2 0 0 1 .193-.15h.636a.2.2 0 0 0 .2-.2v-.4a.2.2 0 0 0-.2-.2h-.636a.2.2 0 0 1-.193-.15l-.078-.3a3.4 3.4 0 0 0-.363-.877l-.158-.267a.2.2 0 0 1 .031-.243l.622-.622a.2.2 0 0 0 0-.282l-.283-.283a.2.2 0 0 0-.283 0l-.622.621a.2.2 0 0 1-.243.031L9.57 5.67a3.4 3.4 0 0 0-.876-.363l-.3-.077a.2.2 0 0 1-.15-.194V4.4a.2.2 0 0 0-.2-.2z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M3.943 14a.7.7 0 0 0-.7.7v1.194a1 1 0 0 0-.179.381l-1.038 4.5A1 1 0 0 0 3 22h18.486a1 1 0 0 0 .975-1.225l-1.039-4.5a1 1 0 0 0-.179-.381V6a1 1 0 0 0-1-1h-6.3a.7.7 0 0 0-.7.7v.1a.7.7 0 0 0 .7.7h5.8v9h-15v-.8a.7.7 0 0 0-.7-.7zm16.107 3H4.437l-.808 3.5h17.229z"
      })]
    })]
  }));
};

const SvgIdBook = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M7.75 4.5a.75.75 0 0 0-1.5 0v2a.75.75 0 0 0 1.5 0zM9.5 3.75a.75.75 0 0 1 .75.75v2a.75.75 0 0 1-1.5 0v-2a.75.75 0 0 1 .75-.75M12.75 4.5a.75.75 0 0 0-1.5 0v2a.75.75 0 0 0 1.5 0zM14.5 3.75a.75.75 0 0 1 .75.75v2a.75.75 0 0 1-1.5 0v-2a.75.75 0 0 1 .75-.75M17.75 4.5a.75.75 0 0 0-1.5 0v2a.75.75 0 0 0 1.5 0z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M19 24H5a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v20a2 2 0 0 1-2 2M5 1.5h14a.5.5 0 0 1 .5.5v20a.5.5 0 0 1-.5.5h-4.125l-.108-1.29A3.5 3.5 0 0 0 11.28 18h-.78a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7h-.78a3.5 3.5 0 0 0-3.487 3.21l-.108 1.29H5a.5.5 0 0 1-.5-.5V2a.5.5 0 0 1 .5-.5m8.273 19.834.097 1.166H7.63l.097-1.166A2 2 0 0 1 9.72 19.5h1.56a2 2 0 0 1 1.993 1.834M12.5 14.5a2 2 0 1 1-4 0 2 2 0 0 1 4 0",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgImage = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      fillRule: "evenodd",
      clipRule: "evenodd",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M11 8a3 3 0 1 1-6 0 3 3 0 0 1 6 0M9.5 8a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M3 1a2 2 0 0 0-2 2v18a2 2 0 0 0 2 2h18a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2zm18 1.5H3a.5.5 0 0 0-.5.5v13.122l4.206-3.441a1.25 1.25 0 0 1 1.591.007l2.157 1.797 5.179-5.178a1.25 1.25 0 0 1 1.724-.041l4.143 3.766V3a.5.5 0 0 0-.5-.5M2.5 21v-2.94l4.996-4.087 2.173 1.81a1.25 1.25 0 0 0 1.684-.075l5.172-5.172 4.97 4.519.005.004V21a.5.5 0 0 1-.5.5H3a.5.5 0 0 1-.5-.5"
      })]
    })]
  }));
};

const SvgInfo = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M11 7.6a.6.6 0 0 1 .6-.6h.8a.6.6 0 0 1 .6.6v.8a.6.6 0 0 1-.6.6h-.8a.6.6 0 0 1-.6-.6zM10.25 11a.75.75 0 0 1 .75-.75h.7c.58 0 1.05.47 1.05 1.05v5.45H13a.75.75 0 0 1 0 1.5h-.7c-.58 0-1.05-.47-1.05-1.05v-5.45H11a.75.75 0 0 1-.75-.75"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M24 12c0 6.627-5.373 12-12 12S0 18.627 0 12 5.373 0 12 0s12 5.373 12 12m-1.5 0c0 5.799-4.701 10.5-10.5 10.5S1.5 17.799 1.5 12 6.201 1.5 12 1.5 22.5 6.201 22.5 12",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgInstagram = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12M8.5 4.5a4 4 0 0 0-4 4v7a4 4 0 0 0 4 4h7a4 4 0 0 0 4-4v-7a4 4 0 0 0-4-4zm6 7.5a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0m1.5 0a4 4 0 1 1-8 0 4 4 0 0 1 8 0m1-4a1 1 0 1 1-2 0 1 1 0 0 1 2 0",
      clipRule: "evenodd"
    })]
  }));
};

const SvgInsurance = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M20.369 5.599 12 1.658l-8.369 3.94c-.636 6.133 1.14 10.139 3.198 12.702 1.928 2.402 4.177 3.621 5.171 4.076.994-.455 3.242-1.674 5.171-4.076 2.059-2.563 3.834-6.569 3.198-12.701m1.46-.454a1 1 0 0 0-.562-.781L12.426.2a1 1 0 0 0-.852 0L2.733 4.364a1 1 0 0 0-.561.78c-1.534 13.39 7.664 17.955 9.51 18.73a.8.8 0 0 0 .636 0c1.846-.775 11.044-5.34 9.51-18.73",
      clipRule: "evenodd"
    })]
  }));
};

const SvgInternetOfThings = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M19.503 11.483a.5.5 0 0 1-.264-.554l.175-.799a4.5 4.5 0 0 0 .102-.954c0-2.534-2.134-4.588-4.766-4.588-1.936 0-3.605 1.11-4.352 2.713l-.394.846a.5.5 0 0 1-.572.274l-.945-.23a2.6 2.6 0 0 0-.612-.073c-1.296 0-2.361.96-2.466 2.18l-.067.772a.5.5 0 0 1-.38.443l-.793.193c-.874.213-1.519.977-1.519 1.882 0 1.043.854 1.893 1.925 1.94v-.002h2.2v-1.673a1.3 1.3 0 0 1-.55-1.059c0-.73.616-1.323 1.375-1.323.76 0 1.375.592 1.375 1.323 0 .433-.216.818-.55 1.059v2.361c0 .497-.419.9-.935.9H6.225v1.504c.334.241.55.626.55 1.059 0 .73-.616 1.323-1.375 1.323-.76 0-1.375-.593-1.375-1.323 0-.433.216-.818.55-1.06v-1.5C2.592 17.07 1 15.508 1 13.588c0-1.65 1.176-3.034 2.764-3.421.176-2.037 1.95-3.638 4.111-3.638q.528.002 1.017.122C9.895 4.499 12.141 3 14.75 3c3.544 0 6.416 2.765 6.416 6.176q0 .66-.138 1.282c1.172.589 1.972 1.77 1.972 3.13 0 1.92-1.592 3.482-3.575 3.529v1.5c.334.242.55.627.55 1.06 0 .73-.616 1.323-1.375 1.323-.76 0-1.375-.593-1.375-1.323 0-.433.216-.818.55-1.06v-1.503H16.51c-.516 0-.935-.403-.935-.9v-2.361a1.3 1.3 0 0 1-.55-1.059c0-.73.616-1.323 1.375-1.323.76 0 1.375.592 1.375 1.323 0 .433-.216.818-.55 1.059v1.673h2.2v.002c1.071-.046 1.925-.897 1.925-1.94 0-.746-.437-1.396-1.085-1.722z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M13.375 12.794c0 .433-.216.818-.55 1.059v4.765c.334.241.55.626.55 1.059 0 .73-.616 1.323-1.375 1.323-.76 0-1.375-.593-1.375-1.323 0-.433.216-.818.55-1.06v-4.764a1.3 1.3 0 0 1-.55-1.059c0-.73.616-1.323 1.375-1.323.76 0 1.375.592 1.375 1.323"
      })]
    })]
  }));
};

const SvgKids = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M2.443 6.726c0-1.805 1.583-3.322 3.607-3.322 1.14 0 2.146.485 2.804 1.233C6.57 5.446 4.71 7.11 3.68 9.231c-.765-.614-1.237-1.513-1.237-2.505m.71 3.871C1.86 9.75 1 8.337 1 6.727 1 4.086 3.292 2 6.05 2c1.806 0 3.403.89 4.297 2.244a9.5 9.5 0 0 1 3.228-.013C14.48 2.883 16.09 2 17.904 2 20.68 2 23 4.08 23 6.726c0 1.607-.863 3.013-2.156 3.861a8.7 8.7 0 0 1 .352 2.463C21.196 17.993 17.08 22 12 22s-9.196-4.007-9.196-8.95c0-.85.122-1.673.35-2.453m14.751-7.193c-1.145 0-2.155.477-2.82 1.211 2.307.8 4.19 2.471 5.23 4.607.77-.615 1.244-1.51 1.244-2.496 0-1.798-1.597-3.322-3.654-3.322M4.245 13.05c0-4.168 3.472-7.546 7.754-7.546 4.283 0 7.754 3.378 7.754 7.546a7.35 7.35 0 0 1-.829 3.4c-1.674-1.969-4.15-3.224-6.924-3.224s-5.25 1.256-6.925 3.224a7.35 7.35 0 0 1-.83-3.4m1.652 4.656A7.82 7.82 0 0 0 12 20.597a7.82 7.82 0 0 0 6.103-2.89 7.7 7.7 0 0 0-4.29-2.856 2 2 0 0 1-3.623 0 7.7 7.7 0 0 0-4.292 2.856",
      clipRule: "evenodd"
    })]
  }));
};

const SvgLaptop = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M3 4v10.5l-1.69 3.662A2 2 0 0 0 3.126 21h17.748a2 2 0 0 0 1.816-2.838L21 14.5V4a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2m5-.5H5a.5.5 0 0 0-.5.5v10.5h15V4a.5.5 0 0 0-.5-.5h-3a1 1 0 0 1-1 1H9a1 1 0 0 1-1-1M20.04 16l1.288 2.79a.5.5 0 0 1-.454.71H3.126a.5.5 0 0 1-.454-.71L3.96 16z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgLearn = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M23 9.922a.77.77 0 0 1-.375.661l-.78.466v6.123a.77.77 0 1 1-1.54 0V11.97l-1.154.69v4.457c0 1.318-1.067 2.293-2.291 2.893-1.276.625-2.984.99-4.828.99s-3.553-.365-4.829-.99c-1.224-.6-2.291-1.575-2.291-2.893V12.7l-3.537-2.115a.77.77 0 0 1-.001-1.324l10.23-6.15a.77.77 0 0 1 .792 0l10.23 6.15c.232.14.374.39.374.662m-10.606 6.78 5.218-3.12v3.535c0 .4-.355.982-1.428 1.508-1.023.5-2.49.833-4.153.833s-3.129-.332-4.152-.833c-1.073-.526-1.428-1.107-1.428-1.508V13.62l5.154 3.083a.77.77 0 0 0 .79 0M12 4.67 3.27 9.92l8.73 5.222 8.732-5.223z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgLifeCover = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M21.503 7.528a.81.81 0 0 0 .724.472c.532 0 .902-.527.68-1.01C21.01 2.864 16.84 0 12 0S2.99 2.864 1.092 6.99C.87 7.473 1.241 8 1.772 8c.313 0 .592-.19.725-.472A10.5 10.5 0 0 1 12 1.5c4.2 0 7.823 2.465 9.503 6.028"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M2.252 19a11.95 11.95 0 0 1-2.21-8h1.505v.006q.284.009.57.03c2.098.164 3.96.84 5.507 1.896.089-1.147.49-2.316.957-3.344.73-1.605 1.706-3.044 2.296-3.852a1.384 1.384 0 0 1 2.246 0c.59.808 1.566 2.247 2.296 3.852.466 1.026.867 2.192.957 3.338 1.545-1.056 3.403-1.73 5.498-1.892q.29-.023.58-.032L22.452 11h.088q.168-.005.333-.003V11h1.085q.04.495.041 1c0 6.377-4.974 11.591-11.253 11.977q-.348.021-.7.023H12c-4.015 0-7.57-1.972-9.748-5m17.574 0a10.46 10.46 0 0 0 2.662-6.498 11 11 0 0 0-.497.027c-5.384.419-8.909 4.673-9.012 9.926A10.48 10.48 0 0 0 19.826 19M12 6.742c.566.786 1.418 2.07 2.053 3.467.677 1.49 1.032 2.942.738 4.041-1.292 1.31-2.247 2.948-2.792 4.788-.544-1.836-1.498-3.47-2.787-4.778-.299-1.1.056-2.557.735-4.05.635-1.399 1.487-2.682 2.053-3.468M1.512 12.505q.243.008.489.027c5.383.42 8.916 4.67 9.02 9.923-5.174-.478-9.26-4.711-9.51-9.95",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgLight = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M12.75 1a.75.75 0 0 0-1.5 0v2.5a.75.75 0 0 0 1.5 0zM3.47 3.47a.75.75 0 0 1 1.06 0l2 2a.75.75 0 0 1-1.06 1.06l-2-2a.75.75 0 0 1 0-1.06"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M12 19a7 7 0 1 0 0-14 7 7 0 0 0 0 14m0-1.5a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11",
        clipRule: "evenodd"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M12 19.75a.75.75 0 0 1 .75.75V23a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 .75-.75M1 11.25a.75.75 0 0 0 0 1.5h2.5a.75.75 0 0 0 0-1.5zM19.75 12a.75.75 0 0 1 .75-.75H23a.75.75 0 0 1 0 1.5h-2.5a.75.75 0 0 1-.75-.75M20.53 4.53a.75.75 0 0 0-1.06-1.06l-2 2a.75.75 0 0 0 1.06 1.06zM17.47 17.47a.75.75 0 0 1 1.06 0l2 2a.75.75 0 1 1-1.06 1.06l-2-2a.75.75 0 0 1 0-1.06M6.53 18.53a.75.75 0 1 0-1.06-1.06l-2 2a.75.75 0 1 0 1.06 1.06z"
      })]
    })]
  }));
};

const SvgLink = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "m13.891 11.17.145.144a3 3 0 0 0 4.242 0l3.536-3.536a3 3 0 0 0 0-4.242L20.4 2.12a3 3 0 0 0-4.243 0l-3.536 3.536a3 3 0 0 0 0 4.243l.21.209-2.222 2.222-.21-.21a3 3 0 0 0-4.242 0l-3.536 3.536a3 3 0 0 0 0 4.243l1.415 1.414a3 3 0 0 0 4.242 0l3.536-3.536a3 3 0 0 0 0-4.242l-.145-.145zm6.862-6.574L19.34 3.182a1.5 1.5 0 0 0-2.121 0l-3.536 3.536a1.5 1.5 0 0 0 0 2.12l.21.21L14.97 7.97a.75.75 0 1 1 1.06 1.06l-1.078 1.079.144.144a1.5 1.5 0 0 0 2.122 0l3.535-3.535a1.5 1.5 0 0 0 0-2.122M9.548 13.391 8.47 14.47a.75.75 0 0 0 1.06 1.06l1.079-1.078.144.144a1.5 1.5 0 0 1 0 2.122l-3.535 3.535a1.5 1.5 0 0 1-2.122 0L3.682 18.84a1.5 1.5 0 0 1 0-2.121l3.536-3.536a1.5 1.5 0 0 1 2.121 0z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgLiquidDamage = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
      fill: "currentColor",
      clipPath: "url(#liquid-damage_svg__a)",
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M7 0a2 2 0 0 0-2 2v6.25a.75.75 0 0 0 1.5 0V2a.5.5 0 0 1 .5-.5h1c.173.299.5.5 1 .5h6.18c.37 0 .647-.201.82-.5h1a.5.5 0 0 1 .5.5v6.25a.75.75 0 0 0 1.5 0V2a2 2 0 0 0-2-2zM19 19.75a.75.75 0 1 0-1.5 0V22a.5.5 0 0 1-.5.5H7a.5.5 0 0 1-.5-.5v-2.25a.75.75 0 0 0-1.5 0V22a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2zM1.599 9.549A.75.75 0 0 0 .4 10.45L1 10l-.6.45.001.002.002.002.006.008.018.023a5 5 0 0 0 .286.334c.191.209.47.487.819.767.683.546 1.722 1.164 2.968 1.164 1.083 0 2.106-.47 2.862-.931.426-.261.795-.537 1.076-.765.229.228.525.494.877.747.667.477 1.596.949 2.685.949 1.09 0 2.018-.472 2.685-.95.352-.252.649-.518.877-.746.281.229.65.504 1.077.765.755.462 1.778.931 2.861.931 1.246 0 2.285-.618 2.969-1.164a7.4 7.4 0 0 0 1.104-1.101l.018-.023.006-.008.002-.002v-.001S23.6 10.45 23 10l.6.45a.75.75 0 0 0-1.2-.9l-.008.01-.04.05a5.863 5.863 0 0 1-.82.804c-.567.454-1.278.836-2.032.836-.677 0-1.415-.306-2.08-.711a8.6 8.6 0 0 1-1.325-1.007.856.856 0 0 0-1.245.081 5.7 5.7 0 0 1-1.038.968c-.532.38-1.157.669-1.812.669s-1.28-.288-1.812-.669a5.7 5.7 0 0 1-1.037-.968.856.856 0 0 0-1.246-.081c-.178.166-.676.61-1.326 1.007-.664.406-1.402.711-2.079.711-.754 0-1.465-.382-2.031-.836a6 6 0 0 1-.861-.854zM.55 14.4a.75.75 0 0 1 1.049.149l.009.011.04.05q.056.07.17.196c.153.166.375.388.65.608.567.454 1.278.836 2.032.836.677 0 1.415-.306 2.08-.711a8.6 8.6 0 0 0 1.325-1.007.856.856 0 0 1 1.246.081c.137.167.511.591 1.037.968.532.38 1.157.669 1.812.669s1.28-.288 1.812-.669c.526-.377.9-.801 1.038-.968a.856.856 0 0 1 1.245-.081c.178.166.676.61 1.326 1.007.664.406 1.402.711 2.079.711.754 0 1.465-.382 2.032-.836a6 6 0 0 0 .86-.854l.008-.01a.75.75 0 0 1 1.2.9L23 15l.6.45-.001.002-.002.002-.006.008-.018.023-.062.077a7.37 7.37 0 0 1-1.043 1.024c-.683.546-1.722 1.164-2.968 1.164-1.083 0-2.106-.47-2.861-.931a10 10 0 0 1-1.077-.765 7 7 0 0 1-.877.747c-.667.477-1.596.949-2.685.949-1.09 0-2.018-.472-2.685-.95a7 7 0 0 1-.877-.746c-.281.229-.65.504-1.076.765-.756.462-1.779.931-2.862.931-1.246 0-2.285-.618-2.968-1.164a7.4 7.4 0 0 1-1.105-1.101l-.018-.023-.006-.008-.002-.002v-.001S.4 15.45 1 15l-.6.45a.75.75 0 0 1 .15-1.05"
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("defs", {
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("clipPath", {
        id: "liquid-damage_svg__a",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "M0 0h24v24H0z"
        })
      })
    })]
  }));
};

const SvgList = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M4.8 5.6h17.4a.8.8 0 1 0 0-1.6H4.8a.8.8 0 1 0 0 1.6m17.4 7.2H4.8a.8.8 0 0 1 0-1.6h17.4a.8.8 0 1 1 0 1.6M4.8 20h17.4a.8.8 0 1 0 0-1.6H4.8a.8.8 0 0 0 0 1.6M2.6 4.8a.8.8 0 1 1-1.6 0 .8.8 0 0 1 1.6 0m0 7.2A.8.8 0 1 1 1 12a.8.8 0 0 1 1.6 0m-.8 8a.8.8 0 1 0 0-1.6.8.8 0 0 0 0 1.6",
      clipRule: "evenodd"
    })]
  }));
};

const SvgLocationPin = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M15 7.5a3 3 0 1 1-6 0 3 3 0 0 1 6 0m-1.5 0a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0",
        clipRule: "evenodd"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M12.605 18.484C14.388 16.907 19.5 11.954 19.5 7c0-3.866-3-7-7.5-7S4.5 3.134 4.5 7c0 4.954 5.112 9.907 6.895 11.484.35.31.86.31 1.21 0m2.905-5.36C16.948 11.153 18 8.997 18 7c0-2.988-2.278-5.5-6-5.5S6 4.012 6 7c0 1.998 1.052 4.155 2.49 6.123 1.22 1.67 2.606 3.055 3.51 3.887.904-.832 2.29-2.217 3.51-3.887",
        clipRule: "evenodd"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M8 16.191a.732.732 0 0 0-.871-.727C3.497 16.2 1 17.73 1 19.5 1 21.985 5.925 24 12 24s11-2.015 11-4.5c0-1.77-2.497-3.3-6.129-4.036a.732.732 0 0 0-.871.727c0 .368.265.68.625.754.976.2 1.848.46 2.585.761.889.364 1.509.759 1.883 1.12.37.358.407.585.407.674s-.038.316-.407.673c-.374.362-.994.757-1.883 1.12-1.77.725-4.318 1.207-7.21 1.207s-5.44-.482-7.21-1.206c-.889-.364-1.509-.759-1.883-1.12-.37-.358-.407-.585-.407-.674s.038-.316.407-.673c.374-.362.994-.757 1.883-1.12a14.7 14.7 0 0 1 2.585-.762A.775.775 0 0 0 8 16.19"
      })]
    })]
  }));
};

const SvgLockOpen = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M16 5.5V8H5.5A3.5 3.5 0 0 0 2 11.5v9A3.5 3.5 0 0 0 5.5 24h13a3.5 3.5 0 0 0 3.5-3.5v-9A3.5 3.5 0 0 0 18.5 8h-1V5.5a5.5 5.5 0 0 0-10.95-.748c-.055.41.286.748.7.748s.743-.339.82-.746A4.001 4.001 0 0 1 16 5.5m-8.636 4H5.5a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h13a2 2 0 0 0 2-2v-9a2 2 0 0 0-2-2H7.364m5.386 7.3a1.5 1.5 0 1 0-1.5 0v1.7a.75.75 0 0 0 1.5 0z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgLock = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M16 5.5V8H8V5.5a4 4 0 1 1 8 0M6.5 8V5.5a5.5 5.5 0 1 1 11 0V8h1a3.5 3.5 0 0 1 3.5 3.5v9a3.5 3.5 0 0 1-3.5 3.5h-13A3.5 3.5 0 0 1 2 20.5v-9A3.5 3.5 0 0 1 5.5 8zm.864 1.5H5.5a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h13a2 2 0 0 0 2-2v-9a2 2 0 0 0-2-2H7.364m5.386 7.3a1.5 1.5 0 1 0-1.5 0v1.7a.75.75 0 0 0 1.5 0z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgLogout = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 25",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M16.425 11.25a.75.75 0 0 1 0 1.5H3.47l2.72 2.72a.75.75 0 1 1-1.061 1.06L1.27 12.672a.95.95 0 0 1 0-1.344L5.13 7.47a.75.75 0 0 1 1.06 1.06l-2.72 2.72z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M14.258 24a.75.75 0 0 1 0-1.5h6.75a.5.5 0 0 0 .5-.5V2a.5.5 0 0 0-.5-.5h-6.75a.75.75 0 0 1 0-1.5h6.75a2 2 0 0 1 2 2v20a2 2 0 0 1-2 2z"
      })]
    })]
  }));
};

const SvgMadeToShare = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
      fill: "currentColor",
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M5 2a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v2.25a.75.75 0 0 1-1.5 0V2a.5.5 0 0 0-.5-.5h-1c-.173.299-.45.5-.82.5H9c-.5 0-.827-.201-1-.5H7a.5.5 0 0 0-.5.5v6.25a.75.75 0 0 1-1.5 0zM18.25 14a.75.75 0 0 0-.75.75V22a.5.5 0 0 1-.5.5H7a.5.5 0 0 1-.5-.5v-3.25a.75.75 0 0 0-1.5 0V22a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2v-7.25a.75.75 0 0 0-.75-.75M19.78 6.22a.75.75 0 0 0-1.06 1.06l1.22 1.22h-8.19a.75.75 0 1 0 0 1.5h8.19l-1.22 1.22a.75.75 0 1 0 1.06 1.06l2.288-2.288a1.05 1.05 0 0 0 0-1.484zM5.656 10.22a.75.75 0 0 0-1.06 0l-2.288 2.287a1.05 1.05 0 0 0 0 1.486l2.287 2.287a.75.75 0 0 0 1.061-1.06L4.436 14h8.19a.75.75 0 0 0 0-1.5h-8.19l1.22-1.22a.75.75 0 0 0 0-1.06"
      })
    })]
  }));
};

const SvgMade4U = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M16.648 9.066V6l-.438.088v.925a1.7 1.7 0 0 0-.562-.106c-.669 0-1.177.491-1.177 1.181 0 .642.429 1.032.96 1.032.332 0 .615-.151.792-.341v.287zm-.439-.623V7.425a1.1 1.1 0 0 0-.566-.169c-.403 0-.717.288-.717.77s.283.726.66.726c.252 0 .477-.12.623-.31",
        clipRule: "evenodd"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M11.684 9.067V6.155h-.415l-.992 1.47-1.04-1.47h-.416v2.912h.416V6.894l.88 1.24h.27l.846-1.24v2.173z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M14.171 6.907v2.16h-.425v-.293a1.02 1.02 0 0 1-.765.345c-.523 0-.97-.398-.97-1.035 0-.686.527-1.177 1.173-1.177.182 0 .367.04.549.11v-.004zm-.438 1.544V7.433a.98.98 0 0 0-.545-.176c-.407 0-.72.292-.72.774 0 .434.256.721.645.721.23 0 .465-.102.62-.3M19.023 8.487l.173.238c-.239.226-.57.403-1 .403-.66 0-1.15-.403-1.15-1.066 0-.664.504-1.164 1.167-1.164.58 0 .987.376.987.933 0 .12-.022.208-.049.279H17.48c.04.412.332.664.787.664.284 0 .536-.106.757-.287m-1.526-.69h1.305c-.017-.35-.243-.576-.588-.576a.72.72 0 0 0-.717.575M17.374 10.177l-.755 4.715c-.172 1-.941 1.447-1.768 1.447-.782 0-1.252-.39-1.252-1.148 0-.115.011-.242.034-.368l.756-4.812c-.734.05-1.438.102-2.095.245l-.67 4.406q-.025.141-.04.276h-1.087l.812-4.624c-.764.04-1.5.127-2.196.255L5.064 15.1 4.8 16.51h3.526l-.183 1.512a16 16 0 0 0 1.882.076l.196-1.588h1.545c.421.997 1.452 1.608 2.912 1.608 2.022 0 3.457-1.171 3.813-3.204l.707-4.281q-.267-.07-.546-.156c-.41-.122-.837-.249-1.278-.3m-8.75 4.761H7.143l1.93-2.16z",
        clipRule: "evenodd"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M24 12c0 6.627-5.373 12-12 12S0 18.627 0 12 5.373 0 12 0s12 5.373 12 12m-1.5 0c0 5.799-4.701 10.5-10.5 10.5S1.5 17.799 1.5 12 6.201 1.5 12 1.5 22.5 6.201 22.5 12",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgManagedSecurityServices = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M12.75 11.912v1.338a.75.75 0 0 1-1.5 0v-1.338a1 1 0 1 1 1.5 0"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M8.769 7.76A2.5 2.5 0 0 0 6.5 10.25v4a2.5 2.5 0 0 0 2.5 2.5h6a2.5 2.5 0 0 0 2.5-2.5v-4a2.5 2.5 0 0 0-2.269-2.49C15.07 5.699 13.874 4.25 12 4.25S8.93 5.698 8.769 7.76M15 9.25a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1H9a1 1 0 0 1-1-1v-4a1 1 0 0 1 1-1zm-4.724-1.5c.07-.651.275-1.131.52-1.44.276-.35.654-.56 1.204-.56s.928.21 1.204.56c.245.309.45.789.52 1.44z",
        clipRule: "evenodd"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M12.286 1.056a.75.75 0 0 0-.572 0l-8.5 3.5a.75.75 0 0 0-.464.694v4c0 2.876.385 5.943 2.137 8.432 1.696 2.41 4.085 4.327 6.872 5.278a.75.75 0 0 0 .485 0c2.787-.951 5.174-2.87 6.87-5.278 1.75-2.488 2.136-5.557 2.136-8.432v-4a.75.75 0 0 0-.464-.694zM4.25 9.25V5.752L12 2.562l7.75 3.19V9.25c0 2.783-.384 5.466-1.863 7.568-1.484 2.11-3.534 3.772-5.886 4.636-2.352-.864-4.403-2.527-5.888-4.636-1.48-2.102-1.863-4.784-1.863-7.568",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgMegaphone = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "m7.97 6.192 10.183-4.128c.551-.223 1.16.166 1.16.742V7.68c1.529.27 2.687 1.56 2.687 3.11s-1.158 2.839-2.687 3.11v3.783c0 .56-.579.949-1.124.755L9.59 15.39H8.543l1.885 4.991c.297.788-.308 1.62-1.178 1.62H7.624c-.527 0-.998-.318-1.178-.795l-2.233-5.913C2.938 14.964 2 13.845 2 12.515V9.066C2 7.48 3.336 6.192 4.985 6.192zm9.552 10.173-7.76-2.753V7.337l7.76-3.146zm1.791-4.257c.528-.221.896-.728.896-1.317 0-.59-.368-1.096-.896-1.318zM6.155 15.39h.482l1.846 4.887H8zm1.815-1.724V7.917H4.985c-.66 0-1.194.514-1.194 1.15v3.448c0 .635.535 1.15 1.194 1.15z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgMenu = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
      fill: "currentColor",
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M1.25 4A.75.75 0 0 1 2 3.25h20a.75.75 0 0 1 0 1.5H2A.75.75 0 0 1 1.25 4M1.25 12a.75.75 0 0 1 .75-.75h20a.75.75 0 0 1 0 1.5H2a.75.75 0 0 1-.75-.75M2 19.25a.75.75 0 0 0 0 1.5h20a.75.75 0 0 0 0-1.5z"
      })
    })]
  }));
};

const SvgMinusWithCircle = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M22.5 12c0 5.799-4.701 10.5-10.5 10.5S1.5 17.799 1.5 12 6.201 1.5 12 1.5 22.5 6.201 22.5 12m1.5 0c0 6.627-5.373 12-12 12S0 18.627 0 12 5.373 0 12 0s12 5.373 12 12m-17-.75a.75.75 0 0 0 0 1.5h10a.75.75 0 0 0 0-1.5z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgMobileDeviceManagement = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M12.978 17.924a.8.8 0 0 0-.26-.173.76.76 0 0 0-.615 0 .77.77 0 0 0-.444.432.81.81 0 0 0 .173.887c.076.076.163.14.27.173a.76.76 0 0 0 .617 0 .7.7 0 0 0 .26-.173.81.81 0 0 0 0-1.146M11.778 11.924l1.557-1.556a.816.816 0 0 1 1.146 0 .816.816 0 0 1 0 1.146l-2.703 2.702-1.459-1.46a.815.815 0 0 1 0-1.145.816.816 0 0 1 1.146 0z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M15.378 2H9.432A2.436 2.436 0 0 0 7 4.432v15.136A2.436 2.436 0 0 0 9.432 22h5.946a2.436 2.436 0 0 0 2.433-2.432V4.432A2.436 2.436 0 0 0 15.378 2m.811 17.568c0 .443-.367.81-.81.81H9.431a.817.817 0 0 1-.81-.81V4.432c0-.443.367-.81.81-.81h.79v.01c0 .444.367.811.81.811h2.757c.443 0 .811-.367.811-.81v-.011h.79c.442 0 .81.367.81.81v15.136z",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgMobileInternet = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M17.28 1.75c0-.41.316-.75.697-.75s.697.34.697.75v19.92c0 .41-.316.75-.697.75s-.696-.34-.696-.75zm-3.909 5.72c0-.41.316-.75.697-.75s.696.34.696.75v14.2c0 .41-.315.75-.696.75s-.697-.34-.697-.75zm-3.203 4.74c-.38 0-.697.34-.697.75v8.71c0 .41.316.75.697.75s.696-.34.696-.75v-8.71c0-.41-.315-.75-.696-.75M5.57 18.3c0-.41.316-.75.697-.75s.696.34.696.75v3.37c0 .41-.315.75-.696.75s-.697-.34-.697-.75z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgModem = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M1.53 6.03A.75.75 0 0 1 .47 4.97L1 5.5l-.53-.53v-.001l.002-.001.002-.003.009-.008.028-.027q.035-.035.099-.092c.084-.077.207-.184.363-.311.312-.253.765-.589 1.334-.923C3.44 2.937 5.072 2.25 7 2.25s3.56.687 4.693 1.354c.57.334 1.022.67 1.334.923a9 9 0 0 1 .462.403l.028.027.009.008.002.003h.002c0 .001 0 .002-.53.532l.53-.53a.75.75 0 0 1-1.06 1.061l-.002-.002-.015-.015-.072-.066a7 7 0 0 0-.299-.256 9.5 9.5 0 0 0-1.15-.796C9.94 4.313 8.572 3.75 7 3.75s-2.94.563-3.932 1.146c-.493.29-.885.58-1.15.796a7 7 0 0 0-.371.322l-.015.015zM2.97 8.47 3.5 9l.529.532a.75.75 0 0 1-1.06-1.062"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M9.97 9.531a.75.75 0 0 0 1.06-1.061L10.5 9l.53-.53v-.001l-.001-.001-.003-.002-.006-.006-.019-.019-.064-.06a6.996 6.996 0 0 0-1.051-.775C9.194 7.193 8.184 6.75 7 6.75s-2.194.442-2.886.857a7 7 0 0 0-1.051.775l-.064.06-.02.018-.005.006-.003.002c0 .001-.001.002.529.532l.529.532.007-.007.038-.036a5.493 5.493 0 0 1 .812-.596C5.444 8.558 6.184 8.25 7 8.25s1.556.308 2.114.643a5.5 5.5 0 0 1 .812.596l.038.036z",
        clipRule: "evenodd"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M17 18.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0M6.5 17.75a.75.75 0 0 0 0 1.5h5a.75.75 0 0 0 0-1.5z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M7 11.25a.75.75 0 0 1 .75.75v1H21.5a1.5 1.5 0 0 1 1.5 1.5v7a1.5 1.5 0 0 1-1.5 1.5h-19A1.5 1.5 0 0 1 1 21.5v-7A1.5 1.5 0 0 1 2.5 13h3.75v-1a.75.75 0 0 1 .75-.75m14.5 3.25h-19v7h19z",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgMomo = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M3.75 2.406h16.499a1.332 1.332 0 0 1 1.339 1.334v15.115H2.41V3.739c0-.353.141-.692.392-.942s.592-.39.947-.39m-1.944-.604A2.74 2.74 0 0 0 1 3.74V20.26c0 .726.29 1.422.805 1.936a2.76 2.76 0 0 0 1.945.802h16.5c.73 0 1.429-.288 1.945-.802.515-.514.805-1.211.805-1.938h-.002V3.74c0-.727-.29-1.424-.805-1.937A2.76 2.76 0 0 0 20.25 1h-16.5c-.728 0-1.427.289-1.943.802m15.217 9.917C17.09 6.583 14.09 3 14.09 3l-1.682 2.595c3.848 3.308 4.528 7.722 4.528 7.722q.09-.796.088-1.597M5.52 12.13l4.312-6.65s6.462 3.157 6.53 11.14c0 0-.01 1.135-.117 1.721 0 0-3.634-5.112-10.725-6.21m4.042-.228a1.984 1.984 0 0 0 2.5-.246 1.97 1.97 0 0 0-.643-3.218 1.99 1.99 0 0 0-2.158.428 1.97 1.97 0 0 0 .3 3.036",
      clipRule: "evenodd"
    })]
  }));
};

const SvgMore = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
      fill: "currentColor",
      fillRule: "evenodd",
      clipRule: "evenodd",
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M3 15a3 3 0 1 0 0-6 3 3 0 0 0 0 6m0-1.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3M12 15a3 3 0 1 0 0-6 3 3 0 0 0 0 6m0-1.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3M24 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0m-1.5 0a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0"
      })
    })]
  }));
};

const SvgMouse = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M12.75 6.5a.75.75 0 0 0-1.5 0V10a.75.75 0 0 0 1.5 0z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M4 8a8 8 0 0 1 16 0v8a8 8 0 1 1-16 0zm14.5 0v8a6.5 6.5 0 0 1-13 0V8a6.5 6.5 0 0 1 13 0",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgMtnPlay = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
      clipPath: "url(#mtn-play_svg__a)",
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fill: "currentColor",
        fillRule: "evenodd",
        d: "M12 0C6 0 0 2 0 2v20s6 2 12 2 12-2 12-2V2s-6-2-12-2M4.075 21.536a46 46 0 0 1-2.575-.65V3.114a46 46 0 0 1 2.575-.65C6.27 1.977 9.151 1.5 12 1.5s5.731.477 7.925.964a46 46 0 0 1 2.575.65v17.772c-.63.18-1.516.414-2.575.65-2.194.487-5.076.964-7.925.964s-5.731-.477-7.925-.964M18 12 7.579 18S7 15.9 7 12s.579-6 .579-6z",
        clipRule: "evenodd"
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("defs", {
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("clipPath", {
        id: "mtn-play_svg__a",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "M0 0h24v24H0z"
        })
      })
    })]
  }));
};

const SvgMtnServices = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M.728 11a.713.713 0 0 0-.724.685Q0 11.843 0 12c0 6.627 5.373 12 12 12s12-5.373 12-12S18.627 0 12 0q-.158 0-.315.004A.713.713 0 0 0 11 .728c0 .44.379.781.818.774L12 1.5c5.799 0 10.5 4.701 10.5 10.5S17.799 22.5 12 22.5 1.5 17.799 1.5 12q0-.09.002-.182c.007-.44-.335-.818-.774-.818"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M.778 4.688c.24-.758 1.188-.867 1.75-.305v.004l2.38 2.396 1.407-.469.47-1.412-2.373-2.39-.003.002c-.562-.562-.45-1.509.308-1.745A6 6 0 0 1 6.5.5C9 .5 12 2.686 12 6c0 .537-.07 1.059-.203 1.554l4.81 4.81a3 3 0 1 1-4.243 4.243l-4.81-4.81A6 6 0 0 1 6 12C2.686 12 .5 9 .5 6.5c0-.631.098-1.24.278-1.812m7.16 5.374A4.5 4.5 0 0 1 6 10.5c-2.347 0-4-2.183-4-4q0-.25.026-.49l2.037 2.05a1 1 0 0 0 1.026.244l1.937-.646a1 1 0 0 0 .632-.632l.648-1.942a1 1 0 0 0-.24-1.02L6.04 2.023A5 5 0 0 1 6.5 2c1.817 0 4 1.653 4 4 0 .694-.157 1.352-.438 1.94l5.484 5.485a1.5 1.5 0 0 1-2.121 2.121L9.75 11.871l-.001.002z",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgMtnSuperData = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M22.5 12c0 5.799-4.701 10.5-10.5 10.5S1.5 17.799 1.5 12 6.201 1.5 12 1.5 22.5 6.201 22.5 12m1.5 0c0 6.627-5.373 12-12 12S0 18.627 0 12 5.373 0 12 0s12 5.373 12 12M11.586 9.13 12 7.854l.414 1.276a2.3 2.3 0 0 0 2.188 1.589h1.341l-1.085.788a2.3 2.3 0 0 0-.836 2.572l.415 1.275-1.085-.788a2.3 2.3 0 0 0-2.704 0l-1.085.788.414-1.275a2.3 2.3 0 0 0-.835-2.572l-1.085-.788h1.341a2.3 2.3 0 0 0 2.188-1.59m-.347-3.788c.24-.737 1.282-.737 1.522 0l1.08 3.324a.8.8 0 0 0 .76.553h3.496c.775 0 1.098.992.47 1.447l-2.827 2.055a.8.8 0 0 0-.291.894l1.08 3.324c.24.738-.604 1.35-1.23.895l-2.829-2.055a.8.8 0 0 0-.94 0l-2.828 2.055c-.627.455-1.47-.157-1.231-.895l1.08-3.324a.8.8 0 0 0-.29-.894l-2.829-2.055c-.627-.456-.304-1.447.47-1.447h3.496a.8.8 0 0 0 .761-.553z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgMusic = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M9.5 8.651v11.487h-.002A4 4 0 1 1 8 16.879V3.813a1 1 0 0 1 .797-.979L21.297.25a1 1 0 0 1 1.203.98V17a4 4 0 1 1-1.5-3.123V5.891zm0-1.542V4.22L21 1.842V4.35zm9 7.391a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5m-13 3a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5",
      clipRule: "evenodd"
    })]
  }));
};

const SvgMyLimits = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M8.5 11a1 1 0 0 0-1 1v9.5h9V12a1 1 0 0 0-1-1z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M7 0a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zm10 1.5h-1c-.173.299-.45.5-.82.5H9c-.5 0-.827-.201-1-.5H7a.5.5 0 0 0-.5.5v20a.5.5 0 0 0 .5.5h10a.5.5 0 0 0 .5-.5V2a.5.5 0 0 0-.5-.5",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgMyPlan = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M5.646 13.5 18.195 1.438s.694-.694 1.748-.335c1.055.36 3.176 2.482 3.536 3.536s-.335 1.749-.335 1.749L10.596 18.45a.5.5 0 0 1-.354.146H6.002a.5.5 0 0 1-.5-.5L5.5 13.854a.5.5 0 0 1 .146-.354m1.355 3.596v-2.828l9.695-9.21.77.769-2.47 2.47a.75.75 0 1 0 1.06 1.06l2.47-2.47.999.999-9.696 9.21zm13.584-10.27 1.457-1.458.022-.041c.014-.035.035-.088-.005-.203q0 0-.018-.041a2 2 0 0 0-.065-.12q-.09-.151-.25-.368c-.217-.287-.501-.61-.815-.924a9 9 0 0 0-.924-.814 4 4 0 0 0-.368-.25q-.075-.044-.12-.066l-.04-.018c-.115-.04-.169-.02-.203-.005l-.042.022-1.457 1.457zM13.25 1a.75.75 0 0 1 0 1.5H4A1.5 1.5 0 0 0 2.5 4v16A1.5 1.5 0 0 0 4 21.5h13a1.5 1.5 0 0 0 1.5-1.5v-5.25a.75.75 0 0 1 1.5 0V20a3 3 0 0 1-3 3H4a3 3 0 0 1-3-3V4a3 3 0 0 1 3-3z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgMyProducts = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M1.75 6.5a.75.75 0 0 0-1.5 0v11a.75.75 0 0 0 .433.68l10.965 5.482a.75.75 0 0 0 .698.003l10.978-5.488a.75.75 0 0 0 .426-.7V6.5a.75.75 0 0 0-1.5 0v10.537l-9.5 4.75V12a.75.75 0 0 0-1.5 0v9.786l-9.5-4.75z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M23.329 5.826 12.343.333A.76.76 0 0 0 12 .25a.75.75 0 0 0-.343.083L.67 5.826a.748.748 0 0 0 0 1.348l10.986 5.493a.8.8 0 0 0 .343.083.74.74 0 0 0 .343-.083L23.33 7.174a.748.748 0 0 0 .2-1.206.8.8 0 0 0-.2-.142M6.253 8.288 2.677 6.5 12 1.838l4.02 2.01zm1.727.863 4.02 2.01L21.323 6.5l-3.576-1.788z",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgMymtnHome = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M12.154 10v1.736H11.7v-.973l-.301.47h-.236l-.332-.47v.973h-.414V10h.417l.477.68.427-.68zM13.73 10.522l-.727 1.794h-.44l.238-.527h-.003l-.532-1.267h.483l.272.744.266-.745zM15.513 10v1.736h-.452v-.973l-.302.47h-.236l-.331-.47v.973h-.415V10h.417l.477.68.428-.68zM15.734 10.393V10h1.519v.393h-.532v1.343h-.452v-1.343zM18.937 10v1.736h-.367l-.751-.992v.992h-.401V10h.399l.719.958V10zM7.617 12.2H7v3.24h.617V14.1h1.532v1.34h.617V12.2H9.15v1.354H7.617z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M10.098 14.344c0-.727.559-1.276 1.29-1.276.709 0 1.259.505 1.259 1.213 0 .728-.564 1.276-1.291 1.276-.713 0-1.258-.504-1.258-1.213m1.932-.01c0-.48-.266-.79-.676-.79-.382 0-.638.3-.638.747 0 .48.265.786.676.786.382 0 .638-.296.638-.742",
        clipRule: "evenodd"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M16.549 14.016v1.425h-.596v-1.273c0-.404-.13-.601-.365-.601-.199 0-.38.123-.508.355q.005.044.004.094v1.425h-.596v-1.273c0-.404-.125-.601-.365-.601-.199 0-.379.123-.503.35v1.524h-.597v-2.298l.578-.133v.419c.18-.242.439-.4.725-.4.296 0 .546.163.67.479.19-.296.486-.478.809-.478.439 0 .744.34.744.986"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M19.258 15.066a1.56 1.56 0 0 1-1.083.432c-.728 0-1.25-.456-1.25-1.19 0-.744.545-1.298 1.264-1.298.627 0 1.06.423 1.06 1.04 0 .15-.028.272-.06.36h-1.673c.069.379.345.598.779.598.272 0 .53-.107.746-.268zm-1.728-1.084h1.194c-.023-.32-.221-.53-.54-.53-.294 0-.567.185-.654.53",
        clipRule: "evenodd"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M23 23.268V7L12 1 1 7v16.268s.562-.173 1.5-.41c2.126-.54 6.183-1.413 10-1.358 3.667.052 7.111.82 9 1.327.944.253 1.5.441 1.5.441M21.5 7.89v13.386q-.608-.157-1.36-.327c-1.999-.445-4.732-.908-7.619-.949-2.905-.041-5.9.424-8.137.886-.706.145-1.342.292-1.884.425V7.891L12 2.708z",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgNetworkServices = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M8 5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-2.75v2.25h5.95c.58 0 1.05.47 1.05 1.05v2.7h1.75a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-.5.5h-5a.5.5 0 0 1-.5-.5v-3a.5.5 0 0 1 .5-.5h1.75v-2.25h-5.5v2.25h1.75a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-.5.5h-5A.5.5 0 0 1 9 19v-3a.5.5 0 0 1 .5-.5h1.75v-2.25h-5.5v2.25H7.5a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-.5.5h-5A.5.5 0 0 1 2 19v-3a.5.5 0 0 1 .5-.5h1.75v-2.7c0-.58.47-1.05 1.05-1.05h5.95V9.5H8.5A.5.5 0 0 1 8 9zm1.8 3a.3.3 0 0 1-.3-.3V6.3a.3.3 0 0 1 .3-.3h4.4a.3.3 0 0 1 .3.3v1.4a.3.3 0 0 1-.3.3zM3.6 18a.1.1 0 0 1-.1-.1v-.8a.1.1 0 0 1 .1-.1h2.8a.1.1 0 0 1 .1.1v.8a.1.1 0 0 1-.1.1zm14-1a.1.1 0 0 0-.1.1v.8a.1.1 0 0 0 .1.1h2.8a.1.1 0 0 0 .1-.1v-.8a.1.1 0 0 0-.1-.1zm-7 1a.1.1 0 0 1-.1-.1v-.8a.1.1 0 0 1 .1-.1h2.8a.1.1 0 0 1 .1.1v.8a.1.1 0 0 1-.1.1z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgNewTab = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M17 .75h5.2q.083 0 .163.013a.75.75 0 0 1 .874.874q.013.08.013.163v4.7a.75.75 0 0 1-1.5 0V3.31l-9.22 9.22a.75.75 0 1 1-1.06-1.06l9.22-9.22H17a.75.75 0 0 1 0-1.5"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M9.25 2.5a.75.75 0 0 0 0-1.5H2.5A1.5 1.5 0 0 0 1 2.5v19A1.5 1.5 0 0 0 2.5 23h19a1.5 1.5 0 0 0 1.5-1.5v-6.75a.75.75 0 0 0-1.5 0v6.75h-19v-19z"
      })]
    })]
  }));
};

const SvgNew = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M3.429 12.064c0-4.77 3.862-8.635 8.624-8.635 4.102 0 7.536 2.866 8.41 6.709a7.857 7.857 0 0 0-10.315 10.35 8.64 8.64 0 0 1-6.72-8.424M12.053 2C6.5 2 2 6.506 2 12.064c0 4.99 3.629 9.132 8.39 9.926a.72.72 0 0 0 .62-.196l10.778-10.641a.71.71 0 0 0 .204-.616C21.257 5.704 17.088 2 12.053 2",
      clipRule: "evenodd"
    })]
  }));
};

const SvgNotifications = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M15.5 3.706V3.5l-.001-.09A3.5 3.5 0 0 0 8.5 3.5v.206A9 9 0 0 0 3 12v7a2 2 0 0 0 2 2h3.212c.477 1.637 1.75 3 3.788 3s3.311-1.363 3.788-3H19a2 2 0 0 0 2-2v-7a9 9 0 0 0-5.5-8.294M12 4.5A7.5 7.5 0 0 0 4.5 12v7a.5.5 0 0 0 .5.5h14a.5.5 0 0 0 .5-.5v-7A7.5 7.5 0 0 0 12 4.5M12 3c-.769 0-1.42.044-1.962.11a2 2 0 0 1 3.924 0A16 16 0 0 0 12 3m2.196 18q-.157.362-.383.65c-.402.509-.978.85-1.813.85s-1.41-.341-1.813-.85q-.227-.288-.383-.65z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgOffers = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "m12.325 2.63 8.463 8.503c.44.464.606.925.58 1.377-.028.466-.207.914-.604 1.372l-7.153 7.116-.047.037c-.515.32-.914.38-1.228.307h-.001c-.334-.076-.756-.299-1.334-.798l-8.256-8.316-.115-8.911c.006-.285.082-.426.162-.507.066-.066.212-.159.659-.18zm.05-1.63a1.5 1.5 0 0 1 1.07.445h.001l8.51 8.551.006.007c.693.727 1.091 1.614 1.032 2.604v.001c-.053.88-.407 1.669-1.023 2.37l-.018.02-7.255 7.217-.186.15-.038.023c-.767.488-1.624.745-2.504.542-.711-.163-1.38-.584-2.06-1.175l-.023-.02-8.33-8.39v-.001a1.5 1.5 0 0 1-.44-1.04V12.3L1 3.313V3.3c.01-.58.175-1.175.636-1.64.492-.494 1.136-.633 1.761-.66L3.415 1zM6.685 6.372a2.434 2.434 0 1 1 3.443 3.442 2.434 2.434 0 0 1-3.443-3.442m1.722.916a.805.805 0 1 0 0 1.61.805.805 0 0 0 0-1.61",
      clipRule: "evenodd"
    })]
  }));
};

const SvgOrganisation = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "m8.16 4 .37.12 13.76 4.51.52.17v11.08H1V9.22L1.31 9l6.54-4.77zm-.62 2.31L2.5 9.98v8.4h5.04zm1.5-.44v12.51h3.2v-7.33l.91.2 4.24.92.59.13v6.08h3.32V9.89zm7.44 12.51h-2.74v-5.47l2.74.59z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgPassport = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M2.25 17a.75.75 0 0 1 .75-.75h.114l.097-1.067A3.5 3.5 0 0 1 6.696 12h1.608a3.5 3.5 0 0 1 3.485 3.183l.097 1.067H21a.75.75 0 0 1 0 1.5H3a.75.75 0 0 1-.75-.75m2.454-1.681A2 2 0 0 1 6.696 13.5h1.608a2 2 0 0 1 1.992 1.819l.062.681H4.643zM7.5 12a3 3 0 1 1 0-6 3 3 0 0 1 0 6m0-1.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3",
        clipRule: "evenodd"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M13.75 7a.75.75 0 0 0 0 1.5h6a.75.75 0 0 0 0-1.5zM13 10.5a.75.75 0 0 1 .75-.75h3a.75.75 0 0 1 0 1.5h-3a.75.75 0 0 1-.75-.75M13.75 12.5a.75.75 0 0 0 0 1.5h5a.75.75 0 0 0 0-1.5z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M2 3a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2zm20 1.5H2a.5.5 0 0 0-.5.5v14a.5.5 0 0 0 .5.5h20a.5.5 0 0 0 .5-.5V5a.5.5 0 0 0-.5-.5",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgPasswordHidden = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "m1.338 7.28-.572.553-.573.554A.885.885 0 0 1 .257 7.21a.724.724 0 0 1 1.081.07"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "m20.15 9.455-.246.164c-1.826 1.191-4.5 2.38-7.904 2.38S5.922 10.81 4.096 9.62l-.246-.164a.8.8 0 0 0-.252-.176 15 15 0 0 1-1.579-1.293 11 11 0 0 1-.676-.7l-.005-.007-.572.554-.573.554.002.001.001.002.004.005.013.015a5 5 0 0 0 .2.227c.138.15.338.358.6.606.32.304.734.668 1.237 1.055L.64 12.927c-.235.382-.14.9.212 1.155s.827.152 1.062-.231l1.626-2.654c1.196.752 2.701 1.49 4.49 1.96l-.842 2.746c-.134.437.083.908.485 1.054.401.145.835-.09.969-.527l.905-2.955c.774.122 1.592.191 2.453.191s1.679-.069 2.453-.191l.906 2.955c.133.437.567.672.968.527.402-.146.618-.617.485-1.054l-.842-2.747a16.1 16.1 0 0 0 4.49-1.96l1.626 2.655c.235.383.71.486 1.062.231s.447-.773.213-1.155l-1.611-2.63c.503-.386.916-.75 1.237-1.054a13 13 0 0 0 .757-.783q.028-.031.044-.05l.012-.015.004-.005.002-.002-.572-.555.572.554a.885.885 0 0 0-.063-1.177.724.724 0 0 0-1.081.07l-.005.005-.029.033q-.04.048-.125.14c-.114.125-.289.307-.522.528-.378.358-.907.816-1.579 1.293a.75.75 0 0 0-.252.176"
      })]
    })]
  }));
};

const SvgPasswordVisible = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M23.9 11.717a.45.45 0 0 1 0 .566C22.865 13.592 18.213 19 12 19S1.135 13.592.1 12.283a.45.45 0 0 1 0-.566C1.135 10.408 5.787 5 12 5s10.865 5.408 11.9 6.717m-4.909-2.643A20.2 20.2 0 0 1 22.171 12a20.2 20.2 0 0 1-3.18 2.926c-.997.73-2.121 1.394-3.342 1.864a5.97 5.97 0 0 0 2.41-4.79 5.97 5.97 0 0 0-2.41-4.79c1.221.47 2.345 1.134 3.342 1.864M8.351 7.21C7.13 7.68 6.006 8.344 5.01 9.074A20.2 20.2 0 0 0 1.829 12c.665.758 1.76 1.886 3.18 2.926.997.73 2.121 1.394 3.342 1.864A5.97 5.97 0 0 1 5.941 12c0-1.957.947-3.695 2.41-4.79M16.544 12c0 2.485-2.035 4.5-4.544 4.5-2.51 0-4.544-2.015-4.544-4.5S9.491 7.5 12 7.5c2.51 0 4.544 2.015 4.544 4.5",
      clipRule: "evenodd"
    })]
  }));
};

const SvgPauseFilled = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M5 6.5a2.5 2.5 0 0 1 5 0v11a2.5 2.5 0 0 1-5 0zm9 0a2.5 2.5 0 0 1 5 0v11a2.5 2.5 0 0 1-5 0z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgPauseOutline = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M8.5 6.5v11a1 1 0 1 1-2 0v-11a1 1 0 0 1 2 0M5 6.5a2.5 2.5 0 0 1 5 0v11a2.5 2.5 0 0 1-5 0zm12.5 0v11a1 1 0 1 1-2 0v-11a1 1 0 1 1 2 0m-3.5 0a2.5 2.5 0 0 1 5 0v11a2.5 2.5 0 0 1-5 0z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgPayAsYouGo = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M5.029 4.75c-.38 0-.686.336-.686.75s.307.75.686.75h1.828c.379 0 .686-.336.686-.75s-.307-.75-.686-.75zM2.514 7.75c-.378 0-.685.336-.685.75s.307.75.685.75h2.972c.378 0 .685-.336.685-.75s-.307-.75-.685-.75zM1.829 14.5c0-.414.307-.75.685-.75h2.743c.379 0 .686.336.686.75s-.307.75-.686.75H2.514c-.378 0-.685-.336-.685-.75M.686 10.75c-.379 0-.686.336-.686.75s.307.75.686.75H4.57c.38 0 .686-.336.686-.75s-.307-.75-.686-.75zM3.886 17.5c0-.414.307-.75.685-.75H6.4c.379 0 .686.336.686.75s-.307.75-.686.75H4.571c-.378 0-.685-.336-.685-.75"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M15.771 17.25c3.404 0 6.858-2.5 6.858-6.25l1.363 1.446c-.91 3.671-4.29 6.304-8.22 6.304-3.824 0-7.123-2.489-8.14-6L8.914 11c0 4 3.55 6.25 6.857 6.25",
        clipRule: "evenodd"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M24 12c0 4.97-3.684 9-8.229 9s-8.228-4.03-8.228-9 3.684-9 8.228-9C20.316 3 24 7.03 24 12m-8.229 7.5c3.787 0 6.858-3.358 6.858-7.5s-3.07-7.5-6.858-7.5S8.914 7.858 8.914 12s3.07 7.5 6.857 7.5",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgPayPerSecond = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M6.619 1a.75.75 0 0 1 .75-.75h9.243a.75.75 0 0 1 0 1.5H7.369a.75.75 0 0 1-.75-.75M12.75 8a.75.75 0 0 0-1.5 0v5.876c0 .278.11.545.307.742l2.413 2.412a.75.75 0 1 0 1.06-1.06l-2.28-2.28z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M12 24c5.799 0 10.5-4.701 10.5-10.5 0-2.502-.875-4.8-2.336-6.603l.586-.586.72.72a.75.75 0 1 0 1.06-1.061l-2.5-2.5a.75.75 0 1 0-1.06 1.06l.72.72-.551.55A10.46 10.46 0 0 0 12 3C6.201 3 1.5 7.701 1.5 13.5S6.201 24 12 24m0-1.5a9 9 0 1 0 0-18 9 9 0 0 0 0 18",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgPayfast = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      d: "M19.4 17.346c-.88.528-1.81.964-2.78 1.3-.914.377-2.038.663-3.286.82q-.717.12-1.462.195h-.016c-4.607.395-8.539-.595-10.786-2.707-.021-.015-.037-.04-.058-.055q-.007.121-.012.252c-.011.961.39 1.85.988 2.553 1.824 2.092 5.337 3.232 9.418 3.296 2.718.017 5.199-.494 7.098-1.405.947-.463 1.757-1.025 2.375-1.728.619-.702 1.027-1.577 1.033-2.54 0-.591-.141-1.174-.414-1.699-.556.628-1.252 1.194-2.099 1.718m-8.029-2.89c-4.305.33-8.012-.473-10.316-2.307.055.87.432 1.672.981 2.316 1.823 2.094 5.337 3.229 9.417 3.296 2.718.017 5.199-.493 7.098-1.407.946-.461 1.763-1.023 2.377-1.727s1.025-1.578 1.028-2.542a3.7 3.7 0 0 0-.622-2.06c-.606.788-3.144 3.913-9.963 4.43m.125-1.936c2.718.018 5.2-.491 7.094-1.407.948-.46 1.764-1.022 2.38-1.728.612-.694 1.025-1.576 1.03-2.536S21.613 5 21.014 4.295C19.185 2.2 15.678 1.066 11.595 1c-2.718-.02-5.2.49-7.094 1.4-.952.468-1.764 1.026-2.38 1.73-.618.703-1.023 1.578-1.034 2.538-.01.96.393 1.849.99 2.557 1.822 2.092 5.34 3.228 9.419 3.294M3.549 4.614c.993-1.206 4.078-2.386 7.68-2.325 2.41.015 4.57.528 6.03 1.273.736.366 1.285.786 1.608 1.181.325.396.44.723.44 1.025s-.122.627-.453 1.02c-.988 1.207-4.073 2.387-7.68 2.326-2.41-.017-4.571-.532-6.03-1.274-.732-.365-1.283-.791-1.609-1.179-.329-.403-.438-.725-.438-1.031s.115-.624.452-1.016"
    })]
  }));
};

const SvgPaypal = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M7.466 20.558 9.714 6.582s.128-1.156 1.455-1.156h5.544s1.952.018 3.076.506c0 0 .11-1.661-.59-2.672-.7-1.01-1.99-2.258-5.342-2.258H6.821s-.736-.09-.902.813-2.892 17.912-2.892 17.912-.24.83.7.83z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M17.256 12.37c2.65-1.572 3.27-5.133 3.27-5.133 1.745.895 2.05 3.938.324 6.883s-5.737 2.755-5.737 2.755h-.772c-.883 0-.943.807-.943.807s-.602 3.728-.723 4.506c-.121.779-.81.812-.81.812H8.56s-.555-.047-.454-.743c.102-.697 1.259-7.719 1.259-7.719s.08-.875 1.095-.875c.761 0 1.709.029 2.32.008 2.083-.068 3.404-.664 4.476-1.3"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M19.642 6.846s-.795-.523-3.02-.523h-5.305s-.68.091-.78.727l-.911 5.746s.193-.068.401-.068h2.619s2.83.01 4.658-1.553c1.268-1.085 1.814-2.175 2.338-4.33z"
      })]
    })]
  }));
};

const SvgPhone = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M12 21.5a1 1 0 1 0 0-2 1 1 0 0 0 0 2"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M7 0a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zm10 1.5h-.634a1 1 0 0 1-.866.5h-7a1 1 0 0 1-.866-.5H7a.5.5 0 0 0-.5.5v20a.5.5 0 0 0 .5.5h10a.5.5 0 0 0 .5-.5V2a.5.5 0 0 0-.5-.5",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgPhonebook = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M8.5 1.5H20a.5.5 0 0 1 .5.5v13.52A5 5 0 0 0 16.91 14h-4.66a5 5 0 0 0-3.75 1.692zM7 1.5H4a.5.5 0 0 0-.5.5v2.25h1a.75.75 0 0 1 0 1.5h-1v5.5h1a.75.75 0 0 1 0 1.5h-1v5.5h1a.75.75 0 0 1 0 1.5h-1V22a.5.5 0 0 0 .5.5h3v-21m1.5 21H20a.5.5 0 0 0 .5-.5v-3.646l-.46-.92a3.5 3.5 0 0 0-3.13-1.934h-4.66a3.5 3.5 0 0 0-3.199 2.078l-.508 1.143a.5.5 0 0 0-.043.203zM7 24H4a2 2 0 0 1-2-2v-2.25H1a.75.75 0 0 1 0-1.5h1v-5.5H1a.75.75 0 0 1 0-1.5h1v-5.5H1a.75.75 0 0 1 0-1.5h1V2a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v20a2 2 0 0 1-2 2H7m7.5-12.5a2 2 0 1 0 0-4 2 2 0 0 0 0 4m0 1.5a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7",
      clipRule: "evenodd"
    })]
  }));
};

const SvgPlayFilled = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "m18.156 13.899-9.494 5.819C7.494 20.496 6 19.572 6 18.071V5.929c0-1.5 1.494-2.425 2.662-1.647l9.494 6.322c1.126.75 1.126 2.545 0 3.295",
      clipRule: "evenodd"
    })]
  }));
};

const SvgPlayOutline = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M7.935 5.6c-.234-.156-.532.029-.532.33v12.14c0 .301.298.486.532.33l9.493-5.82a.406.406 0 0 0 0-.658zm10.22 8.299-9.493 5.819C7.494 20.496 6 19.572 6 18.071V5.929c0-1.5 1.494-2.425 2.662-1.647l9.494 6.322c1.126.75 1.126 2.545 0 3.295",
      clipRule: "evenodd"
    })]
  }));
};

const SvgPlusWithCircle = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M12 22.5c5.799 0 10.5-4.701 10.5-10.5S17.799 1.5 12 1.5 1.5 6.201 1.5 12 6.201 22.5 12 22.5m0 1.5c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12m0-17.75a.75.75 0 0 1 .75.75v4.25H17a.75.75 0 0 1 0 1.5h-4.25V17a.75.75 0 0 1-1.5 0v-4.25H7a.75.75 0 0 1 0-1.5h4.25V7a.75.75 0 0 1 .75-.75",
      clipRule: "evenodd"
    })]
  }));
};

const SvgPreOwnedPhone = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
      fill: "currentColor",
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M18.837.268a.75.75 0 0 1 .895.57l.94 4.226a.95.95 0 0 1-1.033 1.15l-4.222-.469a.75.75 0 1 1 .166-1.49l2.255.25A9.46 9.46 0 0 0 12 2.5c-5.549 0-9.493 4.84-9.5 8.5v.905a.77.77 0 0 1-.575.746l-.033.009C1.446 12.777 1 12.462 1 12 1 5.925 5.925 1 12 1c2.542 0 4.882.862 6.745 2.31l-.477-2.147a.75.75 0 0 1 .57-.895M21.5 12a9.5 9.5 0 0 1-16.672 6.23l1.99.498a.75.75 0 1 0 .364-1.456l-3.752-.937a.95.95 0 0 0-1.18.921V21.5a.75.75 0 1 0 1.5 0v-2.224A10.97 10.97 0 0 0 12 23c6.075 0 11-4.925 11-11q-.001-.98-.166-1.912c-.077-.44-.54-.684-.96-.53a.8.8 0 0 0-.5.89q.125.759.126 1.552"
      })
    })]
  }));
};

const SvgPromotions = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M4.517 4.456c.3.286.312.76.027 1.06C2.787 7.366 1.75 9.71 1.75 12.252c0 2.33.873 4.495 2.372 6.264a.75.75 0 0 1-1.144.97C1.27 17.472.25 14.97.25 12.251c0-2.966 1.214-5.672 3.206-7.768a.75.75 0 0 1 1.06-.027m7.474 4.565c-.563-.445-1.243-.735-1.977-.735-.801 0-1.697.233-2.408.89-.738.68-1.143 1.694-1.143 2.953 0 1.564.978 2.865 1.927 3.784.99.96 2.191 1.735 3.1 2.241.314.175.69.175 1.003 0 .908-.506 2.11-1.282 3.102-2.25.955-.93 1.924-2.242 1.924-3.824 0-1.244-.41-2.244-1.148-2.916-.71-.645-1.601-.878-2.402-.878-.735 0-1.415.29-1.978.735m-.93 1.176c-.357-.282-.718-.411-1.047-.411-.527 0-1.024.153-1.39.492-.369.34-.66.917-.66 1.85 0 .938.603 1.868 1.47 2.708.785.76 1.751 1.412 2.557 1.879.806-.467 1.772-1.118 2.557-1.884.866-.845 1.471-1.787 1.471-2.75 0-.908-.29-1.473-.657-1.807-.368-.335-.867-.488-1.393-.488-.33 0-.69.13-1.046.411a1.5 1.5 0 0 1-1.863 0m8.395-4.68a.75.75 0 1 1 1.088-1.034c1.992 2.096 3.206 4.802 3.206 7.768 0 2.719-1.021 5.22-2.728 7.234a.75.75 0 0 1-1.144-.97c1.5-1.769 2.372-3.934 2.372-6.264 0-2.54-1.037-4.886-2.794-6.734M6.557 7.497a.75.75 0 0 1-.055 1.06C5.377 9.572 4.75 10.823 4.75 12.143c0 1.212.528 2.364 1.483 3.33a.75.75 0 1 1-1.066 1.054c-1.182-1.195-1.917-2.71-1.917-4.384 0-1.826.873-3.46 2.248-4.7a.75.75 0 0 1 1.059.055m10.94 1.06a.75.75 0 1 1 1.005-1.114c1.375 1.24 2.248 2.874 2.248 4.7 0 1.674-.735 3.19-1.917 4.384a.75.75 0 1 1-1.066-1.054c.955-.966 1.483-2.118 1.483-3.33 0-1.32-.627-2.571-1.752-3.586",
      clipRule: "evenodd"
    })]
  }));
};

const SvgPulse = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      clipPath: "url(#pulse_svg__a)",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("mask", {
        id: "pulse_svg__b",
        width: 82,
        height: 23,
        x: 1,
        y: 0,
        maskUnits: "userSpaceOnUse",
        style: {
          maskType: 'alpha'
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "m39.907 1.28.153 21.455 5.12.007L45.022.267zm-28.266.387-9.654.377.923 20.922 5.312-.208-.287-6.518 4.34-.169c5.28-.206 8.684-3.238 8.488-7.69-.182-4.127-3.297-6.727-8.49-6.727q-.312 0-.632.013M7.482 5.971l3.952-.155a7 7 0 0 1 .26-.006c2.143 0 3.422 1.082 3.503 2.916.084 1.909-1.193 3.136-3.493 3.226l-3.951.154zm46.594-.093c-4.715.673-7.313 3.135-6.89 6.55.411 3.319 3.555 3.932 7.598 3.902 2.445-.027 3.599-.193 3.717.756s-1.026 1.466-2.726 1.709c-2.373.338-5.121.022-7.03-.638l-.947 3.16c1.486.64 3.74 1.133 6.166 1.132q1.193.003 2.374-.164c4.65-.663 7.15-3.143 6.746-6.4-.482-3.888-4.513-4.02-8.003-4.005-2.152.017-3.226.042-3.332-.812-.114-.917 1.022-1.497 2.818-1.753 2.18-.311 4.854-.081 6.578.67l-.466-3.762c-1.2-.316-2.738-.5-4.27-.5-.796 0-1.589.049-2.334.155m17.265.148c-5.093 1.263-7.999 5.824-6.774 10.574.97 3.768 4.013 5.856 7.894 5.856a12.4 12.4 0 0 0 2.981-.381c3.301-.819 5.561-2.692 6.94-4.61l-2.325-2.015c-1.208 1.151-2.755 2.16-4.516 2.596-2.641.655-4.609.027-5.698-1.737l10.846-2.69a6.8 6.8 0 0 0-.172-2.747c-.835-3.243-3.458-5.148-6.8-5.148-.758 0-1.555.098-2.376.302m.835 3.371q.481-.123.978-.126c1.345 0 2.37.77 2.865 2.06l-7.042 1.747c.12-2 1.596-3.284 3.2-3.681M32.972 7.593l.091 9.331c-.928 1.135-2.122 1.765-3.417 1.794-1.814.038-2.734-1.247-2.758-3.891l-.078-8.12L21.7 7.834l.083 8.663c.041 4.326 2.54 6.47 5.738 6.468q.077 0 .155-.002c2.073-.044 4.204-.95 5.613-2.573l.019 2.006 4.924-.105-.153-15.827z"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
        mask: "url(#pulse_svg__b)",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "currentColor",
          fillRule: "evenodd",
          d: "M38.195 127.617h-.001q-.367 0-.734-.002c-7.88-.046-15.658-.832-23.116-2.335-8.979-1.809-17.53-4.666-25.42-8.489-12.02-5.825-22.383-13.782-30.802-23.65-14.087-16.512-21.778-37.522-21.66-59.158A89.8 89.8 0 0 1-56.617-.16 90.4 90.4 0 0 1-41.46-24.646c8.476-9.788 18.875-17.653 30.909-23.378 7.884-3.75 16.42-6.535 25.372-8.274 7.407-1.44 15.127-2.17 22.946-2.17l.735.001c7.75.046 15.426.805 22.817 2.255 8.694 1.708 17 4.376 24.686 7.93 11.83 5.47 22.126 12.967 30.6 22.282 15.296 16.814 23.651 38.536 23.526 61.165-.126 22.486-8.628 44.01-23.941 60.605-8.526 9.239-18.854 16.65-30.696 22.025-7.681 3.486-15.973 6.086-24.644 7.728-7.34 1.389-14.964 2.094-22.655 2.094m0-3.273c7.495 0 14.919-.687 22.067-2.039 8.422-1.595 16.47-4.118 23.92-7.5 11.45-5.196 21.431-12.355 29.663-21.276 14.756-15.99 22.948-36.724 23.069-58.383.12-21.795-7.93-42.72-22.67-58.922-8.183-8.994-18.131-16.237-29.57-21.526-7.456-3.447-15.519-6.037-23.965-7.695-7.197-1.414-14.675-2.153-22.228-2.196l-.714-.002c-7.616 0-15.133.71-22.342 2.111-8.69 1.69-16.97 4.39-24.613 8.025-11.631 5.532-21.677 13.129-29.858 22.577A87.1 87.1 0 0 0-53.655 1.115a86.5 86.5 0 0 0-6.665 32.886c-.115 20.842 7.297 41.083 20.871 56.995 8.127 9.525 18.139 17.211 29.756 22.841 7.648 3.706 15.945 6.476 24.662 8.232 7.26 1.463 14.832 2.228 22.51 2.272z",
          clipRule: "evenodd"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("mask", {
        id: "pulse_svg__c",
        width: 82,
        height: 23,
        x: 1,
        y: 0,
        maskUnits: "userSpaceOnUse",
        style: {
          maskType: 'alpha'
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "m39.907 1.28.153 21.455 5.12.007L45.022.267zm-28.266.387-9.654.377.923 20.922 5.312-.208-.287-6.518 4.34-.169c5.28-.206 8.684-3.238 8.488-7.69-.182-4.127-3.297-6.727-8.49-6.727q-.312 0-.632.013M7.482 5.971l3.952-.155a7 7 0 0 1 .26-.006c2.143 0 3.422 1.082 3.503 2.916.084 1.909-1.193 3.136-3.493 3.226l-3.951.154zm46.594-.093c-4.715.673-7.313 3.135-6.89 6.55.411 3.319 3.555 3.932 7.598 3.902 2.445-.027 3.599-.193 3.717.756s-1.026 1.466-2.726 1.709c-2.373.338-5.121.022-7.03-.638l-.947 3.16c1.486.64 3.74 1.133 6.166 1.132q1.193.003 2.374-.164c4.65-.663 7.15-3.143 6.746-6.4-.482-3.888-4.513-4.02-8.003-4.005-2.152.017-3.226.042-3.332-.812-.114-.917 1.022-1.497 2.818-1.753 2.18-.311 4.854-.081 6.578.67l-.466-3.762c-1.2-.316-2.738-.5-4.27-.5-.796 0-1.589.049-2.334.155m17.265.148c-5.093 1.263-7.999 5.824-6.774 10.574.97 3.768 4.013 5.856 7.894 5.856a12.4 12.4 0 0 0 2.981-.381c3.301-.819 5.561-2.692 6.94-4.61l-2.325-2.015c-1.208 1.151-2.755 2.16-4.516 2.596-2.641.655-4.609.027-5.698-1.737l10.846-2.69a6.8 6.8 0 0 0-.172-2.747c-.835-3.243-3.458-5.148-6.8-5.148-.758 0-1.555.098-2.376.302m.835 3.371q.481-.123.978-.126c1.345 0 2.37.77 2.865 2.06l-7.042 1.747c.12-2 1.596-3.284 3.2-3.681M32.972 7.593l.091 9.331c-.928 1.135-2.122 1.765-3.417 1.794-1.814.038-2.734-1.247-2.758-3.891l-.078-8.12L21.7 7.834l.083 8.663c.041 4.326 2.54 6.47 5.738 6.468q.077 0 .155-.002c2.073-.044 4.204-.95 5.613-2.573l.019 2.006 4.924-.105-.153-15.827z"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
        mask: "url(#pulse_svg__c)",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "currentColor",
          fillRule: "evenodd",
          d: "M37.771-55.748q.358 0 .72.002c7.536.044 15.002.78 22.19 2.188 8.456 1.656 16.534 4.243 24.011 7.69 11.513 5.306 21.535 12.578 29.787 21.613 14.933 16.323 23.099 37.42 22.978 59.405-.123 21.846-8.432 42.75-23.381 58.86-8.303 8.961-18.356 16.149-29.881 21.361-7.473 3.381-15.537 5.902-23.971 7.494-7.138 1.348-14.551 2.031-22.03 2.031h-.005q-.356 0-.714-.002c-7.664-.044-15.227-.806-22.48-2.264-8.732-1.755-17.05-4.525-24.724-8.232-11.698-5.65-21.786-13.369-29.983-22.94-13.752-16.032-21.267-36.438-21.151-57.46A86.7 86.7 0 0 1-54.09.817a87.8 87.8 0 0 1 14.786-23.763C-31.052-32.44-20.93-40.07-9.217-45.621c7.669-3.636 15.971-6.336 24.678-8.023 7.202-1.396 14.708-2.104 22.31-2.104m0 3.212c-7.404 0-14.712.688-21.72 2.046-8.45 1.638-16.502 4.255-23.935 7.78C-19.2-37.346-28.976-29.981-36.94-20.818A84.5 84.5 0 0 0-51.186 2.076a83.4 83.4 0 0 0-6.521 31.94c-.111 20.235 7.123 39.884 20.375 55.332 7.91 9.237 17.653 16.689 28.957 22.149 7.439 3.593 15.507 6.279 23.982 7.982 7.058 1.419 14.421 2.161 21.887 2.205h.7c7.286 0 14.505-.664 21.454-1.976 8.19-1.546 16.018-3.992 23.265-7.271 11.14-5.038 20.852-11.979 28.868-20.632 14.404-15.522 22.402-35.65 22.52-56.673.116-21.157-7.744-41.47-22.134-57.201-7.966-8.722-17.647-15.745-28.777-20.874-7.251-3.342-15.092-5.853-23.306-7.462-6.998-1.37-14.27-2.087-21.614-2.13z",
          clipRule: "evenodd"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("mask", {
        id: "pulse_svg__d",
        width: 82,
        height: 23,
        x: 1,
        y: 0,
        maskUnits: "userSpaceOnUse",
        style: {
          maskType: 'alpha'
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "m39.907 1.28.153 21.455 5.12.007L45.022.267zm-28.266.387-9.654.377.923 20.922 5.312-.208-.287-6.518 4.34-.169c5.28-.206 8.684-3.238 8.488-7.69-.182-4.127-3.297-6.727-8.49-6.727q-.312 0-.632.013M7.482 5.971l3.952-.155a7 7 0 0 1 .26-.006c2.143 0 3.422 1.082 3.503 2.916.084 1.909-1.193 3.136-3.493 3.226l-3.951.154zm46.594-.093c-4.715.673-7.313 3.135-6.89 6.55.411 3.319 3.555 3.932 7.598 3.902 2.445-.027 3.599-.193 3.717.756s-1.026 1.466-2.726 1.709c-2.373.338-5.121.022-7.03-.638l-.947 3.16c1.486.64 3.74 1.133 6.166 1.132q1.193.003 2.374-.164c4.65-.663 7.15-3.143 6.746-6.4-.482-3.888-4.513-4.02-8.003-4.005-2.152.017-3.226.042-3.332-.812-.114-.917 1.022-1.497 2.818-1.753 2.18-.311 4.854-.081 6.578.67l-.466-3.762c-1.2-.316-2.738-.5-4.27-.5-.796 0-1.589.049-2.334.155m17.265.148c-5.093 1.263-7.999 5.824-6.774 10.574.97 3.768 4.013 5.856 7.894 5.856a12.4 12.4 0 0 0 2.981-.381c3.301-.819 5.561-2.692 6.94-4.61l-2.325-2.015c-1.208 1.151-2.755 2.16-4.516 2.596-2.641.655-4.609.027-5.698-1.737l10.846-2.69a6.8 6.8 0 0 0-.172-2.747c-.835-3.243-3.458-5.148-6.8-5.148-.758 0-1.555.098-2.376.302m.835 3.371q.481-.123.978-.126c1.345 0 2.37.77 2.865 2.06l-7.042 1.747c.12-2 1.596-3.284 3.2-3.681M32.972 7.593l.091 9.331c-.928 1.135-2.122 1.765-3.417 1.794-1.814.038-2.734-1.247-2.758-3.891l-.078-8.12L21.7 7.834l.083 8.663c.041 4.326 2.54 6.47 5.738 6.468q.077 0 .155-.002c2.073-.044 4.204-.95 5.613-2.573l.019 2.006 4.924-.105-.153-15.827z"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
        mask: "url(#pulse_svg__d)",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "currentColor",
          fillRule: "evenodd",
          d: "M37.777-53.027q.35 0 .701.002c7.324.042 14.579.756 21.563 2.12 8.219 1.605 16.07 4.111 23.339 7.451 11.195 5.141 20.943 12.188 28.973 20.943 14.57 15.833 22.547 36.306 22.429 57.645-.119 21.205-8.235 41.49-22.821 57.115-8.079 8.684-17.858 15.648-29.066 20.699-7.263 3.275-15.101 5.718-23.298 7.259-6.937 1.306-14.139 1.968-21.406 1.968h-.007q-.346 0-.694-.002c-7.447-.043-14.796-.781-21.842-2.194-8.487-1.7-16.57-4.384-24.03-7.976-11.375-5.474-21.187-12.954-29.163-22.229-13.418-15.55-20.756-35.354-20.644-55.76a83.6 83.6 0 0 1 6.627-32.22A85.1 85.1 0 0 1-37.15-21.248c8.03-9.2 17.877-16.592 29.266-21.971 7.454-3.523 15.523-6.138 23.985-7.772 6.997-1.352 14.29-2.038 21.676-2.038m0 3.148c-7.192 0-14.29.668-21.098 1.983-8.21 1.585-16.036 4.12-23.26 7.534-11.001 5.196-20.508 12.33-28.257 21.207a82 82 0 0 0-13.88 22.192 80.4 80.4 0 0 0-6.375 30.994c-.108 19.627 6.95 38.687 19.877 53.67 7.695 8.949 17.169 16.168 28.159 21.457 7.228 3.48 15.068 6.082 23.303 7.732 6.856 1.374 14.01 2.092 21.262 2.134l.682.002c7.08 0 14.092-.644 20.844-1.915 7.958-1.497 15.564-3.866 22.608-7.042 10.83-4.88 20.275-11.604 28.074-19.988 14.055-15.055 21.857-34.575 21.971-54.964.113-20.52-7.555-40.22-21.597-55.48-7.749-8.45-17.164-15.253-27.984-20.221-7.048-3.238-14.668-5.67-22.648-7.229-6.8-1.328-13.864-2.022-20.999-2.063z",
          clipRule: "evenodd"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("mask", {
        id: "pulse_svg__e",
        width: 82,
        height: 23,
        x: 1,
        y: 0,
        maskUnits: "userSpaceOnUse",
        style: {
          maskType: 'alpha'
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "m39.907 1.28.153 21.455 5.12.007L45.022.267zm-28.266.387-9.654.377.923 20.922 5.312-.208-.287-6.518 4.34-.169c5.28-.206 8.684-3.238 8.488-7.69-.182-4.127-3.297-6.727-8.49-6.727q-.312 0-.632.013M7.482 5.971l3.952-.155a7 7 0 0 1 .26-.006c2.143 0 3.422 1.082 3.503 2.916.084 1.909-1.193 3.136-3.493 3.226l-3.951.154zm46.594-.093c-4.715.673-7.313 3.135-6.89 6.55.411 3.319 3.555 3.932 7.598 3.902 2.445-.027 3.599-.193 3.717.756s-1.026 1.466-2.726 1.709c-2.373.338-5.121.022-7.03-.638l-.947 3.16c1.486.64 3.74 1.133 6.166 1.132q1.193.003 2.374-.164c4.65-.663 7.15-3.143 6.746-6.4-.482-3.888-4.513-4.02-8.003-4.005-2.152.017-3.226.042-3.332-.812-.114-.917 1.022-1.497 2.818-1.753 2.18-.311 4.854-.081 6.578.67l-.466-3.762c-1.2-.316-2.738-.5-4.27-.5-.796 0-1.589.049-2.334.155m17.265.148c-5.093 1.263-7.999 5.824-6.774 10.574.97 3.768 4.013 5.856 7.894 5.856a12.4 12.4 0 0 0 2.981-.381c3.301-.819 5.561-2.692 6.94-4.61l-2.325-2.015c-1.208 1.151-2.755 2.16-4.516 2.596-2.641.655-4.609.027-5.698-1.737l10.846-2.69a6.8 6.8 0 0 0-.172-2.747c-.835-3.243-3.458-5.148-6.8-5.148-.758 0-1.555.098-2.376.302m.835 3.371q.481-.123.978-.126c1.345 0 2.37.77 2.865 2.06l-7.042 1.747c.12-2 1.596-3.284 3.2-3.681M32.972 7.593l.091 9.331c-.928 1.135-2.122 1.765-3.417 1.794-1.814.038-2.734-1.247-2.758-3.891l-.078-8.12L21.7 7.834l.083 8.663c.041 4.326 2.54 6.47 5.738 6.468q.077 0 .155-.002c2.073-.044 4.204-.95 5.613-2.573l.019 2.006 4.924-.105-.153-15.827z"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
        mask: "url(#pulse_svg__e)",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "currentColor",
          fillRule: "evenodd",
          d: "M37.782-50.306q.342 0 .685.002c7.111.042 14.154.732 20.936 2.052 7.98 1.553 15.605 3.98 22.664 7.213 10.878 4.976 20.353 11.798 28.16 20.273 14.207 15.342 21.995 35.191 21.881 55.885-.116 20.564-8.039 40.231-22.262 55.371-7.855 8.406-17.36 15.147-28.25 20.036-7.055 3.169-14.666 5.533-22.626 7.025-6.734 1.263-13.727 1.903-20.783 1.903h-.682c-7.23-.043-14.364-.758-21.206-2.125-8.24-1.645-16.09-4.242-23.333-7.719-11.054-5.299-20.59-12.54-28.345-21.519-13.083-15.07-20.244-34.27-20.135-54.061a80.5 80.5 0 0 1 6.48-31.258 82.5 82.5 0 0 1 14.04-22.32c7.806-8.904 17.377-16.06 28.443-21.267 7.24-3.408 15.075-5.938 23.292-7.52 6.792-1.308 13.87-1.971 21.041-1.971m0 3.087c-6.98 0-13.87.645-20.477 1.916-7.97 1.535-15.567 3.987-22.582 7.29C-15.964-32.985-25.2-26.081-32.733-17.49A79.4 79.4 0 0 0-46.25 4c-4.076 9.572-6.172 19.68-6.23 30.048-.105 19.02 6.775 37.488 19.38 52.007 7.48 8.66 16.685 15.647 27.36 20.764 7.018 3.369 14.63 5.886 22.624 7.482 6.656 1.33 13.6 2.025 20.638 2.066l.665.002c6.871 0 13.68-.624 20.233-1.852 7.726-1.449 15.111-3.741 21.952-6.814 10.52-4.724 19.697-11.23 27.28-19.344 13.704-14.587 21.311-33.5 21.422-53.256.109-19.88-7.368-38.97-21.061-53.758-7.532-8.176-16.68-14.76-27.191-19.57-6.844-3.132-14.243-5.486-21.99-6.994-6.6-1.285-13.458-1.957-20.384-1.997z",
          clipRule: "evenodd"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("mask", {
        id: "pulse_svg__f",
        width: 82,
        height: 23,
        x: 1,
        y: 0,
        maskUnits: "userSpaceOnUse",
        style: {
          maskType: 'alpha'
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "m39.907 1.28.153 21.455 5.12.007L45.022.267zm-28.266.387-9.654.377.923 20.922 5.312-.208-.287-6.518 4.34-.169c5.28-.206 8.684-3.238 8.488-7.69-.182-4.127-3.297-6.727-8.49-6.727q-.312 0-.632.013M7.482 5.971l3.952-.155a7 7 0 0 1 .26-.006c2.143 0 3.422 1.082 3.503 2.916.084 1.909-1.193 3.136-3.493 3.226l-3.951.154zm46.594-.093c-4.715.673-7.313 3.135-6.89 6.55.411 3.319 3.555 3.932 7.598 3.902 2.445-.027 3.599-.193 3.717.756s-1.026 1.466-2.726 1.709c-2.373.338-5.121.022-7.03-.638l-.947 3.16c1.486.64 3.74 1.133 6.166 1.132q1.193.003 2.374-.164c4.65-.663 7.15-3.143 6.746-6.4-.482-3.888-4.513-4.02-8.003-4.005-2.152.017-3.226.042-3.332-.812-.114-.917 1.022-1.497 2.818-1.753 2.18-.311 4.854-.081 6.578.67l-.466-3.762c-1.2-.316-2.738-.5-4.27-.5-.796 0-1.589.049-2.334.155m17.265.148c-5.093 1.263-7.999 5.824-6.774 10.574.97 3.768 4.013 5.856 7.894 5.856a12.4 12.4 0 0 0 2.981-.381c3.301-.819 5.561-2.692 6.94-4.61l-2.325-2.015c-1.208 1.151-2.755 2.16-4.516 2.596-2.641.655-4.609.027-5.698-1.737l10.846-2.69a6.8 6.8 0 0 0-.172-2.747c-.835-3.243-3.458-5.148-6.8-5.148-.758 0-1.555.098-2.376.302m.835 3.371q.481-.123.978-.126c1.345 0 2.37.77 2.865 2.06l-7.042 1.747c.12-2 1.596-3.284 3.2-3.681M32.972 7.593l.091 9.331c-.928 1.135-2.122 1.765-3.417 1.794-1.814.038-2.734-1.247-2.758-3.891l-.078-8.12L21.7 7.834l.083 8.663c.041 4.326 2.54 6.47 5.738 6.468q.077 0 .155-.002c2.073-.044 4.204-.95 5.613-2.573l.019 2.006 4.924-.105-.153-15.827z"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
        mask: "url(#pulse_svg__f)",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "currentColor",
          fillRule: "evenodd",
          d: "M37.788-47.585q.333 0 .667.002c6.899.04 13.731.708 20.31 1.984 7.742 1.503 15.14 3.848 21.99 6.973 10.56 4.812 19.761 11.41 27.346 19.604 13.844 14.852 21.443 34.077 21.333 54.126-.112 19.923-7.842 38.97-21.703 53.627-7.631 8.127-16.86 14.645-27.433 19.372-6.846 3.063-14.231 5.348-21.954 6.791-6.532 1.22-13.315 1.839-20.16 1.839h-.01q-.325 0-.653-.002c-7.014-.041-13.933-.731-20.57-2.052-7.994-1.592-15.61-4.102-22.638-7.462-10.731-5.125-19.992-12.127-27.525-20.809-12.75-14.59-19.733-33.188-19.628-52.364.06-10.464 2.196-20.66 6.334-30.295A79.8 79.8 0 0 1-32.839-17.85c7.584-8.61 16.877-15.53 27.622-20.563 7.024-3.295 14.626-5.74 22.598-7.27 6.587-1.263 13.452-1.903 20.407-1.903m0 3.025c-6.77 0-13.45.623-19.856 1.852-7.731 1.481-15.1 3.852-21.905 7.044-10.373 4.859-19.34 11.532-26.656 19.838A76.8 76.8 0 0 0-43.782 4.96c-3.981 9.27-6.028 19.062-6.085 29.102-.101 18.413 6.602 36.29 18.884 50.344 7.263 8.372 16.2 15.125 26.56 20.073 6.809 3.255 14.192 5.688 21.945 7.231 6.455 1.286 13.19 1.957 20.016 1.996l.646.002c6.664 0 13.266-.602 19.623-1.79 7.493-1.399 14.657-3.614 21.295-6.585 10.21-4.565 19.12-10.854 26.487-18.7 13.352-14.119 20.764-32.425 20.872-51.546.106-19.242-7.181-37.72-20.525-52.036-7.315-7.904-16.196-14.268-26.397-18.917-6.64-3.03-13.817-5.304-21.331-6.761-6.403-1.243-13.055-1.893-19.771-1.931z",
          clipRule: "evenodd"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("mask", {
        id: "pulse_svg__g",
        width: 82,
        height: 23,
        x: 1,
        y: 0,
        maskUnits: "userSpaceOnUse",
        style: {
          maskType: 'alpha'
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "m39.907 1.28.153 21.455 5.12.007L45.022.267zm-28.266.387-9.654.377.923 20.922 5.312-.208-.287-6.518 4.34-.169c5.28-.206 8.684-3.238 8.488-7.69-.182-4.127-3.297-6.727-8.49-6.727q-.312 0-.632.013M7.482 5.971l3.952-.155a7 7 0 0 1 .26-.006c2.143 0 3.422 1.082 3.503 2.916.084 1.909-1.193 3.136-3.493 3.226l-3.951.154zm46.594-.093c-4.715.673-7.313 3.135-6.89 6.55.411 3.319 3.555 3.932 7.598 3.902 2.445-.027 3.599-.193 3.717.756s-1.026 1.466-2.726 1.709c-2.373.338-5.121.022-7.03-.638l-.947 3.16c1.486.64 3.74 1.133 6.166 1.132q1.193.003 2.374-.164c4.65-.663 7.15-3.143 6.746-6.4-.482-3.888-4.513-4.02-8.003-4.005-2.152.017-3.226.042-3.332-.812-.114-.917 1.022-1.497 2.818-1.753 2.18-.311 4.854-.081 6.578.67l-.466-3.762c-1.2-.316-2.738-.5-4.27-.5-.796 0-1.589.049-2.334.155m17.265.148c-5.093 1.263-7.999 5.824-6.774 10.574.97 3.768 4.013 5.856 7.894 5.856a12.4 12.4 0 0 0 2.981-.381c3.301-.819 5.561-2.692 6.94-4.61l-2.325-2.015c-1.208 1.151-2.755 2.16-4.516 2.596-2.641.655-4.609.027-5.698-1.737l10.846-2.69a6.8 6.8 0 0 0-.172-2.747c-.835-3.243-3.458-5.148-6.8-5.148-.758 0-1.555.098-2.376.302m.835 3.371q.481-.123.978-.126c1.345 0 2.37.77 2.865 2.06l-7.042 1.747c.12-2 1.596-3.284 3.2-3.681M32.972 7.593l.091 9.331c-.928 1.135-2.122 1.765-3.417 1.794-1.814.038-2.734-1.247-2.758-3.891l-.078-8.12L21.7 7.834l.083 8.663c.041 4.326 2.54 6.47 5.738 6.468q.077 0 .155-.002c2.073-.044 4.204-.95 5.613-2.573l.019 2.006 4.924-.105-.153-15.827z"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
        mask: "url(#pulse_svg__g)",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "currentColor",
          fillRule: "evenodd",
          d: "M37.791-44.864q.325 0 .652.002c6.687.039 13.307.684 19.682 1.917 7.506 1.45 14.677 3.716 21.317 6.734 10.243 4.647 19.153 11.035 26.532 18.933 13.449 14.394 20.892 32.964 20.785 52.367-.108 19.282-7.677 37.68-21.143 51.882-7.424 7.832-16.363 14.144-26.618 18.709-6.637 2.958-13.796 5.165-21.281 6.557-6.33 1.178-12.903 1.776-19.536 1.776h-.012q-.316 0-.633-.002c-6.797-.04-13.502-.706-19.933-1.983-7.749-1.536-15.13-3.96-21.943-7.205-10.409-4.95-19.376-11.728-26.706-20.097-12.383-14.138-19.221-32.105-19.12-50.666.058-10.136 2.147-20.008 6.188-29.333A77.2 77.2 0 0 1-30.684-16.15c7.361-8.316 16.378-14.998 26.8-19.86 6.81-3.18 14.178-5.541 21.905-7.018 6.381-1.218 13.032-1.837 19.77-1.837m0 2.963c-6.556 0-13.027.6-19.233 1.786-7.491 1.431-14.632 3.718-21.227 6.8-10.06 4.69-18.757 11.134-25.856 19.154a74.3 74.3 0 0 0-12.79 20.083c-3.886 8.97-5.884 18.442-5.938 28.155-.098 17.745 6.43 35.033 18.381 48.678 7.105 8.112 15.774 14.634 25.767 19.385 6.599 3.142 13.753 5.491 21.265 6.981 6.254 1.24 12.778 1.889 19.393 1.929h.628c6.456 0 12.853-.581 19.012-1.727 7.261-1.351 14.205-3.49 20.638-6.357 9.844-4.382 18.488-10.455 25.689-18.051 13.005-13.717 20.224-31.419 20.327-49.843.102-18.541-6.994-36.408-19.983-50.308-7.157-7.66-15.773-13.807-25.609-18.27-6.436-2.925-13.392-5.121-20.673-6.529-6.204-1.199-12.649-1.826-19.157-1.866z",
          clipRule: "evenodd"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("mask", {
        id: "pulse_svg__h",
        width: 82,
        height: 23,
        x: 1,
        y: 0,
        maskUnits: "userSpaceOnUse",
        style: {
          maskType: 'alpha'
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "m39.907 1.28.153 21.455 5.12.007L45.022.267zm-28.266.387-9.654.377.923 20.922 5.312-.208-.287-6.518 4.34-.169c5.28-.206 8.684-3.238 8.488-7.69-.182-4.127-3.297-6.727-8.49-6.727q-.312 0-.632.013M7.482 5.971l3.952-.155a7 7 0 0 1 .26-.006c2.143 0 3.422 1.082 3.503 2.916.084 1.909-1.193 3.136-3.493 3.226l-3.951.154zm46.594-.093c-4.715.673-7.313 3.135-6.89 6.55.411 3.319 3.555 3.932 7.598 3.902 2.445-.027 3.599-.193 3.717.756s-1.026 1.466-2.726 1.709c-2.373.338-5.121.022-7.03-.638l-.947 3.16c1.486.64 3.74 1.133 6.166 1.132q1.193.003 2.374-.164c4.65-.663 7.15-3.143 6.746-6.4-.482-3.888-4.513-4.02-8.003-4.005-2.152.017-3.226.042-3.332-.812-.114-.917 1.022-1.497 2.818-1.753 2.18-.311 4.854-.081 6.578.67l-.466-3.762c-1.2-.316-2.738-.5-4.27-.5-.796 0-1.589.049-2.334.155m17.265.148c-5.093 1.263-7.999 5.824-6.774 10.574.97 3.768 4.013 5.856 7.894 5.856a12.4 12.4 0 0 0 2.981-.381c3.301-.819 5.561-2.692 6.94-4.61l-2.325-2.015c-1.208 1.151-2.755 2.16-4.516 2.596-2.641.655-4.609.027-5.698-1.737l10.846-2.69a6.8 6.8 0 0 0-.172-2.747c-.835-3.243-3.458-5.148-6.8-5.148-.758 0-1.555.098-2.376.302m.835 3.371q.481-.123.978-.126c1.345 0 2.37.77 2.865 2.06l-7.042 1.747c.12-2 1.596-3.284 3.2-3.681M32.972 7.593l.091 9.331c-.928 1.135-2.122 1.765-3.417 1.794-1.814.038-2.734-1.247-2.758-3.891l-.078-8.12L21.7 7.834l.083 8.663c.041 4.326 2.54 6.47 5.738 6.468q.077 0 .155-.002c2.073-.044 4.204-.95 5.613-2.573l.019 2.006 4.924-.105-.153-15.827z"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
        mask: "url(#pulse_svg__h)",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "currentColor",
          fillRule: "evenodd",
          d: "M37.797-42.143q.316 0 .634.002c6.474.038 12.884.66 19.056 1.85 7.267 1.398 14.211 3.583 20.643 6.494 9.925 4.483 18.558 10.65 25.719 18.264 13.079 13.909 20.339 31.848 20.236 50.607-.105 18.642-7.487 36.414-20.583 50.138-7.205 7.55-15.865 13.642-25.803 18.045-6.428 2.853-13.36 4.98-20.61 6.323-6.127 1.136-12.489 1.712-18.911 1.712h-.627c-6.58-.04-13.07-.684-19.296-1.914-7.502-1.482-14.65-3.819-21.247-6.948-10.087-4.774-18.775-11.318-25.887-19.387C-40.922 69.38-47.59 52.02-47.491 34.076c.055-9.807 2.116-19.348 6.04-28.372A75 75 0 0 1-28.528-14.45c7.138-8.02 15.88-14.467 25.98-19.155 6.593-3.067 13.728-5.344 21.21-6.767 6.176-1.175 12.613-1.77 19.136-1.77m0 2.9c-6.345 0-12.607.58-18.612 1.722-7.251 1.379-14.165 3.584-20.551 6.555-9.744 4.522-18.172 10.735-25.055 18.47A72.2 72.2 0 0 0-38.843 6.877c-3.794 8.722-5.744 17.878-5.797 27.214-.094 17.127 6.257 33.824 17.883 47.015 6.901 7.83 15.301 14.118 24.97 18.694 6.388 3.03 13.314 5.294 20.586 6.73 6.052 1.196 12.367 1.821 18.77 1.86h.609c6.25 0 12.44-.559 18.401-1.665 7.03-1.302 13.752-3.364 19.982-6.128 9.524-4.22 17.9-10.076 24.895-17.406 12.655-13.262 19.678-30.356 19.778-48.135.098-17.891-6.807-35.145-19.446-48.585-6.952-7.393-15.301-13.32-24.817-17.62-6.231-2.819-12.965-4.936-20.015-6.294-6.004-1.157-12.242-1.762-18.542-1.798z",
          clipRule: "evenodd"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("mask", {
        id: "pulse_svg__i",
        width: 82,
        height: 23,
        x: 1,
        y: 0,
        maskUnits: "userSpaceOnUse",
        style: {
          maskType: 'alpha'
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "m39.907 1.28.153 21.455 5.12.007L45.022.267zm-28.266.387-9.654.377.923 20.922 5.312-.208-.287-6.518 4.34-.169c5.28-.206 8.684-3.238 8.488-7.69-.182-4.127-3.297-6.727-8.49-6.727q-.312 0-.632.013M7.482 5.971l3.952-.155a7 7 0 0 1 .26-.006c2.143 0 3.422 1.082 3.503 2.916.084 1.909-1.193 3.136-3.493 3.226l-3.951.154zm46.594-.093c-4.715.673-7.313 3.135-6.89 6.55.411 3.319 3.555 3.932 7.598 3.902 2.445-.027 3.599-.193 3.717.756s-1.026 1.466-2.726 1.709c-2.373.338-5.121.022-7.03-.638l-.947 3.16c1.486.64 3.74 1.133 6.166 1.132q1.193.003 2.374-.164c4.65-.663 7.15-3.143 6.746-6.4-.482-3.888-4.513-4.02-8.003-4.005-2.152.017-3.226.042-3.332-.812-.114-.917 1.022-1.497 2.818-1.753 2.18-.311 4.854-.081 6.578.67l-.466-3.762c-1.2-.316-2.738-.5-4.27-.5-.796 0-1.589.049-2.334.155m17.265.148c-5.093 1.263-7.999 5.824-6.774 10.574.97 3.768 4.013 5.856 7.894 5.856a12.4 12.4 0 0 0 2.981-.381c3.301-.819 5.561-2.692 6.94-4.61l-2.325-2.015c-1.208 1.151-2.755 2.16-4.516 2.596-2.641.655-4.609.027-5.698-1.737l10.846-2.69a6.8 6.8 0 0 0-.172-2.747c-.835-3.243-3.458-5.148-6.8-5.148-.758 0-1.555.098-2.376.302m.835 3.371q.481-.123.978-.126c1.345 0 2.37.77 2.865 2.06l-7.042 1.747c.12-2 1.596-3.284 3.2-3.681M32.972 7.593l.091 9.331c-.928 1.135-2.122 1.765-3.417 1.794-1.814.038-2.734-1.247-2.758-3.891l-.078-8.12L21.7 7.834l.083 8.663c.041 4.326 2.54 6.47 5.738 6.468q.077 0 .155-.002c2.073-.044 4.204-.95 5.613-2.573l.019 2.006 4.924-.105-.153-15.827z"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
        mask: "url(#pulse_svg__i)",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "currentColor",
          fillRule: "evenodd",
          d: "M37.803-39.422h.023q.296 0 .594.002c6.26.036 12.46.636 18.429 1.78 7.029 1.349 13.746 3.453 19.968 6.256 9.608 4.32 17.964 10.264 24.905 17.595C114.434-.364 121.51 16.945 121.41 35.058c-.101 18-7.297 35.148-20.023 48.394C94.403 90.72 86.02 96.593 76.4 100.834c-6.22 2.747-12.925 4.796-19.937 6.089a101 101 0 0 1-18.29 1.648h-.012q-.298 0-.594-.002c-6.364-.037-12.64-.657-18.66-1.842-7.257-1.426-14.17-3.678-20.552-6.691-9.764-4.599-18.173-10.907-25.068-18.676-11.702-13.188-18.2-29.939-18.104-47.27.054-9.477 2.07-18.694 5.895-27.409A72.4 72.4 0 0 1-26.374-12.75c6.916-7.727 15.38-13.936 25.158-18.452 6.379-2.954 13.28-5.145 20.517-6.515 5.972-1.132 12.194-1.706 18.502-1.706m0 2.838c-6.133 0-12.187.558-17.992 1.657-7.01 1.327-13.697 3.45-19.874 6.31-9.43 4.354-17.587 10.335-24.255 17.785a69.6 69.6 0 0 0-12.057 18.67c-3.7 8.43-5.6 17.267-5.652 26.268-.09 16.509 6.083 32.615 17.385 45.351 6.697 7.547 14.828 13.604 24.171 18.004 6.18 2.917 12.877 5.098 19.908 6.48 5.852 1.152 11.957 1.753 18.146 1.789l.59.003c6.043 0 12.03-.54 17.792-1.603 6.798-1.254 13.3-3.239 19.326-5.9 9.203-4.057 17.312-9.697 24.1-16.762 12.305-12.806 19.134-29.294 19.229-46.427.095-17.24-6.619-33.883-18.907-46.861-6.747-7.126-14.829-12.834-24.025-16.969-6.028-2.714-12.54-4.754-19.357-6.06-5.805-1.115-11.837-1.698-17.929-1.733z",
          clipRule: "evenodd"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("mask", {
        id: "pulse_svg__j",
        width: 82,
        height: 23,
        x: 1,
        y: 0,
        maskUnits: "userSpaceOnUse",
        style: {
          maskType: 'alpha'
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "m39.907 1.28.153 21.455 5.12.007L45.022.267zm-28.266.387-9.654.377.923 20.922 5.312-.208-.287-6.518 4.34-.169c5.28-.206 8.684-3.238 8.488-7.69-.182-4.127-3.297-6.727-8.49-6.727q-.312 0-.632.013M7.482 5.971l3.952-.155a7 7 0 0 1 .26-.006c2.143 0 3.422 1.082 3.503 2.916.084 1.909-1.193 3.136-3.493 3.226l-3.951.154zm46.594-.093c-4.715.673-7.313 3.135-6.89 6.55.411 3.319 3.555 3.932 7.598 3.902 2.445-.027 3.599-.193 3.717.756s-1.026 1.466-2.726 1.709c-2.373.338-5.121.022-7.03-.638l-.947 3.16c1.486.64 3.74 1.133 6.166 1.132q1.193.003 2.374-.164c4.65-.663 7.15-3.143 6.746-6.4-.482-3.888-4.513-4.02-8.003-4.005-2.152.017-3.226.042-3.332-.812-.114-.917 1.022-1.497 2.818-1.753 2.18-.311 4.854-.081 6.578.67l-.466-3.762c-1.2-.316-2.738-.5-4.27-.5-.796 0-1.589.049-2.334.155m17.265.148c-5.093 1.263-7.999 5.824-6.774 10.574.97 3.768 4.013 5.856 7.894 5.856a12.4 12.4 0 0 0 2.981-.381c3.301-.819 5.561-2.692 6.94-4.61l-2.325-2.015c-1.208 1.151-2.755 2.16-4.516 2.596-2.641.655-4.609.027-5.698-1.737l10.846-2.69a6.8 6.8 0 0 0-.172-2.747c-.835-3.243-3.458-5.148-6.8-5.148-.758 0-1.555.098-2.376.302m.835 3.371q.481-.123.978-.126c1.345 0 2.37.77 2.865 2.06l-7.042 1.747c.12-2 1.596-3.284 3.2-3.681M32.972 7.593l.091 9.331c-.928 1.135-2.122 1.765-3.417 1.794-1.814.038-2.734-1.247-2.758-3.891l-.078-8.12L21.7 7.834l.083 8.663c.041 4.326 2.54 6.47 5.738 6.468q.077 0 .155-.002c2.073-.044 4.204-.95 5.613-2.573l.019 2.006 4.924-.105-.153-15.827z"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
        mask: "url(#pulse_svg__j)",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "currentColor",
          fillRule: "evenodd",
          d: "M37.807-36.702q.3 0 .6.002a98 98 0 0 1 17.802 1.714c6.792 1.296 13.282 3.32 19.296 6.016 9.29 4.155 17.37 9.877 24.09 16.925 12.343 12.94 19.238 29.62 19.141 47.087-.097 17.36-7.106 33.883-19.464 46.65-6.763 6.987-14.869 12.64-24.171 16.719-6.01 2.641-12.49 4.611-19.265 5.854a98 98 0 0 1-17.663 1.585h-.591c-6.148-.038-12.209-.633-18.023-1.773-7.01-1.373-13.69-3.538-19.857-6.435-9.442-4.423-17.572-10.496-24.248-17.966-11.363-12.712-17.688-28.854-17.596-45.57.052-9.148 2.022-18.04 5.748-26.448a70.4 70.4 0 0 1 12.175-18.71C-17.51-18.469-9.339-24.456.117-28.799c6.164-2.84 12.831-4.947 19.824-6.264 5.766-1.087 11.775-1.639 17.866-1.639m0 2.776c-5.922 0-11.765.536-17.37 1.593-6.77 1.275-13.229 3.314-19.197 6.064-9.068 4.165-16.958 9.918-23.45 17.097A67.6 67.6 0 0 0-33.907 8.8c-3.605 8.135-5.457 16.655-5.506 25.321-.088 15.891 5.909 31.406 16.886 43.688C-16.036 85.07-8.172 90.897.847 95.122c5.968 2.804 12.437 4.9 19.228 6.229 5.65 1.107 11.546 1.686 17.523 1.721l.574.002c5.834 0 11.614-.519 17.18-1.541 6.566-1.205 12.846-3.113 18.67-5.672 8.882-3.894 16.723-9.317 23.306-16.117 11.953-12.35 18.587-28.23 18.679-44.718.091-16.591-6.432-32.622-18.37-45.138-6.54-6.859-14.356-12.348-23.232-16.318-5.825-2.61-12.116-4.57-18.699-5.827a95.5 95.5 0 0 0-17.316-1.666z",
          clipRule: "evenodd"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("mask", {
        id: "pulse_svg__k",
        width: 82,
        height: 23,
        x: 1,
        y: 0,
        maskUnits: "userSpaceOnUse",
        style: {
          maskType: 'alpha'
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "m39.907 1.28.153 21.455 5.12.007L45.022.267zm-28.266.387-9.654.377.923 20.922 5.312-.208-.287-6.518 4.34-.169c5.28-.206 8.684-3.238 8.488-7.69-.182-4.127-3.297-6.727-8.49-6.727q-.312 0-.632.013M7.482 5.971l3.952-.155a7 7 0 0 1 .26-.006c2.143 0 3.422 1.082 3.503 2.916.084 1.909-1.193 3.136-3.493 3.226l-3.951.154zm46.594-.093c-4.715.673-7.313 3.135-6.89 6.55.411 3.319 3.555 3.932 7.598 3.902 2.445-.027 3.599-.193 3.717.756s-1.026 1.466-2.726 1.709c-2.373.338-5.121.022-7.03-.638l-.947 3.16c1.486.64 3.74 1.133 6.166 1.132q1.193.003 2.374-.164c4.65-.663 7.15-3.143 6.746-6.4-.482-3.888-4.513-4.02-8.003-4.005-2.152.017-3.226.042-3.332-.812-.114-.917 1.022-1.497 2.818-1.753 2.18-.311 4.854-.081 6.578.67l-.466-3.762c-1.2-.316-2.738-.5-4.27-.5-.796 0-1.589.049-2.334.155m17.265.148c-5.093 1.263-7.999 5.824-6.774 10.574.97 3.768 4.013 5.856 7.894 5.856a12.4 12.4 0 0 0 2.981-.381c3.301-.819 5.561-2.692 6.94-4.61l-2.325-2.015c-1.208 1.151-2.755 2.16-4.516 2.596-2.641.655-4.609.027-5.698-1.737l10.846-2.69a6.8 6.8 0 0 0-.172-2.747c-.835-3.243-3.458-5.148-6.8-5.148-.758 0-1.555.098-2.376.302m.835 3.371q.481-.123.978-.126c1.345 0 2.37.77 2.865 2.06l-7.042 1.747c.12-2 1.596-3.284 3.2-3.681M32.972 7.593l.091 9.331c-.928 1.135-2.122 1.765-3.417 1.794-1.814.038-2.734-1.247-2.758-3.891l-.078-8.12L21.7 7.834l.083 8.663c.041 4.326 2.54 6.47 5.738 6.468q.077 0 .155-.002c2.073-.044 4.204-.95 5.613-2.573l.019 2.006 4.924-.105-.153-15.827z"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
        mask: "url(#pulse_svg__k)",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "currentColor",
          fillRule: "evenodd",
          d: "m37.812-33.98.584.001a95 95 0 0 1 17.175 1.646c6.554 1.245 12.817 3.189 18.621 5.777 8.973 3.99 16.776 9.49 23.278 16.255 11.974 12.457 18.684 28.505 18.592 45.328-.094 16.719-6.916 32.617-18.905 44.906-6.542 6.705-14.37 12.138-23.355 16.055-5.801 2.535-12.055 4.427-18.593 5.62a95 95 0 0 1-17.058 1.521h-.554c-5.93-.037-11.777-.609-17.386-1.703C13.446 100.108 7 98.03 1.049 95.248-8.07 91-15.922 85.163-22.38 77.993-33.403 65.755-39.557 50.22-39.468 34.122c.05-8.82 1.976-17.388 5.602-25.486A67.8 67.8 0 0 1-22.065-9.352c6.486-7.122 14.382-12.874 23.515-17.044 5.949-2.726 12.382-4.75 19.13-6.013 5.561-1.043 11.356-1.572 17.23-1.572m0 2.713c-5.71 0-11.344.514-16.748 1.527-6.532 1.224-12.762 3.182-18.52 5.82-8.75 3.994-16.37 9.517-22.651 16.413A65.2 65.2 0 0 0-31.44 9.76c-3.51 7.84-5.314 16.042-5.36 24.376-.085 15.272 5.734 30.197 16.386 42.022 6.287 6.981 13.881 12.573 22.576 16.623 5.76 2.692 12 4.703 18.55 5.98 5.45 1.062 11.136 1.618 16.9 1.651l.56.002c5.625 0 11.198-.498 16.565-1.479 6.334-1.156 12.393-2.987 18.013-5.443 8.563-3.732 16.137-8.938 22.513-15.473 11.602-11.892 18.041-27.167 18.13-43.008.088-15.943-6.244-31.361-17.831-43.415-6.336-6.591-13.886-11.862-22.441-15.667-5.62-2.506-11.69-4.389-18.041-5.595a92.6 92.6 0 0 0-16.702-1.6z",
          clipRule: "evenodd"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("mask", {
        id: "pulse_svg__l",
        width: 82,
        height: 23,
        x: 1,
        y: 0,
        maskUnits: "userSpaceOnUse",
        style: {
          maskType: 'alpha'
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "m39.907 1.28.153 21.455 5.12.007L45.022.267zm-28.266.387-9.654.377.923 20.922 5.312-.208-.287-6.518 4.34-.169c5.28-.206 8.684-3.238 8.488-7.69-.182-4.127-3.297-6.727-8.49-6.727q-.312 0-.632.013M7.482 5.971l3.952-.155a7 7 0 0 1 .26-.006c2.143 0 3.422 1.082 3.503 2.916.084 1.909-1.193 3.136-3.493 3.226l-3.951.154zm46.594-.093c-4.715.673-7.313 3.135-6.89 6.55.411 3.319 3.555 3.932 7.598 3.902 2.445-.027 3.599-.193 3.717.756s-1.026 1.466-2.726 1.709c-2.373.338-5.121.022-7.03-.638l-.947 3.16c1.486.64 3.74 1.133 6.166 1.132q1.193.003 2.374-.164c4.65-.663 7.15-3.143 6.746-6.4-.482-3.888-4.513-4.02-8.003-4.005-2.152.017-3.226.042-3.332-.812-.114-.917 1.022-1.497 2.818-1.753 2.18-.311 4.854-.081 6.578.67l-.466-3.762c-1.2-.316-2.738-.5-4.27-.5-.796 0-1.589.049-2.334.155m17.265.148c-5.093 1.263-7.999 5.824-6.774 10.574.97 3.768 4.013 5.856 7.894 5.856a12.4 12.4 0 0 0 2.981-.381c3.301-.819 5.561-2.692 6.94-4.61l-2.325-2.015c-1.208 1.151-2.755 2.16-4.516 2.596-2.641.655-4.609.027-5.698-1.737l10.846-2.69a6.8 6.8 0 0 0-.172-2.747c-.835-3.243-3.458-5.148-6.8-5.148-.758 0-1.555.098-2.376.302m.835 3.371q.481-.123.978-.126c1.345 0 2.37.77 2.865 2.06l-7.042 1.747c.12-2 1.596-3.284 3.2-3.681M32.972 7.593l.091 9.331c-.928 1.135-2.122 1.765-3.417 1.794-1.814.038-2.734-1.247-2.758-3.891l-.078-8.12L21.7 7.834l.083 8.663c.041 4.326 2.54 6.47 5.738 6.468q.077 0 .155-.002c2.073-.044 4.204-.95 5.613-2.573l.019 2.006 4.924-.105-.153-15.827z"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
        mask: "url(#pulse_svg__l)",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "currentColor",
          fillRule: "evenodd",
          d: "M37.815-31.26q.284 0 .569.002c5.624.034 11.189.565 16.548 1.578 6.316 1.195 12.352 3.057 17.947 5.538 8.657 3.826 16.182 9.105 22.465 15.586 11.605 11.972 18.132 27.39 18.043 43.567-.09 16.08-6.724 31.352-18.345 43.162-6.321 6.424-13.872 11.638-22.54 15.392-5.592 2.43-11.619 4.243-17.92 5.386a92 92 0 0 1-16.415 1.457h-.022q-.266 0-.533-.002c-5.714-.033-11.346-.581-16.749-1.63-6.52-1.263-12.73-3.255-18.466-5.921-8.798-4.073-16.37-9.674-22.611-16.544-10.682-11.764-16.664-26.689-16.579-42.174.047-8.49 1.928-16.734 5.454-24.523A65.4 65.4 0 0 1-19.91-7.652c6.266-6.826 13.882-12.343 22.693-16.341 5.734-2.612 11.934-4.55 18.437-5.76 5.355-1 10.936-1.507 16.594-1.507m0 2.652c-5.497 0-10.922.492-16.125 1.462-6.292 1.172-12.295 3.047-17.844 5.575-8.429 3.824-15.78 9.116-21.85 15.729A62.7 62.7 0 0 0-28.97 10.723c-3.416 7.546-5.17 15.428-5.216 23.43-.08 14.654 5.562 28.987 15.888 40.357C-12.217 81.208-4.89 86.568 3.48 90.444c5.55 2.579 11.561 4.506 17.871 5.728 5.249 1.019 10.725 1.55 16.277 1.584l.54.001c5.419 0 10.788-.476 15.957-1.415 6.101-1.108 11.94-2.863 17.357-5.216 8.242-3.57 15.55-8.56 21.718-14.829 11.252-11.434 17.495-26.101 17.58-41.3.084-15.294-6.057-30.099-17.292-41.69-6.13-6.324-13.413-11.376-21.65-15.017-5.416-2.401-11.265-4.205-17.382-5.361a89.6 89.6 0 0 0-16.09-1.534z",
          clipRule: "evenodd"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("mask", {
        id: "pulse_svg__m",
        width: 82,
        height: 23,
        x: 1,
        y: 0,
        maskUnits: "userSpaceOnUse",
        style: {
          maskType: 'alpha'
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "m39.907 1.28.153 21.455 5.12.007L45.022.267zm-28.266.387-9.654.377.923 20.922 5.312-.208-.287-6.518 4.34-.169c5.28-.206 8.684-3.238 8.488-7.69-.182-4.127-3.297-6.727-8.49-6.727q-.312 0-.632.013M7.482 5.971l3.952-.155a7 7 0 0 1 .26-.006c2.143 0 3.422 1.082 3.503 2.916.084 1.909-1.193 3.136-3.493 3.226l-3.951.154zm46.594-.093c-4.715.673-7.313 3.135-6.89 6.55.411 3.319 3.555 3.932 7.598 3.902 2.445-.027 3.599-.193 3.717.756s-1.026 1.466-2.726 1.709c-2.373.338-5.121.022-7.03-.638l-.947 3.16c1.486.64 3.74 1.133 6.166 1.132q1.193.003 2.374-.164c4.65-.663 7.15-3.143 6.746-6.4-.482-3.888-4.513-4.02-8.003-4.005-2.152.017-3.226.042-3.332-.812-.114-.917 1.022-1.497 2.818-1.753 2.18-.311 4.854-.081 6.578.67l-.466-3.762c-1.2-.316-2.738-.5-4.27-.5-.796 0-1.589.049-2.334.155m17.265.148c-5.093 1.263-7.999 5.824-6.774 10.574.97 3.768 4.013 5.856 7.894 5.856a12.4 12.4 0 0 0 2.981-.381c3.301-.819 5.561-2.692 6.94-4.61l-2.325-2.015c-1.208 1.151-2.755 2.16-4.516 2.596-2.641.655-4.609.027-5.698-1.737l10.846-2.69a6.8 6.8 0 0 0-.172-2.747c-.835-3.243-3.458-5.148-6.8-5.148-.758 0-1.555.098-2.376.302m.835 3.371q.481-.123.978-.126c1.345 0 2.37.77 2.865 2.06l-7.042 1.747c.12-2 1.596-3.284 3.2-3.681M32.972 7.593l.091 9.331c-.928 1.135-2.122 1.765-3.417 1.794-1.814.038-2.734-1.247-2.758-3.891l-.078-8.12L21.7 7.834l.083 8.663c.041 4.326 2.54 6.47 5.738 6.468q.077 0 .155-.002c2.073-.044 4.204-.95 5.613-2.573l.019 2.006 4.924-.105-.153-15.827z"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
        mask: "url(#pulse_svg__m)",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "currentColor",
          fillRule: "evenodd",
          d: "M37.82-28.539q.276 0 .552.002c5.41.032 10.765.541 15.921 1.51 6.079 1.143 11.887 2.926 17.275 5.3 8.337 3.661 15.587 8.717 21.65 14.915 11.237 11.488 17.58 26.277 17.495 41.808-.087 15.438-6.533 30.086-17.785 41.417-6.1 6.143-13.375 11.137-21.724 14.73-5.384 2.323-11.184 4.057-17.248 5.151a89 89 0 0 1-15.814 1.394h-.002q-.256 0-.513-.002c-5.497-.032-10.915-.557-16.112-1.56-6.274-1.208-12.25-3.115-17.771-5.665-8.476-3.898-15.77-9.263-21.791-15.834C-28.39 63.34-34.201 49.023-34.12 34.153c.046-8.162 1.881-16.081 5.308-23.562A62.8 62.8 0 0 1-17.753-5.953c6.043-6.53 13.382-11.812 21.87-15.637 5.52-2.498 11.486-4.352 17.744-5.51 5.15-.954 10.517-1.439 15.96-1.439m0 2.59c-5.285 0-10.501.47-15.504 1.398-6.052 1.12-11.826 2.912-17.168 5.33-8.108 3.653-15.19 8.715-21.049 15.043a60.3 60.3 0 0 0-10.603 15.863c-3.32 7.25-5.026 14.815-5.07 22.482-.077 14.039 5.388 27.78 15.389 38.694 5.877 6.414 12.935 11.542 20.981 15.242 5.34 2.466 11.124 4.31 17.193 5.478 5.048.975 10.314 1.484 15.653 1.515l.523.001a86.5 86.5 0 0 0 15.346-1.353c5.87-1.06 11.488-2.737 16.701-4.987 7.923-3.408 14.962-8.181 20.925-14.184 10.9-10.977 16.949-25.038 17.03-39.591.08-14.645-5.869-28.84-16.754-39.967-5.924-6.056-12.94-10.89-20.857-14.366-5.213-2.297-10.84-4.023-16.725-5.129a86.7 86.7 0 0 0-15.474-1.467z",
          clipRule: "evenodd"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("mask", {
        id: "pulse_svg__n",
        width: 82,
        height: 23,
        x: 1,
        y: 0,
        maskUnits: "userSpaceOnUse",
        style: {
          maskType: 'alpha'
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "m39.907 1.28.153 21.455 5.12.007L45.022.267zm-28.266.387-9.654.377.923 20.922 5.312-.208-.287-6.518 4.34-.169c5.28-.206 8.684-3.238 8.488-7.69-.182-4.127-3.297-6.727-8.49-6.727q-.312 0-.632.013M7.482 5.971l3.952-.155a7 7 0 0 1 .26-.006c2.143 0 3.422 1.082 3.503 2.916.084 1.909-1.193 3.136-3.493 3.226l-3.951.154zm46.594-.093c-4.715.673-7.313 3.135-6.89 6.55.411 3.319 3.555 3.932 7.598 3.902 2.445-.027 3.599-.193 3.717.756s-1.026 1.466-2.726 1.709c-2.373.338-5.121.022-7.03-.638l-.947 3.16c1.486.64 3.74 1.133 6.166 1.132q1.193.003 2.374-.164c4.65-.663 7.15-3.143 6.746-6.4-.482-3.888-4.513-4.02-8.003-4.005-2.152.017-3.226.042-3.332-.812-.114-.917 1.022-1.497 2.818-1.753 2.18-.311 4.854-.081 6.578.67l-.466-3.762c-1.2-.316-2.738-.5-4.27-.5-.796 0-1.589.049-2.334.155m17.265.148c-5.093 1.263-7.999 5.824-6.774 10.574.97 3.768 4.013 5.856 7.894 5.856a12.4 12.4 0 0 0 2.981-.381c3.301-.819 5.561-2.692 6.94-4.61l-2.325-2.015c-1.208 1.151-2.755 2.16-4.516 2.596-2.641.655-4.609.027-5.698-1.737l10.846-2.69a6.8 6.8 0 0 0-.172-2.747c-.835-3.243-3.458-5.148-6.8-5.148-.758 0-1.555.098-2.376.302m.835 3.371q.481-.123.978-.126c1.345 0 2.37.77 2.865 2.06l-7.042 1.747c.12-2 1.596-3.284 3.2-3.681M32.972 7.593l.091 9.331c-.928 1.135-2.122 1.765-3.417 1.794-1.814.038-2.734-1.247-2.758-3.891l-.078-8.12L21.7 7.834l.083 8.663c.041 4.326 2.54 6.47 5.738 6.468q.077 0 .155-.002c2.073-.044 4.204-.95 5.613-2.573l.019 2.006 4.924-.105-.153-15.827z"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
        mask: "url(#pulse_svg__n)",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "currentColor",
          fillRule: "evenodd",
          d: "M37.824-25.818q.267 0 .536.002a86.3 86.3 0 0 1 15.295 1.443c5.84 1.09 11.422 2.793 16.6 5.059 8.02 3.498 14.994 8.331 20.836 14.246 10.87 11.004 17.029 25.162 16.947 40.048-.083 14.799-6.341 28.822-17.225 39.673-5.879 5.862-12.876 10.636-20.908 14.066-5.176 2.219-10.75 3.874-16.576 4.918-4.922.883-10.03 1.326-15.192 1.33h-.001q-.247 0-.494-.002c-5.28-.03-10.484-.532-15.475-1.489-6.028-1.154-11.77-2.974-17.076-5.409-8.154-3.722-15.169-8.851-20.972-15.123-10.003-10.812-15.642-24.522-15.564-38.776.045-7.832 1.835-15.427 5.162-22.6A60.3 60.3 0 0 1-15.598-4.254c5.822-6.234 12.883-11.28 21.05-14.932 5.303-2.385 11.036-4.154 17.049-5.26 4.945-.91 10.097-1.372 15.323-1.372m0 2.528c-5.073 0-10.08.448-14.881 1.332-5.813 1.069-11.36 2.779-16.492 5.086-7.79 3.483-14.602 8.314-20.249 14.36a57.9 57.9 0 0 0-10.238 15.16c-3.226 6.955-4.883 14.2-4.924 21.534-.074 13.421 5.214 26.572 14.888 37.03C-8.4 77.341-1.61 82.236 6.113 85.762c5.13 2.354 10.685 4.113 16.514 5.228 4.847.93 9.904 1.416 15.03 1.447h.505c5.004 0 9.962-.434 14.736-1.29 5.637-1.01 11.034-2.611 16.045-4.76 7.603-3.246 14.376-7.802 20.13-13.54 10.55-10.518 16.403-23.972 16.48-37.882.078-13.997-5.68-27.578-16.214-38.242C83.62-9.065 76.87-13.68 69.273-16.992c-5.009-2.192-10.415-3.84-16.067-4.895a84 84 0 0 0-14.862-1.401z",
          clipRule: "evenodd"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("mask", {
        id: "pulse_svg__o",
        width: 82,
        height: 23,
        x: 1,
        y: 0,
        maskUnits: "userSpaceOnUse",
        style: {
          maskType: 'alpha'
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "m39.907 1.28.153 21.455 5.12.007L45.022.267zm-28.266.387-9.654.377.923 20.922 5.312-.208-.287-6.518 4.34-.169c5.28-.206 8.684-3.238 8.488-7.69-.182-4.127-3.297-6.727-8.49-6.727q-.312 0-.632.013M7.482 5.971l3.952-.155a7 7 0 0 1 .26-.006c2.143 0 3.422 1.082 3.503 2.916.084 1.909-1.193 3.136-3.493 3.226l-3.951.154zm46.594-.093c-4.715.673-7.313 3.135-6.89 6.55.411 3.319 3.555 3.932 7.598 3.902 2.445-.027 3.599-.193 3.717.756s-1.026 1.466-2.726 1.709c-2.373.338-5.121.022-7.03-.638l-.947 3.16c1.486.64 3.74 1.133 6.166 1.132q1.193.003 2.374-.164c4.65-.663 7.15-3.143 6.746-6.4-.482-3.888-4.513-4.02-8.003-4.005-2.152.017-3.226.042-3.332-.812-.114-.917 1.022-1.497 2.818-1.753 2.18-.311 4.854-.081 6.578.67l-.466-3.762c-1.2-.316-2.738-.5-4.27-.5-.796 0-1.589.049-2.334.155m17.265.148c-5.093 1.263-7.999 5.824-6.774 10.574.97 3.768 4.013 5.856 7.894 5.856a12.4 12.4 0 0 0 2.981-.381c3.301-.819 5.561-2.692 6.94-4.61l-2.325-2.015c-1.208 1.151-2.755 2.16-4.516 2.596-2.641.655-4.609.027-5.698-1.737l10.846-2.69a6.8 6.8 0 0 0-.172-2.747c-.835-3.243-3.458-5.148-6.8-5.148-.758 0-1.555.098-2.376.302m.835 3.371q.481-.123.978-.126c1.345 0 2.37.77 2.865 2.06l-7.042 1.747c.12-2 1.596-3.284 3.2-3.681M32.972 7.593l.091 9.331c-.928 1.135-2.122 1.765-3.417 1.794-1.814.038-2.734-1.247-2.758-3.891l-.078-8.12L21.7 7.834l.083 8.663c.041 4.326 2.54 6.47 5.738 6.468q.077 0 .155-.002c2.073-.044 4.204-.95 5.613-2.573l.019 2.006 4.924-.105-.153-15.827z"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
        mask: "url(#pulse_svg__o)",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "currentColor",
          fillRule: "evenodd",
          d: "M37.83-23.097q.258 0 .519.002c4.985.03 9.917.493 14.667 1.375 5.603 1.04 10.958 2.662 15.926 4.82 7.704 3.333 14.4 7.945 20.023 13.576 10.502 10.52 16.477 24.048 16.399 38.29-.08 14.156-6.15 27.555-16.666 37.928-5.658 5.58-12.378 10.134-20.092 13.403-4.967 2.112-10.314 3.688-15.903 4.683a83 83 0 0 1-14.544 1.265h-.027l-.474-.001c-5.064-.03-10.053-.507-14.84-1.419-5.78-1.1-11.289-2.832-16.38-5.15-7.831-3.549-14.569-8.442-20.152-14.414-9.665-10.337-15.131-23.438-15.056-37.078.042-7.502 1.787-14.773 5.015-21.637a57.9 57.9 0 0 1 10.311-15.1c5.602-5.938 12.385-10.75 20.229-14.23 5.089-2.27 10.588-3.955 16.356-5.006a82 82 0 0 1 14.688-1.307m0 0v2.466c-4.862 0-9.66.426-14.261 1.267-5.573 1.017-10.892 2.644-15.816 4.84C.283-11.208-6.26-6.608-11.695-.846a55.4 55.4 0 0 0-9.874 14.457c-3.13 6.659-4.738 13.585-4.778 20.587-.07 12.806 5.04 25.365 14.389 35.364C-6.492 75.41.03 80.072 7.429 83.423c4.92 2.242 10.248 3.917 15.836 4.98 4.646.884 9.493 1.347 14.406 1.376l.488.001c4.797 0 9.55-.414 14.126-1.229 5.405-.961 10.582-2.486 15.389-4.531 7.284-3.085 13.79-7.424 19.337-12.896 10.198-10.06 15.855-22.906 15.929-36.173.074-13.35-5.493-26.318-15.675-36.517-5.511-5.521-11.996-9.917-19.275-13.066-4.805-2.088-9.99-3.657-15.409-4.662a81 81 0 0 0-14.249-1.336l-.48-.001z",
          clipRule: "evenodd"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("mask", {
        id: "pulse_svg__p",
        width: 82,
        height: 23,
        x: 1,
        y: 0,
        maskUnits: "userSpaceOnUse",
        style: {
          maskType: 'alpha'
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "m39.907 1.28.153 21.455 5.12.007L45.022.267zm-28.266.387-9.654.377.923 20.922 5.312-.208-.287-6.518 4.34-.169c5.28-.206 8.684-3.238 8.488-7.69-.182-4.127-3.297-6.727-8.49-6.727q-.312 0-.632.013M7.482 5.971l3.952-.155a7 7 0 0 1 .26-.006c2.143 0 3.422 1.082 3.503 2.916.084 1.909-1.193 3.136-3.493 3.226l-3.951.154zm46.594-.093c-4.715.673-7.313 3.135-6.89 6.55.411 3.319 3.555 3.932 7.598 3.902 2.445-.027 3.599-.193 3.717.756s-1.026 1.466-2.726 1.709c-2.373.338-5.121.022-7.03-.638l-.947 3.16c1.486.64 3.74 1.133 6.166 1.132q1.193.003 2.374-.164c4.65-.663 7.15-3.143 6.746-6.4-.482-3.888-4.513-4.02-8.003-4.005-2.152.017-3.226.042-3.332-.812-.114-.917 1.022-1.497 2.818-1.753 2.18-.311 4.854-.081 6.578.67l-.466-3.762c-1.2-.316-2.738-.5-4.27-.5-.796 0-1.589.049-2.334.155m17.265.148c-5.093 1.263-7.999 5.824-6.774 10.574.97 3.768 4.013 5.856 7.894 5.856a12.4 12.4 0 0 0 2.981-.381c3.301-.819 5.561-2.692 6.94-4.61l-2.325-2.015c-1.208 1.151-2.755 2.16-4.516 2.596-2.641.655-4.609.027-5.698-1.737l10.846-2.69a6.8 6.8 0 0 0-.172-2.747c-.835-3.243-3.458-5.148-6.8-5.148-.758 0-1.555.098-2.376.302m.835 3.371q.481-.123.978-.126c1.345 0 2.37.77 2.865 2.06l-7.042 1.747c.12-2 1.596-3.284 3.2-3.681M32.972 7.593l.091 9.331c-.928 1.135-2.122 1.765-3.417 1.794-1.814.038-2.734-1.247-2.758-3.891l-.078-8.12L21.7 7.834l.083 8.663c.041 4.326 2.54 6.47 5.738 6.468q.077 0 .155-.002c2.073-.044 4.204-.95 5.613-2.573l.019 2.006 4.924-.105-.153-15.827z"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
        mask: "url(#pulse_svg__p)",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "currentColor",
          fillRule: "evenodd",
          d: "m37.834-20.376.503.001c4.772.03 9.493.47 14.04 1.309 5.365.987 10.494 2.528 15.252 4.58C75.015-11.318 81.438-6.93 86.84-1.58c10.135 10.035 15.925 22.934 15.85 36.53-.075 13.516-5.957 26.29-16.106 36.184-5.436 5.3-11.88 9.633-19.276 12.739-4.758 2.008-9.879 3.505-15.231 4.45a80 80 0 0 1-13.949 1.202h-.001q-.226 0-.453-.002a79 79 0 0 1-14.202-1.348c-5.537-1.045-10.81-2.692-15.685-4.895-7.51-3.372-13.969-8.03-19.334-13.702-9.325-9.861-14.62-22.355-14.548-35.38.041-7.173 1.74-14.119 4.868-20.674 2.497-5.233 5.829-10.069 9.94-14.38C-5.909-6.496.596-11.074 8.117-14.38c4.874-2.156 10.14-3.756 15.662-4.756a79 79 0 0 1 14.054-1.24m0 0v2.404c-4.65 0-9.239.404-13.64 1.202-5.334.965-10.425 2.51-15.14 4.596C1.906-9.031-4.368-4.66-9.592.818a53 53 0 0 0-9.51 13.755c-3.035 6.361-4.592 12.969-4.63 19.639-.067 12.19 4.865 24.158 13.888 33.7 5.26 5.562 11.513 9.993 18.59 13.171 4.71 2.13 9.81 3.72 15.158 4.729 4.445.84 9.083 1.28 13.784 1.308l.47.001a78 78 0 0 0 13.515-1.167c5.174-.913 10.13-2.36 14.733-4.303 6.965-2.924 13.204-7.046 18.543-12.252 9.847-9.6 15.308-21.839 15.379-34.463.07-12.703-5.305-25.059-15.135-34.793-5.305-5.253-11.523-9.43-18.484-12.416-4.602-1.983-9.565-3.474-14.752-4.428a78 78 0 0 0-13.634-1.27l-.44-.002z",
          clipRule: "evenodd"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("mask", {
        id: "pulse_svg__q",
        width: 82,
        height: 23,
        x: 1,
        y: 0,
        maskUnits: "userSpaceOnUse",
        style: {
          maskType: 'alpha'
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "m39.907 1.28.153 21.455 5.12.007L45.022.267zm-28.266.387-9.654.377.923 20.922 5.312-.208-.287-6.518 4.34-.169c5.28-.206 8.684-3.238 8.488-7.69-.182-4.127-3.297-6.727-8.49-6.727q-.312 0-.632.013M7.482 5.971l3.952-.155a7 7 0 0 1 .26-.006c2.143 0 3.422 1.082 3.503 2.916.084 1.909-1.193 3.136-3.493 3.226l-3.951.154zm46.594-.093c-4.715.673-7.313 3.135-6.89 6.55.411 3.319 3.555 3.932 7.598 3.902 2.445-.027 3.599-.193 3.717.756s-1.026 1.466-2.726 1.709c-2.373.338-5.121.022-7.03-.638l-.947 3.16c1.486.64 3.74 1.133 6.166 1.132q1.193.003 2.374-.164c4.65-.663 7.15-3.143 6.746-6.4-.482-3.888-4.513-4.02-8.003-4.005-2.152.017-3.226.042-3.332-.812-.114-.917 1.022-1.497 2.818-1.753 2.18-.311 4.854-.081 6.578.67l-.466-3.762c-1.2-.316-2.738-.5-4.27-.5-.796 0-1.589.049-2.334.155m17.265.148c-5.093 1.263-7.999 5.824-6.774 10.574.97 3.768 4.013 5.856 7.894 5.856a12.4 12.4 0 0 0 2.981-.381c3.301-.819 5.561-2.692 6.94-4.61l-2.325-2.015c-1.208 1.151-2.755 2.16-4.516 2.596-2.641.655-4.609.027-5.698-1.737l10.846-2.69a6.8 6.8 0 0 0-.172-2.747c-.835-3.243-3.458-5.148-6.8-5.148-.758 0-1.555.098-2.376.302m.835 3.371q.481-.123.978-.126c1.345 0 2.37.77 2.865 2.06l-7.042 1.747c.12-2 1.596-3.284 3.2-3.681M32.972 7.593l.091 9.331c-.928 1.135-2.122 1.765-3.417 1.794-1.814.038-2.734-1.247-2.758-3.891l-.078-8.12L21.7 7.834l.083 8.663c.041 4.326 2.54 6.47 5.738 6.468q.077 0 .155-.002c2.073-.044 4.204-.95 5.613-2.573l.019 2.006 4.924-.105-.153-15.827z"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
        mask: "url(#pulse_svg__q)",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "currentColor",
          fillRule: "evenodd",
          d: "M37.838-17.655h.487c4.56.029 9.07.447 13.414 1.242 5.127.936 10.028 2.397 14.578 4.34C73.385-9.067 79.531-4.9 84.713.166c9.768 9.55 15.373 21.819 15.302 34.77-.072 12.875-5.765 25.025-15.547 34.44-5.214 5.018-11.381 9.13-18.46 12.075-4.549 1.902-9.444 3.32-14.559 4.216a77 77 0 0 1-13.296 1.138h-.032q-.215 0-.432-.002a76 76 0 0 1-13.567-1.278c-5.29-.99-10.328-2.55-14.989-4.638C1.946 77.69-4.236 73.27-9.38 67.895c-8.987-9.386-14.109-21.272-14.04-33.68.038-6.846 1.692-13.467 4.721-19.714 2.41-4.97 5.615-9.562 9.567-13.657C-3.975-4.501 2.252-8.844 9.45-11.976c4.66-2.044 9.692-3.56 14.97-4.506a76 76 0 0 1 13.417-1.173m0 0v2.341c-4.437 0-8.817.383-13.018 1.138-5.094.914-9.958 2.376-14.463 4.352C3.526-6.851-2.479-2.71-7.49 2.484c-3.756 3.892-6.832 8.283-9.145 13.053-2.94 6.063-4.448 12.352-4.484 18.69-.064 11.574 4.69 22.951 13.387 32.034 5.055 5.28 11.04 9.478 17.794 12.482 4.5 2.017 9.372 3.523 14.479 4.479A74 74 0 0 0 37.7 84.46l.452.001c4.383 0 8.725-.371 12.906-1.104 4.942-.864 9.677-2.235 14.078-4.075 6.646-2.764 12.618-6.67 17.75-11.61 9.494-9.138 14.759-20.77 14.827-32.752.066-12.057-5.117-23.8-14.596-33.068C78.02-3.132 72.068-7.09 65.426-9.913c-4.398-1.88-9.14-3.291-14.094-4.196a75 75 0 0 0-13.022-1.203l-.418-.002z",
          clipRule: "evenodd"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("mask", {
        id: "pulse_svg__r",
        width: 82,
        height: 23,
        x: 1,
        y: 0,
        maskUnits: "userSpaceOnUse",
        style: {
          maskType: 'alpha'
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "m39.907 1.28.153 21.455 5.12.007L45.022.267zm-28.266.387-9.654.377.923 20.922 5.312-.208-.287-6.518 4.34-.169c5.28-.206 8.684-3.238 8.488-7.69-.182-4.127-3.297-6.727-8.49-6.727q-.312 0-.632.013M7.482 5.971l3.952-.155a7 7 0 0 1 .26-.006c2.143 0 3.422 1.082 3.503 2.916.084 1.909-1.193 3.136-3.493 3.226l-3.951.154zm46.594-.093c-4.715.673-7.313 3.135-6.89 6.55.411 3.319 3.555 3.932 7.598 3.902 2.445-.027 3.599-.193 3.717.756s-1.026 1.466-2.726 1.709c-2.373.338-5.121.022-7.03-.638l-.947 3.16c1.486.64 3.74 1.133 6.166 1.132q1.193.003 2.374-.164c4.65-.663 7.15-3.143 6.746-6.4-.482-3.888-4.513-4.02-8.003-4.005-2.152.017-3.226.042-3.332-.812-.114-.917 1.022-1.497 2.818-1.753 2.18-.311 4.854-.081 6.578.67l-.466-3.762c-1.2-.316-2.738-.5-4.27-.5-.796 0-1.589.049-2.334.155m17.265.148c-5.093 1.263-7.999 5.824-6.774 10.574.97 3.768 4.013 5.856 7.894 5.856a12.4 12.4 0 0 0 2.981-.381c3.301-.819 5.561-2.692 6.94-4.61l-2.325-2.015c-1.208 1.151-2.755 2.16-4.516 2.596-2.641.655-4.609.027-5.698-1.737l10.846-2.69a6.8 6.8 0 0 0-.172-2.747c-.835-3.243-3.458-5.148-6.8-5.148-.758 0-1.555.098-2.376.302m.835 3.371q.481-.123.978-.126c1.345 0 2.37.77 2.865 2.06l-7.042 1.747c.12-2 1.596-3.284 3.2-3.681M32.972 7.593l.091 9.331c-.928 1.135-2.122 1.765-3.417 1.794-1.814.038-2.734-1.247-2.758-3.891l-.078-8.12L21.7 7.834l.083 8.663c.041 4.326 2.54 6.47 5.738 6.468q.077 0 .155-.002c2.073-.044 4.204-.95 5.613-2.573l.019 2.006 4.924-.105-.153-15.827z"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
        mask: "url(#pulse_svg__r)",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "currentColor",
          fillRule: "evenodd",
          d: "m37.84-14.934.473.001A74.4 74.4 0 0 1 51.1-13.76c4.89.885 9.564 2.266 13.905 4.102A57.1 57.1 0 0 1 82.587 1.91c9.4 9.066 14.822 20.705 14.753 33.01-.068 12.235-5.572 23.76-14.987 32.696a57 57 0 0 1-17.645 11.413c-4.34 1.795-9.007 3.135-13.886 3.98a74 74 0 0 1-12.705 1.075l-.413-.001a73 73 0 0 1-12.93-1.208c-5.044-.935-9.848-2.41-14.294-4.381C3.616 75.47-2.29 71.287-7.215 66.212c-8.648-8.91-13.596-20.188-13.532-31.983.037-6.515 1.646-12.812 4.575-18.75 2.323-4.706 5.402-9.056 9.194-12.936C-2.04-2.506 3.908-6.612 10.785-9.574c4.445-1.929 9.243-3.36 14.276-4.253a73 73 0 0 1 12.78-1.107m0 0v2.28c-4.224 0-8.394.36-12.394 1.072-4.855.862-9.492 2.243-13.788 4.107C5.147-4.67-.59-.759-5.39 4.151c-3.598 3.681-6.552 7.836-8.78 12.35-2.843 5.765-4.302 11.734-4.336 17.741-.061 10.96 4.515 21.745 12.885 30.368 4.849 4.995 10.566 8.962 16.997 11.794 4.292 1.903 8.935 3.326 13.801 4.228a71 71 0 0 0 12.541 1.17l.432.002c4.176 0 8.312-.35 12.296-1.042 4.71-.816 9.224-2.11 13.423-3.847a54.8 54.8 0 0 0 16.956-10.967c9.142-8.676 14.212-19.7 14.275-31.042.063-11.41-4.928-22.542-14.054-31.342A54.9 54.9 0 0 0 64.144-7.553c-4.195-1.775-8.715-3.108-13.437-3.963A72 72 0 0 0 38.3-12.653l-.4-.002z",
          clipRule: "evenodd"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("mask", {
        id: "pulse_svg__s",
        width: 82,
        height: 23,
        x: 1,
        y: 0,
        maskUnits: "userSpaceOnUse",
        style: {
          maskType: 'alpha'
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "m39.907 1.28.153 21.455 5.12.007L45.022.267zm-28.266.387-9.654.377.923 20.922 5.312-.208-.287-6.518 4.34-.169c5.28-.206 8.684-3.238 8.488-7.69-.182-4.127-3.297-6.727-8.49-6.727q-.312 0-.632.013M7.482 5.971l3.952-.155a7 7 0 0 1 .26-.006c2.143 0 3.422 1.082 3.503 2.916.084 1.909-1.193 3.136-3.493 3.226l-3.951.154zm46.594-.093c-4.715.673-7.313 3.135-6.89 6.55.411 3.319 3.555 3.932 7.598 3.902 2.445-.027 3.599-.193 3.717.756s-1.026 1.466-2.726 1.709c-2.373.338-5.121.022-7.03-.638l-.947 3.16c1.486.64 3.74 1.133 6.166 1.132q1.193.003 2.374-.164c4.65-.663 7.15-3.143 6.746-6.4-.482-3.888-4.513-4.02-8.003-4.005-2.152.017-3.226.042-3.332-.812-.114-.917 1.022-1.497 2.818-1.753 2.18-.311 4.854-.081 6.578.67l-.466-3.762c-1.2-.316-2.738-.5-4.27-.5-.796 0-1.589.049-2.334.155m17.265.148c-5.093 1.263-7.999 5.824-6.774 10.574.97 3.768 4.013 5.856 7.894 5.856a12.4 12.4 0 0 0 2.981-.381c3.301-.819 5.561-2.692 6.94-4.61l-2.325-2.015c-1.208 1.151-2.755 2.16-4.516 2.596-2.641.655-4.609.027-5.698-1.737l10.846-2.69a6.8 6.8 0 0 0-.172-2.747c-.835-3.243-3.458-5.148-6.8-5.148-.758 0-1.555.098-2.376.302m.835 3.371q.481-.123.978-.126c1.345 0 2.37.77 2.865 2.06l-7.042 1.747c.12-2 1.596-3.284 3.2-3.681M32.972 7.593l.091 9.331c-.928 1.135-2.122 1.765-3.417 1.794-1.814.038-2.734-1.247-2.758-3.891l-.078-8.12L21.7 7.834l.083 8.663c.041 4.326 2.54 6.47 5.738 6.468q.077 0 .155-.002c2.073-.044 4.204-.95 5.613-2.573l.019 2.006 4.924-.105-.153-15.827z"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
        mask: "url(#pulse_svg__s)",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "currentColor",
          fillRule: "evenodd",
          d: "M37.846-12.214h.065q.195 0 .39.002c4.135.025 8.223.397 12.16 1.105 4.652.834 9.099 2.134 13.232 3.863A54.8 54.8 0 0 1 80.46 3.653c9.034 8.58 14.27 19.59 14.205 31.25-.065 11.594-5.379 22.496-14.427 30.952a54.7 54.7 0 0 1-16.83 10.75c-4.13 1.69-8.572 2.95-13.214 3.746-3.901.67-7.95 1.01-12.044 1.01h-.432a70.4 70.4 0 0 1-12.292-1.138c-4.799-.88-9.37-2.268-13.599-4.124a53.6 53.6 0 0 1-16.877-11.57c-8.31-8.435-13.085-19.105-13.023-30.284.034-6.186 1.597-12.16 4.429-17.79 2.233-4.442 5.187-8.55 8.82-12.212C-.108-.511 5.564-4.383 12.118-7.171c4.23-1.814 8.795-3.162 13.583-4.002 3.918-.69 8-1.04 12.145-1.04m0 0v2.218A68 68 0 0 0 26.07-8.988c-4.615.81-9.024 2.109-13.112 3.863C6.766-2.49 1.3 1.19-3.288 5.817c-3.443 3.471-6.274 7.39-8.415 11.648-2.749 5.465-4.158 11.115-4.19 16.792-.057 10.346 4.34 20.54 12.384 28.702a51.4 51.4 0 0 0 16.2 11.104c4.082 1.791 8.497 3.13 13.124 3.979a68.3 68.3 0 0 0 11.917 1.102h.42c3.965 0 7.895-.329 11.682-.98 4.478-.767 8.772-1.984 12.767-3.618a52.6 52.6 0 0 0 16.163-10.324c8.79-8.214 13.663-18.63 13.723-29.33.06-10.768-4.74-21.286-13.513-29.618a52.7 52.7 0 0 0-16.11-10.468c-3.993-1.67-8.292-2.925-12.781-3.73a69.3 69.3 0 0 0-11.795-1.071l-.38-.001z",
          clipRule: "evenodd"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("mask", {
        id: "pulse_svg__t",
        width: 82,
        height: 23,
        x: 1,
        y: 0,
        maskUnits: "userSpaceOnUse",
        style: {
          maskType: 'alpha'
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "m39.907 1.28.153 21.455 5.12.007L45.022.267zm-28.266.387-9.654.377.923 20.922 5.312-.208-.287-6.518 4.34-.169c5.28-.206 8.684-3.238 8.488-7.69-.182-4.127-3.297-6.727-8.49-6.727q-.312 0-.632.013M7.482 5.971l3.952-.155a7 7 0 0 1 .26-.006c2.143 0 3.422 1.082 3.503 2.916.084 1.909-1.193 3.136-3.493 3.226l-3.951.154zm46.594-.093c-4.715.673-7.313 3.135-6.89 6.55.411 3.319 3.555 3.932 7.598 3.902 2.445-.027 3.599-.193 3.717.756s-1.026 1.466-2.726 1.709c-2.373.338-5.121.022-7.03-.638l-.947 3.16c1.486.64 3.74 1.133 6.166 1.132q1.193.003 2.374-.164c4.65-.663 7.15-3.143 6.746-6.4-.482-3.888-4.513-4.02-8.003-4.005-2.152.017-3.226.042-3.332-.812-.114-.917 1.022-1.497 2.818-1.753 2.18-.311 4.854-.081 6.578.67l-.466-3.762c-1.2-.316-2.738-.5-4.27-.5-.796 0-1.589.049-2.334.155m17.265.148c-5.093 1.263-7.999 5.824-6.774 10.574.97 3.768 4.013 5.856 7.894 5.856a12.4 12.4 0 0 0 2.981-.381c3.301-.819 5.561-2.692 6.94-4.61l-2.325-2.015c-1.208 1.151-2.755 2.16-4.516 2.596-2.641.655-4.609.027-5.698-1.737l10.846-2.69a6.8 6.8 0 0 0-.172-2.747c-.835-3.243-3.458-5.148-6.8-5.148-.758 0-1.555.098-2.376.302m.835 3.371q.481-.123.978-.126c1.345 0 2.37.77 2.865 2.06l-7.042 1.747c.12-2 1.596-3.284 3.2-3.681M32.972 7.593l.091 9.331c-.928 1.135-2.122 1.765-3.417 1.794-1.814.038-2.734-1.247-2.758-3.891l-.078-8.12L21.7 7.834l.083 8.663c.041 4.326 2.54 6.47 5.738 6.468q.077 0 .155-.002c2.073-.044 4.204-.95 5.613-2.573l.019 2.006 4.924-.105-.153-15.827z"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
        mask: "url(#pulse_svg__t)",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "currentColor",
          fillRule: "evenodd",
          d: "M37.85-9.493h.07q.184 0 .37.002c3.922.024 7.798.373 11.533 1.037 4.413.783 8.634 2.001 12.557 3.624A52.5 52.5 0 0 1 78.335 5.398c8.669 8.094 13.717 18.475 13.657 29.49-.062 10.954-5.186 21.23-13.869 29.208A52.4 52.4 0 0 1 62.11 74.18c-3.922 1.585-8.136 2.767-12.541 3.513-3.713.63-7.569.947-11.461.947l-.374-.001a67.4 67.4 0 0 1-11.655-1.067c-4.553-.826-8.89-2.127-12.904-3.868a51.2 51.2 0 0 1-16.057-10.86c-7.974-7.958-12.574-18.02-12.516-28.585.033-5.857 1.55-11.506 4.282-16.827 2.146-4.18 4.974-8.044 8.448-11.491 4.492-4.459 9.888-8.095 16.12-10.71 4.014-1.7 8.346-2.964 12.888-3.75a67.3 67.3 0 0 1 11.51-.975m0 0v2.155c-3.802 0-7.554.318-11.154.944-4.376.759-8.558 1.975-12.437 3.618C8.386-.31 3.188 3.142-1.189 7.484c-3.285 3.26-5.994 6.944-8.05 10.947-2.651 5.164-4.01 10.493-4.04 15.841-.055 9.733 4.165 19.334 11.88 27.035a49.2 49.2 0 0 0 15.404 10.416c3.873 1.679 8.06 2.933 12.446 3.729a65.3 65.3 0 0 0 11.295 1.033l.402.001c3.76 0 7.483-.309 11.073-.918 4.247-.719 8.32-1.86 12.113-3.392a50.3 50.3 0 0 0 15.37-9.68c8.437-7.75 13.113-17.56 13.17-27.62.056-10.123-4.551-20.028-12.972-27.89a50.4 50.4 0 0 0-15.32-9.82C57.794-4.4 53.716-5.577 49.459-6.33a66.4 66.4 0 0 0-11.184-1.005l-.358-.002z",
          clipRule: "evenodd"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("mask", {
        id: "pulse_svg__u",
        width: 82,
        height: 23,
        x: 1,
        y: 0,
        maskUnits: "userSpaceOnUse",
        style: {
          maskType: 'alpha'
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "m39.907 1.28.153 21.455 5.12.007L45.022.267zm-28.266.387-9.654.377.923 20.922 5.312-.208-.287-6.518 4.34-.169c5.28-.206 8.684-3.238 8.488-7.69-.182-4.127-3.297-6.727-8.49-6.727q-.312 0-.632.013M7.482 5.971l3.952-.155a7 7 0 0 1 .26-.006c2.143 0 3.422 1.082 3.503 2.916.084 1.909-1.193 3.136-3.493 3.226l-3.951.154zm46.594-.093c-4.715.673-7.313 3.135-6.89 6.55.411 3.319 3.555 3.932 7.598 3.902 2.445-.027 3.599-.193 3.717.756s-1.026 1.466-2.726 1.709c-2.373.338-5.121.022-7.03-.638l-.947 3.16c1.486.64 3.74 1.133 6.166 1.132q1.193.003 2.374-.164c4.65-.663 7.15-3.143 6.746-6.4-.482-3.888-4.513-4.02-8.003-4.005-2.152.017-3.226.042-3.332-.812-.114-.917 1.022-1.497 2.818-1.753 2.18-.311 4.854-.081 6.578.67l-.466-3.762c-1.2-.316-2.738-.5-4.27-.5-.796 0-1.589.049-2.334.155m17.265.148c-5.093 1.263-7.999 5.824-6.774 10.574.97 3.768 4.013 5.856 7.894 5.856a12.4 12.4 0 0 0 2.981-.381c3.301-.819 5.561-2.692 6.94-4.61l-2.325-2.015c-1.208 1.151-2.755 2.16-4.516 2.596-2.641.655-4.609.027-5.698-1.737l10.846-2.69a6.8 6.8 0 0 0-.172-2.747c-.835-3.243-3.458-5.148-6.8-5.148-.758 0-1.555.098-2.376.302m.835 3.371q.481-.123.978-.126c1.345 0 2.37.77 2.865 2.06l-7.042 1.747c.12-2 1.596-3.284 3.2-3.681M32.972 7.593l.091 9.331c-.928 1.135-2.122 1.765-3.417 1.794-1.814.038-2.734-1.247-2.758-3.891l-.078-8.12L21.7 7.834l.083 8.663c.041 4.326 2.54 6.47 5.738 6.468q.077 0 .155-.002c2.073-.044 4.204-.95 5.613-2.573l.019 2.006 4.924-.105-.153-15.827z"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
        mask: "url(#pulse_svg__u)",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "currentColor",
          fillRule: "evenodd",
          d: "M37.853-6.772h.075l.35.001c3.71.024 7.374.35 10.906.97 4.176.731 8.17 1.87 11.883 3.384a50.2 50.2 0 0 1 15.142 9.56c8.304 7.608 13.166 17.36 13.108 27.73-.057 10.312-4.99 19.966-13.308 27.463a50.1 50.1 0 0 1-15.197 9.422c-3.714 1.48-7.703 2.583-11.87 3.279a66 66 0 0 1-10.839.883h-.354a64.6 64.6 0 0 1-11.018-.997c-4.307-.772-8.41-1.987-12.209-3.612A48.9 48.9 0 0 1-.715 61.161c-7.638-7.48-12.063-16.937-12.009-26.886.032-5.528 1.502-10.852 4.136-15.864 2.058-3.917 4.76-7.539 8.075-10.77C3.757 3.479 8.877.078 14.786-2.365c3.798-1.587 7.897-2.765 12.194-3.499a64.4 64.4 0 0 1 10.873-.908m0 0v2.093c-3.59 0-7.132.295-10.532.88-4.136.706-8.09 1.84-11.761 3.373C10.003 1.871 5.074 5.094.91 9.152c-3.129 3.05-5.714 6.498-7.683 10.245-2.556 4.862-3.865 9.872-3.893 14.89-.05 9.121 3.99 18.13 11.378 25.368a46.9 46.9 0 0 0 14.608 9.727c3.663 1.567 7.622 2.737 11.769 3.48 3.441.618 7.032.943 10.672.964l.386.001c3.551 0 7.07-.287 10.462-.856 4.015-.67 7.868-1.734 11.457-3.164a48.1 48.1 0 0 0 14.579-9.038c8.082-7.284 12.562-16.485 12.615-25.908.052-9.48-4.361-18.773-12.428-26.164a48.2 48.2 0 0 0-14.53-9.17c-3.585-1.462-7.443-2.56-11.467-3.265a63.6 63.6 0 0 0-10.57-.94l-.339-.001z",
          clipRule: "evenodd"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("mask", {
        id: "pulse_svg__v",
        width: 82,
        height: 23,
        x: 1,
        y: 0,
        maskUnits: "userSpaceOnUse",
        style: {
          maskType: 'alpha'
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "m39.907 1.28.153 21.455 5.12.007L45.022.267zm-28.266.387-9.654.377.923 20.922 5.312-.208-.287-6.518 4.34-.169c5.28-.206 8.684-3.238 8.488-7.69-.182-4.127-3.297-6.727-8.49-6.727q-.312 0-.632.013M7.482 5.971l3.952-.155a7 7 0 0 1 .26-.006c2.143 0 3.422 1.082 3.503 2.916.084 1.909-1.193 3.136-3.493 3.226l-3.951.154zm46.594-.093c-4.715.673-7.313 3.135-6.89 6.55.411 3.319 3.555 3.932 7.598 3.902 2.445-.027 3.599-.193 3.717.756s-1.026 1.466-2.726 1.709c-2.373.338-5.121.022-7.03-.638l-.947 3.16c1.486.64 3.74 1.133 6.166 1.132q1.193.003 2.374-.164c4.65-.663 7.15-3.143 6.746-6.4-.482-3.888-4.513-4.02-8.003-4.005-2.152.017-3.226.042-3.332-.812-.114-.917 1.022-1.497 2.818-1.753 2.18-.311 4.854-.081 6.578.67l-.466-3.762c-1.2-.316-2.738-.5-4.27-.5-.796 0-1.589.049-2.334.155m17.265.148c-5.093 1.263-7.999 5.824-6.774 10.574.97 3.768 4.013 5.856 7.894 5.856a12.4 12.4 0 0 0 2.981-.381c3.301-.819 5.561-2.692 6.94-4.61l-2.325-2.015c-1.208 1.151-2.755 2.16-4.516 2.596-2.641.655-4.609.027-5.698-1.737l10.846-2.69a6.8 6.8 0 0 0-.172-2.747c-.835-3.243-3.458-5.148-6.8-5.148-.758 0-1.555.098-2.376.302m.835 3.371q.481-.123.978-.126c1.345 0 2.37.77 2.865 2.06l-7.042 1.747c.12-2 1.596-3.284 3.2-3.681M32.972 7.593l.091 9.331c-.928 1.135-2.122 1.765-3.417 1.794-1.814.038-2.734-1.247-2.758-3.891l-.078-8.12L21.7 7.834l.083 8.663c.041 4.326 2.54 6.47 5.738 6.468q.077 0 .155-.002c2.073-.044 4.204-.95 5.613-2.573l.019 2.006 4.924-.105-.153-15.827z"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
        mask: "url(#pulse_svg__v)",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "currentColor",
          fillRule: "evenodd",
          d: "M37.856-4.05h.41a63 63 0 0 1 10.28.903c3.938.679 7.704 1.738 11.209 3.145a47.9 47.9 0 0 1 14.327 8.888c7.94 7.123 12.614 16.247 12.561 25.971-.054 9.673-4.796 18.703-12.75 25.72a47.8 47.8 0 0 1-14.38 8.758c-3.505 1.374-7.268 2.4-11.198 3.045-3.31.546-6.74.821-10.217.82h-.333a62 62 0 0 1-10.383-.928c-4.06-.716-7.928-1.845-11.513-3.354a46.6 46.6 0 0 1-14.418-9.439c-7.301-7.005-11.551-15.854-11.5-25.188.03-5.199 1.453-10.199 3.99-14.903 1.969-3.653 4.545-7.032 7.702-10.048C5.69 5.474 10.537 2.32 16.119.04A54.2 54.2 0 0 1 27.62-3.21a61.6 61.6 0 0 1 10.236-.84m0 0v2.03a59.7 59.7 0 0 0-9.91.814 52.2 52.2 0 0 0-11.083 3.13C11.598 4.074 6.936 7.067 3.009 10.82c-2.974 2.84-5.436 6.052-7.319 9.544-2.457 4.559-3.716 9.248-3.743 13.937-.047 8.51 3.815 16.927 10.873 23.7a44.7 44.7 0 0 0 13.813 9.04c3.454 1.453 7.185 2.54 11.092 3.23 3.242.574 6.624.876 10.052.895l.368.001c3.344 0 6.658-.266 9.852-.793 3.784-.622 7.417-1.609 10.803-2.937a45.9 45.9 0 0 0 13.786-8.396c7.728-6.817 12.011-15.41 12.061-24.196.049-8.839-4.172-17.517-11.885-24.436a46 46 0 0 0-13.74-8.523C55.64.53 52.004-.49 48.212-1.146a61 61 0 0 0-9.959-.873l-.32-.001z",
          clipRule: "evenodd"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("mask", {
        id: "pulse_svg__w",
        width: 82,
        height: 23,
        x: 1,
        y: 0,
        maskUnits: "userSpaceOnUse",
        style: {
          maskType: 'alpha'
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "m39.907 1.28.153 21.455 5.12.007L45.022.267zm-28.266.387-9.654.377.923 20.922 5.312-.208-.287-6.518 4.34-.169c5.28-.206 8.684-3.238 8.488-7.69-.182-4.127-3.297-6.727-8.49-6.727q-.312 0-.632.013M7.482 5.971l3.952-.155a7 7 0 0 1 .26-.006c2.143 0 3.422 1.082 3.503 2.916.084 1.909-1.193 3.136-3.493 3.226l-3.951.154zm46.594-.093c-4.715.673-7.313 3.135-6.89 6.55.411 3.319 3.555 3.932 7.598 3.902 2.445-.027 3.599-.193 3.717.756s-1.026 1.466-2.726 1.709c-2.373.338-5.121.022-7.03-.638l-.947 3.16c1.486.64 3.74 1.133 6.166 1.132q1.193.003 2.374-.164c4.65-.663 7.15-3.143 6.746-6.4-.482-3.888-4.513-4.02-8.003-4.005-2.152.017-3.226.042-3.332-.812-.114-.917 1.022-1.497 2.818-1.753 2.18-.311 4.854-.081 6.578.67l-.466-3.762c-1.2-.316-2.738-.5-4.27-.5-.796 0-1.589.049-2.334.155m17.265.148c-5.093 1.263-7.999 5.824-6.774 10.574.97 3.768 4.013 5.856 7.894 5.856a12.4 12.4 0 0 0 2.981-.381c3.301-.819 5.561-2.692 6.94-4.61l-2.325-2.015c-1.208 1.151-2.755 2.16-4.516 2.596-2.641.655-4.609.027-5.698-1.737l10.846-2.69a6.8 6.8 0 0 0-.172-2.747c-.835-3.243-3.458-5.148-6.8-5.148-.758 0-1.555.098-2.376.302m.835 3.371q.481-.123.978-.126c1.345 0 2.37.77 2.865 2.06l-7.042 1.747c.12-2 1.596-3.284 3.2-3.681M32.972 7.593l.091 9.331c-.928 1.135-2.122 1.765-3.417 1.794-1.814.038-2.734-1.247-2.758-3.891l-.078-8.12L21.7 7.834l.083 8.663c.041 4.326 2.54 6.47 5.738 6.468q.077 0 .155-.002c2.073-.044 4.204-.95 5.613-2.573l.019 2.006 4.924-.105-.153-15.827z"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
        mask: "url(#pulse_svg__w)",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "currentColor",
          fillRule: "evenodd",
          d: "M37.859-1.33q.197 0 .395.002c3.285.02 6.527.302 9.654.834 3.699.628 7.239 1.606 10.534 2.906a45.6 45.6 0 0 1 13.514 8.219c7.576 6.636 12.063 15.132 12.013 24.211-.05 9.031-4.6 17.44-12.19 23.975a45.6 45.6 0 0 1-13.566 8.095c-3.296 1.269-6.83 2.215-10.524 2.81-3.109.505-6.33.758-9.596.757q-.157 0-.313-.002a59 59 0 0 1-9.745-.855 51.8 51.8 0 0 1-10.818-3.097 44.5 44.5 0 0 1-13.599-8.729c-6.966-6.528-11.04-14.77-10.992-23.49.027-4.87 1.403-9.545 3.841-13.94C-1.65 16.974.8 13.839 3.799 11.04c3.824-3.571 8.395-6.49 13.654-8.598 3.372-1.352 7-2.368 10.808-2.997a59 59 0 0 1 9.599-.775m0 0V.64c-3.165 0-6.29.252-9.29.75a49.8 49.8 0 0 0-10.407 2.884c-4.95 1.985-9.342 4.75-13.056 8.217-2.818 2.632-5.158 5.607-6.953 8.843-2.36 4.253-3.568 8.622-3.592 12.984-.044 7.9 3.638 15.724 10.367 22.032a42.7 42.7 0 0 0 13.014 8.35 50 50 0 0 0 10.42 2.983c3.04.53 6.213.808 9.429.828h.352c3.136 0 6.246-.246 9.243-.732 3.552-.573 6.965-1.484 10.148-2.71a43.7 43.7 0 0 0 12.995-7.754c7.373-6.349 11.459-14.333 11.505-22.483.045-8.199-3.982-16.264-11.34-22.709a43.8 43.8 0 0 0-12.951-7.874c-3.179-1.254-6.595-2.196-10.156-2.8A58 58 0 0 0 38.241.64l-.298-.001z",
          clipRule: "evenodd"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("mask", {
        id: "pulse_svg__x",
        width: 82,
        height: 23,
        x: 1,
        y: 0,
        maskUnits: "userSpaceOnUse",
        style: {
          maskType: 'alpha'
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "m39.907 1.28.153 21.455 5.12.007L45.022.267zm-28.266.387-9.654.377.923 20.922 5.312-.208-.287-6.518 4.34-.169c5.28-.206 8.684-3.238 8.488-7.69-.182-4.127-3.297-6.727-8.49-6.727q-.312 0-.632.013M7.482 5.971l3.952-.155a7 7 0 0 1 .26-.006c2.143 0 3.422 1.082 3.503 2.916.084 1.909-1.193 3.136-3.493 3.226l-3.951.154zm46.594-.093c-4.715.673-7.313 3.135-6.89 6.55.411 3.319 3.555 3.932 7.598 3.902 2.445-.027 3.599-.193 3.717.756s-1.026 1.466-2.726 1.709c-2.373.338-5.121.022-7.03-.638l-.947 3.16c1.486.64 3.74 1.133 6.166 1.132q1.193.003 2.374-.164c4.65-.663 7.15-3.143 6.746-6.4-.482-3.888-4.513-4.02-8.003-4.005-2.152.017-3.226.042-3.332-.812-.114-.917 1.022-1.497 2.818-1.753 2.18-.311 4.854-.081 6.578.67l-.466-3.762c-1.2-.316-2.738-.5-4.27-.5-.796 0-1.589.049-2.334.155m17.265.148c-5.093 1.263-7.999 5.824-6.774 10.574.97 3.768 4.013 5.856 7.894 5.856a12.4 12.4 0 0 0 2.981-.381c3.301-.819 5.561-2.692 6.94-4.61l-2.325-2.015c-1.208 1.151-2.755 2.16-4.516 2.596-2.641.655-4.609.027-5.698-1.737l10.846-2.69a6.8 6.8 0 0 0-.172-2.747c-.835-3.243-3.458-5.148-6.8-5.148-.758 0-1.555.098-2.376.302m.835 3.371q.481-.123.978-.126c1.345 0 2.37.77 2.865 2.06l-7.042 1.747c.12-2 1.596-3.284 3.2-3.681M32.972 7.593l.091 9.331c-.928 1.135-2.122 1.765-3.417 1.794-1.814.038-2.734-1.247-2.758-3.891l-.078-8.12L21.7 7.834l.083 8.663c.041 4.326 2.54 6.47 5.738 6.468q.077 0 .155-.002c2.073-.044 4.204-.95 5.613-2.573l.019 2.006 4.924-.105-.153-15.827z"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
        mask: "url(#pulse_svg__x)",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "currentColor",
          fillRule: "evenodd",
          d: "M37.86 1.391h.093l.29.001c3.072.02 6.103.278 9.026.767 3.462.577 6.774 1.475 9.86 2.667a43.4 43.4 0 0 1 12.7 7.55c7.215 6.148 11.511 14.017 11.465 22.45-.047 8.392-4.403 16.178-11.63 22.23a43.4 43.4 0 0 1-12.75 7.433c-3.087 1.163-6.396 2.03-9.852 2.577a57.3 57.3 0 0 1-9.267.69 56 56 0 0 1-9.109-.784 49.3 49.3 0 0 1-10.122-2.842 42.3 42.3 0 0 1-12.78-8.016C-.848 50.064-4.746 42.425-4.7 34.322c.025-4.541 1.355-8.892 3.696-12.98 1.792-3.127 4.118-6.02 6.957-8.603 3.601-3.276 7.895-5.958 12.833-7.894A49.2 49.2 0 0 1 28.9 2.1c2.891-.47 5.9-.708 8.96-.708m0 0v1.907c-2.952 0-5.867.23-8.666.685a47.4 47.4 0 0 0-9.734 2.641c-4.634 1.817-8.758 4.352-12.258 7.536-2.663 2.423-4.88 5.163-6.587 8.143-2.26 3.946-3.419 7.993-3.442 12.03-.04 7.291 3.462 14.523 9.862 20.361a40.5 40.5 0 0 0 12.218 7.664 47.5 47.5 0 0 0 9.744 2.734c2.841.485 5.806.74 8.808.758h.336c2.93 0 5.834-.224 8.633-.669 3.322-.525 6.514-1.359 9.496-2.482a41.6 41.6 0 0 0 12.203-7.114c7.017-5.877 10.905-13.253 10.947-20.77.041-7.56-3.791-15.01-10.794-20.979a41.6 41.6 0 0 0-12.162-7.228c-2.974-1.15-6.17-2.013-9.5-2.568A55.4 55.4 0 0 0 38.23 3.3l-.28-.001z",
          clipRule: "evenodd"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("mask", {
        id: "pulse_svg__y",
        width: 82,
        height: 23,
        x: 1,
        y: 0,
        maskUnits: "userSpaceOnUse",
        style: {
          maskType: 'alpha'
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "m39.907 1.28.153 21.455 5.12.007L45.022.267zm-28.266.387-9.654.377.923 20.922 5.312-.208-.287-6.518 4.34-.169c5.28-.206 8.684-3.238 8.488-7.69-.182-4.127-3.297-6.727-8.49-6.727q-.312 0-.632.013M7.482 5.971l3.952-.155a7 7 0 0 1 .26-.006c2.143 0 3.422 1.082 3.503 2.916.084 1.909-1.193 3.136-3.493 3.226l-3.951.154zm46.594-.093c-4.715.673-7.313 3.135-6.89 6.55.411 3.319 3.555 3.932 7.598 3.902 2.445-.027 3.599-.193 3.717.756s-1.026 1.466-2.726 1.709c-2.373.338-5.121.022-7.03-.638l-.947 3.16c1.486.64 3.74 1.133 6.166 1.132q1.193.003 2.374-.164c4.65-.663 7.15-3.143 6.746-6.4-.482-3.888-4.513-4.02-8.003-4.005-2.152.017-3.226.042-3.332-.812-.114-.917 1.022-1.497 2.818-1.753 2.18-.311 4.854-.081 6.578.67l-.466-3.762c-1.2-.316-2.738-.5-4.27-.5-.796 0-1.589.049-2.334.155m17.265.148c-5.093 1.263-7.999 5.824-6.774 10.574.97 3.768 4.013 5.856 7.894 5.856a12.4 12.4 0 0 0 2.981-.381c3.301-.819 5.561-2.692 6.94-4.61l-2.325-2.015c-1.208 1.151-2.755 2.16-4.516 2.596-2.641.655-4.609.027-5.698-1.737l10.846-2.69a6.8 6.8 0 0 0-.172-2.747c-.835-3.243-3.458-5.148-6.8-5.148-.758 0-1.555.098-2.376.302m.835 3.371q.481-.123.978-.126c1.345 0 2.37.77 2.865 2.06l-7.042 1.747c.12-2 1.596-3.284 3.2-3.681M32.972 7.593l.091 9.331c-.928 1.135-2.122 1.765-3.417 1.794-1.814.038-2.734-1.247-2.758-3.891l-.078-8.12L21.7 7.834l.083 8.663c.041 4.326 2.54 6.47 5.738 6.468q.077 0 .155-.002c2.073-.044 4.204-.95 5.613-2.573l.019 2.006 4.924-.105-.153-15.827z"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
        mask: "url(#pulse_svg__y)",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "currentColor",
          fillRule: "evenodd",
          d: "m37.864 4.112.366.001c2.86.018 5.68.254 8.4.699a48 48 0 0 1 9.187 2.428 41.2 41.2 0 0 1 11.887 6.88c6.852 5.66 10.959 12.902 10.916 20.691-.043 7.75-4.205 14.916-11.07 20.486a41.2 41.2 0 0 1-11.935 6.77 48 48 0 0 1-9.18 2.342 54 54 0 0 1-8.351.628l-.274-.001a53.4 53.4 0 0 1-8.472-.715 46.8 46.8 0 0 1-9.426-2.584A40 40 0 0 1 7.95 54.43c-6.3-5.572-10.018-12.604-9.977-20.093.024-4.212 1.305-8.239 3.55-12.017 1.703-2.865 3.903-5.516 6.584-7.882 3.378-2.981 7.396-5.426 12.012-7.19a47 47 0 0 1 9.42-2.494 53.3 53.3 0 0 1 8.324-.642m0 0v1.845a51.6 51.6 0 0 0-8.047.62 45 45 0 0 0-9.06 2.398c-4.32 1.65-8.176 3.957-11.461 6.857-2.509 2.213-4.602 4.718-6.22 7.443C.914 26.912-.193 30.637-.214 34.347-.249 41.032 3.072 47.67 9.14 53.038a38.3 38.3 0 0 0 11.424 6.978 45 45 0 0 0 9.068 2.485c2.643.442 5.398.674 8.19.69l.318.001a52.6 52.6 0 0 0 8.024-.607 46 46 0 0 0 8.842-2.256 39.5 39.5 0 0 0 11.414-6.474c6.659-5.403 10.348-12.17 10.387-19.054.038-6.924-3.6-13.76-10.246-19.25a39.5 39.5 0 0 0-11.374-6.582c-2.773-1.045-5.749-1.831-8.845-2.336a52.6 52.6 0 0 0-8.125-.676h-.259z",
          clipRule: "evenodd"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("mask", {
        id: "pulse_svg__z",
        width: 82,
        height: 23,
        x: 1,
        y: 0,
        maskUnits: "userSpaceOnUse",
        style: {
          maskType: 'alpha'
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "m39.907 1.28.153 21.455 5.12.007L45.022.267zm-28.266.387-9.654.377.923 20.922 5.312-.208-.287-6.518 4.34-.169c5.28-.206 8.684-3.238 8.488-7.69-.182-4.127-3.297-6.727-8.49-6.727q-.312 0-.632.013M7.482 5.971l3.952-.155a7 7 0 0 1 .26-.006c2.143 0 3.422 1.082 3.503 2.916.084 1.909-1.193 3.136-3.493 3.226l-3.951.154zm46.594-.093c-4.715.673-7.313 3.135-6.89 6.55.411 3.319 3.555 3.932 7.598 3.902 2.445-.027 3.599-.193 3.717.756s-1.026 1.466-2.726 1.709c-2.373.338-5.121.022-7.03-.638l-.947 3.16c1.486.64 3.74 1.133 6.166 1.132q1.193.003 2.374-.164c4.65-.663 7.15-3.143 6.746-6.4-.482-3.888-4.513-4.02-8.003-4.005-2.152.017-3.226.042-3.332-.812-.114-.917 1.022-1.497 2.818-1.753 2.18-.311 4.854-.081 6.578.67l-.466-3.762c-1.2-.316-2.738-.5-4.27-.5-.796 0-1.589.049-2.334.155m17.265.148c-5.093 1.263-7.999 5.824-6.774 10.574.97 3.768 4.013 5.856 7.894 5.856a12.4 12.4 0 0 0 2.981-.381c3.301-.819 5.561-2.692 6.94-4.61l-2.325-2.015c-1.208 1.151-2.755 2.16-4.516 2.596-2.641.655-4.609.027-5.698-1.737l10.846-2.69a6.8 6.8 0 0 0-.172-2.747c-.835-3.243-3.458-5.148-6.8-5.148-.758 0-1.555.098-2.376.302m.835 3.371q.481-.123.978-.126c1.345 0 2.37.77 2.865 2.06l-7.042 1.747c.12-2 1.596-3.284 3.2-3.681M32.972 7.593l.091 9.331c-.928 1.135-2.122 1.765-3.417 1.794-1.814.038-2.734-1.247-2.758-3.891l-.078-8.12L21.7 7.834l.083 8.663c.041 4.326 2.54 6.47 5.738 6.468q.077 0 .155-.002c2.073-.044 4.204-.95 5.613-2.573l.019 2.006 4.924-.105-.153-15.827z"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
        mask: "url(#pulse_svg__z)",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "currentColor",
          fillRule: "evenodd",
          d: "M37.867 6.833h.103l.248.001c2.648.017 5.257.23 7.773.631a45.5 45.5 0 0 1 8.513 2.189 39 39 0 0 1 11.073 6.21c6.492 5.17 10.407 11.788 10.368 18.932-.04 7.109-4.005 13.655-10.51 18.742a39 39 0 0 1-11.119 6.106 45.5 45.5 0 0 1-8.507 2.107c-2.504.377-5.1.567-7.73.564h-.254a51 51 0 0 1-7.835-.644 44.5 44.5 0 0 1-8.732-2.328 37.8 37.8 0 0 1-11.141-6.596C4.15 47.655.61 41.227.648 34.352c.022-3.882 1.255-7.586 3.403-11.054 1.613-2.603 3.688-5.011 6.212-7.16 3.154-2.687 6.896-4.896 11.19-6.487a44.5 44.5 0 0 1 8.727-2.243 50.6 50.6 0 0 1 7.687-.575m0 1.782c-2.531 0-5.03.187-7.427.556a42.8 42.8 0 0 0-8.388 2.155c-4.006 1.485-7.594 3.563-10.664 6.178-2.356 2.006-4.325 4.275-5.855 6.744-2.06 3.326-3.114 6.729-3.133 10.115-.033 6.08 3.107 12.123 8.843 17.019a36.2 36.2 0 0 0 10.63 6.292 43 43 0 0 0 8.394 2.237c2.441.398 4.988.606 7.568.622h.304c2.515 0 5.01-.183 7.414-.545a43.7 43.7 0 0 0 8.19-2.03 37.4 37.4 0 0 0 10.624-5.833c6.301-4.927 9.791-11.085 9.826-17.34.035-6.289-3.409-12.51-9.695-17.518A37.4 37.4 0 0 0 53.91 11.33a44 44 0 0 0-8.191-2.105 50 50 0 0 0-7.514-.61z",
          clipRule: "evenodd"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("mask", {
        id: "pulse_svg__A",
        width: 82,
        height: 23,
        x: 1,
        y: 0,
        maskUnits: "userSpaceOnUse",
        style: {
          maskType: 'alpha'
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "m39.907 1.28.153 21.455 5.12.007L45.022.267zm-28.266.387-9.654.377.923 20.922 5.312-.208-.287-6.518 4.34-.169c5.28-.206 8.684-3.238 8.488-7.69-.182-4.127-3.297-6.727-8.49-6.727q-.312 0-.632.013M7.482 5.971l3.952-.155a7 7 0 0 1 .26-.006c2.143 0 3.422 1.082 3.503 2.916.084 1.909-1.193 3.136-3.493 3.226l-3.951.154zm46.594-.093c-4.715.673-7.313 3.135-6.89 6.55.411 3.319 3.555 3.932 7.598 3.902 2.445-.027 3.599-.193 3.717.756s-1.026 1.466-2.726 1.709c-2.373.338-5.121.022-7.03-.638l-.947 3.16c1.486.64 3.74 1.133 6.166 1.132q1.193.003 2.374-.164c4.65-.663 7.15-3.143 6.746-6.4-.482-3.888-4.513-4.02-8.003-4.005-2.152.017-3.226.042-3.332-.812-.114-.917 1.022-1.497 2.818-1.753 2.18-.311 4.854-.081 6.578.67l-.466-3.762c-1.2-.316-2.738-.5-4.27-.5-.796 0-1.589.049-2.334.155m17.265.148c-5.093 1.263-7.999 5.824-6.774 10.574.97 3.768 4.013 5.856 7.894 5.856a12.4 12.4 0 0 0 2.981-.381c3.301-.819 5.561-2.692 6.94-4.61l-2.325-2.015c-1.208 1.151-2.755 2.16-4.516 2.596-2.641.655-4.609.027-5.698-1.737l10.846-2.69a6.8 6.8 0 0 0-.172-2.747c-.835-3.243-3.458-5.148-6.8-5.148-.758 0-1.555.098-2.376.302m.835 3.371q.481-.123.978-.126c1.345 0 2.37.77 2.865 2.06l-7.042 1.747c.12-2 1.596-3.284 3.2-3.681M32.972 7.593l.091 9.331c-.928 1.135-2.122 1.765-3.417 1.794-1.814.038-2.734-1.247-2.758-3.891l-.078-8.12L21.7 7.834l.083 8.663c.041 4.326 2.54 6.47 5.738 6.468q.077 0 .155-.002c2.073-.044 4.204-.95 5.613-2.573l.019 2.006 4.924-.105-.153-15.827z"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
        mask: "url(#pulse_svg__A)",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "currentColor",
          fillRule: "evenodd",
          d: "m37.866 9.553.34.002c2.435.016 4.833.206 7.146.563a43.7 43.7 0 0 1 7.84 1.95 37.2 37.2 0 0 1 10.26 5.54c6.133 4.68 9.855 10.674 9.819 17.172-.037 6.47-3.805 12.397-9.952 16.998a37.2 37.2 0 0 1-10.303 5.443 43.7 43.7 0 0 1-7.834 1.873 49 49 0 0 1-7.109.5h-.232a48 48 0 0 1-7.199-.574 42.2 42.2 0 0 1-8.036-2.07 35.7 35.7 0 0 1-10.322-5.886c-5.637-4.611-8.996-10.437-8.961-16.696.02-3.554 1.203-6.933 3.256-10.093 1.522-2.34 3.473-4.506 5.839-6.439 2.93-2.392 6.397-4.364 10.368-5.782a42.2 42.2 0 0 1 8.034-1.991 48 48 0 0 1 7.046-.51m0 1.72c-2.318 0-4.606.166-6.804.492a40.5 40.5 0 0 0-7.716 1.913c-3.695 1.319-7.015 3.17-9.87 5.5-2.202 1.799-4.048 3.833-5.487 6.046-1.957 3.012-2.958 6.092-2.976 9.154-.03 5.477 2.929 10.927 8.33 15.345a34 34 0 0 0 9.837 5.609 40.6 40.6 0 0 0 7.721 1.989 46.6 46.6 0 0 0 6.949.553h.287c2.309 0 4.599-.162 6.806-.483 2.6-.376 5.136-.982 7.536-1.801a35.6 35.6 0 0 0 9.838-5.197c5.942-4.447 9.232-9.995 9.263-15.622.03-5.658-3.216-11.265-9.143-15.787a35.6 35.6 0 0 0-9.797-5.29 42 42 0 0 0-7.542-1.875 47.5 47.5 0 0 0-6.904-.545z",
          clipRule: "evenodd"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("mask", {
        id: "pulse_svg__B",
        width: 82,
        height: 23,
        x: 1,
        y: 0,
        maskUnits: "userSpaceOnUse",
        style: {
          maskType: 'alpha'
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "m39.907 1.28.153 21.455 5.12.007L45.022.267zm-28.266.387-9.654.377.923 20.922 5.312-.208-.287-6.518 4.34-.169c5.28-.206 8.684-3.238 8.488-7.69-.182-4.127-3.297-6.727-8.49-6.727q-.312 0-.632.013M7.482 5.971l3.952-.155a7 7 0 0 1 .26-.006c2.143 0 3.422 1.082 3.503 2.916.084 1.909-1.193 3.136-3.493 3.226l-3.951.154zm46.594-.093c-4.715.673-7.313 3.135-6.89 6.55.411 3.319 3.555 3.932 7.598 3.902 2.445-.027 3.599-.193 3.717.756s-1.026 1.466-2.726 1.709c-2.373.338-5.121.022-7.03-.638l-.947 3.16c1.486.64 3.74 1.133 6.166 1.132q1.193.003 2.374-.164c4.65-.663 7.15-3.143 6.746-6.4-.482-3.888-4.513-4.02-8.003-4.005-2.152.017-3.226.042-3.332-.812-.114-.917 1.022-1.497 2.818-1.753 2.18-.311 4.854-.081 6.578.67l-.466-3.762c-1.2-.316-2.738-.5-4.27-.5-.796 0-1.589.049-2.334.155m17.265.148c-5.093 1.263-7.999 5.824-6.774 10.574.97 3.768 4.013 5.856 7.894 5.856a12.4 12.4 0 0 0 2.981-.381c3.301-.819 5.561-2.692 6.94-4.61l-2.325-2.015c-1.208 1.151-2.755 2.16-4.516 2.596-2.641.655-4.609.027-5.698-1.737l10.846-2.69a6.8 6.8 0 0 0-.172-2.747c-.835-3.243-3.458-5.148-6.8-5.148-.758 0-1.555.098-2.376.302m.835 3.371q.481-.123.978-.126c1.345 0 2.37.77 2.865 2.06l-7.042 1.747c.12-2 1.596-3.284 3.2-3.681M32.972 7.593l.091 9.331c-.928 1.135-2.122 1.765-3.417 1.794-1.814.038-2.734-1.247-2.758-3.891l-.078-8.12L21.7 7.834l.083 8.663c.041 4.326 2.54 6.47 5.738 6.468q.077 0 .155-.002c2.073-.044 4.204-.95 5.613-2.573l.019 2.006 4.924-.105-.153-15.827z"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
        mask: "url(#pulse_svg__B)",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "currentColor",
          fillRule: "evenodd",
          d: "M37.865 12.274h.122l.208.002c2.222.014 4.408.182 6.519.496 2.51.37 4.913.951 7.165 1.71a35.2 35.2 0 0 1 9.446 4.87c5.778 4.186 9.304 9.56 9.271 15.413-.032 5.828-3.6 11.14-9.391 15.253a35.2 35.2 0 0 1-9.487 4.78 41.5 41.5 0 0 1-7.163 1.64c-2.101.291-4.277.438-6.486.436h-.213a46 46 0 0 1-6.562-.504 40 40 0 0 1-7.34-1.814 33.6 33.6 0 0 1-9.504-5.175c-5.309-4.128-8.484-9.355-8.452-14.998.018-3.224 1.15-6.281 3.109-9.13 1.43-2.08 3.257-4.002 5.466-5.717 2.705-2.1 5.897-3.834 9.547-5.079a40 40 0 0 1 7.34-1.74 46 46 0 0 1 6.405-.443m0 1.659c-2.105 0-4.184.143-6.182.427-2.43.341-4.8.904-7.045 1.67-3.386 1.154-6.44 2.778-9.077 4.824-2.05 1.592-3.772 3.391-5.118 5.35-1.853 2.694-2.8 5.45-2.816 8.188-.027 4.878 2.748 9.733 7.812 13.671a32 32 0 0 0 9.047 4.926 38.6 38.6 0 0 0 7.048 1.741c2.043.309 4.173.472 6.333.485h.27c2.102 0 4.187-.141 6.198-.42a40 40 0 0 0 6.885-1.577 33.6 33.6 0 0 0 9.052-4.559c5.579-3.962 8.666-8.9 8.695-13.903.027-5.03-3.022-10.021-8.587-14.054a33.6 33.6 0 0 0-9.012-4.646 40 40 0 0 0-6.89-1.643 45 45 0 0 0-6.295-.48z",
          clipRule: "evenodd"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("mask", {
        id: "pulse_svg__C",
        width: 82,
        height: 23,
        x: 1,
        y: 0,
        maskUnits: "userSpaceOnUse",
        style: {
          maskType: 'alpha'
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "m39.907 1.28.153 21.455 5.12.007L45.022.267zm-28.266.387-9.654.377.923 20.922 5.312-.208-.287-6.518 4.34-.169c5.28-.206 8.684-3.238 8.488-7.69-.182-4.127-3.297-6.727-8.49-6.727q-.312 0-.632.013M7.482 5.971l3.952-.155a7 7 0 0 1 .26-.006c2.143 0 3.422 1.082 3.503 2.916.084 1.909-1.193 3.136-3.493 3.226l-3.951.154zm46.594-.093c-4.715.673-7.313 3.135-6.89 6.55.411 3.319 3.555 3.932 7.598 3.902 2.445-.027 3.599-.193 3.717.756s-1.026 1.466-2.726 1.709c-2.373.338-5.121.022-7.03-.638l-.947 3.16c1.486.64 3.74 1.133 6.166 1.132q1.193.003 2.374-.164c4.65-.663 7.15-3.143 6.746-6.4-.482-3.888-4.513-4.02-8.003-4.005-2.152.017-3.226.042-3.332-.812-.114-.917 1.022-1.497 2.818-1.753 2.18-.311 4.854-.081 6.578.67l-.466-3.762c-1.2-.316-2.738-.5-4.27-.5-.796 0-1.589.049-2.334.155m17.265.148c-5.093 1.263-7.999 5.824-6.774 10.574.97 3.768 4.013 5.856 7.894 5.856a12.4 12.4 0 0 0 2.981-.381c3.301-.819 5.561-2.692 6.94-4.61l-2.325-2.015c-1.208 1.151-2.755 2.16-4.516 2.596-2.641.655-4.609.027-5.698-1.737l10.846-2.69a6.8 6.8 0 0 0-.172-2.747c-.835-3.243-3.458-5.148-6.8-5.148-.758 0-1.555.098-2.376.302m.835 3.371q.481-.123.978-.126c1.345 0 2.37.77 2.865 2.06l-7.042 1.747c.12-2 1.596-3.284 3.2-3.681M32.972 7.593l.091 9.331c-.928 1.135-2.122 1.765-3.417 1.794-1.814.038-2.734-1.247-2.758-3.891l-.078-8.12L21.7 7.834l.083 8.663c.041 4.326 2.54 6.47 5.738 6.468q.077 0 .155-.002c2.073-.044 4.204-.95 5.613-2.573l.019 2.006 4.924-.105-.153-15.827z"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
        mask: "url(#pulse_svg__C)",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "currentColor",
          fillRule: "evenodd",
          d: "M37.862 14.995h.133q.094 0 .188.002c2.01.014 3.984.158 5.892.427 2.273.32 4.45.82 6.492 1.471a33.3 33.3 0 0 1 8.632 4.201c5.424 3.69 8.752 8.446 8.723 13.654-.03 5.187-3.395 9.887-8.832 13.509a33.3 33.3 0 0 1-8.671 4.116 39.6 39.6 0 0 1-6.49 1.404c-1.9.25-3.866.378-5.865.374h-.193a44 44 0 0 1-5.925-.433 38 38 0 0 1-6.646-1.558 31.6 31.6 0 0 1-8.684-4.464c-4.983-3.642-7.972-8.271-7.944-13.3.016-2.895 1.096-5.63 2.963-8.168 1.337-1.819 3.04-3.498 5.093-4.995 2.48-1.807 5.398-3.303 8.725-4.374a38 38 0 0 1 6.647-1.49c1.858-.249 3.79-.376 5.762-.376m0 1.596c-1.892 0-3.762.122-5.56.363a36.6 36.6 0 0 0-6.375 1.428c-3.079.991-5.866 2.387-8.285 4.15-1.9 1.385-3.498 2.951-4.75 4.654-1.746 2.374-2.638 4.804-2.651 7.221-.024 4.282 2.565 8.541 7.29 11.994a30 30 0 0 0 8.258 4.244c2.035.678 4.18 1.18 6.376 1.494 1.846.266 3.769.406 5.715.418h.262c1.892 0 3.771-.12 5.586-.36 2.142-.28 4.24-.735 6.236-1.35a31.8 31.8 0 0 0 8.266-3.924c5.214-3.472 8.099-7.799 8.123-12.183.024-4.405-2.825-8.78-8.026-12.317a31.8 31.8 0 0 0-8.229-4.004 38 38 0 0 0-6.239-1.413c-1.845-.261-3.758-.4-5.688-.413z",
          clipRule: "evenodd"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("mask", {
        id: "pulse_svg__D",
        width: 82,
        height: 23,
        x: 1,
        y: 0,
        maskUnits: "userSpaceOnUse",
        style: {
          maskType: 'alpha'
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "m39.907 1.28.153 21.455 5.12.007L45.022.267zm-28.266.387-9.654.377.923 20.922 5.312-.208-.287-6.518 4.34-.169c5.28-.206 8.684-3.238 8.488-7.69-.182-4.127-3.297-6.727-8.49-6.727q-.312 0-.632.013M7.482 5.971l3.952-.155a7 7 0 0 1 .26-.006c2.143 0 3.422 1.082 3.503 2.916.084 1.909-1.193 3.136-3.493 3.226l-3.951.154zm46.594-.093c-4.715.673-7.313 3.135-6.89 6.55.411 3.319 3.555 3.932 7.598 3.902 2.445-.027 3.599-.193 3.717.756s-1.026 1.466-2.726 1.709c-2.373.338-5.121.022-7.03-.638l-.947 3.16c1.486.64 3.74 1.133 6.166 1.132q1.193.003 2.374-.164c4.65-.663 7.15-3.143 6.746-6.4-.482-3.888-4.513-4.02-8.003-4.005-2.152.017-3.226.042-3.332-.812-.114-.917 1.022-1.497 2.818-1.753 2.18-.311 4.854-.081 6.578.67l-.466-3.762c-1.2-.316-2.738-.5-4.27-.5-.796 0-1.589.049-2.334.155m17.265.148c-5.093 1.263-7.999 5.824-6.774 10.574.97 3.768 4.013 5.856 7.894 5.856a12.4 12.4 0 0 0 2.981-.381c3.301-.819 5.561-2.692 6.94-4.61l-2.325-2.015c-1.208 1.151-2.755 2.16-4.516 2.596-2.641.655-4.609.027-5.698-1.737l10.846-2.69a6.8 6.8 0 0 0-.172-2.747c-.835-3.243-3.458-5.148-6.8-5.148-.758 0-1.555.098-2.376.302m.835 3.371q.481-.123.978-.126c1.345 0 2.37.77 2.865 2.06l-7.042 1.747c.12-2 1.596-3.284 3.2-3.681M32.972 7.593l.091 9.331c-.928 1.135-2.122 1.765-3.417 1.794-1.814.038-2.734-1.247-2.758-3.891l-.078-8.12L21.7 7.834l.083 8.663c.041 4.326 2.54 6.47 5.738 6.468q.077 0 .155-.002c2.073-.044 4.204-.95 5.613-2.573l.019 2.006 4.924-.105-.153-15.827z"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
        mask: "url(#pulse_svg__D)",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "currentColor",
          fillRule: "evenodd",
          d: "M37.856 17.716h.148l.167.001c1.797.013 3.561.135 5.266.36 2.035.27 3.985.688 5.818 1.232a31.6 31.6 0 0 1 7.818 3.531c5.073 3.188 8.2 7.332 8.175 11.894-.026 4.547-3.187 8.64-8.273 11.765a31.6 31.6 0 0 1-7.855 3.453 38 38 0 0 1-5.818 1.17 42 42 0 0 1-5.243.31h-.172a42 42 0 0 1-5.289-.363 36.3 36.3 0 0 1-5.95-1.3 29.7 29.7 0 0 1-7.865-3.754c-4.66-3.15-7.462-7.188-7.437-11.601.014-2.566 1.041-4.98 2.817-7.206 1.243-1.559 2.823-2.996 4.72-4.273 2.253-1.516 4.898-2.774 7.904-3.671 1.866-.558 3.86-.98 5.952-1.238 1.65-.205 3.364-.31 5.117-.31m0 1.534c-1.679 0-3.339.1-4.935.299-1.96.241-3.88.64-5.71 1.186-2.775.829-5.297 1.999-7.495 3.479-1.752 1.178-3.226 2.511-4.382 3.96-1.634 2.049-2.469 4.15-2.48 6.248-.02 3.69 2.381 7.353 6.764 10.315a28.2 28.2 0 0 0 7.47 3.564 35 35 0 0 0 5.708 1.248c1.647.22 3.363.339 5.1.349h.251c1.685 0 3.358-.1 4.975-.299a36.5 36.5 0 0 0 5.59-1.124 30 30 0 0 0 7.484-3.29c4.844-2.975 7.522-6.69 7.544-10.46.021-3.786-2.628-7.543-7.46-10.58a30 30 0 0 0-7.448-3.363 36.5 36.5 0 0 0-5.59-1.183 41 41 0 0 0-5.082-.348z",
          clipRule: "evenodd"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("mask", {
        id: "pulse_svg__E",
        width: 82,
        height: 23,
        x: 1,
        y: 0,
        maskUnits: "userSpaceOnUse",
        style: {
          maskType: 'alpha'
        },
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "m39.907 1.28.153 21.455 5.12.007L45.022.267zm-28.266.387-9.654.377.923 20.922 5.312-.208-.287-6.518 4.34-.169c5.28-.206 8.684-3.238 8.488-7.69-.182-4.127-3.297-6.727-8.49-6.727q-.312 0-.632.013M7.482 5.971l3.952-.155a7 7 0 0 1 .26-.006c2.143 0 3.422 1.082 3.503 2.916.084 1.909-1.193 3.136-3.493 3.226l-3.951.154zm46.594-.093c-4.715.673-7.313 3.135-6.89 6.55.411 3.319 3.555 3.932 7.598 3.902 2.445-.027 3.599-.193 3.717.756s-1.026 1.466-2.726 1.709c-2.373.338-5.121.022-7.03-.638l-.947 3.16c1.486.64 3.74 1.133 6.166 1.132q1.193.003 2.374-.164c4.65-.663 7.15-3.143 6.746-6.4-.482-3.888-4.513-4.02-8.003-4.005-2.152.017-3.226.042-3.332-.812-.114-.917 1.022-1.497 2.818-1.753 2.18-.311 4.854-.081 6.578.67l-.466-3.762c-1.2-.316-2.738-.5-4.27-.5-.796 0-1.589.049-2.334.155m17.265.148c-5.093 1.263-7.999 5.824-6.774 10.574.97 3.768 4.013 5.856 7.894 5.856a12.4 12.4 0 0 0 2.981-.381c3.301-.819 5.561-2.692 6.94-4.61l-2.325-2.015c-1.208 1.151-2.755 2.16-4.516 2.596-2.641.655-4.609.027-5.698-1.737l10.846-2.69a6.8 6.8 0 0 0-.172-2.747c-.835-3.243-3.458-5.148-6.8-5.148-.758 0-1.555.098-2.376.302m.835 3.371q.481-.123.978-.126c1.345 0 2.37.77 2.865 2.06l-7.042 1.747c.12-2 1.596-3.284 3.2-3.681M32.972 7.593l.091 9.331c-.928 1.135-2.122 1.765-3.417 1.794-1.814.038-2.734-1.247-2.758-3.891l-.078-8.12L21.7 7.834l.083 8.663c.041 4.326 2.54 6.47 5.738 6.468q.077 0 .155-.002c2.073-.044 4.204-.95 5.613-2.573l.019 2.006 4.924-.105-.153-15.827z"
        })
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
        mask: "url(#pulse_svg__E)",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "currentColor",
          fillRule: "evenodd",
          d: "M37.845 20.437h.167q.075 0 .148.002c1.584.011 3.137.11 4.638.293 1.798.217 3.521.551 5.144.992a29.9 29.9 0 0 1 7.005 2.861c4.726 2.679 7.648 6.217 7.626 10.134-.022 3.906-2.974 7.4-7.712 10.02a29.8 29.8 0 0 1-7.04 2.79 36 36 0 0 1-5.146.937c-1.496.166-3.043.25-4.62.246l-.152-.001a40 40 0 0 1-4.653-.292 35 35 0 0 1-5.255-1.043c-2.674-.752-5.026-1.81-7.045-3.044-4.342-2.653-6.95-6.104-6.93-9.902.013-2.237.984-4.333 2.671-6.244 1.148-1.3 2.605-2.496 4.348-3.552 2.024-1.226 4.397-2.244 7.082-2.966 1.65-.445 3.41-.782 5.259-.987a40 40 0 0 1 4.465-.244m0 1.472c-1.465 0-2.914.08-4.308.235a34 34 0 0 0-5.046.946c-2.479.668-4.737 1.612-6.712 2.81-1.604.97-2.954 2.07-4.012 3.27-1.516 1.717-2.29 3.49-2.3 5.268-.017 3.103 2.195 6.17 6.227 8.632 2.027 1.239 4.277 2.21 6.686 2.887 1.616.454 3.313.79 5.043 1.001 1.45.178 2.96.273 4.489.281h.242c1.476 0 2.945-.079 4.365-.236a35 35 0 0 0 4.949-.901 28.4 28.4 0 0 0 6.702-2.655c4.468-2.472 6.939-5.575 6.956-8.736.018-3.174-2.427-6.314-6.882-8.84a28.5 28.5 0 0 0-6.675-2.725 35 35 0 0 0-4.942-.953 40 40 0 0 0-4.478-.283z",
          clipRule: "evenodd"
        })
      })]
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("defs", {
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("clipPath", {
        id: "pulse_svg__a",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "M2 1h19v22H2z"
        })
      })
    })]
  }));
};

const SvgPurchasesHistory = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M3 4.063A11.97 11.97 0 0 1 12 0c6.628 0 12 5.372 12 12s-5.372 12-12 12S0 18.628 0 12a1 1 0 1 1 2 0c0 5.523 4.477 10 10 10s10-4.477 10-10S17.523 2 12 2a9.98 9.98 0 0 0-8 4h2a1 1 0 0 1 0 2H2a1 1 0 0 1-1-1V3a1 1 0 0 1 2 0zm13.207 4.73a1 1 0 0 1 0 1.414l-5 5a1 1 0 0 1-1.414 0l-2-2a1 1 0 1 1 1.414-1.414l1.293 1.293 4.293-4.293a1 1 0 0 1 1.414 0",
      clipRule: "evenodd"
    })]
  }));
};

const SvgQuestion = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M12.114 10.997A2 2 0 1 0 10 9v.08a.68.68 0 0 1-.376.608c-.342.171-.828.071-1.022-.258A.8.8 0 0 1 8.5 9a3.5 3.5 0 1 1 4.25 3.42V14a.75.75 0 0 1-1.5 0v-2.062a.7.7 0 0 1 0-.173v-.027q.002-.179.077-.33a.6.6 0 0 1 .284-.311.75.75 0 0 1 .503-.1M12.75 17a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M24 12c0 6.627-5.373 12-12 12S0 18.627 0 12 5.373 0 12 0s12 5.373 12 12m-1.5 0c0 5.799-4.701 10.5-10.5 10.5S1.5 17.799 1.5 12 6.201 1.5 12 1.5 22.5 6.201 22.5 12",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgRand = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      d: "M15.056 19.793h4.584l-3.696-6.048c1.848-.888 3.024-2.52 3.024-4.608 0-3.12-2.328-5.136-6.312-5.136H5v15.792h3.936v-5.28h3.144zM8.936 7.121h3.36c1.584 0 2.544.816 2.544 2.112 0 1.344-.936 2.16-2.544 2.16h-3.36z"
    })]
  }));
};

const SvgRatingAverageFilled = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M12 22.5c5.799 0 10.5-4.701 10.5-10.5S17.799 1.5 12 1.5 1.5 6.201 1.5 12 6.201 22.5 12 22.5M10 10a1 1 0 1 1-2 0 1 1 0 0 1 2 0m6 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0m-1.058 5.028c.168-.116.415-.287.62-.184.25.125.344.437.188.719-.031.093-1.125 1.187-3.781 1.187s-3.718-1.045-3.781-1.187a.55.55 0 0 1 .25-.72c.226-.1.453.063.615.18.038.027.073.053.103.07l.006.004c.08.053.905.59 2.838.59 1.952 0 2.748-.53 2.836-.588l.008-.005q.042-.026.098-.066",
      clipRule: "evenodd"
    })]
  }));
};

const SvgRatingAverage = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10m9.063-10A9.06 9.06 0 0 1 12 21.063 9.06 9.06 0 0 1 2.938 12 9.06 9.06 0 0 1 12 2.938 9.06 9.06 0 0 1 21.063 12",
        clipRule: "evenodd"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M12 20.571A8.571 8.571 0 1 0 12 3.43a8.571 8.571 0 0 0 0 17.142M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10",
        clipRule: "evenodd"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M10 10a1 1 0 1 1-2 0 1 1 0 0 1 2 0M16 10a1 1 0 1 1-2 0 1 1 0 0 1 2 0M15.563 14.844c-.25-.125-.563.156-.72.25-.033.02-.812.594-2.843.594-2 0-2.814-.576-2.844-.594-.156-.094-.437-.375-.719-.25a.55.55 0 0 0-.25.719c.064.142 1.125 1.187 3.782 1.187s3.75-1.094 3.781-1.187c.156-.282.063-.594-.187-.72"
      })]
    })]
  }));
};

const SvgRatingExcellentFilled = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M12 22.5c5.799 0 10.5-4.701 10.5-10.5S17.799 1.5 12 1.5 1.5 6.201 1.5 12 6.201 22.5 12 22.5m-1.962-11.797a.54.54 0 0 0 .538.411c.032 0 .095 0 .127-.032a.527.527 0 0 0 .38-.664l-.008-.025c-.077-.265-.675-2.316-2.429-2.316s-2.351 2.05-2.429 2.316l-.007.025a.567.567 0 0 0 .38.665.567.567 0 0 0 .664-.38s.411-1.519 1.392-1.519 1.392 1.487 1.392 1.519m5.569 3.176a.54.54 0 0 0-.728.254c0 .031-.822 1.613-2.879 1.613-2.025 0-2.848-1.55-2.88-1.614a.56.56 0 0 0-.727-.253.56.56 0 0 0-.253.728c.031.095 1.139 2.215 3.828 2.215s3.797-2.12 3.829-2.215c.158-.285.063-.601-.19-.728m-2.682-3.454c.077-.266.675-2.317 2.429-2.317 1.835 0 2.405 2.215 2.436 2.342a.527.527 0 0 1-.38.664c-.031.032-.094.032-.126.032a.54.54 0 0 1-.538-.412c0-.031-.411-1.518-1.392-1.518s-1.392 1.518-1.392 1.518a.567.567 0 0 1-.665.38.567.567 0 0 1-.372-.69",
      clipRule: "evenodd"
    })]
  }));
};

const SvgRatingExcellent = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2m0 18.938c-4.937 0-8.937-4-8.937-8.938 0-4.937 4-8.937 8.937-8.937 4.938 0 8.938 4 8.938 8.937 0 4.938-4 8.938-8.938 8.938"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M15.563 13.844a.534.534 0 0 0-.72.25c0 .031-.812 1.594-2.843 1.594-2 0-2.812-1.532-2.844-1.594a.55.55 0 0 0-.719-.25.55.55 0 0 0-.25.719c.032.093 1.126 2.187 3.782 2.187s3.75-2.094 3.781-2.187c.156-.282.063-.594-.187-.72M10.063 10.719c.062.25.28.406.53.406.032 0 .095 0 .126-.031a.52.52 0 0 0 .375-.656c-.031-.094-.594-2.313-2.406-2.313s-2.376 2.219-2.407 2.313a.56.56 0 0 0 .375.656.56.56 0 0 0 .657-.375s.406-1.5 1.375-1.5c.968 0 1.374 1.469 1.374 1.5M15.313 8.156c-1.813 0-2.376 2.219-2.407 2.313a.56.56 0 0 0 .375.656.56.56 0 0 0 .656-.375s.407-1.5 1.376-1.5 1.374 1.469 1.374 1.5c.063.25.282.406.532.406.031 0 .093 0 .125-.031a.52.52 0 0 0 .375-.656c-.032-.125-.594-2.313-2.407-2.313"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M12 20.571A8.571 8.571 0 1 0 12 3.43a8.571 8.571 0 0 0 0 17.142M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgRatingGoodFilled = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M12 22.5c5.799 0 10.5-4.701 10.5-10.5S17.799 1.5 12 1.5 1.5 6.201 1.5 12 6.201 22.5 12 22.5M10 10a1 1 0 1 1-2 0 1 1 0 0 1 2 0m5.607 3.88a.54.54 0 0 0-.728.252c0 .032-.822 1.614-2.879 1.614-2.025 0-2.848-1.55-2.88-1.614a.56.56 0 0 0-.727-.253.56.56 0 0 0-.253.728c.031.095 1.139 2.215 3.828 2.215s3.797-2.12 3.829-2.215c.158-.285.063-.601-.19-.728M15 11a1 1 0 1 0 0-2 1 1 0 0 0 0 2",
      clipRule: "evenodd"
    })]
  }));
};

const SvgRatingGood = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2m0 18.938c-4.937 0-8.937-4-8.937-8.938 0-4.937 4-8.937 8.937-8.937 4.938 0 8.938 4 8.938 8.937 0 4.938-4 8.938-8.938 8.938"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M15.563 13.844a.534.534 0 0 0-.72.25c0 .031-.812 1.594-2.843 1.594-2 0-2.812-1.532-2.844-1.594a.55.55 0 0 0-.719-.25.55.55 0 0 0-.25.719c.032.093 1.126 2.187 3.782 2.187s3.75-2.094 3.781-2.187c.156-.282.063-.594-.187-.72"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M12 20.571A8.571 8.571 0 1 0 12 3.43a8.571 8.571 0 0 0 0 17.142M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10",
        clipRule: "evenodd"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M10 10a1 1 0 1 1-2 0 1 1 0 0 1 2 0M16 10a1 1 0 1 1-2 0 1 1 0 0 1 2 0"
      })]
    })]
  }));
};

const SvgRatingPoorFilled = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M12 22.5c5.799 0 10.5-4.701 10.5-10.5S17.799 1.5 12 1.5 1.5 6.201 1.5 12 6.201 22.5 12 22.5M10 10a1 1 0 1 1-2 0 1 1 0 0 1 2 0m6 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0m-6.879 6.446a.534.534 0 0 1-.719.25c-.25-.125-.343-.438-.187-.72.031-.093 1.125-2.187 3.781-2.187s3.75 2.094 3.781 2.188a.55.55 0 0 1-.25.719.55.55 0 0 1-.718-.25c-.032-.063-.844-1.594-2.844-1.594-2.031 0-2.844 1.562-2.844 1.594",
      clipRule: "evenodd"
    })]
  }));
};

const SvgRatingPoor = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10m9.063-10A9.06 9.06 0 0 1 12 21.063 9.06 9.06 0 0 1 2.938 12 9.06 9.06 0 0 1 12 2.938 9.06 9.06 0 0 1 21.063 12",
        clipRule: "evenodd"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M12 20.571A8.571 8.571 0 1 0 12 3.43a8.571 8.571 0 0 0 0 17.142M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10",
        clipRule: "evenodd"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M10 10a1 1 0 1 1-2 0 1 1 0 0 1 2 0M16 10a1 1 0 1 1-2 0 1 1 0 0 1 2 0M8.402 16.696c.25.125.594.03.72-.25 0-.032.812-1.594 2.843-1.594 2 0 2.812 1.531 2.844 1.594.125.25.437.375.718.25a.55.55 0 0 0 .25-.72c-.03-.093-1.125-2.187-3.78-2.187-2.657 0-3.75 2.094-3.782 2.188-.156.281-.063.594.187.719"
      })]
    })]
  }));
};

const SvgRatingTerribleFilled = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M12 22.5c5.799 0 10.5-4.701 10.5-10.5S17.799 1.5 12 1.5 1.5 6.201 1.5 12 6.201 22.5 12 22.5m4.05-10.532a.48.48 0 0 1-.348-.126l-1.519-1.519a.46.46 0 0 1 0-.664l1.519-1.52c.19-.189.475-.189.664 0 .19.19.19.475 0 .665l-1.17 1.171 1.17 1.17c.19.19.19.475 0 .665-.063.127-.19.158-.316.158m-8.1 0a.459.459 0 0 1-.348-.791l1.17-1.17-1.17-1.171a.46.46 0 0 1 0-.664c.19-.19.475-.19.664 0l1.52 1.518c.189.19.189.475 0 .665l-1.52 1.518c-.063.064-.19.095-.316.095m6.74 4.443a.48.48 0 0 0 .348.126c.126 0 .253-.031.284-.126l1.519-1.52a.46.46 0 0 0 0-.664.46.46 0 0 0-.664 0l-1.171 1.171-1.17-1.17a.46.46 0 0 0-.665 0L12 15.397l-1.17-1.17a.46.46 0 0 0-.665 0l-1.17 1.17-1.172-1.17a.46.46 0 0 0-.664 0 .46.46 0 0 0 0 .664l1.519 1.519c.19.19.474.19.664 0l1.17-1.171 1.172 1.17c.19.19.474.19.664 0l1.17-1.17z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgRatingTerrible = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M12 22C6.5 22 2 17.5 2 12S6.5 2 12 2s10 4.5 10 10-4.5 10-10 10m0-19.062C7 2.938 2.938 7 2.938 12S7 21.063 12 21.063 21.063 17 21.063 12 17 2.938 12 2.938"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M16 11.969a.47.47 0 0 1-.344-.125l-1.5-1.5a.453.453 0 0 1 0-.656l1.5-1.5a.453.453 0 0 1 .656 0 .453.453 0 0 1 0 .656L15.157 10l1.156 1.156a.453.453 0 0 1 0 .656c-.062.126-.187.157-.312.157M8 11.969a.453.453 0 0 1-.344-.781l1.157-1.157-1.157-1.156a.453.453 0 0 1 0-.656.453.453 0 0 1 .657 0l1.5 1.5a.453.453 0 0 1 0 .656l-1.5 1.5c-.063.063-.188.094-.313.094M15 16.469a.47.47 0 0 1-.344-.125L13.5 15.187l-1.156 1.157a.453.453 0 0 1-.656 0l-1.157-1.157-1.156 1.157a.453.453 0 0 1-.656 0l-1.5-1.5a.453.453 0 0 1 0-.656.453.453 0 0 1 .656 0l1.156 1.156 1.156-1.156a.453.453 0 0 1 .657 0L12 15.344l1.156-1.156a.453.453 0 0 1 .656 0l1.157 1.156 1.156-1.156a.453.453 0 0 1 .656 0 .453.453 0 0 1 0 .656l-1.5 1.5c-.031.093-.156.125-.281.125"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M12 20.571A8.571 8.571 0 1 0 12 3.43a8.571 8.571 0 0 0 0 17.142M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgRead = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M6.51 4.385c-.306 0-.599.122-.814.34-.215.216-.334.51-.334.813v10.52a2.2 2.2 0 0 1 1.021-.25h12.255V4.385zm-1.834 15.83A2.7 2.7 0 0 1 4 18.463V5.538c0-.675.266-1.32.737-1.796A2.5 2.5 0 0 1 6.511 3h12.26c.324 0 .636.13.867.363s.362.55.362.883v16.062a.687.687 0 0 1-.68.692H6.51l-.063-.003-.064.003a2.3 2.3 0 0 1-1.707-.784m1.707-.6q.032 0 .064.003l.064-.003h12.127v-2.423H6.383a.94.94 0 0 0-.7.331c-.2.224-.321.54-.321.88 0 .342.122.658.321.881a.94.94 0 0 0 .7.331M9.106 6.808c-.376 0-.68.31-.68.692s.304.692.68.692h5.447c.376 0 .681-.31.681-.692a.687.687 0 0 0-.68-.692z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgRecharge = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M8.5 12.25a.75.75 0 0 0 0 1.5h7a.75.75 0 0 0 0-1.5zM7.75 16.5a.75.75 0 0 1 .75-.75h7a.75.75 0 0 1 0 1.5h-7a.75.75 0 0 1-.75-.75M8.5 19.25a.75.75 0 0 0 0 1.5h7a.75.75 0 0 0 0-1.5z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M5 3.5A3.5 3.5 0 0 1 8.5 0h7A3.5 3.5 0 0 1 19 3.5v17a3.5 3.5 0 0 1-3.5 3.5h-7A3.5 3.5 0 0 1 5 20.5zm3.5-2h7a2 2 0 0 1 2 2v17a2 2 0 0 1-2 2h-7a2 2 0 0 1-2-2v-17a2 2 0 0 1 2-2",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgRedeem = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M21.892 14.975q.107-.722.108-1.475c0-4.102-2.47-7.627-6.004-9.17a4 4 0 0 0-7.992 0 10 10 0 0 0-5.896 10.645 4 4 0 1 0 4.232 6.77A9.95 9.95 0 0 0 12 23.5a9.95 9.95 0 0 0 5.66-1.755 4 4 0 1 0 4.232-6.77M14.5 4.5a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0m1.258 1.374a4.002 4.002 0 0 1-7.516 0 8.5 8.5 0 0 0-4.681 8.65Q3.777 14.5 4 14.5a4 4 0 0 1 3.382 6.137A8.46 8.46 0 0 0 12 22a8.46 8.46 0 0 0 4.618-1.363 4 4 0 0 1 3.82-6.113q.062-.504.062-1.024a8.5 8.5 0 0 0-4.742-7.626M4 21a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5m18.5-2.5a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0",
      clipRule: "evenodd"
    })]
  }));
};

const SvgRefresh = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 25 25",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M14.51 24.304A12.213 12.213 0 1 0 2.123 6.24a.78.78 0 1 0 1.36.763 10.655 10.655 0 1 1-.223 10.004l1.935.97a.78.78 0 1 0 .699-1.394L2.658 14.96a1.3 1.3 0 0 0-1.85.878l-.76 3.409a.78.78 0 0 0 1.521.34l.383-1.717a12.21 12.21 0 0 0 12.557 6.433",
      clipRule: "evenodd"
    })]
  }));
};

const SvgRewards = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      fillRule: "evenodd",
      clipRule: "evenodd",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M12 15a6 6 0 1 0 0-12 6 6 0 0 0 0 12m0-1.5a4.5 4.5 0 1 0 0-9 4.5 4.5 0 0 0 0 9"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M16.5 16.796a9 9 0 1 0-9.034-.02v6.018c0 .862 1.018 1.32 1.663.748L12 21.5l2.834 2.029c.645.575 1.666.117 1.666-.746zm0-1.795a7.5 7.5 0 1 0-4.5 1.5l.039-.001A7.47 7.47 0 0 0 16.5 15M11.951 18h.095A9.3 9.3 0 0 0 15 17.526v4.14l-2.586-1.876a.7.7 0 0 0-.82 0l-2.628 1.893v-4.166c.81.274 1.808.477 2.985.483"
      })]
    })]
  }));
};

const SvgRoaming = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M14.455 3.49q.045.123.046.26v3.632l8.777 7.739c.228.2.222.78.222.78v1.834a.74.74 0 0 1-.126.431.747.747 0 0 1-.973.248l-7.9-3.95v4.127l1.929 4.34a.75.75 0 0 1-.212.905.75.75 0 0 1-.93.005l-3.563-2.673-4.042 2.695a.75.75 0 0 1-.976-.097.75.75 0 0 1-.082-.93l2.376-3.801v-4.51l-7.886 4.38a.75.75 0 0 1-1.02-.291C-.014 18.419.001 18 .001 18v-1.5s.012-.585.235-.795L9 7.426V3.75q.001-.148.053-.277c.113-.827.4-1.557.765-2.127.237-.37.519-.691.826-.926.293-.224.667-.413 1.084-.42a.74.74 0 0 1 .372.087c.584.294 1.19.746 1.649 1.435.356.534.607 1.186.705 1.969M11.648 1.55a1 1 0 0 0-.092.063c-.142.108-.31.288-.474.542-.321.502-.576 1.228-.581 2.07V7.75c0 .222-.096.42-.25.558L1.484 16.59a.8.8 0 0 1 .018.16v.226l7.885-4.38a.75.75 0 0 1 1.115.656v5.987a.74.74 0 0 1-.12.42l-.648 1.036 1.587-1.059a.75.75 0 0 1 .451-.135c.16.005.316.06.444.16l1.68 1.26-.825-1.854a.74.74 0 0 1-.07-.336v-5.45a.746.746 0 0 1 .593-.763.75.75 0 0 1 .512.072L22 16.536v-.542l-8.595-7.578a.75.75 0 0 1-.404-.726V4.25c0-.869-.215-1.47-.5-1.896a2.7 2.7 0 0 0-.853-.805",
      clipRule: "evenodd"
    })]
  }));
};

const SvgRugby = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M7.344 7.91c-2.455 3.134-3.498 7.499-1.66 12.48.643-2.838 1.37-5.289 2.345-7.468a3 3 0 0 0-.247-.083c-.167-.047-.344-.071-.811-.09a.75.75 0 1 1 .058-1.498c.49.019.812.047 1.155.143.156.043.319.102.501.173a22 22 0 0 1 .955-1.64 8 8 0 0 0-.613-.082 6 6 0 0 0-.636-.025h-.03a.75.75 0 1 1-.09-1.496l.045.748-.045-.748h.009l.016-.002a3 3 0 0 1 .234-.003c.153.001.37.008.634.033.38.035.866.105 1.412.243a21 21 0 0 1 1.414-1.66 4.4 4.4 0 0 0-.98-.116h-.12l-.026.002h-.003a.75.75 0 0 1-.09-1.497l.045.748-.045-.748h.008l.016-.002a3 3 0 0 1 .228-.003c.146.001.35.009.589.034a5.2 5.2 0 0 1 1.577.406c1.135-1.034 2.435-2.018 3.932-2.983-3.778.24-7.432 2.14-9.777 5.134m5.686 2.56-1.132-1.133q.617-.79 1.34-1.538L14.47 9.03a.75.75 0 1 0 1.06-1.06l-1.21-1.21c1.268-1.14 2.767-2.228 4.56-3.315 1.154 5.08.86 8.919-.966 11.796-1.832 2.885-5.318 4.98-10.95 6.311.65-3.02 1.362-5.537 2.305-7.723l.7.701a.75.75 0 1 0 1.061-1.06L9.95 12.388a20 20 0 0 1 1.062-1.817l.959.96a.75.75 0 1 0 1.06-1.061M5.136 22.889C2.02 16.644 3.046 10.965 6.163 6.985c3.09-3.944 8.206-6.18 13.213-5.66a.75.75 0 0 1 .671.58c1.514 5.817 1.427 10.527-.867 14.14-2.291 3.61-6.656 5.92-13.196 7.258a.74.74 0 0 1-.526-.072.75.75 0 0 1-.322-.342",
      clipRule: "evenodd"
    })]
  }));
};

const SvgScaleWeight = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      fillRule: "evenodd",
      clipRule: "evenodd",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M17.1 11.5a.38.38 0 0 0 .386-.4c-.18-2.664-2.154-5.6-5.486-5.6s-5.305 2.936-5.486 5.6a.38.38 0 0 0 .386.4zM15.76 10c-.533-1.662-1.91-3-3.76-3s-3.227 1.338-3.76 3h3.172l.917-1.835a.75.75 0 0 1 1.342.67L13.089 10z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M4.63 3a1.5 1.5 0 0 0-1.495 1.625l1.25 15A1.5 1.5 0 0 0 5.88 21h12.24a1.5 1.5 0 0 0 1.495-1.375l1.25-15A1.5 1.5 0 0 0 19.37 3zm14.695 2.042a.5.5 0 0 0-.499-.542H5.174a.5.5 0 0 0-.499.542l1.167 14a.5.5 0 0 0 .498.458h11.32a.5.5 0 0 0 .498-.459z"
      })]
    })]
  }));
};

const SvgScan = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
      fill: "currentColor",
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M8.25 1H3a2 2 0 0 0-2 2v5.25a.75.75 0 0 0 1.5 0V3a.5.5 0 0 1 .5-.5h5.25a.75.75 0 0 0 0-1.5M1 15.75a.75.75 0 0 1 1.5 0V21a.5.5 0 0 0 .5.5h5.25a.75.75 0 0 1 0 1.5H3a2 2 0 0 1-2-2zM21.5 15.75a.75.75 0 0 1 1.5 0V21a2 2 0 0 1-2 2h-5.25a.75.75 0 0 1 0-1.5H21a.5.5 0 0 0 .5-.5zM23 8.25a.75.75 0 0 1-1.5 0V3a.5.5 0 0 0-.5-.5h-5.25a.75.75 0 0 1 0-1.5H21a2 2 0 0 1 2 2zM5 11.25a.75.75 0 0 0 0 1.5h14a.75.75 0 0 0 0-1.5zM7.25 7A.75.75 0 0 1 8 6.25h8a.75.75 0 0 1 0 1.5H8A.75.75 0 0 1 7.25 7M8 16.25a.75.75 0 0 0 0 1.5h8a.75.75 0 0 0 0-1.5z"
      })
    })]
  }));
};

const SvgScreenSize = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M7.25 1a.75.75 0 0 1 0 1.5H2.9a.4.4 0 0 0-.4.4v18.2c0 .22.18.4.4.4h4.35a.75.75 0 0 1 0 1.5H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM16.75 21.5a.75.75 0 0 0 0 1.5H22a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1h-5.25a.75.75 0 0 0 0 1.5h4.35c.22 0 .4.18.4.4v18.2a.4.4 0 0 1-.4.4z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M9.25 4.75H5.5a.75.75 0 0 0-.75.75v3.75a.75.75 0 0 0 1.5 0V7.31l10.1 10.1h-1.6a.75.75 0 0 0 0 1.5h3.41a.75.75 0 0 0 .75-.75v-3.41a.75.75 0 0 0-1.5 0v1.6L7.31 6.25h1.94a.75.75 0 0 0 0-1.5"
      })]
    })]
  }));
};

const SvgSearch = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M11.17 2a9.17 9.17 0 1 0 5.724 16.334l3.367 3.368a1.019 1.019 0 1 0 1.44-1.441l-3.367-3.367A9.17 9.17 0 0 0 11.17 2m-7.132 9.17a7.132 7.132 0 1 1 14.264 0 7.132 7.132 0 0 1-14.264 0",
      clipRule: "evenodd"
    })]
  }));
};

const SvgSend = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      d: "M14.836 23c-.119-.043-.241-.08-.357-.131-.386-.177-.694-.425-.896-.82q-1.921-3.753-3.864-7.494a.7.7 0 0 0-.275-.275 1333 1333 0 0 0-7.473-3.853c-.477-.243-.747-.624-.912-1.107Q1.03 9.24 1 9.164V8.65c.183-.661.619-1.076 1.26-1.289L21.41 1h.516c.28.098.579.18.754.44.13.195.215.422.32.634v.559q-.078.253-.159.504c-2.043 6.134-4.09 12.267-6.126 18.403-.235.707-.609 1.253-1.363 1.46zm6.471-19.378c-.096.089-.148.134-.196.182q-5.026 5.027-10.056 10.05c-.12.12-.142.203-.06.362 1.147 2.208 2.284 4.42 3.423 6.632.108.21.2.431.333.623.074.105.215.209.334.22.084.008.197-.132.27-.226.06-.075.081-.182.113-.276l5.761-17.284c.024-.072.041-.147.078-.283m-.974-.875-.025-.039q-.121.036-.241.074L4.225 8.061c-.549.183-1.1.36-1.642.563-.116.043-.278.191-.271.28.01.127.15.248.243.364.03.036.087.049.131.071 2.357 1.216 4.715 2.428 7.069 3.651.178.093.274.076.415-.065Q15.175 7.91 20.188 2.9q.073-.076.145-.153"
    })]
  }));
};

const SvgServiceRequestManagement = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M12.225 15.371c.436.442 1.46 1.473 2.677 1.473.586 0 1.144-.248 1.609-.709.51-.506.762-1.077.753-1.685-.02-1.114-.93-1.97-1.441-2.44-.01 0-.02-.018-.028-.027l-.14-.129a467 467 0 0 1-4.184-4.097c.186-.902.4-3.056-1.245-4.668C8.96 1.837 7.12 1.93 6.144 2.095c-.381.064-.697.34-.818.709-.12.377-.019.773.26 1.05l1.079 1.058-.28 1.29-1.3.285-1.08-1.06A1.048 1.048 0 0 0 2.24 6c-.158.966-.232 2.79 1.042 4.032 1.645 1.611 3.811 1.381 4.723 1.197a417 417 0 0 1 4.22 4.143M8.7 9.967l-.307-.286v-.018l-.4.129c-.12.037-2.277.681-3.737-.755-.595-.59-.725-1.436-.707-2.127l.688.672c.251.249.614.36.958.276l1.71-.368c.4-.092.716-.405.8-.8l.363-1.695c.074-.35-.038-.7-.289-.948l-.688-.672c.707-.028 1.562.092 2.157.681 1.479 1.446.828 3.6.8 3.692l-.13.396.297.294s3.208 3.177 4.472 4.392l.158.147s.019.01.019.019c.362.331.995.93 1.004 1.473 0 .092 0 .34-.344.681-.26.267-.446.286-.595.304h-.028c-.641 0-1.404-.773-1.73-1.105C11.9 13.06 8.702 9.958 8.702 9.958zM7.018 20.306C8.598 21.411 10.505 22 12.503 22c5.328 0 9.65-4.364 9.65-9.566s-4.1-9.4-9.343-9.566a.693.693 0 0 0-.716.673c-.009.377.298.7.679.708 4.49.139 7.996 3.674 7.996 8.185s-3.71 8.185-8.266 8.185c-1.72 0-3.337-.497-4.685-1.436l-.772-.562-1.274.497.298-1.556-.214-.248s-1.618-1.943-1.618-4.88a.7.7 0 0 0-.697-.69.7.7 0 0 0-.697.69 9.65 9.65 0 0 0 1.738 5.497l-.316 1.638v.065c.01.34.14.635.381.828.177.139.484.286.958.194l1.246-.47z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgSettings = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      fillRule: "evenodd",
      clipRule: "evenodd",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "m22.808 14.18-1.419-1.777a.65.65 0 0 1-.138-.404c0-.147.047-.29.139-.405l1.426-1.782a.84.84 0 0 0 .155-.742 11.3 11.3 0 0 0-1.143-2.759.84.84 0 0 0-.63-.413l-2.271-.253a.64.64 0 0 1-.38-.186.63.63 0 0 1-.184-.374l-.268-2.28a.84.84 0 0 0-.415-.63 11.3 11.3 0 0 0-2.759-1.141.84.84 0 0 0-.742.155l-1.776 1.418a.65.65 0 0 1-.809 0L9.812 1.184a.84.84 0 0 0-.742-.156 11.3 11.3 0 0 0-2.759 1.144.84.84 0 0 0-.413.63l-.253 2.276a.64.64 0 0 1-.186.38.63.63 0 0 1-.375.183l-2.278.261a.84.84 0 0 0-.63.414 11.3 11.3 0 0 0-1.143 2.76.84.84 0 0 0 .156.741l1.418 1.777a.65.65 0 0 1 0 .809l-1.423 1.782a.84.84 0 0 0-.156.742 11.3 11.3 0 0 0 1.144 2.759.84.84 0 0 0 .63.413l2.271.253a.64.64 0 0 1 .38.186.63.63 0 0 1 .184.374l.265 2.279a.84.84 0 0 0 .414.63c.866.502 1.793.886 2.76 1.143a.84.84 0 0 0 .741-.156l1.777-1.419a.65.65 0 0 1 .404-.138c.147 0 .29.047.405.139l1.782 1.426a.84.84 0 0 0 .742.155 11.3 11.3 0 0 0 2.759-1.143.84.84 0 0 0 .413-.63l.253-2.271a.64.64 0 0 1 .186-.38.63.63 0 0 1 .374-.184l2.279-.268a.84.84 0 0 0 .63-.415c.502-.865.886-1.793 1.143-2.759a.84.84 0 0 0-.156-.742m-1.383.672-1.208-1.514a2.15 2.15 0 0 1-.466-1.34c0-.465.15-.944.468-1.341l1.213-1.516a10 10 0 0 0-.741-1.79l-1.93-.215a2.14 2.14 0 0 1-1.275-.616 2.13 2.13 0 0 1-.613-1.26l-.229-1.945a9.8 9.8 0 0 0-1.793-.742L13.339 3.78a2.15 2.15 0 0 1-2.681 0L9.14 2.567c-.62.187-1.22.436-1.79.741l-.215 1.935a2.14 2.14 0 0 1-.616 1.274 2.13 2.13 0 0 1-1.265.613l-1.94.223a10 10 0 0 0-.743 1.791l1.208 1.513a2.15 2.15 0 0 1 0 2.681l-1.212 1.517c.187.62.436 1.22.741 1.79l1.93.215c.505.056.948.29 1.275.616.33.33.555.77.613 1.262l.226 1.943a10 10 0 0 0 1.792.743l1.513-1.208a2.15 2.15 0 0 1 1.34-.466c.466 0 .945.15 1.342.468l1.516 1.213a9.8 9.8 0 0 0 1.79-.741l.215-1.93c.056-.506.29-.95.616-1.275a2.13 2.13 0 0 1 1.26-.613l1.945-.229a10 10 0 0 0 .743-1.792"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M12 14.5a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5m4-2.5a4 4 0 1 1-8 0 4 4 0 0 1 8 0"
      })]
    })]
  }));
};

const SvgShare = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
      clipPath: "url(#share_svg__a)",
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fill: "currentColor",
        fillRule: "evenodd",
        d: "M20 6.5a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5M20 8a4 4 0 1 0-3.846-2.896L10.57 8.11a6 6 0 1 0 .15 7.594l5.44 3.173A4.003 4.003 0 0 0 20 24a4 4 0 1 0-3.155-6.459l-5.353-3.122c.327-.74.508-1.558.508-2.419 0-.943-.218-1.836-.605-2.63l5.437-2.928A4 4 0 0 0 20 8M6 16.5a4.5 4.5 0 1 0 0-9 4.5 4.5 0 0 0 0 9M22.5 20a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0",
        clipRule: "evenodd"
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("defs", {
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("clipPath", {
        id: "share_svg__a",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "M0 0h24v24H0z"
        })
      })
    })]
  }));
};

const SvgSimSwap = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M5 0a2 2 0 0 0-2 2v6.25a.75.75 0 1 0 1.5 0V2a.5.5 0 0 1 .5-.5h8.595c.445 0 1.152.54 1.152.54l4.405 4.086c.225.27.348.61.348.96v3.164a.75.75 0 0 0 1.5 0V7.086a3 3 0 0 0-.695-1.92L15 .5s-.515-.5-1.405-.5zM19.5 19.75a.75.75 0 0 1 1.5 0V22a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4.25a.75.75 0 0 1 1.5 0V22a.5.5 0 0 0 .5.5h14a.5.5 0 0 0 .5-.5z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M8.5 10.25V9.5h7v2.75a.75.75 0 0 0 1.5 0V9a1 1 0 0 0-1-1H8a1 1 0 0 0-1 1v1.25a.75.75 0 0 0 1.5 0M15.5 17.75a.75.75 0 0 1 1.5 0V19a1 1 0 0 1-1 1H8a1 1 0 0 1-1-1v-3.25a.75.75 0 0 1 1.5 0v2.75h7zM20.19 14.25l-.97-.97a.75.75 0 1 1 1.06-1.06l2.25 2.25a.75.75 0 0 1 0 1.06l-2.25 2.25a.75.75 0 1 1-1.06-1.06l.97-.97h-6.44a.75.75 0 1 1 0-1.5zM4.53 11.28l-.97.97H10a.75.75 0 0 1 0 1.5H3.56l.97.97a.75.75 0 0 1-1.06 1.06l-2.25-2.25a.75.75 0 0 1 0-1.06l2.25-2.25a.75.75 0 1 1 1.06 1.06"
      })]
    })]
  }));
};

const SvgSim = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      fillRule: "evenodd",
      clipRule: "evenodd",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M7 9a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H8a1 1 0 0 1-1-1zm1.5 7v-3.5h1.75a.75.75 0 0 0 0-1.5H8.5V9.5h7V11h-1.75a.75.75 0 0 0 0 1.5h1.75V16h-1.75a.75.75 0 0 0 0 1.5h1.75v1h-7v-1h1.75a.75.75 0 0 0 0-1.5z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M3 2a2 2 0 0 1 2-2h8.595C14.485 0 15 .5 15 .5l5.305 4.666A3 3 0 0 1 21 7.086V22a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2zm2-.5h8.595c.445 0 1.152.54 1.152.54l4.405 4.086c.225.27.348.61.348.96V22a.5.5 0 0 1-.5.5H5a.5.5 0 0 1-.5-.5V2a.5.5 0 0 1 .5-.5"
      })]
    })]
  }));
};

const SvgSkipBackOutline = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M6.625 13.083a1.25 1.25 0 0 1 0-2.165l8.5-5.33A1.25 1.25 0 0 1 17 6.67v10.66a1.25 1.25 0 0 1-1.875 1.083zM7.75 12l7.75 4.897V7.103z",
        clipRule: "evenodd"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M6 3.75a.75.75 0 0 1 1.5 0v16.5a.75.75 0 0 1-1.5 0z"
      })]
    })]
  }));
};

const SvgSkipBackSolid = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M6.625 13.083a1.25 1.25 0 0 1 0-2.165l8.5-5.33A1.25 1.25 0 0 1 17 6.67v10.66a1.25 1.25 0 0 1-1.875 1.083z",
        clipRule: "evenodd"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M6 3.75a.75.75 0 0 1 1.5 0v16.5a.75.75 0 0 1-1.5 0z"
      })]
    })]
  }));
};

const SvgSkipForwardOutline = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M16.375 10.917a1.25 1.25 0 0 1 0 2.165l-8.5 5.33A1.25 1.25 0 0 1 6 17.33V6.67a1.25 1.25 0 0 1 1.875-1.083zM15.25 12 7.5 7.103v9.794z",
        clipRule: "evenodd"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M17 20.25a.75.75 0 0 1-1.5 0V3.75a.75.75 0 0 1 1.5 0z"
      })]
    })]
  }));
};

const SvgSkipForwardSolid = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M16.375 10.917a1.25 1.25 0 0 1 0 2.165l-8.5 5.33A1.25 1.25 0 0 1 6 17.33V6.67a1.25 1.25 0 0 1 1.875-1.083z",
        clipRule: "evenodd"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M17 20.25a.75.75 0 0 1-1.5 0V3.75a.75.75 0 0 1 1.5 0z"
      })]
    })]
  }));
};

const SvgSmartId = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M8.303 7.75a2.25 2.25 0 1 0 0 4.5 2.25 2.25 0 0 0 0-4.5M7.553 10a.75.75 0 1 1 1.5 0 .75.75 0 0 1-1.5 0M6.781 12.483c-.811-.195-1.682.268-1.91 1.118l-.527 1.952a.95.95 0 0 0 .917 1.197h6.076a.95.95 0 0 0 .912-1.216l-.55-1.883c-.262-.902-1.215-1.31-2.019-1.089-.378.104-.806.188-1.18.188-.475 0-1.157-.132-1.719-.267m-.463 1.509c.004-.013.012-.027.033-.04a.1.1 0 0 1 .079-.01c.57.137 1.402.308 2.07.308.567 0 1.141-.121 1.578-.241a.2.2 0 0 1 .133.013c.036.018.045.038.049.05l.344 1.178H5.979z",
        clipRule: "evenodd"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M14 9.25a.75.75 0 0 0 0 1.5h5a.75.75 0 0 0 0-1.5zM14 13.25a.75.75 0 0 0 0 1.5h5a.75.75 0 0 0 0-1.5z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M2 5.5A1.5 1.5 0 0 1 3.5 4h17A1.5 1.5 0 0 1 22 5.5v13a1.5 1.5 0 0 1-1.5 1.5h-17A1.5 1.5 0 0 1 2 18.5zm1.5 0h17v13h-17z",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgSms = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M8 2.5h12A1.5 1.5 0 0 1 21.5 4v6l-1.52-1.14a1.8 1.8 0 0 0-1.08-.36H8A1.5 1.5 0 0 1 6.5 7V4A1.5 1.5 0 0 1 8 2.5M20 1a3 3 0 0 1 3 3v9l-3.92-2.94a.3.3 0 0 0-.18-.06H8a3 3 0 0 1-3-3V4a3 3 0 0 1 3-3zM4 12.5h12a1.5 1.5 0 0 1 1.5 1.5v3a1.5 1.5 0 0 1-1.5 1.5H5.1a1.8 1.8 0 0 0-1.08.36L2.5 20v-6A1.5 1.5 0 0 1 4 12.5M5.1 20a.3.3 0 0 0-.18.06L1 23v-9a3 3 0 0 1 3-3h12a3 3 0 0 1 3 3v3a3 3 0 0 1-3 3z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgSnapscan = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M8.268 7.679a.59.59 0 0 0-.59.589v2.357c0 .325.264.59.59.59h2.357a.59.59 0 0 0 .59-.59V8.268a.59.59 0 0 0-.59-.59zM12.786 8.268a.59.59 0 0 1 .589-.59h2.357a.59.59 0 0 1 .59.59v2.357a.59.59 0 0 1-.59.59h-2.357a.59.59 0 0 1-.59-.59zM8.268 12.786a.59.59 0 0 0-.59.589v2.357c0 .326.264.59.59.59h2.357a.59.59 0 0 0 .59-.59v-2.357a.59.59 0 0 0-.59-.59z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M23 12c0 6.075-4.925 11-11 11S1 18.075 1 12 5.925 1 12 1s11 4.925 11 11m-.786 0c0 5.641-4.573 10.214-10.214 10.214S1.786 17.641 1.786 12 6.359 1.786 12 1.786 22.214 6.359 22.214 12",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgSoccer = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      d: "M12 2a10 10 0 1 0 10 10A10.01 10.01 0 0 0 12 2m7.358 14.175h-3.233l-.89-1.227 1.214-3.536 1.442-.47 2.523 1.935a8.4 8.4 0 0 1-1.056 3.298m-15.77-3.298 2.519-1.935 1.442.47 1.214 3.537-.888 1.226H4.642a8.4 8.4 0 0 1-1.058-3.298zm.962-4.87.53 1.79-1.473 1.123c.13-1.02.447-2.007.934-2.912zm5.623 6.3-1.102-3.206L12 9.087l2.929 2.014-1.102 3.207zm8.757-4.51.53-1.79c.487.906.804 1.893.934 2.913zm-.596-3.403-.915 3.085-1.449.47-3.2-2.2V6.251l2.796-1.923a8.5 8.5 0 0 1 2.767 2.066m-4.596-2.676L12 4.912l-1.738-1.194a8.5 8.5 0 0 1 3.476 0m-5.304.61L11.23 6.25v1.498l-3.2 2.2-1.45-.47-.914-3.085a8.5 8.5 0 0 1 2.767-2.066m-2.67 13.386h1.96l.688 1.949a8.5 8.5 0 0 1-2.648-1.95m4.505 2.568-1.142-3.214.887-1.222h3.972l.887 1.222-1.137 3.214a8.5 8.5 0 0 1-3.472 0zm5.323-.62.69-1.948h1.958a8.5 8.5 0 0 1-2.652 1.949z"
    })]
  }));
};

const SvgSortby = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
      fill: "currentColor",
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "m22.777 19.526-3.278 3.25a.76.76 0 0 1-1.07 0l-3.278-3.25c-.476-.472-.139-1.28.535-1.28.2 0 .393.079.535.22l1.987 1.97V1.75c0-.414.338-.75.756-.75s.756.336.756.75v18.685l1.987-1.97a.76.76 0 0 1 .535-.22c.674 0 1.011.809.535 1.281M1 5c0-.414.339-.75.756-.75h7.988c.417 0 .756.336.756.75s-.339.75-.756.75H1.756A.753.753 0 0 1 1 5M1.756 11.25A.753.753 0 0 0 1 12c0 .414.339.75.756.75h11.367a.753.753 0 0 0 .756-.75.753.753 0 0 0-.756-.75zM1 19c0-.414.339-.75.756-.75l7.988-.004c.417 0 .756.336.756.75s-.339.75-.756.75l-7.988.004A.753.753 0 0 1 1 19"
      })
    })]
  }));
};

const SvgSpeedFast = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M21.395 16.916a.7.7 0 0 1-.7.584c-.48 0-.83-.454-.766-.93a8 8 0 1 0-15.858 0c.064.476-.286.93-.766.93a.7.7 0 0 1-.7-.584 9.5 9.5 0 1 1 18.79 0"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M17.69 12.205a.75.75 0 0 1-.395.985l-3.298 1.413a2 2 0 1 1-.493-1.42l3.2-1.372a.75.75 0 0 1 .985.394M12 15a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgSpeedMax = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M21.395 16.916a.7.7 0 0 1-.7.584c-.48 0-.83-.454-.766-.93a8 8 0 1 0-15.858 0c.064.476-.286.93-.766.93a.7.7 0 0 1-.7-.584 9.5 9.5 0 1 1 18.79 0"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M12 16.5a2 2 0 0 0 1.816-1.161l4.021.893a.75.75 0 1 0 .326-1.464l-4.283-.952A2 2 0 1 0 12 16.5m0-1.5a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgSpeedMedium = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M21.395 16.916a.7.7 0 0 1-.7.584c-.48 0-.83-.454-.766-.93a8 8 0 1 0-15.858 0c.064.476-.286.93-.766.93a.7.7 0 0 1-.7-.584 9.5 9.5 0 1 1 18.79 0"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M9.165 9.33a.75.75 0 0 1 1.006.335l1.437 2.874q.19-.039.392-.039a2 2 0 1 1-1.652.872l-.019-.036-1.5-3a.75.75 0 0 1 .336-1.007M12 15a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgSpeedSlow = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M21.395 16.916a.7.7 0 0 1-.7.584c-.48 0-.83-.454-.766-.93a8 8 0 1 0-15.858 0c.064.476-.286.93-.766.93a.7.7 0 0 1-.7-.584 9.5 9.5 0 1 1 18.79 0"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M5.772 12.818a.75.75 0 0 1 .91-.545l3.783.945a2 2 0 1 1-.46 1.431l-3.687-.921a.75.75 0 0 1-.546-.91M12 15a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgSpeedSlowest = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M21.395 16.916a.7.7 0 0 1-.7.584c-.48 0-.83-.454-.766-.93a8 8 0 1 0-15.858 0c.064.476-.286.93-.766.93a.7.7 0 0 1-.7-.584 9.5 9.5 0 1 1 18.79 0"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M12 16.5a2 2 0 1 0-1.869-2.714l-4.214.469a.75.75 0 1 0 .166 1.49l4.08-.453A2 2 0 0 0 12 16.5m0-1.5a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgStarFilled = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M12.897 1.817a1 1 0 0 0-1.794 0L8.706 6.675a1 1 0 0 1-.753.547L2.593 8a1 1 0 0 0-.555 1.705l3.88 3.781a1 1 0 0 1 .287.886l-.916 5.338a1 1 0 0 0 1.451 1.055l4.795-2.521a1 1 0 0 1 .93 0l4.795 2.52a1 1 0 0 0 1.45-1.054l-.915-5.338a1 1 0 0 1 .288-.886l3.879-3.78A1 1 0 0 0 21.408 8l-5.361-.78a1 1 0 0 1-.753-.546z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgStar = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "m12 3.39-1.949 3.949A2.5 2.5 0 0 1 8.17 8.706L3.81 9.34l3.153 3.074a2.5 2.5 0 0 1 .72 2.213l-.745 4.34 3.898-2.049a2.5 2.5 0 0 1 2.326 0l3.898 2.05-.744-4.341a2.5 2.5 0 0 1 .719-2.213l3.153-3.074-4.358-.633A2.5 2.5 0 0 1 13.95 7.34zm.897-1.573a1 1 0 0 0-1.794 0L8.706 6.675a1 1 0 0 1-.753.547L2.593 8a1 1 0 0 0-.555 1.705l3.88 3.781a1 1 0 0 1 .287.886l-.916 5.338a1 1 0 0 0 1.451 1.055l4.795-2.521a1 1 0 0 1 .93 0l4.795 2.52a1 1 0 0 0 1.45-1.054l-.915-5.338a1 1 0 0 1 .288-.886l3.879-3.78A1 1 0 0 0 21.408 8l-5.361-.78a1 1 0 0 1-.753-.546z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgStreaming = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M4.517 4.456c.3.286.312.76.027 1.06C2.787 7.366 1.75 9.71 1.75 12.252c0 2.33.873 4.495 2.372 6.264a.75.75 0 0 1-1.144.97C1.27 17.472.25 14.97.25 12.251c0-2.966 1.214-5.672 3.206-7.768a.75.75 0 0 1 1.06-.027m5.849 5.469v4.037l3.732-1.968zm.371-1.51A1.25 1.25 0 0 0 8.866 9.5v4.877a1.25 1.25 0 0 0 1.863 1.09l4.51-2.38.014-.007a1.25 1.25 0 0 0 0-2.16l-.007-.004zm8.72-2.898a.75.75 0 1 1 1.087-1.034c1.992 2.096 3.206 4.802 3.206 7.768 0 2.719-1.021 5.22-2.728 7.234a.75.75 0 0 1-1.144-.97c1.5-1.769 2.372-3.934 2.372-6.264 0-2.54-1.037-4.886-2.794-6.734m-12.9 1.98a.75.75 0 0 1-.055 1.06C5.377 9.572 4.75 10.823 4.75 12.143c0 1.212.528 2.364 1.483 3.33a.75.75 0 1 1-1.066 1.054c-1.182-1.195-1.917-2.71-1.917-4.384 0-1.826.873-3.46 2.248-4.7a.75.75 0 0 1 1.059.055m10.94 1.06a.75.75 0 1 1 1.005-1.114c1.375 1.24 2.248 2.874 2.248 4.7 0 1.674-.735 3.19-1.917 4.384a.75.75 0 1 1-1.066-1.054c.955-.966 1.483-2.118 1.483-3.33 0-1.32-.627-2.571-1.752-3.586",
      clipRule: "evenodd"
    })]
  }));
};

const SvgSubscription = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M16.064 14.494a.75.75 0 1 0-1.128-.988l-2.972 3.397-1.434-1.433a.75.75 0 1 0-1.06 1.06l1.773 1.774a1.05 1.05 0 0 0 1.533-.051z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M5 2.25a.75.75 0 0 1 .75.75v2h12.5V3a.75.75 0 0 1 1.5 0v2H22a2 2 0 0 1 2 2v13a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h2.25V3A.75.75 0 0 1 5 2.25M18.25 7.5a.75.75 0 0 0 1.5 0v-1H22a.5.5 0 0 1 .5.5v3.25h-21V7a.5.5 0 0 1 .5-.5h2.25v1a.75.75 0 0 0 1.5 0v-1h12.5zM1.5 11.75h21V20a.5.5 0 0 1-.5.5H2a.5.5 0 0 1-.5-.5z",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgSubtract = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M1.25 12a.75.75 0 0 1 .75-.75h20a.75.75 0 0 1 0 1.5H2a.75.75 0 0 1-.75-.75",
      clipRule: "evenodd"
    })]
  }));
};

const SvgSuccess = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      clipPath: "url(#success_svg__a)",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M16.03 10.03a.75.75 0 1 0-1.06-1.06L11 12.94l-1.47-1.47a.75.75 0 1 0-1.06 1.06l1.788 1.788c.41.41 1.075.41 1.485 0z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M11.344.57a1 1 0 0 1 1.312 0l2.065 1.794a1 1 0 0 0 .742.24l2.725-.237a1 1 0 0 1 1.061.771l.616 2.665a1 1 0 0 0 .46.632l2.343 1.41a1 1 0 0 1 .406 1.247l-1.068 2.518a1 1 0 0 0 0 .78l1.068 2.518a1 1 0 0 1-.406 1.248l-2.344 1.41a1 1 0 0 0-.459.631l-.616 2.665a1 1 0 0 1-1.06.77l-2.726-.237a1 1 0 0 0-.742.242l-2.065 1.793a1 1 0 0 1-1.312 0L9.28 21.637a1 1 0 0 0-.743-.242l-2.725.238a1 1 0 0 1-1.061-.771l-.616-2.665a1 1 0 0 0-.459-.632l-2.344-1.41a1 1 0 0 1-.405-1.247l1.068-2.517a1 1 0 0 0 0-.781L.927 9.092a1 1 0 0 1 .405-1.248l2.344-1.41a1 1 0 0 0 .459-.631l.616-2.665a1 1 0 0 1 1.061-.77l2.725.237a1 1 0 0 0 .743-.241zm-1.08 2.926L12 1.987l1.737 1.509a2.5 2.5 0 0 0 1.857.603l2.292-.2.518 2.242a2.5 2.5 0 0 0 1.147 1.58l1.972 1.185-.898 2.118a2.5 2.5 0 0 0 0 1.952l.898 2.118-1.972 1.186a2.5 2.5 0 0 0-1.147 1.58l-.518 2.24-2.292-.2a2.5 2.5 0 0 0-1.857.604L12 22.014l-1.737-1.51a2.5 2.5 0 0 0-1.856-.603l-2.292.2-.519-2.242a2.5 2.5 0 0 0-1.147-1.58l-1.972-1.185.899-2.118a2.5 2.5 0 0 0 0-1.952l-.899-2.118L4.45 7.72a2.5 2.5 0 0 0 1.147-1.58l.519-2.24 2.292.2a2.5 2.5 0 0 0 1.856-.604",
        clipRule: "evenodd"
      })]
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("defs", {
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("clipPath", {
        id: "success_svg__a",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "M0 0h24v24H0z"
        })
      })
    })]
  }));
};

const SvgTabletHorizontal = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M12 18.5a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M2 21a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h20a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2zm-.5-2V5a.5.5 0 0 1 .5-.5h20a.5.5 0 0 1 .5.5v14a.5.5 0 0 1-.5.5H2a.5.5 0 0 1-.5-.5",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgTablet = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M12 21.5a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M2.5 2a2 2 0 0 1 2-2h15a2 2 0 0 1 2 2v20a2 2 0 0 1-2 2h-15a2 2 0 0 1-2-2zm2-.5h15a.5.5 0 0 1 .5.5v20a.5.5 0 0 1-.5.5h-15A.5.5 0 0 1 4 22V2a.5.5 0 0 1 .5-.5",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgTalkFree = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M9.75 8a.75.75 0 0 0-1.5 0v1.5a.75.75 0 0 0 1.5 0zM15.25 8a.75.75 0 0 0-1.5 0v1.5a.75.75 0 0 0 1.5 0zM16.435 12.757a.75.75 0 0 1 1.135.981L17 13.25l.57.488-.002.002-.001.001-.003.004-.008.008a2 2 0 0 1-.097.102q-.093.096-.266.243c-.23.193-.57.442-1.025.687-.915.493-2.287.965-4.168.965-1.88 0-3.297-.471-4.255-.956a7 7 0 0 1-1.087-.675 5 5 0 0 1-.39-.331l-.007-.008-.004-.004v-.001s-.002-.001.535-.525l-.537.524a.75.75 0 0 1 1.07-1.051l.006.005.04.038q.06.056.198.161c.182.14.466.333.853.529.771.39 1.958.794 3.578.794s2.748-.403 3.457-.785c.357-.192.611-.381.772-.516a3 3 0 0 0 .202-.188z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M4.886 20.39A2.5 2.5 0 0 1 6.228 20H21.5a2.5 2.5 0 0 0 2.5-2.5v-12A2.5 2.5 0 0 0 21.5 3h-19A2.5 2.5 0 0 0 0 5.5v17.09a.5.5 0 0 0 .768.421zM2.5 4.5h19a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H6.228a4 4 0 0 0-2.147.625L1.5 20.767V5.5a1 1 0 0 1 1-1",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgTheft = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      fillRule: "evenodd",
      clipRule: "evenodd",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M8.75 2.48a1.25 1.25 0 0 0-1.626.775L5.398 8.433l-3.973 1.589a1.2 1.2 0 0 0-.752.93c-.067.426.108.866.495 1.134C2.514 13.018 5.85 14.75 12 14.75c6.083 0 9.414-1.695 10.788-2.634.4-.273.577-.73.495-1.168a1.2 1.2 0 0 0-.813-.915L19.045 8.89l-2.66-5.764a1.25 1.25 0 0 0-1.628-.625l-2.776 1.19zM6.784 9.017l1.68-5.041 3.084 1.156c.301.113.635.105.931-.022l2.645-1.133 2.603 5.64c.145.315.414.554.74.663l2.888.963c-1.44.82-4.382 2.007-9.356 2.007-5.086 0-8.046-1.241-9.45-2.062l3.513-1.406a1.25 1.25 0 0 0 .722-.765"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M1.165 14.83a.75.75 0 0 1 .587-.036q.137 0 .273.052l.003.001.012.005.05.02.195.074a50.176 50.176 0 0 0 3.25 1.085c2.03.6 4.495 1.175 6.422 1.175s4.391-.575 6.421-1.175a50 50 0 0 0 3.446-1.16l.049-.019.012-.005h.003a.75.75 0 0 1 .906 1.103c-1.338 2.136-2.225 3.23-3.163 4.354-1.363 1.632-3.834 1.904-5.478.505l-2.219-1.887-2.905 2.247c-1.558 1.205-3.822 1.01-5.062-.588-1.045-1.345-2.335-3.14-3.138-4.745a.75.75 0 0 1 .336-1.007m3.987 4.832a39 39 0 0 1-2.013-2.82c.56.191 1.232.41 1.97.627 1.448.428 3.187.868 4.843 1.09l-1.84 1.423c-.947.732-2.259.583-2.96-.32m9.973.005-1.284-1.093c1.691-.216 3.48-.667 4.962-1.105.541-.16 1.046-.32 1.498-.468a34 34 0 0 1-1.822 2.342c-.85 1.017-2.37 1.16-3.354.324"
      })]
    })]
  }));
};

const SvgTick = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M17.553 9.507a.75.75 0 0 0-1.106-1.014l-4.97 5.423L9.03 11.47a.75.75 0 0 0-1.06 1.06l2.778 2.779a1.05 1.05 0 0 0 1.517-.033z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M24 12c0 6.627-5.373 12-12 12S0 18.627 0 12 5.373 0 12 0s12 5.373 12 12m-1.5 0c0 5.799-4.701 10.5-10.5 10.5S1.5 17.799 1.5 12 6.201 1.5 12 1.5 22.5 6.201 22.5 12",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgTiktok = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12m4.66-16.964q.137.093.283.172c.634.328 1.252.428 1.557.394v2.557s-.87-.037-1.515-.215c-.9-.25-1.476-.635-1.476-.635s-.4-.275-.43-.294V14.3c0 .293-.075 1.028-.3 1.641a5 5 0 0 1-.83 1.435s-.553.713-1.524 1.192c-.809.399-1.529.42-1.815.43l-.061.001s-1.33.056-2.529-.792l-.006-.006v.006a5.1 5.1 0 0 1-1.073-1.052 5.1 5.1 0 0 1-.672-1.276v-.006c-.096-.297-.296-1.016-.266-1.71.048-1.223.442-1.976.547-2.164a5 5 0 0 1 1.06-1.36 4.55 4.55 0 0 1 1.664-.926 4.4 4.4 0 0 1 1.882-.153l-.003 2.623a2 2 0 0 0-.644-.106c-1.154 0-2.089.979-2.089 2.188 0 1.208.935 2.187 2.09 2.187.359 0 .712-.097 1.024-.281.3-.177.553-.428.738-.731s.294-.648.32-1.005v-.006q.003-.012.002-.022l.001-.017.001-.032q.007-.196.006-.397V4h2.477c-.004 0-.03.247.032.628h-.003c.075.46.278 1.117.822 1.764q.327.367.73.644",
      clipRule: "evenodd"
    })]
  }));
};

const SvgToken = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M12.382 1.854a.82.82 0 0 0-.801 0L3.136 6.606a.74.74 0 0 0-.386.643v9.502c0 .258.141.506.386.643l8.445 4.752c.247.139.554.139.801 0l8.445-4.751a.74.74 0 0 0 .386-.644V7.25a.74.74 0 0 0-.386-.643zm.736-1.307 8.444 4.751a2.24 2.24 0 0 1 1.151 1.95v9.503a2.24 2.24 0 0 1-1.15 1.95l-8.445 4.752a2.32 2.32 0 0 1-2.273 0l-8.444-4.751a2.24 2.24 0 0 1-1.151-1.95V7.248c0-.813.445-1.554 1.15-1.95L10.846.546a2.32 2.32 0 0 1 2.273 0M5.787 12c0-3.445 2.766-6.25 6.194-6.25s6.195 2.805 6.195 6.25-2.766 6.25-6.195 6.25c-3.428 0-6.194-2.806-6.194-6.25m6.194-4.75c-2.585 0-4.694 2.12-4.694 4.75s2.109 4.75 4.694 4.75 4.695-2.12 4.695-4.75-2.11-4.75-4.695-4.75",
      clipRule: "evenodd"
    })]
  }));
};

const SvgTouch = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M8.22 4.5a2 2 0 1 1 4 0v4.194q.241-.062.5-.063c.792 0 1.476.298 1.8.965.218-.082.454-.126.7-.126.627 0 1.163.315 1.53.765a2 2 0 0 1 2.948 1.761l.023 1.973.001.034.004.138a13 13 0 0 1-.005.643v.201h-.008c-.016.358-.05.787-.113 1.246-.167 1.197-.566 2.799-1.611 3.797-1.298 1.24-2.996 1.742-4.604 1.767-1.601.023-3.19-.425-4.33-1.186-.482-.321-.966-.872-1.416-1.475A25 25 0 0 1 6.245 17c-.911-1.542-1.77-3.237-2.323-4.37-.55-1.127.288-2.395 1.509-2.395.905 0 1.747.467 2.227 1.235l.563.9zm.75 10.485c-.444.12-.868-.203-1.128-.584l-1.456-2.136a1.13 1.13 0 0 0-.955-.53c-.145 0-.21.136-.16.237.545 1.12 1.384 2.773 2.265 4.264.442.747.887 1.44 1.305 2.001.431.578.789.953 1.046 1.124.859.573 2.141.954 3.476.934 1.326-.02 2.628-.434 3.59-1.352.651-.622 1.002-1.77 1.161-2.919.066-.474.095-.915.107-1.264v-2.525c0-.276 0-.738-.523-.738s-.528.577-.594.738a.44.44 0 0 1-.354.265c-.035.003-.1.003-.178.002-.314-.005-.611-.167-.727-.459a1.6 1.6 0 0 1-.124-.573.5.5 0 1 0-1 0v.265a.75.75 0 1 1-1.5 0v-1.104a.5.5 0 1 0-1 0v1.104a.75.75 0 1 1-1.5 0V4.5a.5.5 0 1 0-1 0l-.078 9.326c-.005.5-.188 1.029-.672 1.16",
      clipRule: "evenodd"
    })]
  }));
};

const SvgTrash = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M10 9.75a.75.75 0 0 1 .75.75v6a.75.75 0 0 1-1.5 0v-6a.75.75 0 0 1 .75-.75M14.75 10.5a.75.75 0 0 0-1.5 0v6a.75.75 0 0 0 1.5 0z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "m16.964 4.25-1.017-2.033a1.75 1.75 0 0 0-1.565-.967H9.618a1.75 1.75 0 0 0-1.565.967L7.036 4.25H2a.75.75 0 0 0 0 1.5h2.25V20A2.75 2.75 0 0 0 7 22.75h10A2.75 2.75 0 0 0 19.75 20V5.75H22a.75.75 0 0 0 0-1.5zm-7.346-1.5a.25.25 0 0 0-.224.138l-.68 1.362h6.573l-.681-1.362a.25.25 0 0 0-.224-.138zm-2.103 3H5.75V20c0 .69.56 1.25 1.25 1.25h10c.69 0 1.25-.56 1.25-1.25V5.75H7.515",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgUndo = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
      clipPath: "url(#undo_svg__a)",
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fill: "currentColor",
        d: "M20.935 19a.84.84 0 0 0-.602.263A10.47 10.47 0 0 1 12.75 22.5c-5.799 0-10.5-4.701-10.5-10.5S6.951 1.5 12.75 1.5c3.676 0 6.911 1.89 8.787 4.75H19.25a.75.75 0 0 0 0 1.5h4A.75.75 0 0 0 24 7V3a.75.75 0 0 0-1.5 0v2.003A11.99 11.99 0 0 0 12.75 0c-6.627 0-12 5.373-12 12s5.373 12 12 12c3.453 0 6.566-1.459 8.755-3.794.447-.476.082-1.206-.57-1.206"
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("defs", {
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("clipPath", {
        id: "undo_svg__a",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "M0 24h24V0H0z"
        })
      })
    })]
  }));
};

const SvgUpAndDownArrows = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
      fill: "currentColor",
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M18.75 1.848a.75.75 0 0 0-1.5 0v18.125l-1.68-1.96a.75.75 0 0 0-1.14.975l2.925 3.412.04.044a.75.75 0 0 0 1.21 0l.04-.044 2.925-3.412a.75.75 0 0 0-1.14-.976l-1.68 1.96zM5.25 22V4.028l-1.68 1.96a.75.75 0 0 1-1.14-.976l2.925-3.411.04-.045a.75.75 0 0 1 1.21 0l.04.045L9.57 5.012a.75.75 0 0 1-1.138.976L6.75 4.028V22a.75.75 0 0 1-1.5 0"
      })
    })]
  }));
};

const SvgUpArrowWithCircle = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "m15.53 10.72-3.25-3.25a.75.75 0 0 0-1.06 0l-3.25 3.25a.75.75 0 1 0 1.06 1.06L11 9.81V17a.75.75 0 0 0 1.5 0V9.81l1.97 1.97a.75.75 0 1 0 1.06-1.06"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M24 12c0 6.627-5.373 12-12 12S0 18.627 0 12 5.373 0 12 0s12 5.373 12 12m-1.5 0c0 5.799-4.701 10.5-10.5 10.5S1.5 17.799 1.5 12 6.201 1.5 12 1.5 22.5 6.201 22.5 12",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgUpgrade = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "m13.97 9.53-1.22-1.22v9.19a.75.75 0 0 1-1.5 0V8.31l-1.22 1.22a.75.75 0 1 1-1.06-1.06l2.358-2.359a.95.95 0 0 1 1.344 0L15.03 8.47a.75.75 0 0 1-1.06 1.06"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M5 2a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v20a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2zm11-.5h1a.5.5 0 0 1 .5.5v20a.5.5 0 0 1-.5.5H7a.5.5 0 0 1-.5-.5V2a.5.5 0 0 1 .5-.5h1c.173.299.5.5 1 .5h6.18c.37 0 .647-.201.82-.5",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgUpload = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M12.75 16.417a.75.75 0 0 1-1.5 0V3.462l-2.72 2.72A.75.75 0 1 1 7.47 5.12l3.858-3.859a.95.95 0 0 1 1.344 0l3.858 3.859a.75.75 0 0 1-1.06 1.06l-2.72-2.72z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M0 14.25a.75.75 0 1 1 1.5 0V21a.5.5 0 0 0 .5.5h20a.5.5 0 0 0 .5-.5v-6.75a.75.75 0 1 1 1.5 0V21a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2z"
      })]
    })]
  }));
};

const SvgUserProfile = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      fillRule: "evenodd",
      clipRule: "evenodd",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M12 12a4 4 0 1 0 0-8 4 4 0 0 0 0 8m0-1.5a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M20.303 20.663A11.97 11.97 0 0 0 23.999 12c0-6.628-5.372-12-12-12C5.373 0 0 5.372 0 12c0 3.346 1.37 6.372 3.579 8.549q.108.164.262.303a12.4 12.4 0 0 0 2.115 1.516A11.94 11.94 0 0 0 12 24c1.09.013 2.102-.136 3.024-.384a12 12 0 0 0 4.634-2.377q.246-.196.448-.372.109-.095.197-.203m.014-2.255A10.45 10.45 0 0 0 22.5 12c0-5.8-4.7-10.5-10.5-10.5C6.202 1.5 1.5 6.2 1.5 12c0 2.412.815 4.635 2.183 6.408l.5-1.166A7 7 0 0 1 10.615 13h2.769a7 7 0 0 1 6.434 4.242zm-1.161 1.275.006-.024a.4.4 0 0 0-.033-.216l-.69-1.61a5.5 5.5 0 0 0-5.055-3.333h-2.769a5.5 5.5 0 0 0-5.055 3.333l-.708 1.654a.4.4 0 0 0-.036.17 10.5 10.5 0 0 0 1.922 1.43c1.3.734 3.067 1.384 5.27 1.412.908 0 1.789-.116 2.629-.334 1.753-.471 3.148-1.357 4.072-2.089q.23-.19.447-.393"
      })]
    })]
  }));
};

const SvgUserSymbol = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M15.424 7a3.333 3.333 0 1 1-6.666 0 3.333 3.333 0 0 1 6.666 0m1.667 0a5 5 0 1 1-10 0 5 5 0 0 1 10 0m-5.91 6.222C6.664 13.222 3 16.795 3 21.202c0 .44.366.798.818.798a.81.81 0 0 0 .818-.798c0-3.526 2.93-6.384 6.546-6.384h1.636c3.615 0 6.546 2.858 6.546 6.384 0 .44.366.798.818.798a.81.81 0 0 0 .818-.798c0-4.407-3.663-7.98-8.182-7.98z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgValueAddedService = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M3.046 8.21q.021.046.052.088l8.086 11.415a1 1 0 0 0 1.632 0l2.68-3.783a4 4 0 1 0 4.162-5.876l1.244-1.756a.5.5 0 0 0 .055-.095l.006-.013a.5.5 0 0 0-.087-.52h-.001l-3.497-3.997-.01-.01A.5.5 0 0 0 17 3.5H7a.5.5 0 0 0-.38.174L3.132 7.663a.5.5 0 0 0-.085.547m15.398 1.828 1.09-1.538h-4.216l-2.546 9.545 2.306-3.255a4 4 0 0 1 3.366-4.751M7.616 4.5h-.39l-2.624 3h3.814zm1.035 0 .616 2.31L11 4.5zM13 4.5l1.733 2.31.616-2.31zm3.384 0-.8 3h3.814l-2.625-3zm-5.156 13.545L4.467 8.5h4.216zM14 7.5l-2-2.667L10 7.5zm-4.283 1L12 17.06l2.283-8.56zM19.5 12a.5.5 0 0 0-1 0v1.5H17a.5.5 0 0 0 0 1h1.5V16a.5.5 0 0 0 1 0v-1.5H21a.5.5 0 0 0 0-1h-1.5z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgVerticalMore = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
      fill: "currentColor",
      fillRule: "evenodd",
      clipRule: "evenodd",
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M15 21a3 3 0 1 0-6 0 3 3 0 0 0 6 0m-1.5 0a1.5 1.5 0 1 0-3 0 1.5 1.5 0 0 0 3 0M15 12a3 3 0 1 0-6 0 3 3 0 0 0 6 0m-1.5 0a1.5 1.5 0 1 0-3 0 1.5 1.5 0 0 0 3 0M12 0a3 3 0 1 1 0 6 3 3 0 0 1 0-6m0 1.5a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3"
      })
    })]
  }));
};

const SvgVideo = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M3.21 1h17.46c1.22 0 2.21.99 2.21 2.21v17.46c0 1.22-.99 2.21-2.21 2.21H3.21A2.21 2.21 0 0 1 1 20.67V3.21C1 1.99 1.99 1 3.21 1m17.46 20.38c.39 0 .71-.32.71-.71V3.21c0-.39-.32-.71-.71-.71H3.21c-.39 0-.71.32-.71.71v17.46c0 .39.32.71.71.71zM10.36 7l5.61 3.65c.44.29.7.76.7 1.29s-.26 1.01-.7 1.29l-5.61 3.65c-.26.17-.55.25-.84.25-.25 0-.5-.07-.73-.19-.49-.27-.8-.79-.8-1.35v-7.3c0-.56.3-1.08.8-1.35s1.1-.25 1.57.06m-.85 1.26-.02 7.33h.01l5.66-3.62-5.61-3.71h-.04",
      clipRule: "evenodd"
    })]
  }));
};

const SvgVoice = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M12 .5a4 4 0 0 0-4 4v7a4 4 0 0 0 8 0v-7a4 4 0 0 0-4-4m2.5 11v-7a2.5 2.5 0 0 0-5 0v7a2.5 2.5 0 0 0 5 0",
        clipRule: "evenodd"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M12.75 18.965a8 8 0 0 0 7.215-7.216c.039-.412-.3-.749-.715-.749-.414 0-.745.337-.793.749a6.501 6.501 0 0 1-12.914 0C5.496 11.337 5.164 11 4.75 11s-.754.337-.715.75a8 8 0 0 0 7.215 7.215V22.5a.75.75 0 0 0 1.5 0z"
      })]
    })]
  }));
};

const SvgVoucher = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M11 9a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0M9.5 9a1 1 0 1 1-2 0 1 1 0 0 1 2 0M8.5 17.5a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5m0-1.5a1 1 0 1 0 0-2 1 1 0 0 0 0 2",
        clipRule: "evenodd"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M13.75 8.5a.75.75 0 0 0-1.5 0v7a.75.75 0 0 0 1.5 0z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M0 3v5.126a4.002 4.002 0 0 1 0 7.748V21h7.085a1.5 1.5 0 0 1 2.83 0H24V3H9.915a1.5 1.5 0 0 1-2.83 0zm4.5 9c0-2.139-1.22-3.99-3-4.9V4.5h4.764a3 3 0 0 0 2.236 1 3 3 0 0 0 2.236-1H22.5v15H10.736a3 3 0 0 0-2.236-1 3 3 0 0 0-2.236 1H1.5v-2.6c1.78-.91 3-2.761 3-4.9",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgWallet = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "#E4E4E4",
      d: "M0 0h24v24H0z"
    })]
  }));
};

const SvgWearables = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M12 8.25a.75.75 0 0 1 .75.75v2.45H14a.75.75 0 0 1 0 1.5h-1.8a.95.95 0 0 1-.95-.95V9a.75.75 0 0 1 .75-.75"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M7.85.821 7.274 4H6a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h1.273l.578 3.179a1 1 0 0 0 .984.821h6.33a1 1 0 0 0 .984-.821L16.727 20H18a2 2 0 0 0 2-2v-7a1 1 0 0 0 1-1V8a1 1 0 0 0-1-1V6a2 2 0 0 0-2-2h-1.273L16.15.821A1 1 0 0 0 15.165 0h-6.33a1 1 0 0 0-.984.821m1.402.679L8.797 4h6.406l-.455-2.5zM8.797 20l.455 2.5h5.496l.455-2.5zM18 18.5a.5.5 0 0 0 .5-.5V6a.5.5 0 0 0-.5-.5H6a.5.5 0 0 0-.5.5v12a.5.5 0 0 0 .5.5z",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgWebBrowsing = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M24 12c0-6.627-5.373-12-12-12S0 5.373 0 12s5.373 12 12 12 12-5.373 12-12m-9.099 7.814C13.895 21.828 12.783 22.5 12 22.5s-1.895-.673-2.901-2.686c-.884-1.767-1.494-4.243-1.587-7.064h8.976c-.093 2.821-.703 5.297-1.587 7.064m1.587-8.564H7.512c.093-2.821.703-5.297 1.587-7.064C10.105 2.173 11.217 1.5 12 1.5s1.895.673 2.901 2.686c.884 1.767 1.494 4.243 1.587 7.064m1.5 1.5c-.118 3.832-1.135 7.178-2.635 9.203 3.928-1.322 6.817-4.906 7.12-9.203zm4.486-1.5h-4.486c-.118-3.833-1.135-7.178-2.635-9.203 3.928 1.322 6.817 4.906 7.12 9.203m-16.462 0c.118-3.833 1.135-7.178 2.635-9.203C4.72 3.369 1.83 6.953 1.527 11.25zm-4.486 1.5c.304 4.297 3.193 7.88 7.121 9.203-1.5-2.025-2.517-5.37-2.635-9.203z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgWhatsapp = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12m-6.915-7.974L4.003 20l3.973-1.084a8 8 0 1 0-2.891-2.89m3.731-7.7a.8.8 0 0 1 .297-.08q.161-.011.322-.004l.13.013c.127.015.267.092.314.2q.358.81.695 1.632c.05.121.02.277-.075.429a4 4 0 0 1-.21.298c-.09.116-.285.328-.285.328s-.08.095-.049.212a.7.7 0 0 0 .082.164l.047.076a5 5 0 0 0 .893 1.09q.104.104.213.202c.375.33.799.6 1.256.8l.004.001.202.087q.074.033.153.053a.28.28 0 0 0 .294-.104c.579-.7.632-.746.636-.746v.001a.39.39 0 0 1 .303-.101.4.4 0 0 1 .141.033c.425.193 1.121.496 1.121.496l.466.21c.077.037.148.126.152.211v.01a2.228 2.228 0 0 1-.162.875 1 1 0 0 1-.168.242c-.09.093-.156.15-.264.23q-.1.073-.1.072-.15.095-.306.176a1.6 1.6 0 0 1-.744.189c-.123.006-.245.013-.368.006l-.455-.07a7.56 7.56 0 0 1-3.072-1.636 10 10 0 0 1-.435-.418l-.083-.083c-.711-.708-1.25-1.472-1.577-2.194a2.8 2.8 0 0 1-.264-1.13 2.18 2.18 0 0 1 .478-1.377c.05-.065.101-.134.183-.21q.104-.108.235-.183",
      clipRule: "evenodd"
    })]
  }));
};

const SvgWifi = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M12.024 5c-3.609 0-6.753 1.48-8.98 3.848a.905.905 0 0 0-.162 1.028.97.97 0 0 0 .883.542c.283 0 .547-.12.737-.317a10.39 10.39 0 0 1 7.522-3.194 10.27 10.27 0 0 1 7.474 3.194c.189.197.453.317.736.317a.97.97 0 0 0 .884-.542.91.91 0 0 0-.162-1.028C18.74 6.48 15.634 5 12.024 5m0 3.9c-2.687 0-4.83 1.097-6.565 2.56a.93.93 0 0 0-.272 1.08c.143.347.49.609.931.609.23 0 .453-.078.633-.216 1.492-1.15 3.109-2.125 5.273-2.125 2.165 0 3.781.975 5.273 2.125.18.138.403.216.633.216a.99.99 0 0 0 .931-.609.93.93 0 0 0-.272-1.08c-1.735-1.463-3.878-2.56-6.565-2.56m0 3.512a5.15 5.15 0 0 0-3.686 1.54.86.86 0 0 0-.159 1.023.99.99 0 0 0 .886.514c.298 0 .564-.128.76-.31a3.22 3.22 0 0 1 2.2-.86c.852 0 1.626.327 2.2.86.194.182.46.31.758.31.391 0 .724-.208.886-.514a.86.86 0 0 0-.159-1.023 5.15 5.15 0 0 0-3.686-1.54m0 3.51c-.855 0-1.558.684-1.558 1.54 0 .855.703 1.538 1.558 1.538s1.558-.683 1.558-1.539-.703-1.538-1.558-1.538",
      clipRule: "evenodd"
    })]
  }));
};

const SvgXTwitter = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12M9.679 5.5H5.5l4.924 7.256L5.5 18.5h1.857l3.887-4.535 3.077 4.535H18.5l-4.924-7.256L18.5 5.5h-1.857l-3.887 4.535zM8.884 7H8.33l6.785 10h.553z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgYellobucks = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("g", {
      fill: "currentColor",
      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        d: "M14.296 14.221h1.92c.69 0 1.042-.44 1.042-.959 0-.415-.239-.649-.753-.649h-1.933zM14.873 10.902h1.72c.614 0 .966-.376.966-.869 0-.428-.264-.687-.678-.687h-1.745z"
      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fillRule: "evenodd",
        d: "M13.14 2.1a2.92 2.92 0 0 1 2.823.756l5.181 5.181a2.92 2.92 0 0 1 .756 2.823l-1.896 7.078a2.92 2.92 0 0 1-2.066 2.066L10.86 21.9a2.92 2.92 0 0 1-2.823-.756l-5.181-5.181A2.92 2.92 0 0 1 2.1 13.14l1.897-7.078a2.92 2.92 0 0 1 2.065-2.066zm6.79 7.492c0 .972-.601 1.764-1.53 2.127.728.298 1.13.946 1.13 1.802 0 1.712-1.62 2.528-3.214 2.528h-4.544l.85-4.971-1.307 2.363c-1.245 2.25-2.37 3.486-5.383 5.11l-1.518-1.577c.933-.398 2.854-1.686 3.716-2.691L5.907 7.517h2.741l1.156 4.27 2.192-4.27h5.274c1.544 0 2.66.765 2.66 2.075",
        clipRule: "evenodd"
      })]
    })]
  }));
};

const SvgYoutube = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12m8.12-17.5c.203.219.348.481.422.765.209.763.458 2.166.458 4.485s-.25 3.722-.458 4.485a1.8 1.8 0 0 1-.421.765 1.9 1.9 0 0 1-.744.49c-2.636.98-6.766 1.01-7.32 1.01h-.113c-.555 0-4.685-.03-7.32-1.01a1.9 1.9 0 0 1-.745-.49 1.8 1.8 0 0 1-.421-.765C3.249 15.472 3 14.069 3 11.75s.25-3.722.458-4.485c.074-.284.218-.546.421-.765s.459-.387.744-.49C7.353 5 11.7 5 11.995 5h.01c.295 0 4.642 0 7.372 1.01.285.103.54.271.744.49m-9.229 7.97 3.857-2.466a.3.3 0 0 0 .108-.109.29.29 0 0 0 0-.29.3.3 0 0 0-.108-.11L10.891 9.03a.33.33 0 0 0-.453.097.3.3 0 0 0-.045.157v4.932q0 .084.044.158.046.072.125.111.072.036.152.039a.3.3 0 0 0 .177-.054",
      clipRule: "evenodd"
    })]
  }));
};

const SvgZapper = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "1rem",
    height: "1rem",
    fill: "none",
    viewBox: "0 0 24 24",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
      fill: "currentColor",
      fillRule: "evenodd",
      d: "M12 23c6.075 0 11-4.925 11-11S18.075 1 12 1 1 5.925 1 12s4.925 11 11 11m1.572-11h4.32l-1.963 2.75H8.464L10.43 12H6.107l1.965-2.75h7.464z",
      clipRule: "evenodd"
    })]
  }));
};

const SvgMtnLogo = _a => {
  var {
      title,
      titleId
    } = _a,
    props = __rest(_a, ["title", "titleId"]);
  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: "5em",
    height: "5em",
    fill: "none",
    viewBox: "0 0 96 48",
    "aria-labelledby": titleId
  }, props, {
    children: [title ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("title", {
      id: titleId,
      children: title
    }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("g", {
      clipPath: "url(#mtn-logo_svg__a)",
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
        fill: "currentColor",
        d: "M48 0C21.49 0 0 10.745 0 24s21.49 24 48 24 48-10.745 48-24S74.51 0 48 0m0 44.211C23.583 44.211 3.789 35.162 3.789 24S23.583 3.789 48 3.789 92.211 12.838 92.211 24 72.417 44.211 48 44.211M41.947 19.79V16h13.541v3.79h-4.875V32h-3.79V19.79zM71.833 16v16h-3.788l-6.873-9.525V32h-3.789V16h3.79l6.871 9.525V16zM24.054 32V16h3.789l4.21 6.475L36.263 16h3.787v16h-3.787v-9.05l-2.874 4.418h-2.672l-2.874-4.418V32z"
      })
    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("defs", {
      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("clipPath", {
        id: "mtn-logo_svg__a",
        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path", {
          fill: "#fff",
          d: "M0 0h96v48H0z"
        })
      })
    })]
  }));
};




/***/ }),

/***/ "./node_modules/stylis/src/Enum.js":
/*!*****************************************!*\
  !*** ./node_modules/stylis/src/Enum.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CHARSET: () => (/* binding */ CHARSET),
/* harmony export */   COMMENT: () => (/* binding */ COMMENT),
/* harmony export */   COUNTER_STYLE: () => (/* binding */ COUNTER_STYLE),
/* harmony export */   DECLARATION: () => (/* binding */ DECLARATION),
/* harmony export */   DOCUMENT: () => (/* binding */ DOCUMENT),
/* harmony export */   FONT_FACE: () => (/* binding */ FONT_FACE),
/* harmony export */   FONT_FEATURE_VALUES: () => (/* binding */ FONT_FEATURE_VALUES),
/* harmony export */   IMPORT: () => (/* binding */ IMPORT),
/* harmony export */   KEYFRAMES: () => (/* binding */ KEYFRAMES),
/* harmony export */   LAYER: () => (/* binding */ LAYER),
/* harmony export */   MEDIA: () => (/* binding */ MEDIA),
/* harmony export */   MOZ: () => (/* binding */ MOZ),
/* harmony export */   MS: () => (/* binding */ MS),
/* harmony export */   NAMESPACE: () => (/* binding */ NAMESPACE),
/* harmony export */   PAGE: () => (/* binding */ PAGE),
/* harmony export */   RULESET: () => (/* binding */ RULESET),
/* harmony export */   SUPPORTS: () => (/* binding */ SUPPORTS),
/* harmony export */   VIEWPORT: () => (/* binding */ VIEWPORT),
/* harmony export */   WEBKIT: () => (/* binding */ WEBKIT)
/* harmony export */ });
var MS = '-ms-'
var MOZ = '-moz-'
var WEBKIT = '-webkit-'

var COMMENT = 'comm'
var RULESET = 'rule'
var DECLARATION = 'decl'

var PAGE = '@page'
var MEDIA = '@media'
var IMPORT = '@import'
var CHARSET = '@charset'
var VIEWPORT = '@viewport'
var SUPPORTS = '@supports'
var DOCUMENT = '@document'
var NAMESPACE = '@namespace'
var KEYFRAMES = '@keyframes'
var FONT_FACE = '@font-face'
var COUNTER_STYLE = '@counter-style'
var FONT_FEATURE_VALUES = '@font-feature-values'
var LAYER = '@layer'


/***/ }),

/***/ "./node_modules/stylis/src/Middleware.js":
/*!***********************************************!*\
  !*** ./node_modules/stylis/src/Middleware.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   middleware: () => (/* binding */ middleware),
/* harmony export */   namespace: () => (/* binding */ namespace),
/* harmony export */   prefixer: () => (/* binding */ prefixer),
/* harmony export */   rulesheet: () => (/* binding */ rulesheet)
/* harmony export */ });
/* harmony import */ var _Enum_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Enum.js */ "./node_modules/stylis/src/Enum.js");
/* harmony import */ var _Utility_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Utility.js */ "./node_modules/stylis/src/Utility.js");
/* harmony import */ var _Tokenizer_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Tokenizer.js */ "./node_modules/stylis/src/Tokenizer.js");
/* harmony import */ var _Serializer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Serializer.js */ "./node_modules/stylis/src/Serializer.js");
/* harmony import */ var _Prefixer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Prefixer.js */ "./node_modules/stylis/src/Prefixer.js");






/**
 * @param {function[]} collection
 * @return {function}
 */
function middleware (collection) {
	var length = (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.sizeof)(collection)

	return function (element, index, children, callback) {
		var output = ''

		for (var i = 0; i < length; i++)
			output += collection[i](element, index, children, callback) || ''

		return output
	}
}

/**
 * @param {function} callback
 * @return {function}
 */
function rulesheet (callback) {
	return function (element) {
		if (!element.root)
			if (element = element.return)
				callback(element)
	}
}

/**
 * @param {object} element
 * @param {number} index
 * @param {object[]} children
 * @param {function} callback
 */
function prefixer (element, index, children, callback) {
	if (element.length > -1)
		if (!element.return)
			switch (element.type) {
				case _Enum_js__WEBPACK_IMPORTED_MODULE_1__.DECLARATION: element.return = (0,_Prefixer_js__WEBPACK_IMPORTED_MODULE_2__.prefix)(element.value, element.length, children)
					return
				case _Enum_js__WEBPACK_IMPORTED_MODULE_1__.KEYFRAMES:
					return (0,_Serializer_js__WEBPACK_IMPORTED_MODULE_3__.serialize)([(0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_4__.copy)(element, {value: (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)(element.value, '@', '@' + _Enum_js__WEBPACK_IMPORTED_MODULE_1__.WEBKIT)})], callback)
				case _Enum_js__WEBPACK_IMPORTED_MODULE_1__.RULESET:
					if (element.length)
						return (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.combine)(children = element.props, function (value) {
							switch ((0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.match)(value, callback = /(::plac\w+|:read-\w+)/)) {
								// :read-(only|write)
								case ':read-only': case ':read-write':
									(0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_4__.lift)((0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_4__.copy)(element, {props: [(0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)(value, /:(read-\w+)/, ':' + _Enum_js__WEBPACK_IMPORTED_MODULE_1__.MOZ + '$1')]}))
									;(0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_4__.lift)((0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_4__.copy)(element, {props: [value]}))
									;(0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.assign)(element, {props: (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.filter)(children, callback)})
									break
								// :placeholder
								case '::placeholder':
									;(0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_4__.lift)((0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_4__.copy)(element, {props: [(0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)(value, /:(plac\w+)/, ':' + _Enum_js__WEBPACK_IMPORTED_MODULE_1__.WEBKIT + 'input-$1')]}))
									;(0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_4__.lift)((0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_4__.copy)(element, {props: [(0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)(value, /:(plac\w+)/, ':' + _Enum_js__WEBPACK_IMPORTED_MODULE_1__.MOZ + '$1')]}))
									;(0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_4__.lift)((0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_4__.copy)(element, {props: [(0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)(value, /:(plac\w+)/, _Enum_js__WEBPACK_IMPORTED_MODULE_1__.MS + 'input-$1')]}))
									;(0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_4__.lift)((0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_4__.copy)(element, {props: [value]}))
									;(0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.assign)(element, {props: (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.filter)(children, callback)})
									break
							}

							return ''
						})
			}
}

/**
 * @param {object} element
 * @param {number} index
 * @param {object[]} children
 */
function namespace (element) {
	switch (element.type) {
		case _Enum_js__WEBPACK_IMPORTED_MODULE_1__.RULESET:
			element.props = element.props.map(function (value) {
				return (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.combine)((0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_4__.tokenize)(value), function (value, index, children) {
					switch ((0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.charat)(value, 0)) {
						// \f
						case 12:
							return (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.substr)(value, 1, (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.strlen)(value))
						// \0 ( + > ~
						case 0: case 40: case 43: case 62: case 126:
							return value
						// :
						case 58:
							if (children[++index] === 'global')
								children[index] = '', children[++index] = '\f' + (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.substr)(children[index], index = 1, -1)
						// \s
						case 32:
							return index === 1 ? '' : value
						default:
							switch (index) {
								case 0: element = value
									return (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.sizeof)(children) > 1 ? '' : value
								case index = (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.sizeof)(children) - 1: case 2:
									return index === 2 ? value + element + element : value + element
								default:
									return value
							}
					}
				})
			})
	}
}


/***/ }),

/***/ "./node_modules/stylis/src/Parser.js":
/*!*******************************************!*\
  !*** ./node_modules/stylis/src/Parser.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   comment: () => (/* binding */ comment),
/* harmony export */   compile: () => (/* binding */ compile),
/* harmony export */   declaration: () => (/* binding */ declaration),
/* harmony export */   parse: () => (/* binding */ parse),
/* harmony export */   ruleset: () => (/* binding */ ruleset)
/* harmony export */ });
/* harmony import */ var _Enum_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Enum.js */ "./node_modules/stylis/src/Enum.js");
/* harmony import */ var _Utility_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Utility.js */ "./node_modules/stylis/src/Utility.js");
/* harmony import */ var _Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tokenizer.js */ "./node_modules/stylis/src/Tokenizer.js");




/**
 * @param {string} value
 * @return {object[]}
 */
function compile (value) {
	return (0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__.dealloc)(parse('', null, null, null, [''], value = (0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__.alloc)(value), 0, [0], value))
}

/**
 * @param {string} value
 * @param {object} root
 * @param {object?} parent
 * @param {string[]} rule
 * @param {string[]} rules
 * @param {string[]} rulesets
 * @param {number[]} pseudo
 * @param {number[]} points
 * @param {string[]} declarations
 * @return {object}
 */
function parse (value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {
	var index = 0
	var offset = 0
	var length = pseudo
	var atrule = 0
	var property = 0
	var previous = 0
	var variable = 1
	var scanning = 1
	var ampersand = 1
	var character = 0
	var type = ''
	var props = rules
	var children = rulesets
	var reference = rule
	var characters = type

	while (scanning)
		switch (previous = character, character = (0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__.next)()) {
			// (
			case 40:
				if (previous != 108 && (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__.charat)(characters, length - 1) == 58) {
					if ((0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__.indexof)(characters += (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__.replace)((0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__.delimit)(character), '&', '&\f'), '&\f', (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__.abs)(index ? points[index - 1] : 0)) != -1)
						ampersand = -1
					break
				}
			// " ' [
			case 34: case 39: case 91:
				characters += (0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__.delimit)(character)
				break
			// \t \n \r \s
			case 9: case 10: case 13: case 32:
				characters += (0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__.whitespace)(previous)
				break
			// \
			case 92:
				characters += (0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__.escaping)((0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__.caret)() - 1, 7)
				continue
			// /
			case 47:
				switch ((0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__.peek)()) {
					case 42: case 47:
						;(0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__.append)(comment((0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__.commenter)((0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__.next)(), (0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__.caret)()), root, parent, declarations), declarations)
						break
					default:
						characters += '/'
				}
				break
			// {
			case 123 * variable:
				points[index++] = (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__.strlen)(characters) * ampersand
			// } ; \0
			case 125 * variable: case 59: case 0:
				switch (character) {
					// \0 }
					case 0: case 125: scanning = 0
					// ;
					case 59 + offset: if (ampersand == -1) characters = (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__.replace)(characters, /\f/g, '')
						if (property > 0 && ((0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__.strlen)(characters) - length))
							(0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__.append)(property > 32 ? declaration(characters + ';', rule, parent, length - 1, declarations) : declaration((0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__.replace)(characters, ' ', '') + ';', rule, parent, length - 2, declarations), declarations)
						break
					// @ ;
					case 59: characters += ';'
					// { rule/at-rule
					default:
						;(0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__.append)(reference = ruleset(characters, root, parent, index, offset, rules, points, type, props = [], children = [], length, rulesets), rulesets)

						if (character === 123)
							if (offset === 0)
								parse(characters, root, reference, reference, props, rulesets, length, points, children)
							else
								switch (atrule === 99 && (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__.charat)(characters, 3) === 110 ? 100 : atrule) {
									// d l m s
									case 100: case 108: case 109: case 115:
										parse(value, reference, reference, rule && (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__.append)(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length, children), children), rules, children, length, points, rule ? props : children)
										break
									default:
										parse(characters, reference, reference, reference, [''], children, 0, points, children)
								}
				}

				index = offset = property = 0, variable = ampersand = 1, type = characters = '', length = pseudo
				break
			// :
			case 58:
				length = 1 + (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__.strlen)(characters), property = previous
			default:
				if (variable < 1)
					if (character == 123)
						--variable
					else if (character == 125 && variable++ == 0 && (0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__.prev)() == 125)
						continue

				switch (characters += (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__.from)(character), character * variable) {
					// &
					case 38:
						ampersand = offset > 0 ? 1 : (characters += '\f', -1)
						break
					// ,
					case 44:
						points[index++] = ((0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__.strlen)(characters) - 1) * ampersand, ampersand = 1
						break
					// @
					case 64:
						// -
						if ((0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__.peek)() === 45)
							characters += (0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__.delimit)((0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__.next)())

						atrule = (0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__.peek)(), offset = length = (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__.strlen)(type = characters += (0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__.identifier)((0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__.caret)())), character++
						break
					// -
					case 45:
						if (previous === 45 && (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__.strlen)(characters) == 2)
							variable = 0
				}
		}

	return rulesets
}

/**
 * @param {string} value
 * @param {object} root
 * @param {object?} parent
 * @param {number} index
 * @param {number} offset
 * @param {string[]} rules
 * @param {number[]} points
 * @param {string} type
 * @param {string[]} props
 * @param {string[]} children
 * @param {number} length
 * @param {object[]} siblings
 * @return {object}
 */
function ruleset (value, root, parent, index, offset, rules, points, type, props, children, length, siblings) {
	var post = offset - 1
	var rule = offset === 0 ? rules : ['']
	var size = (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__.sizeof)(rule)

	for (var i = 0, j = 0, k = 0; i < index; ++i)
		for (var x = 0, y = (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__.substr)(value, post + 1, post = (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__.abs)(j = points[i])), z = value; x < size; ++x)
			if (z = (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__.trim)(j > 0 ? rule[x] + ' ' + y : (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__.replace)(y, /&\f/g, rule[x])))
				props[k++] = z

	return (0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__.node)(value, root, parent, offset === 0 ? _Enum_js__WEBPACK_IMPORTED_MODULE_2__.RULESET : type, props, children, length, siblings)
}

/**
 * @param {number} value
 * @param {object} root
 * @param {object?} parent
 * @param {object[]} siblings
 * @return {object}
 */
function comment (value, root, parent, siblings) {
	return (0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__.node)(value, root, parent, _Enum_js__WEBPACK_IMPORTED_MODULE_2__.COMMENT, (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__.from)((0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__.char)()), (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__.substr)(value, 2, -2), 0, siblings)
}

/**
 * @param {string} value
 * @param {object} root
 * @param {object?} parent
 * @param {number} length
 * @param {object[]} siblings
 * @return {object}
 */
function declaration (value, root, parent, length, siblings) {
	return (0,_Tokenizer_js__WEBPACK_IMPORTED_MODULE_0__.node)(value, root, parent, _Enum_js__WEBPACK_IMPORTED_MODULE_2__.DECLARATION, (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__.substr)(value, 0, length), (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__.substr)(value, length + 1, -1), length, siblings)
}


/***/ }),

/***/ "./node_modules/stylis/src/Prefixer.js":
/*!*********************************************!*\
  !*** ./node_modules/stylis/src/Prefixer.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   prefix: () => (/* binding */ prefix)
/* harmony export */ });
/* harmony import */ var _Enum_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Enum.js */ "./node_modules/stylis/src/Enum.js");
/* harmony import */ var _Utility_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Utility.js */ "./node_modules/stylis/src/Utility.js");



/**
 * @param {string} value
 * @param {number} length
 * @param {object[]} children
 * @return {string}
 */
function prefix (value, length, children) {
	switch ((0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.hash)(value, length)) {
		// color-adjust
		case 5103:
			return _Enum_js__WEBPACK_IMPORTED_MODULE_1__.WEBKIT + 'print-' + value + value
		// animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)
		case 5737: case 4201: case 3177: case 3433: case 1641: case 4457: case 2921:
		// text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break
		case 5572: case 6356: case 5844: case 3191: case 6645: case 3005:
		// mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,
		case 6391: case 5879: case 5623: case 6135: case 4599: case 4855:
		// background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)
		case 4215: case 6389: case 5109: case 5365: case 5621: case 3829:
			return _Enum_js__WEBPACK_IMPORTED_MODULE_1__.WEBKIT + value + value
		// tab-size
		case 4789:
			return _Enum_js__WEBPACK_IMPORTED_MODULE_1__.MOZ + value + value
		// appearance, user-select, transform, hyphens, text-size-adjust
		case 5349: case 4246: case 4810: case 6968: case 2756:
			return _Enum_js__WEBPACK_IMPORTED_MODULE_1__.WEBKIT + value + _Enum_js__WEBPACK_IMPORTED_MODULE_1__.MOZ + value + _Enum_js__WEBPACK_IMPORTED_MODULE_1__.MS + value + value
		// writing-mode
		case 5936:
			switch ((0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.charat)(value, length + 11)) {
				// vertical-l(r)
				case 114:
					return _Enum_js__WEBPACK_IMPORTED_MODULE_1__.WEBKIT + value + _Enum_js__WEBPACK_IMPORTED_MODULE_1__.MS + (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)(value, /[svh]\w+-[tblr]{2}/, 'tb') + value
				// vertical-r(l)
				case 108:
					return _Enum_js__WEBPACK_IMPORTED_MODULE_1__.WEBKIT + value + _Enum_js__WEBPACK_IMPORTED_MODULE_1__.MS + (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)(value, /[svh]\w+-[tblr]{2}/, 'tb-rl') + value
				// horizontal(-)tb
				case 45:
					return _Enum_js__WEBPACK_IMPORTED_MODULE_1__.WEBKIT + value + _Enum_js__WEBPACK_IMPORTED_MODULE_1__.MS + (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)(value, /[svh]\w+-[tblr]{2}/, 'lr') + value
				// default: fallthrough to below
			}
		// flex, flex-direction, scroll-snap-type, writing-mode
		case 6828: case 4268: case 2903:
			return _Enum_js__WEBPACK_IMPORTED_MODULE_1__.WEBKIT + value + _Enum_js__WEBPACK_IMPORTED_MODULE_1__.MS + value + value
		// order
		case 6165:
			return _Enum_js__WEBPACK_IMPORTED_MODULE_1__.WEBKIT + value + _Enum_js__WEBPACK_IMPORTED_MODULE_1__.MS + 'flex-' + value + value
		// align-items
		case 5187:
			return _Enum_js__WEBPACK_IMPORTED_MODULE_1__.WEBKIT + value + (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)(value, /(\w+).+(:[^]+)/, _Enum_js__WEBPACK_IMPORTED_MODULE_1__.WEBKIT + 'box-$1$2' + _Enum_js__WEBPACK_IMPORTED_MODULE_1__.MS + 'flex-$1$2') + value
		// align-self
		case 5443:
			return _Enum_js__WEBPACK_IMPORTED_MODULE_1__.WEBKIT + value + _Enum_js__WEBPACK_IMPORTED_MODULE_1__.MS + 'flex-item-' + (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)(value, /flex-|-self/g, '') + (!(0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.match)(value, /flex-|baseline/) ? _Enum_js__WEBPACK_IMPORTED_MODULE_1__.MS + 'grid-row-' + (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)(value, /flex-|-self/g, '') : '') + value
		// align-content
		case 4675:
			return _Enum_js__WEBPACK_IMPORTED_MODULE_1__.WEBKIT + value + _Enum_js__WEBPACK_IMPORTED_MODULE_1__.MS + 'flex-line-pack' + (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)(value, /align-content|flex-|-self/g, '') + value
		// flex-shrink
		case 5548:
			return _Enum_js__WEBPACK_IMPORTED_MODULE_1__.WEBKIT + value + _Enum_js__WEBPACK_IMPORTED_MODULE_1__.MS + (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)(value, 'shrink', 'negative') + value
		// flex-basis
		case 5292:
			return _Enum_js__WEBPACK_IMPORTED_MODULE_1__.WEBKIT + value + _Enum_js__WEBPACK_IMPORTED_MODULE_1__.MS + (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)(value, 'basis', 'preferred-size') + value
		// flex-grow
		case 6060:
			return _Enum_js__WEBPACK_IMPORTED_MODULE_1__.WEBKIT + 'box-' + (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)(value, '-grow', '') + _Enum_js__WEBPACK_IMPORTED_MODULE_1__.WEBKIT + value + _Enum_js__WEBPACK_IMPORTED_MODULE_1__.MS + (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)(value, 'grow', 'positive') + value
		// transition
		case 4554:
			return _Enum_js__WEBPACK_IMPORTED_MODULE_1__.WEBKIT + (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)(value, /([^-])(transform)/g, '$1' + _Enum_js__WEBPACK_IMPORTED_MODULE_1__.WEBKIT + '$2') + value
		// cursor
		case 6187:
			return (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)((0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)((0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)(value, /(zoom-|grab)/, _Enum_js__WEBPACK_IMPORTED_MODULE_1__.WEBKIT + '$1'), /(image-set)/, _Enum_js__WEBPACK_IMPORTED_MODULE_1__.WEBKIT + '$1'), value, '') + value
		// background, background-image
		case 5495: case 3959:
			return (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)(value, /(image-set\([^]*)/, _Enum_js__WEBPACK_IMPORTED_MODULE_1__.WEBKIT + '$1' + '$`$1')
		// justify-content
		case 4968:
			return (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)((0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)(value, /(.+:)(flex-)?(.*)/, _Enum_js__WEBPACK_IMPORTED_MODULE_1__.WEBKIT + 'box-pack:$3' + _Enum_js__WEBPACK_IMPORTED_MODULE_1__.MS + 'flex-pack:$3'), /s.+-b[^;]+/, 'justify') + _Enum_js__WEBPACK_IMPORTED_MODULE_1__.WEBKIT + value + value
		// justify-self
		case 4200:
			if (!(0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.match)(value, /flex-|baseline/)) return _Enum_js__WEBPACK_IMPORTED_MODULE_1__.MS + 'grid-column-align' + (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.substr)(value, length) + value
			break
		// grid-template-(columns|rows)
		case 2592: case 3360:
			return _Enum_js__WEBPACK_IMPORTED_MODULE_1__.MS + (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)(value, 'template-', '') + value
		// grid-(row|column)-start
		case 4384: case 3616:
			if (children && children.some(function (element, index) { return length = index, (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.match)(element.props, /grid-\w+-end/) })) {
				return ~(0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.indexof)(value + (children = children[length].value), 'span', 0) ? value : (_Enum_js__WEBPACK_IMPORTED_MODULE_1__.MS + (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)(value, '-start', '') + value + _Enum_js__WEBPACK_IMPORTED_MODULE_1__.MS + 'grid-row-span:' + (~(0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.indexof)(children, 'span', 0) ? (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.match)(children, /\d+/) : +(0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.match)(children, /\d+/) - +(0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.match)(value, /\d+/)) + ';')
			}
			return _Enum_js__WEBPACK_IMPORTED_MODULE_1__.MS + (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)(value, '-start', '') + value
		// grid-(row|column)-end
		case 4896: case 4128:
			return (children && children.some(function (element) { return (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.match)(element.props, /grid-\w+-start/) })) ? value : _Enum_js__WEBPACK_IMPORTED_MODULE_1__.MS + (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)((0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)(value, '-end', '-span'), 'span ', '') + value
		// (margin|padding)-inline-(start|end)
		case 4095: case 3583: case 4068: case 2532:
			return (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)(value, /(.+)-inline(.+)/, _Enum_js__WEBPACK_IMPORTED_MODULE_1__.WEBKIT + '$1$2') + value
		// (min|max)?(width|height|inline-size|block-size)
		case 8116: case 7059: case 5753: case 5535:
		case 5445: case 5701: case 4933: case 4677:
		case 5533: case 5789: case 5021: case 4765:
			// stretch, max-content, min-content, fill-available
			if ((0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.strlen)(value) - 1 - length > 6)
				switch ((0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.charat)(value, length + 1)) {
					// (m)ax-content, (m)in-content
					case 109:
						// -
						if ((0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.charat)(value, length + 4) !== 45)
							break
					// (f)ill-available, (f)it-content
					case 102:
						return (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)(value, /(.+:)(.+)-([^]+)/, '$1' + _Enum_js__WEBPACK_IMPORTED_MODULE_1__.WEBKIT + '$2-$3' + '$1' + _Enum_js__WEBPACK_IMPORTED_MODULE_1__.MOZ + ((0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.charat)(value, length + 3) == 108 ? '$3' : '$2-$3')) + value
					// (s)tretch
					case 115:
						return ~(0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.indexof)(value, 'stretch', 0) ? prefix((0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)(value, 'stretch', 'fill-available'), length, children) + value : value
				}
			break
		// grid-(column|row)
		case 5152: case 5920:
			return (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)(value, /(.+?):(\d+)(\s*\/\s*(span)?\s*(\d+))?(.*)/, function (_, a, b, c, d, e, f) { return (_Enum_js__WEBPACK_IMPORTED_MODULE_1__.MS + a + ':' + b + f) + (c ? (_Enum_js__WEBPACK_IMPORTED_MODULE_1__.MS + a + '-span:' + (d ? e : +e - +b)) + f : '') + value })
		// position: sticky
		case 4949:
			// stick(y)?
			if ((0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.charat)(value, length + 6) === 121)
				return (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)(value, ':', ':' + _Enum_js__WEBPACK_IMPORTED_MODULE_1__.WEBKIT) + value
			break
		// display: (flex|inline-flex|grid|inline-grid)
		case 6444:
			switch ((0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.charat)(value, (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.charat)(value, 14) === 45 ? 18 : 11)) {
				// (inline-)?fle(x)
				case 120:
					return (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)(value, /(.+:)([^;\s!]+)(;|(\s+)?!.+)?/, '$1' + _Enum_js__WEBPACK_IMPORTED_MODULE_1__.WEBKIT + ((0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.charat)(value, 14) === 45 ? 'inline-' : '') + 'box$3' + '$1' + _Enum_js__WEBPACK_IMPORTED_MODULE_1__.WEBKIT + '$2$3' + '$1' + _Enum_js__WEBPACK_IMPORTED_MODULE_1__.MS + '$2box$3') + value
				// (inline-)?gri(d)
				case 100:
					return (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)(value, ':', ':' + _Enum_js__WEBPACK_IMPORTED_MODULE_1__.MS) + value
			}
			break
		// scroll-margin, scroll-margin-(top|right|bottom|left)
		case 5719: case 2647: case 2135: case 3927: case 2391:
			return (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.replace)(value, 'scroll-', 'scroll-snap-') + value
	}

	return value
}


/***/ }),

/***/ "./node_modules/stylis/src/Serializer.js":
/*!***********************************************!*\
  !*** ./node_modules/stylis/src/Serializer.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   serialize: () => (/* binding */ serialize),
/* harmony export */   stringify: () => (/* binding */ stringify)
/* harmony export */ });
/* harmony import */ var _Enum_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Enum.js */ "./node_modules/stylis/src/Enum.js");
/* harmony import */ var _Utility_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Utility.js */ "./node_modules/stylis/src/Utility.js");



/**
 * @param {object[]} children
 * @param {function} callback
 * @return {string}
 */
function serialize (children, callback) {
	var output = ''

	for (var i = 0; i < children.length; i++)
		output += callback(children[i], i, children, callback) || ''

	return output
}

/**
 * @param {object} element
 * @param {number} index
 * @param {object[]} children
 * @param {function} callback
 * @return {string}
 */
function stringify (element, index, children, callback) {
	switch (element.type) {
		case _Enum_js__WEBPACK_IMPORTED_MODULE_0__.LAYER: if (element.children.length) break
		case _Enum_js__WEBPACK_IMPORTED_MODULE_0__.IMPORT: case _Enum_js__WEBPACK_IMPORTED_MODULE_0__.DECLARATION: return element.return = element.return || element.value
		case _Enum_js__WEBPACK_IMPORTED_MODULE_0__.COMMENT: return ''
		case _Enum_js__WEBPACK_IMPORTED_MODULE_0__.KEYFRAMES: return element.return = element.value + '{' + serialize(element.children, callback) + '}'
		case _Enum_js__WEBPACK_IMPORTED_MODULE_0__.RULESET: if (!(0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__.strlen)(element.value = element.props.join(','))) return ''
	}

	return (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__.strlen)(children = serialize(element.children, callback)) ? element.return = element.value + '{' + children + '}' : ''
}


/***/ }),

/***/ "./node_modules/stylis/src/Tokenizer.js":
/*!**********************************************!*\
  !*** ./node_modules/stylis/src/Tokenizer.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   alloc: () => (/* binding */ alloc),
/* harmony export */   caret: () => (/* binding */ caret),
/* harmony export */   char: () => (/* binding */ char),
/* harmony export */   character: () => (/* binding */ character),
/* harmony export */   characters: () => (/* binding */ characters),
/* harmony export */   column: () => (/* binding */ column),
/* harmony export */   commenter: () => (/* binding */ commenter),
/* harmony export */   copy: () => (/* binding */ copy),
/* harmony export */   dealloc: () => (/* binding */ dealloc),
/* harmony export */   delimit: () => (/* binding */ delimit),
/* harmony export */   delimiter: () => (/* binding */ delimiter),
/* harmony export */   escaping: () => (/* binding */ escaping),
/* harmony export */   identifier: () => (/* binding */ identifier),
/* harmony export */   length: () => (/* binding */ length),
/* harmony export */   lift: () => (/* binding */ lift),
/* harmony export */   line: () => (/* binding */ line),
/* harmony export */   next: () => (/* binding */ next),
/* harmony export */   node: () => (/* binding */ node),
/* harmony export */   peek: () => (/* binding */ peek),
/* harmony export */   position: () => (/* binding */ position),
/* harmony export */   prev: () => (/* binding */ prev),
/* harmony export */   slice: () => (/* binding */ slice),
/* harmony export */   token: () => (/* binding */ token),
/* harmony export */   tokenize: () => (/* binding */ tokenize),
/* harmony export */   tokenizer: () => (/* binding */ tokenizer),
/* harmony export */   whitespace: () => (/* binding */ whitespace)
/* harmony export */ });
/* harmony import */ var _Utility_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Utility.js */ "./node_modules/stylis/src/Utility.js");


var line = 1
var column = 1
var length = 0
var position = 0
var character = 0
var characters = ''

/**
 * @param {string} value
 * @param {object | null} root
 * @param {object | null} parent
 * @param {string} type
 * @param {string[] | string} props
 * @param {object[] | string} children
 * @param {object[]} siblings
 * @param {number} length
 */
function node (value, root, parent, type, props, children, length, siblings) {
	return {value: value, root: root, parent: parent, type: type, props: props, children: children, line: line, column: column, length: length, return: '', siblings: siblings}
}

/**
 * @param {object} root
 * @param {object} props
 * @return {object}
 */
function copy (root, props) {
	return (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.assign)(node('', null, null, '', null, null, 0, root.siblings), root, {length: -root.length}, props)
}

/**
 * @param {object} root
 */
function lift (root) {
	while (root.root)
		root = copy(root.root, {children: [root]})

	;(0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.append)(root, root.siblings)
}

/**
 * @return {number}
 */
function char () {
	return character
}

/**
 * @return {number}
 */
function prev () {
	character = position > 0 ? (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.charat)(characters, --position) : 0

	if (column--, character === 10)
		column = 1, line--

	return character
}

/**
 * @return {number}
 */
function next () {
	character = position < length ? (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.charat)(characters, position++) : 0

	if (column++, character === 10)
		column = 1, line++

	return character
}

/**
 * @return {number}
 */
function peek () {
	return (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.charat)(characters, position)
}

/**
 * @return {number}
 */
function caret () {
	return position
}

/**
 * @param {number} begin
 * @param {number} end
 * @return {string}
 */
function slice (begin, end) {
	return (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.substr)(characters, begin, end)
}

/**
 * @param {number} type
 * @return {number}
 */
function token (type) {
	switch (type) {
		// \0 \t \n \r \s whitespace token
		case 0: case 9: case 10: case 13: case 32:
			return 5
		// ! + , / > @ ~ isolate token
		case 33: case 43: case 44: case 47: case 62: case 64: case 126:
		// ; { } breakpoint token
		case 59: case 123: case 125:
			return 4
		// : accompanied token
		case 58:
			return 3
		// " ' ( [ opening delimit token
		case 34: case 39: case 40: case 91:
			return 2
		// ) ] closing delimit token
		case 41: case 93:
			return 1
	}

	return 0
}

/**
 * @param {string} value
 * @return {any[]}
 */
function alloc (value) {
	return line = column = 1, length = (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.strlen)(characters = value), position = 0, []
}

/**
 * @param {any} value
 * @return {any}
 */
function dealloc (value) {
	return characters = '', value
}

/**
 * @param {number} type
 * @return {string}
 */
function delimit (type) {
	return (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.trim)(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)))
}

/**
 * @param {string} value
 * @return {string[]}
 */
function tokenize (value) {
	return dealloc(tokenizer(alloc(value)))
}

/**
 * @param {number} type
 * @return {string}
 */
function whitespace (type) {
	while (character = peek())
		if (character < 33)
			next()
		else
			break

	return token(type) > 2 || token(character) > 3 ? '' : ' '
}

/**
 * @param {string[]} children
 * @return {string[]}
 */
function tokenizer (children) {
	while (next())
		switch (token(character)) {
			case 0: (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.append)(identifier(position - 1), children)
				break
			case 2: ;(0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.append)(delimit(character), children)
				break
			default: ;(0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.append)((0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.from)(character), children)
		}

	return children
}

/**
 * @param {number} index
 * @param {number} count
 * @return {string}
 */
function escaping (index, count) {
	while (--count && next())
		// not 0-9 A-F a-f
		if (character < 48 || character > 102 || (character > 57 && character < 65) || (character > 70 && character < 97))
			break

	return slice(index, caret() + (count < 6 && peek() == 32 && next() == 32))
}

/**
 * @param {number} type
 * @return {number}
 */
function delimiter (type) {
	while (next())
		switch (character) {
			// ] ) " '
			case type:
				return position
			// " '
			case 34: case 39:
				if (type !== 34 && type !== 39)
					delimiter(character)
				break
			// (
			case 40:
				if (type === 41)
					delimiter(type)
				break
			// \
			case 92:
				next()
				break
		}

	return position
}

/**
 * @param {number} type
 * @param {number} index
 * @return {number}
 */
function commenter (type, index) {
	while (next())
		// //
		if (type + character === 47 + 10)
			break
		// /*
		else if (type + character === 42 + 42 && peek() === 47)
			break

	return '/*' + slice(index, position - 1) + '*' + (0,_Utility_js__WEBPACK_IMPORTED_MODULE_0__.from)(type === 47 ? type : next())
}

/**
 * @param {number} index
 * @return {string}
 */
function identifier (index) {
	while (!token(peek()))
		next()

	return slice(index, position)
}


/***/ }),

/***/ "./node_modules/stylis/src/Utility.js":
/*!********************************************!*\
  !*** ./node_modules/stylis/src/Utility.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   abs: () => (/* binding */ abs),
/* harmony export */   append: () => (/* binding */ append),
/* harmony export */   assign: () => (/* binding */ assign),
/* harmony export */   charat: () => (/* binding */ charat),
/* harmony export */   combine: () => (/* binding */ combine),
/* harmony export */   filter: () => (/* binding */ filter),
/* harmony export */   from: () => (/* binding */ from),
/* harmony export */   hash: () => (/* binding */ hash),
/* harmony export */   indexof: () => (/* binding */ indexof),
/* harmony export */   match: () => (/* binding */ match),
/* harmony export */   replace: () => (/* binding */ replace),
/* harmony export */   sizeof: () => (/* binding */ sizeof),
/* harmony export */   strlen: () => (/* binding */ strlen),
/* harmony export */   substr: () => (/* binding */ substr),
/* harmony export */   trim: () => (/* binding */ trim)
/* harmony export */ });
/**
 * @param {number}
 * @return {number}
 */
var abs = Math.abs

/**
 * @param {number}
 * @return {string}
 */
var from = String.fromCharCode

/**
 * @param {object}
 * @return {object}
 */
var assign = Object.assign

/**
 * @param {string} value
 * @param {number} length
 * @return {number}
 */
function hash (value, length) {
	return charat(value, 0) ^ 45 ? (((((((length << 2) ^ charat(value, 0)) << 2) ^ charat(value, 1)) << 2) ^ charat(value, 2)) << 2) ^ charat(value, 3) : 0
}

/**
 * @param {string} value
 * @return {string}
 */
function trim (value) {
	return value.trim()
}

/**
 * @param {string} value
 * @param {RegExp} pattern
 * @return {string?}
 */
function match (value, pattern) {
	return (value = pattern.exec(value)) ? value[0] : value
}

/**
 * @param {string} value
 * @param {(string|RegExp)} pattern
 * @param {string} replacement
 * @return {string}
 */
function replace (value, pattern, replacement) {
	return value.replace(pattern, replacement)
}

/**
 * @param {string} value
 * @param {string} search
 * @param {number} position
 * @return {number}
 */
function indexof (value, search, position) {
	return value.indexOf(search, position)
}

/**
 * @param {string} value
 * @param {number} index
 * @return {number}
 */
function charat (value, index) {
	return value.charCodeAt(index) | 0
}

/**
 * @param {string} value
 * @param {number} begin
 * @param {number} end
 * @return {string}
 */
function substr (value, begin, end) {
	return value.slice(begin, end)
}

/**
 * @param {string} value
 * @return {number}
 */
function strlen (value) {
	return value.length
}

/**
 * @param {any[]} value
 * @return {number}
 */
function sizeof (value) {
	return value.length
}

/**
 * @param {any} value
 * @param {any[]} array
 * @return {any}
 */
function append (value, array) {
	return array.push(value), value
}

/**
 * @param {string[]} array
 * @param {function} callback
 * @return {string}
 */
function combine (array, callback) {
	return array.map(callback).join('')
}

/**
 * @param {string[]} array
 * @param {RegExp} pattern
 * @return {string[]}
 */
function filter (array, pattern) {
	return array.filter(function (value) { return !match(value, pattern) })
}


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = __webpack_module_cache__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/sharing */
/******/ 	(() => {
/******/ 		__webpack_require__.S = {};
/******/ 		var initPromises = {};
/******/ 		var initTokens = {};
/******/ 		__webpack_require__.I = (name, initScope) => {
/******/ 			if(!initScope) initScope = [];
/******/ 			// handling circular init calls
/******/ 			var initToken = initTokens[name];
/******/ 			if(!initToken) initToken = initTokens[name] = {};
/******/ 			if(initScope.indexOf(initToken) >= 0) return;
/******/ 			initScope.push(initToken);
/******/ 			// only runs once
/******/ 			if(initPromises[name]) return initPromises[name];
/******/ 			// creates a new share scope if needed
/******/ 			if(!__webpack_require__.o(__webpack_require__.S, name)) __webpack_require__.S[name] = {};
/******/ 			// runs all init snippets from all modules reachable
/******/ 			var scope = __webpack_require__.S[name];
/******/ 			var warn = (msg) => {
/******/ 				if (typeof console !== "undefined" && console.warn) console.warn(msg);
/******/ 			};
/******/ 			var uniqueName = "menu";
/******/ 			var register = (name, version, factory, eager) => {
/******/ 				var versions = scope[name] = scope[name] || {};
/******/ 				var activeVersion = versions[version];
/******/ 				if(!activeVersion || (!activeVersion.loaded && (!eager != !activeVersion.eager ? eager : uniqueName > activeVersion.from))) versions[version] = { get: factory, from: uniqueName, eager: !!eager };
/******/ 			};
/******/ 			var initExternal = (id) => {
/******/ 				var handleError = (err) => (warn("Initialization of sharing external failed: " + err));
/******/ 				try {
/******/ 					var module = __webpack_require__(id);
/******/ 					if(!module) return;
/******/ 					var initFn = (module) => (module && module.init && module.init(__webpack_require__.S[name], initScope))
/******/ 					if(module.then) return promises.push(module.then(initFn, handleError));
/******/ 					var initResult = initFn(module);
/******/ 					if(initResult && initResult.then) return promises.push(initResult['catch'](handleError));
/******/ 				} catch(err) { handleError(err); }
/******/ 			}
/******/ 			var promises = [];
/******/ 			switch(name) {
/******/ 				case "default": {
/******/ 					register("react", "18.2.0", () => (() => (__webpack_require__(/*! ./node_modules/react/index.js */ "./node_modules/react/index.js"))), 1);
/******/ 				}
/******/ 				break;
/******/ 			}
/******/ 			if(!promises.length) return initPromises[name] = 1;
/******/ 			return initPromises[name] = Promise.all(promises).then(() => (initPromises[name] = 1));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/consumes */
/******/ 	(() => {
/******/ 		var parseVersion = (str) => {
/******/ 			// see webpack/lib/util/semver.js for original code
/******/ 			var p=p=>{return p.split(".").map((p=>{return+p==p?+p:p}))},n=/^([^-+]+)?(?:-([^+]+))?(?:\+(.+))?$/.exec(str),r=n[1]?p(n[1]):[];return n[2]&&(r.length++,r.push.apply(r,p(n[2]))),n[3]&&(r.push([]),r.push.apply(r,p(n[3]))),r;
/******/ 		}
/******/ 		var versionLt = (a, b) => {
/******/ 			// see webpack/lib/util/semver.js for original code
/******/ 			a=parseVersion(a),b=parseVersion(b);for(var r=0;;){if(r>=a.length)return r<b.length&&"u"!=(typeof b[r])[0];var e=a[r],n=(typeof e)[0];if(r>=b.length)return"u"==n;var t=b[r],f=(typeof t)[0];if(n!=f)return"o"==n&&"n"==f||("s"==f||"u"==n);if("o"!=n&&"u"!=n&&e!=t)return e<t;r++}
/******/ 		}
/******/ 		var rangeToString = (range) => {
/******/ 			// see webpack/lib/util/semver.js for original code
/******/ 			var r=range[0],n="";if(1===range.length)return"*";if(r+.5){n+=0==r?">=":-1==r?"<":1==r?"^":2==r?"~":r>0?"=":"!=";for(var e=1,a=1;a<range.length;a++){e--,n+="u"==(typeof(t=range[a]))[0]?"-":(e>0?".":"")+(e=2,t)}return n}var g=[];for(a=1;a<range.length;a++){var t=range[a];g.push(0===t?"not("+o()+")":1===t?"("+o()+" || "+o()+")":2===t?g.pop()+" "+g.pop():rangeToString(t))}return o();function o(){return g.pop().replace(/^\((.+)\)$/,"$1")}
/******/ 		}
/******/ 		var satisfy = (range, version) => {
/******/ 			// see webpack/lib/util/semver.js for original code
/******/ 			if(0 in range){version=parseVersion(version);var e=range[0],r=e<0;r&&(e=-e-1);for(var n=0,i=1,a=!0;;i++,n++){var f,s,g=i<range.length?(typeof range[i])[0]:"";if(n>=version.length||"o"==(s=(typeof(f=version[n]))[0]))return!a||("u"==g?i>e&&!r:""==g!=r);if("u"==s){if(!a||"u"!=g)return!1}else if(a)if(g==s)if(i<=e){if(f!=range[i])return!1}else{if(r?f>range[i]:f<range[i])return!1;f!=range[i]&&(a=!1)}else if("s"!=g&&"n"!=g){if(r||i<=e)return!1;a=!1,i--}else{if(i<=e||s<g!=r)return!1;a=!1}else"s"!=g&&"n"!=g&&(a=!1,i--)}}var t=[],o=t.pop.bind(t);for(n=1;n<range.length;n++){var u=range[n];t.push(1==u?o()|o():2==u?o()&o():u?satisfy(u,version):!o())}return!!o();
/******/ 		}
/******/ 		var ensureExistence = (scopeName, key) => {
/******/ 			var scope = __webpack_require__.S[scopeName];
/******/ 			if(!scope || !__webpack_require__.o(scope, key)) throw new Error("Shared module " + key + " doesn't exist in shared scope " + scopeName);
/******/ 			return scope;
/******/ 		};
/******/ 		var findVersion = (scope, key) => {
/******/ 			var versions = scope[key];
/******/ 			var key = Object.keys(versions).reduce((a, b) => {
/******/ 				return !a || versionLt(a, b) ? b : a;
/******/ 			}, 0);
/******/ 			return key && versions[key]
/******/ 		};
/******/ 		var findSingletonVersionKey = (scope, key) => {
/******/ 			var versions = scope[key];
/******/ 			return Object.keys(versions).reduce((a, b) => {
/******/ 				return !a || (!versions[a].loaded && versionLt(a, b)) ? b : a;
/******/ 			}, 0);
/******/ 		};
/******/ 		var getInvalidSingletonVersionMessage = (scope, key, version, requiredVersion) => {
/******/ 			return "Unsatisfied version " + version + " from " + (version && scope[key][version].from) + " of shared singleton module " + key + " (required " + rangeToString(requiredVersion) + ")"
/******/ 		};
/******/ 		var getSingleton = (scope, scopeName, key, requiredVersion) => {
/******/ 			var version = findSingletonVersionKey(scope, key);
/******/ 			return get(scope[key][version]);
/******/ 		};
/******/ 		var getSingletonVersion = (scope, scopeName, key, requiredVersion) => {
/******/ 			var version = findSingletonVersionKey(scope, key);
/******/ 			if (!satisfy(requiredVersion, version)) warn(getInvalidSingletonVersionMessage(scope, key, version, requiredVersion));
/******/ 			return get(scope[key][version]);
/******/ 		};
/******/ 		var getStrictSingletonVersion = (scope, scopeName, key, requiredVersion) => {
/******/ 			var version = findSingletonVersionKey(scope, key);
/******/ 			if (!satisfy(requiredVersion, version)) throw new Error(getInvalidSingletonVersionMessage(scope, key, version, requiredVersion));
/******/ 			return get(scope[key][version]);
/******/ 		};
/******/ 		var findValidVersion = (scope, key, requiredVersion) => {
/******/ 			var versions = scope[key];
/******/ 			var key = Object.keys(versions).reduce((a, b) => {
/******/ 				if (!satisfy(requiredVersion, b)) return a;
/******/ 				return !a || versionLt(a, b) ? b : a;
/******/ 			}, 0);
/******/ 			return key && versions[key]
/******/ 		};
/******/ 		var getInvalidVersionMessage = (scope, scopeName, key, requiredVersion) => {
/******/ 			var versions = scope[key];
/******/ 			return "No satisfying version (" + rangeToString(requiredVersion) + ") of shared module " + key + " found in shared scope " + scopeName + ".\n" +
/******/ 				"Available versions: " + Object.keys(versions).map((key) => {
/******/ 				return key + " from " + versions[key].from;
/******/ 			}).join(", ");
/******/ 		};
/******/ 		var getValidVersion = (scope, scopeName, key, requiredVersion) => {
/******/ 			var entry = findValidVersion(scope, key, requiredVersion);
/******/ 			if(entry) return get(entry);
/******/ 			throw new Error(getInvalidVersionMessage(scope, scopeName, key, requiredVersion));
/******/ 		};
/******/ 		var warn = (msg) => {
/******/ 			if (typeof console !== "undefined" && console.warn) console.warn(msg);
/******/ 		};
/******/ 		var warnInvalidVersion = (scope, scopeName, key, requiredVersion) => {
/******/ 			warn(getInvalidVersionMessage(scope, scopeName, key, requiredVersion));
/******/ 		};
/******/ 		var get = (entry) => {
/******/ 			entry.loaded = 1;
/******/ 			return entry.get()
/******/ 		};
/******/ 		var init = (fn) => (function(scopeName, a, b, c) {
/******/ 			var promise = __webpack_require__.I(scopeName);
/******/ 			if (promise && promise.then) return promise.then(fn.bind(fn, scopeName, __webpack_require__.S[scopeName], a, b, c));
/******/ 			return fn(scopeName, __webpack_require__.S[scopeName], a, b, c);
/******/ 		});
/******/ 		
/******/ 		var load = /*#__PURE__*/ init((scopeName, scope, key) => {
/******/ 			ensureExistence(scopeName, key);
/******/ 			return get(findVersion(scope, key));
/******/ 		});
/******/ 		var loadFallback = /*#__PURE__*/ init((scopeName, scope, key, fallback) => {
/******/ 			return scope && __webpack_require__.o(scope, key) ? get(findVersion(scope, key)) : fallback();
/******/ 		});
/******/ 		var loadVersionCheck = /*#__PURE__*/ init((scopeName, scope, key, version) => {
/******/ 			ensureExistence(scopeName, key);
/******/ 			return get(findValidVersion(scope, key, version) || warnInvalidVersion(scope, scopeName, key, version) || findVersion(scope, key));
/******/ 		});
/******/ 		var loadSingleton = /*#__PURE__*/ init((scopeName, scope, key) => {
/******/ 			ensureExistence(scopeName, key);
/******/ 			return getSingleton(scope, scopeName, key);
/******/ 		});
/******/ 		var loadSingletonVersionCheck = /*#__PURE__*/ init((scopeName, scope, key, version) => {
/******/ 			ensureExistence(scopeName, key);
/******/ 			return getSingletonVersion(scope, scopeName, key, version);
/******/ 		});
/******/ 		var loadStrictVersionCheck = /*#__PURE__*/ init((scopeName, scope, key, version) => {
/******/ 			ensureExistence(scopeName, key);
/******/ 			return getValidVersion(scope, scopeName, key, version);
/******/ 		});
/******/ 		var loadStrictSingletonVersionCheck = /*#__PURE__*/ init((scopeName, scope, key, version) => {
/******/ 			ensureExistence(scopeName, key);
/******/ 			return getStrictSingletonVersion(scope, scopeName, key, version);
/******/ 		});
/******/ 		var loadVersionCheckFallback = /*#__PURE__*/ init((scopeName, scope, key, version, fallback) => {
/******/ 			if(!scope || !__webpack_require__.o(scope, key)) return fallback();
/******/ 			return get(findValidVersion(scope, key, version) || warnInvalidVersion(scope, scopeName, key, version) || findVersion(scope, key));
/******/ 		});
/******/ 		var loadSingletonFallback = /*#__PURE__*/ init((scopeName, scope, key, fallback) => {
/******/ 			if(!scope || !__webpack_require__.o(scope, key)) return fallback();
/******/ 			return getSingleton(scope, scopeName, key);
/******/ 		});
/******/ 		var loadSingletonVersionCheckFallback = /*#__PURE__*/ init((scopeName, scope, key, version, fallback) => {
/******/ 			if(!scope || !__webpack_require__.o(scope, key)) return fallback();
/******/ 			return getSingletonVersion(scope, scopeName, key, version);
/******/ 		});
/******/ 		var loadStrictVersionCheckFallback = /*#__PURE__*/ init((scopeName, scope, key, version, fallback) => {
/******/ 			var entry = scope && __webpack_require__.o(scope, key) && findValidVersion(scope, key, version);
/******/ 			return entry ? get(entry) : fallback();
/******/ 		});
/******/ 		var loadStrictSingletonVersionCheckFallback = /*#__PURE__*/ init((scopeName, scope, key, version, fallback) => {
/******/ 			if(!scope || !__webpack_require__.o(scope, key)) return fallback();
/******/ 			return getStrictSingletonVersion(scope, scopeName, key, version);
/******/ 		});
/******/ 		var installedModules = {};
/******/ 		var moduleToHandlerMapping = {
/******/ 			"webpack/sharing/consume/default/react/react?e042": () => (loadSingletonVersionCheckFallback("default", "react", [1,18,2,0], () => (() => (__webpack_require__(/*! react */ "./node_modules/react/index.js"))))),
/******/ 			"webpack/sharing/consume/default/react/react?7252": () => (loadSingletonVersionCheckFallback("default", "react", [0,16,8,0], () => (() => (__webpack_require__(/*! react */ "./node_modules/react/index.js"))))),
/******/ 			"webpack/sharing/consume/default/react/react?e43f": () => (loadSingletonFallback("default", "react", () => (() => (__webpack_require__(/*! react */ "./node_modules/react/index.js")))))
/******/ 		};
/******/ 		var initialConsumes = ["webpack/sharing/consume/default/react/react?e042","webpack/sharing/consume/default/react/react?7252","webpack/sharing/consume/default/react/react?e43f"];
/******/ 		initialConsumes.forEach((id) => {
/******/ 			__webpack_require__.m[id] = (module) => {
/******/ 				// Handle case when module is used sync
/******/ 				installedModules[id] = 0;
/******/ 				delete __webpack_require__.c[id];
/******/ 				var factory = moduleToHandlerMapping[id]();
/******/ 				if(typeof factory !== "function") throw new Error("Shared module is not available for eager consumption: " + id);
/******/ 				module.exports = factory();
/******/ 			}
/******/ 		});
/******/ 		// no chunk loading of consumes
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// module cache are used so entry inlining is disabled
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	var __webpack_exports__ = __webpack_require__("./public-fa/fa-banner/app/AppDefinition.tsx");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});